--- com/mojang/blaze3d/vertex/PoseStack.java
+++ com/mojang/blaze3d/vertex/PoseStack.java
@@ -8,40 +8,40 @@
     public java.util.Deque<com.mojang.blaze3d.vertex.PoseStack$Pose> poseStack;
 
     public com.mojang.blaze3d.vertex.PoseStack() {
-        this.poseStack = (java.util.Deque)net.minecraft.Util.make((java.lang.Object)com.google.common.collect.Queues.newArrayDeque(), deque -> {
-            com.mojang.math.Matrix4f matrix4f = new com.mojang.math.Matrix4f();
-            matrix4f.setIdentity();
-            com.mojang.math.Matrix3f matrix3f = new com.mojang.math.Matrix3f();
-            matrix3f.setIdentity();
-            deque.add((java.lang.Object)new com.mojang.blaze3d.vertex.PoseStack$Pose(matrix4f, matrix3f));
+        this.poseStack = (java.util.Deque)net.minecraft.Util.make((java.lang.Object)com.google.common.collect.Queues.newArrayDeque(), $$0 -> {
+            com.mojang.math.Matrix4f $$1 = new com.mojang.math.Matrix4f();
+            $$1.setIdentity();
+            com.mojang.math.Matrix3f $$2 = new com.mojang.math.Matrix3f();
+            $$2.setIdentity();
+            $$0.add((java.lang.Object)new com.mojang.blaze3d.vertex.PoseStack$Pose($$1, $$2));
         });
     }
 
-    public void translate(double x, double y, double z) {
-        com.mojang.blaze3d.vertex.PoseStack$Pose pose = (com.mojang.blaze3d.vertex.PoseStack$Pose)this.poseStack.getLast();
-        pose.pose.multiplyWithTranslation((float)x, (float)y, (float)z);
+    public void translate(double $$0, double $$1, double $$2) {
+        com.mojang.blaze3d.vertex.PoseStack$Pose $$3 = (com.mojang.blaze3d.vertex.PoseStack$Pose)this.poseStack.getLast();
+        $$3.pose.multiplyWithTranslation((float)$$0, (float)$$1, (float)$$2);
     }
 
-    public void scale(float x, float y, float z) {
-        com.mojang.blaze3d.vertex.PoseStack$Pose pose = (com.mojang.blaze3d.vertex.PoseStack$Pose)this.poseStack.getLast();
-        pose.pose.multiply(com.mojang.math.Matrix4f.createScaleMatrix((float)x, (float)y, (float)z));
-        if (x == y && y == z) {
-            if (x > 0.0f) {
+    public void scale(float $$0, float $$1, float $$2) {
+        com.mojang.blaze3d.vertex.PoseStack$Pose $$3 = (com.mojang.blaze3d.vertex.PoseStack$Pose)this.poseStack.getLast();
+        $$3.pose.multiply(com.mojang.math.Matrix4f.createScaleMatrix((float)$$0, (float)$$1, (float)$$2));
+        if ($$0 == $$1 && $$1 == $$2) {
+            if ($$0 > 0.0f) {
                 return;
             }
-            pose.normal.mul(-1.0f);
+            $$3.normal.mul(-1.0f);
         }
-        float f = 1.0f / x;
-        float f2 = 1.0f / y;
-        float f3 = 1.0f / z;
-        float f4 = net.minecraft.util.Mth.fastInvCubeRoot((float)(f * f2 * f3));
-        pose.normal.mul(com.mojang.math.Matrix3f.createScaleMatrix((float)(f4 * f), (float)(f4 * f2), (float)(f4 * f3)));
+        float $$4 = 1.0f / $$0;
+        float $$5 = 1.0f / $$1;
+        float $$6 = 1.0f / $$2;
+        float $$7 = net.minecraft.util.Mth.fastInvCubeRoot((float)($$4 * $$5 * $$6));
+        $$3.normal.mul(com.mojang.math.Matrix3f.createScaleMatrix((float)($$7 * $$4), (float)($$7 * $$5), (float)($$7 * $$6)));
     }
 
-    public void mulPose(com.mojang.math.Quaternion quaternion) {
-        com.mojang.blaze3d.vertex.PoseStack$Pose pose = (com.mojang.blaze3d.vertex.PoseStack$Pose)this.poseStack.getLast();
-        pose.pose.multiply(quaternion);
-        pose.normal.mul(quaternion);
+    public void mulPose(com.mojang.math.Quaternion $$0) {
+        com.mojang.blaze3d.vertex.PoseStack$Pose $$1 = (com.mojang.blaze3d.vertex.PoseStack$Pose)this.poseStack.getLast();
+        $$1.pose.multiply($$0);
+        $$1.normal.mul($$0);
     }
 
     public void pushPose() {