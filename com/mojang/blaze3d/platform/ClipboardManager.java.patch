--- com/mojang/blaze3d/platform/ClipboardManager.java
+++ com/mojang/blaze3d/platform/ClipboardManager.java
@@ -12,40 +12,40 @@
         this.clipboardScratchBuffer = org.lwjgl.BufferUtils.createByteBuffer((int)8192);
     }
 
-    public java.lang.String getClipboard(long window, org.lwjgl.glfw.GLFWErrorCallbackI errorCallback) {
-        org.lwjgl.glfw.GLFWErrorCallback gLFWErrorCallback = org.lwjgl.glfw.GLFW.glfwSetErrorCallback((org.lwjgl.glfw.GLFWErrorCallbackI)errorCallback);
-        java.lang.String string = org.lwjgl.glfw.GLFW.glfwGetClipboardString((long)window);
-        string = string != null ? net.minecraft.util.StringDecomposer.filterBrokenSurrogates((java.lang.String)string) : "";
-        org.lwjgl.glfw.GLFWErrorCallback gLFWErrorCallback2 = org.lwjgl.glfw.GLFW.glfwSetErrorCallback((org.lwjgl.glfw.GLFWErrorCallbackI)gLFWErrorCallback);
-        if (gLFWErrorCallback2 != null) {
-            gLFWErrorCallback2.free();
+    public java.lang.String getClipboard(long $$0, org.lwjgl.glfw.GLFWErrorCallbackI $$1) {
+        org.lwjgl.glfw.GLFWErrorCallback $$2 = org.lwjgl.glfw.GLFW.glfwSetErrorCallback((org.lwjgl.glfw.GLFWErrorCallbackI)$$1);
+        java.lang.String $$3 = org.lwjgl.glfw.GLFW.glfwGetClipboardString((long)$$0);
+        $$3 = $$3 != null ? net.minecraft.util.StringDecomposer.filterBrokenSurrogates((java.lang.String)$$3) : "";
+        org.lwjgl.glfw.GLFWErrorCallback $$4 = org.lwjgl.glfw.GLFW.glfwSetErrorCallback((org.lwjgl.glfw.GLFWErrorCallbackI)$$2);
+        if ($$4 != null) {
+            $$4.free();
         }
-        return string;
+        return $$3;
     }
 
-    public static void pushClipboard(long window, java.nio.ByteBuffer buffer, byte[] clipboardContent) {
-        buffer.clear();
-        buffer.put(clipboardContent);
-        buffer.put((byte)0);
-        buffer.flip();
-        org.lwjgl.glfw.GLFW.glfwSetClipboardString((long)window, (java.nio.ByteBuffer)buffer);
+    public static void pushClipboard(long $$0, java.nio.ByteBuffer $$1, byte[] $$2) {
+        $$1.clear();
+        $$1.put($$2);
+        $$1.put((byte)0);
+        $$1.flip();
+        org.lwjgl.glfw.GLFW.glfwSetClipboardString((long)$$0, (java.nio.ByteBuffer)$$1);
     }
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
-    public void setClipboard(long window, java.lang.String clipboardContent) {
-        byte[] byArray = clipboardContent.getBytes(com.google.common.base.Charsets.UTF_8);
-        int n = byArray.length + 1;
-        if (n < this.clipboardScratchBuffer.capacity()) {
-            com.mojang.blaze3d.platform.ClipboardManager.pushClipboard((long)window, (java.nio.ByteBuffer)this.clipboardScratchBuffer, (byte[])byArray);
+    public void setClipboard(long $$0, java.lang.String $$1) {
+        byte[] $$2 = $$1.getBytes(com.google.common.base.Charsets.UTF_8);
+        int $$3 = $$2.length + 1;
+        if ($$3 < this.clipboardScratchBuffer.capacity()) {
+            com.mojang.blaze3d.platform.ClipboardManager.pushClipboard((long)$$0, (java.nio.ByteBuffer)this.clipboardScratchBuffer, (byte[])$$2);
         } else {
-            java.nio.ByteBuffer byteBuffer = org.lwjgl.system.MemoryUtil.memAlloc((int)n);
+            java.nio.ByteBuffer $$4 = org.lwjgl.system.MemoryUtil.memAlloc((int)$$3);
             try {
-                com.mojang.blaze3d.platform.ClipboardManager.pushClipboard((long)window, (java.nio.ByteBuffer)byteBuffer, (byte[])byArray);
+                com.mojang.blaze3d.platform.ClipboardManager.pushClipboard((long)$$0, (java.nio.ByteBuffer)$$4, (byte[])$$2);
             }
             finally {
-                org.lwjgl.system.MemoryUtil.memFree((java.nio.Buffer)byteBuffer);
+                org.lwjgl.system.MemoryUtil.memFree((java.nio.Buffer)$$4);
             }
         }
     }