--- com/mojang/blaze3d/platform/InputConstants.java
+++ com/mojang/blaze3d/platform/InputConstants.java
@@ -138,48 +138,48 @@
     public com.mojang.blaze3d.platform.InputConstants() {
     }
 
-    public static com.mojang.blaze3d.platform.InputConstants$Key getKey(int keyCode, int scanCode) {
-        if (keyCode == -1) {
-            return com.mojang.blaze3d.platform.InputConstants$Type.SCANCODE.getOrCreate(scanCode);
+    public static com.mojang.blaze3d.platform.InputConstants$Key getKey(int $$0, int $$1) {
+        if ($$0 == -1) {
+            return com.mojang.blaze3d.platform.InputConstants$Type.SCANCODE.getOrCreate($$1);
         }
-        return com.mojang.blaze3d.platform.InputConstants$Type.KEYSYM.getOrCreate(keyCode);
+        return com.mojang.blaze3d.platform.InputConstants$Type.KEYSYM.getOrCreate($$0);
     }
 
-    public static com.mojang.blaze3d.platform.InputConstants$Key getKey(java.lang.String name) {
-        if (com.mojang.blaze3d.platform.InputConstants$Key.NAME_MAP.containsKey((java.lang.Object)name)) {
-            return (com.mojang.blaze3d.platform.InputConstants$Key)com.mojang.blaze3d.platform.InputConstants$Key.NAME_MAP.get((java.lang.Object)name);
+    public static com.mojang.blaze3d.platform.InputConstants$Key getKey(java.lang.String $$0) {
+        if (com.mojang.blaze3d.platform.InputConstants$Key.NAME_MAP.containsKey((java.lang.Object)$$0)) {
+            return (com.mojang.blaze3d.platform.InputConstants$Key)com.mojang.blaze3d.platform.InputConstants$Key.NAME_MAP.get((java.lang.Object)$$0);
         }
-        for (com.mojang.blaze3d.platform.InputConstants$Type type : com.mojang.blaze3d.platform.InputConstants$Type.values()) {
-            if (!name.startsWith(type.defaultPrefix)) continue;
-            java.lang.String string = name.substring(type.defaultPrefix.length() + 1);
-            int n = java.lang.Integer.parseInt((java.lang.String)string);
-            if (type == com.mojang.blaze3d.platform.InputConstants$Type.MOUSE) {
-                --n;
+        for (com.mojang.blaze3d.platform.InputConstants$Type $$1 : com.mojang.blaze3d.platform.InputConstants$Type.values()) {
+            if (!$$0.startsWith($$1.defaultPrefix)) continue;
+            java.lang.String $$2 = $$0.substring($$1.defaultPrefix.length() + 1);
+            int $$3 = java.lang.Integer.parseInt((java.lang.String)$$2);
+            if ($$1 == com.mojang.blaze3d.platform.InputConstants$Type.MOUSE) {
+                --$$3;
             }
-            return type.getOrCreate(n);
+            return $$1.getOrCreate($$3);
         }
-        throw new java.lang.IllegalArgumentException("Unknown key name: " + name);
+        throw new java.lang.IllegalArgumentException("Unknown key name: " + $$0);
     }
 
-    public static boolean isKeyDown(long window, int key) {
-        return org.lwjgl.glfw.GLFW.glfwGetKey((long)window, (int)key) == 1;
+    public static boolean isKeyDown(long $$0, int $$1) {
+        return org.lwjgl.glfw.GLFW.glfwGetKey((long)$$0, (int)$$1) == 1;
     }
 
-    public static void setupKeyboardCallbacks(long window, org.lwjgl.glfw.GLFWKeyCallbackI keyCallback, org.lwjgl.glfw.GLFWCharModsCallbackI charModifierCallback) {
-        org.lwjgl.glfw.GLFW.glfwSetKeyCallback((long)window, (org.lwjgl.glfw.GLFWKeyCallbackI)keyCallback);
-        org.lwjgl.glfw.GLFW.glfwSetCharModsCallback((long)window, (org.lwjgl.glfw.GLFWCharModsCallbackI)charModifierCallback);
+    public static void setupKeyboardCallbacks(long $$0, org.lwjgl.glfw.GLFWKeyCallbackI $$1, org.lwjgl.glfw.GLFWCharModsCallbackI $$2) {
+        org.lwjgl.glfw.GLFW.glfwSetKeyCallback((long)$$0, (org.lwjgl.glfw.GLFWKeyCallbackI)$$1);
+        org.lwjgl.glfw.GLFW.glfwSetCharModsCallback((long)$$0, (org.lwjgl.glfw.GLFWCharModsCallbackI)$$2);
     }
 
-    public static void setupMouseCallbacks(long window, org.lwjgl.glfw.GLFWCursorPosCallbackI cursorPositionCallback, org.lwjgl.glfw.GLFWMouseButtonCallbackI mouseButtonCallback, org.lwjgl.glfw.GLFWScrollCallbackI scrollCallback, org.lwjgl.glfw.GLFWDropCallbackI dragAndDropCallback) {
-        org.lwjgl.glfw.GLFW.glfwSetCursorPosCallback((long)window, (org.lwjgl.glfw.GLFWCursorPosCallbackI)cursorPositionCallback);
-        org.lwjgl.glfw.GLFW.glfwSetMouseButtonCallback((long)window, (org.lwjgl.glfw.GLFWMouseButtonCallbackI)mouseButtonCallback);
-        org.lwjgl.glfw.GLFW.glfwSetScrollCallback((long)window, (org.lwjgl.glfw.GLFWScrollCallbackI)scrollCallback);
-        org.lwjgl.glfw.GLFW.glfwSetDropCallback((long)window, (org.lwjgl.glfw.GLFWDropCallbackI)dragAndDropCallback);
+    public static void setupMouseCallbacks(long $$0, org.lwjgl.glfw.GLFWCursorPosCallbackI $$1, org.lwjgl.glfw.GLFWMouseButtonCallbackI $$2, org.lwjgl.glfw.GLFWScrollCallbackI $$3, org.lwjgl.glfw.GLFWDropCallbackI $$4) {
+        org.lwjgl.glfw.GLFW.glfwSetCursorPosCallback((long)$$0, (org.lwjgl.glfw.GLFWCursorPosCallbackI)$$1);
+        org.lwjgl.glfw.GLFW.glfwSetMouseButtonCallback((long)$$0, (org.lwjgl.glfw.GLFWMouseButtonCallbackI)$$2);
+        org.lwjgl.glfw.GLFW.glfwSetScrollCallback((long)$$0, (org.lwjgl.glfw.GLFWScrollCallbackI)$$3);
+        org.lwjgl.glfw.GLFW.glfwSetDropCallback((long)$$0, (org.lwjgl.glfw.GLFWDropCallbackI)$$4);
     }
 
-    public static void grabOrReleaseMouse(long window, int cursorValue, double xPos, double yPos) {
-        org.lwjgl.glfw.GLFW.glfwSetCursorPos((long)window, (double)xPos, (double)yPos);
-        org.lwjgl.glfw.GLFW.glfwSetInputMode((long)window, (int)208897, (int)cursorValue);
+    public static void grabOrReleaseMouse(long $$0, int $$1, double $$2, double $$3) {
+        org.lwjgl.glfw.GLFW.glfwSetCursorPos((long)$$0, (double)$$2, (double)$$3);
+        org.lwjgl.glfw.GLFW.glfwSetInputMode((long)$$0, (int)208897, (int)$$1);
     }
 
     public static boolean isRawMouseInputSupported() {
@@ -191,9 +191,9 @@
         }
     }
 
-    public static void updateRawMouseInput(long window, boolean enableRawMouseMotion) {
+    public static void updateRawMouseInput(long $$0, boolean $$1) {
         if (com.mojang.blaze3d.platform.InputConstants.isRawMouseInputSupported()) {
-            org.lwjgl.glfw.GLFW.glfwSetInputMode((long)window, (int)GLFW_RAW_MOUSE_MOTION, (int)(enableRawMouseMotion ? 1 : 0));
+            org.lwjgl.glfw.GLFW.glfwSetInputMode((long)$$0, (int)GLFW_RAW_MOUSE_MOTION, (int)($$1 ? 1 : 0));
         }
     }
 