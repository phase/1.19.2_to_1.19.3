--- com/mojang/blaze3d/font/TrueTypeGlyphProvider.java
+++ com/mojang/blaze3d/font/TrueTypeGlyphProvider.java
@@ -15,22 +15,22 @@
     public float pointScale;
     public float ascent;
 
-    public com.mojang.blaze3d.font.TrueTypeGlyphProvider(java.nio.ByteBuffer fontMemory, org.lwjgl.stb.STBTTFontinfo font, float height, float oversample, float shiftX, float shiftY, java.lang.String skip) {
+    public com.mojang.blaze3d.font.TrueTypeGlyphProvider(java.nio.ByteBuffer $$0, org.lwjgl.stb.STBTTFontinfo $$1, float $$2, float $$3, float $$4, float $$5, java.lang.String $$6) {
         this.skip = new it.unimi.dsi.fastutil.ints.IntArraySet();
-        this.fontMemory = fontMemory;
-        this.font = font;
-        this.oversample = oversample;
-        skip.codePoints().forEach(arg_0 -> ((it.unimi.dsi.fastutil.ints.IntSet)this.skip).add(arg_0));
-        this.shiftX = shiftX * oversample;
-        this.shiftY = shiftY * oversample;
-        this.pointScale = org.lwjgl.stb.STBTruetype.stbtt_ScaleForPixelHeight((org.lwjgl.stb.STBTTFontinfo)font, (float)(height * oversample));
-        try (org.lwjgl.system.MemoryStack memoryStack = org.lwjgl.system.MemoryStack.stackPush();
+        this.fontMemory = $$0;
+        this.font = $$1;
+        this.oversample = $$3;
+        $$6.codePoints().forEach(arg_0 -> ((it.unimi.dsi.fastutil.ints.IntSet)this.skip).add(arg_0));
+        this.shiftX = $$4 * $$3;
+        this.shiftY = $$5 * $$3;
+        this.pointScale = org.lwjgl.stb.STBTruetype.stbtt_ScaleForPixelHeight((org.lwjgl.stb.STBTTFontinfo)$$1, (float)($$2 * $$3));
+        try (org.lwjgl.system.MemoryStack $$7 = org.lwjgl.system.MemoryStack.stackPush();
 ){
-            java.nio.IntBuffer intBuffer = memoryStack.mallocInt(1);
-            java.nio.IntBuffer intBuffer2 = memoryStack.mallocInt(1);
-            java.nio.IntBuffer intBuffer3 = memoryStack.mallocInt(1);
-            org.lwjgl.stb.STBTruetype.stbtt_GetFontVMetrics((org.lwjgl.stb.STBTTFontinfo)font, (java.nio.IntBuffer)intBuffer, (java.nio.IntBuffer)intBuffer2, (java.nio.IntBuffer)intBuffer3);
-            this.ascent = (float)intBuffer.get(0) * this.pointScale;
+            java.nio.IntBuffer $$8 = $$7.mallocInt(1);
+            java.nio.IntBuffer $$9 = $$7.mallocInt(1);
+            java.nio.IntBuffer $$10 = $$7.mallocInt(1);
+            org.lwjgl.stb.STBTruetype.stbtt_GetFontVMetrics((org.lwjgl.stb.STBTTFontinfo)$$1, (java.nio.IntBuffer)$$8, (java.nio.IntBuffer)$$9, (java.nio.IntBuffer)$$10);
+            this.ascent = (float)$$8.get(0) * this.pointScale;
         }
     }
 