--- com/mojang/blaze3d/shaders/BlendMode.java
+++ com/mojang/blaze3d/shaders/BlendMode.java
@@ -15,26 +15,26 @@
     public boolean separateBlend;
     public boolean opaque;
 
-    public com.mojang.blaze3d.shaders.BlendMode(boolean separateBlend, boolean opaque, int srcColorFactor, int dstColorFactor, int srcAlphaFactor, int dstAlphaFactor, int blendFunc) {
-        this.separateBlend = separateBlend;
-        this.srcColorFactor = srcColorFactor;
-        this.dstColorFactor = dstColorFactor;
-        this.srcAlphaFactor = srcAlphaFactor;
-        this.dstAlphaFactor = dstAlphaFactor;
-        this.opaque = opaque;
-        this.blendFunc = blendFunc;
+    public com.mojang.blaze3d.shaders.BlendMode(boolean $$0, boolean $$1, int $$2, int $$3, int $$4, int $$5, int $$6) {
+        this.separateBlend = $$0;
+        this.srcColorFactor = $$2;
+        this.dstColorFactor = $$3;
+        this.srcAlphaFactor = $$4;
+        this.dstAlphaFactor = $$5;
+        this.opaque = $$1;
+        this.blendFunc = $$6;
     }
 
     public com.mojang.blaze3d.shaders.BlendMode() {
         this(false, true, 1, 0, 1, 0, 32774);
     }
 
-    public com.mojang.blaze3d.shaders.BlendMode(int srcFactor, int dstFactor, int blendFunc) {
-        this(false, false, srcFactor, dstFactor, srcFactor, dstFactor, blendFunc);
+    public com.mojang.blaze3d.shaders.BlendMode(int $$0, int $$1, int $$2) {
+        this(false, false, $$0, $$1, $$0, $$1, $$2);
     }
 
-    public com.mojang.blaze3d.shaders.BlendMode(int srcColorFactor, int dstColorFactor, int srcAlphaFactor, int dstAlphaFactor, int blendFunc) {
-        this(true, false, srcColorFactor, dstColorFactor, srcAlphaFactor, dstAlphaFactor, blendFunc);
+    public com.mojang.blaze3d.shaders.BlendMode(int $$0, int $$1, int $$2, int $$3, int $$4) {
+        this(true, false, $$0, $$1, $$2, $$3, $$4);
     }
 
     public void apply() {
@@ -57,33 +57,33 @@
         }
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        if (!(other instanceof com.mojang.blaze3d.shaders.BlendMode)) {
+        if (!($$0 instanceof com.mojang.blaze3d.shaders.BlendMode)) {
             return false;
         }
-        com.mojang.blaze3d.shaders.BlendMode blendMode = (com.mojang.blaze3d.shaders.BlendMode)other;
-        if (this.blendFunc != blendMode.blendFunc) {
+        com.mojang.blaze3d.shaders.BlendMode $$1 = (com.mojang.blaze3d.shaders.BlendMode)$$0;
+        if (this.blendFunc != $$1.blendFunc) {
             return false;
         }
-        if (this.dstAlphaFactor != blendMode.dstAlphaFactor) {
+        if (this.dstAlphaFactor != $$1.dstAlphaFactor) {
             return false;
         }
-        if (this.dstColorFactor != blendMode.dstColorFactor) {
+        if (this.dstColorFactor != $$1.dstColorFactor) {
             return false;
         }
-        if (this.opaque != blendMode.opaque) {
+        if (this.opaque != $$1.opaque) {
             return false;
         }
-        if (this.separateBlend != blendMode.separateBlend) {
+        if (this.separateBlend != $$1.separateBlend) {
             return false;
         }
-        if (this.srcAlphaFactor != blendMode.srcAlphaFactor) {
+        if (this.srcAlphaFactor != $$1.srcAlphaFactor) {
             return false;
         }
-        return this.srcColorFactor == blendMode.srcColorFactor;
+        return this.srcColorFactor == $$1.srcColorFactor;
     }
 
     public int hashCode() {
@@ -101,62 +101,62 @@
         return this.opaque;
     }
 
-    public static int stringToBlendFunc(java.lang.String funcName) {
-        java.lang.String string = funcName.trim().toLowerCase(java.util.Locale.ROOT);
-        if ("add".equals((java.lang.Object)string)) {
+    public static int stringToBlendFunc(java.lang.String $$0) {
+        java.lang.String $$1 = $$0.trim().toLowerCase(java.util.Locale.ROOT);
+        if ("add".equals((java.lang.Object)$$1)) {
             return 32774;
         }
-        if ("subtract".equals((java.lang.Object)string)) {
+        if ("subtract".equals((java.lang.Object)$$1)) {
             return 32778;
         }
-        if ("reversesubtract".equals((java.lang.Object)string)) {
+        if ("reversesubtract".equals((java.lang.Object)$$1)) {
             return 32779;
         }
-        if ("reverse_subtract".equals((java.lang.Object)string)) {
+        if ("reverse_subtract".equals((java.lang.Object)$$1)) {
             return 32779;
         }
-        if ("min".equals((java.lang.Object)string)) {
+        if ("min".equals((java.lang.Object)$$1)) {
             return 32775;
         }
-        if ("max".equals((java.lang.Object)string)) {
+        if ("max".equals((java.lang.Object)$$1)) {
             return 32776;
         }
         return 32774;
     }
 
-    public static int stringToBlendFactor(java.lang.String factorName) {
-        java.lang.String string = factorName.trim().toLowerCase(java.util.Locale.ROOT);
-        string = string.replaceAll("_", "");
-        string = string.replaceAll("one", "1");
-        string = string.replaceAll("zero", "0");
-        if ("0".equals((java.lang.Object)(string = string.replaceAll("minus", "-")))) {
+    public static int stringToBlendFactor(java.lang.String $$0) {
+        java.lang.String $$1 = $$0.trim().toLowerCase(java.util.Locale.ROOT);
+        $$1 = $$1.replaceAll("_", "");
+        $$1 = $$1.replaceAll("one", "1");
+        $$1 = $$1.replaceAll("zero", "0");
+        if ("0".equals((java.lang.Object)($$1 = $$1.replaceAll("minus", "-")))) {
             return 0;
         }
-        if ("1".equals((java.lang.Object)string)) {
+        if ("1".equals((java.lang.Object)$$1)) {
             return 1;
         }
-        if ("srccolor".equals((java.lang.Object)string)) {
+        if ("srccolor".equals((java.lang.Object)$$1)) {
             return 768;
         }
-        if ("1-srccolor".equals((java.lang.Object)string)) {
+        if ("1-srccolor".equals((java.lang.Object)$$1)) {
             return 769;
         }
-        if ("dstcolor".equals((java.lang.Object)string)) {
+        if ("dstcolor".equals((java.lang.Object)$$1)) {
             return 774;
         }
-        if ("1-dstcolor".equals((java.lang.Object)string)) {
+        if ("1-dstcolor".equals((java.lang.Object)$$1)) {
             return 775;
         }
-        if ("srcalpha".equals((java.lang.Object)string)) {
+        if ("srcalpha".equals((java.lang.Object)$$1)) {
             return 770;
         }
-        if ("1-srcalpha".equals((java.lang.Object)string)) {
+        if ("1-srcalpha".equals((java.lang.Object)$$1)) {
             return 771;
         }
-        if ("dstalpha".equals((java.lang.Object)string)) {
+        if ("dstalpha".equals((java.lang.Object)$$1)) {
             return 772;
         }
-        if ("1-dstalpha".equals((java.lang.Object)string)) {
+        if ("1-dstalpha".equals((java.lang.Object)$$1)) {
             return 773;
         }
         return -1;