--- com/mojang/blaze3d/shaders/Uniform.java
+++ com/mojang/blaze3d/shaders/Uniform.java
@@ -45,16 +45,16 @@
         this.markDirty();
     }
 
-    public static int glGetUniformLocation(int program, java.lang.CharSequence name) {
-        return com.mojang.blaze3d.platform.GlStateManager._glGetUniformLocation((int)program, (java.lang.CharSequence)name);
+    public static int glGetUniformLocation(int $$0, java.lang.CharSequence $$1) {
+        return com.mojang.blaze3d.platform.GlStateManager._glGetUniformLocation((int)$$0, (java.lang.CharSequence)$$1);
     }
 
-    public static void uploadInteger(int location, int value) {
-        com.mojang.blaze3d.systems.RenderSystem.glUniform1i((int)location, (int)value);
+    public static void uploadInteger(int $$0, int $$1) {
+        com.mojang.blaze3d.systems.RenderSystem.glUniform1i((int)$$0, (int)$$1);
     }
 
-    public static int glGetAttribLocation(int program, java.lang.CharSequence name) {
-        return com.mojang.blaze3d.platform.GlStateManager._glGetAttribLocation((int)program, (java.lang.CharSequence)name);
+    public static int glGetAttribLocation(int $$0, java.lang.CharSequence $$1) {
+        return com.mojang.blaze3d.platform.GlStateManager._glGetAttribLocation((int)$$0, (java.lang.CharSequence)$$1);
     }
 
     public static void glBindAttribLocation(int $$0, int $$1, java.lang.CharSequence $$2) {
@@ -77,42 +77,42 @@
         }
     }
 
-    public static int getTypeFromString(java.lang.String typeName) {
-        int n = -1;
-        if ("int".equals((java.lang.Object)typeName)) {
-            n = 0;
-        } else if ("float".equals((java.lang.Object)typeName)) {
-            n = 4;
-        } else if (typeName.startsWith("matrix")) {
-            if (typeName.endsWith("2x2")) {
-                n = 8;
-            } else if (typeName.endsWith("3x3")) {
-                n = 9;
-            } else if (typeName.endsWith("4x4")) {
-                n = 10;
+    public static int getTypeFromString(java.lang.String $$0) {
+        int $$1 = -1;
+        if ("int".equals((java.lang.Object)$$0)) {
+            $$1 = 0;
+        } else if ("float".equals((java.lang.Object)$$0)) {
+            $$1 = 4;
+        } else if ($$0.startsWith("matrix")) {
+            if ($$0.endsWith("2x2")) {
+                $$1 = 8;
+            } else if ($$0.endsWith("3x3")) {
+                $$1 = 9;
+            } else if ($$0.endsWith("4x4")) {
+                $$1 = 10;
             }
         }
-        return n;
+        return $$1;
     }
 
-    public void setLocation(int location) {
-        this.location = location;
+    public void setLocation(int $$0) {
+        this.location = $$0;
     }
 
     public java.lang.String getName() {
         return this.name;
     }
 
-    public void set(float x) {
+    public void set(float $$0) {
         this.floatValues.position(0);
-        this.floatValues.put(0, x);
+        this.floatValues.put(0, $$0);
         this.markDirty();
     }
 
-    public void set(float x, float y) {
+    public void set(float $$0, float $$1) {
         this.floatValues.position(0);
-        this.floatValues.put(0, x);
-        this.floatValues.put(1, y);
+        this.floatValues.put(0, $$0);
+        this.floatValues.put(1, $$1);
         this.markDirty();
     }
 
@@ -122,11 +122,11 @@
         this.markDirty();
     }
 
-    public void set(float x, float y, float z) {
+    public void set(float $$0, float $$1, float $$2) {
         this.floatValues.position(0);
-        this.floatValues.put(0, x);
-        this.floatValues.put(1, y);
-        this.floatValues.put(2, z);
+        this.floatValues.put(0, $$0);
+        this.floatValues.put(1, $$1);
+        this.floatValues.put(2, $$2);
         this.markDirty();
     }
 
@@ -138,12 +138,12 @@
         this.markDirty();
     }
 
-    public void set(float x, float y, float z, float w) {
+    public void set(float $$0, float $$1, float $$2, float $$3) {
         this.floatValues.position(0);
-        this.floatValues.put(x);
-        this.floatValues.put(y);
-        this.floatValues.put(z);
-        this.floatValues.put(w);
+        this.floatValues.put($$0);
+        this.floatValues.put($$1);
+        this.floatValues.put($$2);
+        this.floatValues.put($$3);
         this.floatValues.flip();
         this.markDirty();
     }
@@ -157,36 +157,36 @@
         this.markDirty();
     }
 
-    public void setSafe(float x, float y, float z, float w) {
+    public void setSafe(float $$0, float $$1, float $$2, float $$3) {
         this.floatValues.position(0);
         if (this.type >= 4) {
-            this.floatValues.put(0, x);
+            this.floatValues.put(0, $$0);
         }
         if (this.type >= 5) {
-            this.floatValues.put(1, y);
+            this.floatValues.put(1, $$1);
         }
         if (this.type >= 6) {
-            this.floatValues.put(2, z);
+            this.floatValues.put(2, $$2);
         }
         if (this.type >= 7) {
-            this.floatValues.put(3, w);
+            this.floatValues.put(3, $$3);
         }
         this.markDirty();
     }
 
-    public void setSafe(int x, int y, int z, int w) {
+    public void setSafe(int $$0, int $$1, int $$2, int $$3) {
         this.intValues.position(0);
         if (this.type >= 0) {
-            this.intValues.put(0, x);
+            this.intValues.put(0, $$0);
         }
         if (this.type >= 1) {
-            this.intValues.put(1, y);
+            this.intValues.put(1, $$1);
         }
         if (this.type >= 2) {
-            this.intValues.put(2, z);
+            this.intValues.put(2, $$2);
         }
         if (this.type >= 3) {
-            this.intValues.put(3, w);
+            this.intValues.put(3, $$3);
         }
         this.markDirty();
     }
@@ -221,13 +221,13 @@
         this.markDirty();
     }
 
-    public void set(float[] valueArray) {
-        if (valueArray.length < this.count) {
-            LOGGER.warn("Uniform.set called with a too-small value array (expected {}, got {}). Ignoring.", (java.lang.Object)this.count, (java.lang.Object)valueArray.length);
+    public void set(float[] $$0) {
+        if ($$0.length < this.count) {
+            LOGGER.warn("Uniform.set called with a too-small value array (expected {}, got {}). Ignoring.", (java.lang.Object)this.count, (java.lang.Object)$$0.length);
             return;
         }
         this.floatValues.position(0);
-        this.floatValues.put(valueArray);
+        this.floatValues.put($$0);
         this.floatValues.position(0);
         this.markDirty();
     }
@@ -358,9 +358,9 @@
         this.markDirty();
     }
 
-    public void set(com.mojang.math.Matrix4f matrix) {
+    public void set(com.mojang.math.Matrix4f $$0) {
         this.floatValues.position(0);
-        matrix.store(this.floatValues);
+        $$0.store(this.floatValues);
         this.markDirty();
     }
 