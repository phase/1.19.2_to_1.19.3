--- com/mojang/realmsclient/util/task/GetServerDetailsTask.java
+++ com/mojang/realmsclient/util/task/GetServerDetailsTask.java
@@ -91,7 +91,7 @@
                     return;
                 }
                 this.scheduleResourcePackDownload($$0).thenRun(() -> com.mojang.realmsclient.util.task.GetServerDetailsTask.setScreen((net.minecraft.client.gui.screens.Screen)((net.minecraft.client.gui.screens.Screen)$$1.apply((java.lang.Object)$$0)))).exceptionally($$1 -> {
-                    net.minecraft.client.Minecraft.getInstance().getClientPackSource().clearServerPack();
+                    net.minecraft.client.Minecraft.getInstance().getDownloadedPackSource().clearServerPack();
                     LOGGER.error("Failed to download resource pack from {}", (java.lang.Object)$$0, $$1);
                     com.mojang.realmsclient.util.task.GetServerDetailsTask.setScreen((net.minecraft.client.gui.screens.Screen)new com.mojang.realmsclient.gui.screens.RealmsGenericErrorScreen((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)"Failed to download resource pack!"), this.lastScreen));
                     return null;
@@ -108,7 +108,7 @@
 
     public java.util.concurrent.CompletableFuture<?> scheduleResourcePackDownload(com.mojang.realmsclient.dto.RealmsServerAddress $$0) {
         try {
-            return net.minecraft.client.Minecraft.getInstance().getClientPackSource().downloadAndSelectResourcePack(new java.net.URL($$0.resourcePackUrl), $$0.resourcePackHash, false);
+            return net.minecraft.client.Minecraft.getInstance().getDownloadedPackSource().downloadAndSelectResourcePack(new java.net.URL($$0.resourcePackUrl), $$0.resourcePackHash, false);
         }
         catch (java.lang.Exception $$1) {
             java.util.concurrent.CompletableFuture $$2 = new java.util.concurrent.CompletableFuture();