--- com/mojang/math/Vector4f.java
+++ com/mojang/math/Vector4f.java
@@ -13,35 +13,35 @@
     public com.mojang.math.Vector4f() {
     }
 
-    public com.mojang.math.Vector4f(float x, float y, float z, float w) {
-        this.x = x;
-        this.y = y;
-        this.z = z;
-        this.w = w;
+    public com.mojang.math.Vector4f(float $$0, float $$1, float $$2, float $$3) {
+        this.x = $$0;
+        this.y = $$1;
+        this.z = $$2;
+        this.w = $$3;
     }
 
-    public com.mojang.math.Vector4f(com.mojang.math.Vector3f vector3f) {
-        this(vector3f.x(), vector3f.y(), vector3f.z(), 1.0f);
+    public com.mojang.math.Vector4f(com.mojang.math.Vector3f $$0) {
+        this($$0.x(), $$0.y(), $$0.z(), 1.0f);
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        if (other == null || this.getClass() != other.getClass()) {
+        if ($$0 == null || this.getClass() != $$0.getClass()) {
             return false;
         }
-        com.mojang.math.Vector4f vector4f = (com.mojang.math.Vector4f)other;
-        if (java.lang.Float.compare((float)vector4f.x, (float)this.x) != 0) {
+        com.mojang.math.Vector4f $$1 = (com.mojang.math.Vector4f)$$0;
+        if (java.lang.Float.compare((float)$$1.x, (float)this.x) != 0) {
             return false;
         }
-        if (java.lang.Float.compare((float)vector4f.y, (float)this.y) != 0) {
+        if (java.lang.Float.compare((float)$$1.y, (float)this.y) != 0) {
             return false;
         }
-        if (java.lang.Float.compare((float)vector4f.z, (float)this.z) != 0) {
+        if (java.lang.Float.compare((float)$$1.z, (float)this.z) != 0) {
             return false;
         }
-        return java.lang.Float.compare((float)vector4f.w, (float)this.w) == 0;
+        return java.lang.Float.compare((float)$$1.w, (float)this.w) == 0;
     }
 
     public int hashCode() {
@@ -75,17 +75,17 @@
         this.w *= $$0;
     }
 
-    public void mul(com.mojang.math.Vector3f vec) {
-        this.x *= vec.x();
-        this.y *= vec.y();
-        this.z *= vec.z();
+    public void mul(com.mojang.math.Vector3f $$0) {
+        this.x *= $$0.x();
+        this.y *= $$0.y();
+        this.z *= $$0.z();
     }
 
-    public void set(float x, float y, float z, float w) {
-        this.x = x;
-        this.y = y;
-        this.z = z;
-        this.w = w;
+    public void set(float $$0, float $$1, float $$2, float $$3) {
+        this.x = $$0;
+        this.y = $$1;
+        this.z = $$2;
+        this.w = $$3;
     }
 
     public void add(float $$0, float $$1, float $$2, float $$3) {
@@ -95,8 +95,8 @@
         this.w += $$3;
     }
 
-    public float dot(com.mojang.math.Vector4f other) {
-        return this.x * other.x + this.y * other.y + this.z * other.z + this.w * other.w;
+    public float dot(com.mojang.math.Vector4f $$0) {
+        return this.x * $$0.x + this.y * $$0.y + this.z * $$0.z + this.w * $$0.w;
     }
 
     public boolean normalize() {
@@ -112,24 +112,24 @@
         return true;
     }
 
-    public void transform(com.mojang.math.Matrix4f matrix) {
-        float f = this.x;
-        float f2 = this.y;
-        float f3 = this.z;
-        float f4 = this.w;
-        this.x = matrix.m00 * f + matrix.m01 * f2 + matrix.m02 * f3 + matrix.m03 * f4;
-        this.y = matrix.m10 * f + matrix.m11 * f2 + matrix.m12 * f3 + matrix.m13 * f4;
-        this.z = matrix.m20 * f + matrix.m21 * f2 + matrix.m22 * f3 + matrix.m23 * f4;
-        this.w = matrix.m30 * f + matrix.m31 * f2 + matrix.m32 * f3 + matrix.m33 * f4;
+    public void transform(com.mojang.math.Matrix4f $$0) {
+        float $$1 = this.x;
+        float $$2 = this.y;
+        float $$3 = this.z;
+        float $$4 = this.w;
+        this.x = $$0.m00 * $$1 + $$0.m01 * $$2 + $$0.m02 * $$3 + $$0.m03 * $$4;
+        this.y = $$0.m10 * $$1 + $$0.m11 * $$2 + $$0.m12 * $$3 + $$0.m13 * $$4;
+        this.z = $$0.m20 * $$1 + $$0.m21 * $$2 + $$0.m22 * $$3 + $$0.m23 * $$4;
+        this.w = $$0.m30 * $$1 + $$0.m31 * $$2 + $$0.m32 * $$3 + $$0.m33 * $$4;
     }
 
-    public void transform(com.mojang.math.Quaternion quaternion) {
-        com.mojang.math.Quaternion quaternion2 = new com.mojang.math.Quaternion(quaternion);
-        quaternion2.mul(new com.mojang.math.Quaternion(this.x(), this.y(), this.z(), 0.0f));
-        com.mojang.math.Quaternion quaternion3 = new com.mojang.math.Quaternion(quaternion);
-        quaternion3.conj();
-        quaternion2.mul(quaternion3);
-        this.set(quaternion2.i(), quaternion2.j(), quaternion2.k(), this.w());
+    public void transform(com.mojang.math.Quaternion $$0) {
+        com.mojang.math.Quaternion $$1 = new com.mojang.math.Quaternion($$0);
+        $$1.mul(new com.mojang.math.Quaternion(this.x(), this.y(), this.z(), 0.0f));
+        com.mojang.math.Quaternion $$2 = new com.mojang.math.Quaternion($$0);
+        $$2.conj();
+        $$1.mul($$2);
+        this.set($$1.i(), $$1.j(), $$1.k(), this.w());
     }
 
     public void perspectiveDivide() {