--- com/mojang/math/Quaternion.java
+++ com/mojang/math/Quaternion.java
@@ -11,22 +11,22 @@
     public float k;
     public float r;
 
-    public com.mojang.math.Quaternion(float i, float j, float k, float r) {
-        this.i = i;
-        this.j = j;
-        this.k = k;
-        this.r = r;
+    public com.mojang.math.Quaternion(float $$0, float $$1, float $$2, float $$3) {
+        this.i = $$0;
+        this.j = $$1;
+        this.k = $$2;
+        this.r = $$3;
     }
 
-    public com.mojang.math.Quaternion(com.mojang.math.Vector3f vector, float angle, boolean degrees) {
-        if (degrees) {
-            angle *= (float)java.lang.Math.PI / 180;
+    public com.mojang.math.Quaternion(com.mojang.math.Vector3f $$0, float $$1, boolean $$2) {
+        if ($$2) {
+            $$1 *= (float)java.lang.Math.PI / 180;
         }
-        float f = com.mojang.math.Quaternion.sin((float)(angle / 2.0f));
-        this.i = vector.x() * f;
-        this.j = vector.y() * f;
-        this.k = vector.z() * f;
-        this.r = com.mojang.math.Quaternion.cos((float)(angle / 2.0f));
+        float $$3 = com.mojang.math.Quaternion.sin((float)($$1 / 2.0f));
+        this.i = $$0.x() * $$3;
+        this.j = $$0.y() * $$3;
+        this.k = $$0.z() * $$3;
+        this.r = com.mojang.math.Quaternion.cos((float)($$1 / 2.0f));
     }
 
     public com.mojang.math.Quaternion(float $$0, float $$1, float $$2, boolean $$3) {
@@ -47,11 +47,11 @@
         this.r = $$5 * $$7 * $$9 - $$4 * $$6 * $$8;
     }
 
-    public com.mojang.math.Quaternion(com.mojang.math.Quaternion other) {
-        this.i = other.i;
-        this.j = other.j;
-        this.k = other.k;
-        this.r = other.r;
+    public com.mojang.math.Quaternion(com.mojang.math.Quaternion $$0) {
+        this.i = $$0.i;
+        this.j = $$0.j;
+        this.k = $$0.k;
+        this.r = $$0.r;
     }
 
     public static com.mojang.math.Quaternion fromYXZ(float $$0, float $$1, float $$2) {
@@ -116,24 +116,24 @@
         return new com.mojang.math.Vector3f((float)java.lang.Math.toDegrees((double)$$0.x()), (float)java.lang.Math.toDegrees((double)$$0.y()), (float)java.lang.Math.toDegrees((double)$$0.z()));
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        if (other == null || this.getClass() != other.getClass()) {
+        if ($$0 == null || this.getClass() != $$0.getClass()) {
             return false;
         }
-        com.mojang.math.Quaternion quaternion = (com.mojang.math.Quaternion)other;
-        if (java.lang.Float.compare((float)quaternion.i, (float)this.i) != 0) {
+        com.mojang.math.Quaternion $$1 = (com.mojang.math.Quaternion)$$0;
+        if (java.lang.Float.compare((float)$$1.i, (float)this.i) != 0) {
             return false;
         }
-        if (java.lang.Float.compare((float)quaternion.j, (float)this.j) != 0) {
+        if (java.lang.Float.compare((float)$$1.j, (float)this.j) != 0) {
             return false;
         }
-        if (java.lang.Float.compare((float)quaternion.k, (float)this.k) != 0) {
+        if (java.lang.Float.compare((float)$$1.k, (float)this.k) != 0) {
             return false;
         }
-        return java.lang.Float.compare((float)quaternion.r, (float)this.r) == 0;
+        return java.lang.Float.compare((float)$$1.r, (float)this.r) == 0;
     }
 
     public int hashCode() {
@@ -169,26 +169,26 @@
         return this.r;
     }
 
-    public void mul(com.mojang.math.Quaternion other) {
-        float f = this.i();
-        float f2 = this.j();
-        float f3 = this.k();
-        float f4 = this.r();
-        float f5 = other.i();
-        float f6 = other.j();
-        float f7 = other.k();
-        float f8 = other.r();
-        this.i = f4 * f5 + f * f8 + f2 * f7 - f3 * f6;
-        this.j = f4 * f6 - f * f7 + f2 * f8 + f3 * f5;
-        this.k = f4 * f7 + f * f6 - f2 * f5 + f3 * f8;
-        this.r = f4 * f8 - f * f5 - f2 * f6 - f3 * f7;
+    public void mul(com.mojang.math.Quaternion $$0) {
+        float $$1 = this.i();
+        float $$2 = this.j();
+        float $$3 = this.k();
+        float $$4 = this.r();
+        float $$5 = $$0.i();
+        float $$6 = $$0.j();
+        float $$7 = $$0.k();
+        float $$8 = $$0.r();
+        this.i = $$4 * $$5 + $$1 * $$8 + $$2 * $$7 - $$3 * $$6;
+        this.j = $$4 * $$6 - $$1 * $$7 + $$2 * $$8 + $$3 * $$5;
+        this.k = $$4 * $$7 + $$1 * $$6 - $$2 * $$5 + $$3 * $$8;
+        this.r = $$4 * $$8 - $$1 * $$5 - $$2 * $$6 - $$3 * $$7;
     }
 
-    public void mul(float multiplier) {
-        this.i *= multiplier;
-        this.j *= multiplier;
-        this.k *= multiplier;
-        this.r *= multiplier;
+    public void mul(float $$0) {
+        this.i *= $$0;
+        this.j *= $$0;
+        this.k *= $$0;
+        this.r *= $$0;
     }
 
     public void conj() {
@@ -197,19 +197,19 @@
         this.k = -this.k;
     }
 
-    public void set(float i, float j, float k, float r) {
-        this.i = i;
-        this.j = j;
-        this.k = k;
-        this.r = r;
+    public void set(float $$0, float $$1, float $$2, float $$3) {
+        this.i = $$0;
+        this.j = $$1;
+        this.k = $$2;
+        this.r = $$3;
     }
 
-    public static float cos(float angle) {
-        return (float)java.lang.Math.cos((double)angle);
+    public static float cos(float $$0) {
+        return (float)java.lang.Math.cos((double)$$0);
     }
 
-    public static float sin(float angle) {
-        return (float)java.lang.Math.sin((double)angle);
+    public static float sin(float $$0) {
+        return (float)java.lang.Math.sin((double)$$0);
     }
 
     public void normalize() {