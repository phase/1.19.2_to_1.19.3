--- com/mojang/math/OctahedralGroup.java
+++ com/mojang/math/OctahedralGroup.java
@@ -75,18 +75,18 @@
         return (com.mojang.math.OctahedralGroup)java.lang.Enum.valueOf(com.mojang.math.OctahedralGroup.class, (java.lang.String)$$0);
     }
 
-    public com.mojang.math.OctahedralGroup(java.lang.String name, com.mojang.math.SymmetricGroup3 permutation, boolean invertX, boolean invertY, boolean invertZ) {
+    public com.mojang.math.OctahedralGroup(java.lang.String $$0, com.mojang.math.SymmetricGroup3 $$1, boolean $$2, boolean $$3, boolean $$4) {
         super(string, n);
-        this.name = name;
-        this.invertX = invertX;
-        this.invertY = invertY;
-        this.invertZ = invertZ;
-        this.permutation = permutation;
+        this.name = $$0;
+        this.invertX = $$2;
+        this.invertY = $$3;
+        this.invertZ = $$4;
+        this.permutation = $$1;
         this.transformation = new com.mojang.math.Matrix3f();
-        this.transformation.m00 = invertX ? -1.0f : 1.0f;
-        this.transformation.m11 = invertY ? -1.0f : 1.0f;
-        this.transformation.m22 = invertZ ? -1.0f : 1.0f;
-        this.transformation.mul(permutation.transformation());
+        this.transformation.m00 = $$2 ? -1.0f : 1.0f;
+        this.transformation.m11 = $$3 ? -1.0f : 1.0f;
+        this.transformation.m22 = $$4 ? -1.0f : 1.0f;
+        this.transformation.mul($$1.transformation());
     }
 
     public it.unimi.dsi.fastutil.booleans.BooleanList packInversions() {
@@ -113,23 +113,23 @@
         return this.name;
     }
 
-    public net.minecraft.core.Direction rotate(net.minecraft.core.Direction direction) {
+    public net.minecraft.core.Direction rotate(net.minecraft.core.Direction $$0) {
         if (this.rotatedDirections == null) {
             this.rotatedDirections = com.google.common.collect.Maps.newEnumMap(net.minecraft.core.Direction.class);
-            for (net.minecraft.core.Direction direction2 : net.minecraft.core.Direction.values()) {
-                net.minecraft.core.Direction$Axis axis = direction2.getAxis();
-                net.minecraft.core.Direction$AxisDirection axisDirection = direction2.getAxisDirection();
-                net.minecraft.core.Direction$Axis axis2 = net.minecraft.core.Direction$Axis.values()[this.permutation.permutation(axis.ordinal())];
-                net.minecraft.core.Direction$AxisDirection axisDirection2 = this.inverts(axis2) ? axisDirection.opposite() : axisDirection;
-                net.minecraft.core.Direction direction3 = net.minecraft.core.Direction.fromAxisAndDirection((net.minecraft.core.Direction$Axis)axis2, (net.minecraft.core.Direction$AxisDirection)axisDirection2);
-                this.rotatedDirections.put((java.lang.Object)direction2, (java.lang.Object)direction3);
+            for (net.minecraft.core.Direction $$1 : net.minecraft.core.Direction.values()) {
+                net.minecraft.core.Direction$Axis $$2 = $$1.getAxis();
+                net.minecraft.core.Direction$AxisDirection $$3 = $$1.getAxisDirection();
+                net.minecraft.core.Direction$Axis $$4 = net.minecraft.core.Direction$Axis.values()[this.permutation.permutation($$2.ordinal())];
+                net.minecraft.core.Direction$AxisDirection $$5 = this.inverts($$4) ? $$3.opposite() : $$3;
+                net.minecraft.core.Direction $$6 = net.minecraft.core.Direction.fromAxisAndDirection((net.minecraft.core.Direction$Axis)$$4, (net.minecraft.core.Direction$AxisDirection)$$5);
+                this.rotatedDirections.put((java.lang.Object)$$1, (java.lang.Object)$$6);
             }
         }
-        return (net.minecraft.core.Direction)this.rotatedDirections.get((java.lang.Object)direction);
+        return (net.minecraft.core.Direction)this.rotatedDirections.get((java.lang.Object)$$0);
     }
 
-    public boolean inverts(net.minecraft.core.Direction$Axis axis) {
-        switch (com.mojang.math.OctahedralGroup$1.$SwitchMap$net$minecraft$core$Direction$Axis[axis.ordinal()]) {
+    public boolean inverts(net.minecraft.core.Direction$Axis $$0) {
+        switch (com.mojang.math.OctahedralGroup$1.$SwitchMap$net$minecraft$core$Direction$Axis[$$0.ordinal()]) {
             case 1: {
                 return this.invertX;
             }
@@ -140,8 +140,8 @@
         return this.invertZ;
     }
 
-    public net.minecraft.core.FrontAndTop rotate(net.minecraft.core.FrontAndTop frontAndTop) {
-        return net.minecraft.core.FrontAndTop.fromFrontAndTop((net.minecraft.core.Direction)this.rotate(frontAndTop.front()), (net.minecraft.core.Direction)this.rotate(frontAndTop.top()));
+    public net.minecraft.core.FrontAndTop rotate(net.minecraft.core.FrontAndTop $$0) {
+        return net.minecraft.core.FrontAndTop.fromFrontAndTop((net.minecraft.core.Direction)this.rotate($$0.front()), (net.minecraft.core.Direction)this.rotate($$0.top()));
     }
 
     public static /* synthetic */ com.mojang.math.OctahedralGroup[] lambda$static$5(int $$0) {