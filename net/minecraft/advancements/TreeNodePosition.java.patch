--- net/minecraft/advancements/TreeNodePosition.java
+++ net/minecraft/advancements/TreeNodePosition.java
@@ -21,35 +21,35 @@
     public float change;
     public float shift;
 
-    public net.minecraft.advancements.TreeNodePosition(net.minecraft.advancements.Advancement advancement, @javax.annotation.Nullable net.minecraft.advancements.TreeNodePosition parent, @javax.annotation.Nullable net.minecraft.advancements.TreeNodePosition previousSibling, int childIndex, int x) {
+    public net.minecraft.advancements.TreeNodePosition(net.minecraft.advancements.Advancement $$0, @javax.annotation.Nullable net.minecraft.advancements.TreeNodePosition $$1, @javax.annotation.Nullable net.minecraft.advancements.TreeNodePosition $$2, int $$3, int $$4) {
         this.children = com.google.common.collect.Lists.newArrayList();
-        if (advancement.getDisplay() == null) {
+        if ($$0.getDisplay() == null) {
             throw new java.lang.IllegalArgumentException("Can't position an invisible advancement!");
         }
-        this.advancement = advancement;
-        this.parent = parent;
-        this.previousSibling = previousSibling;
-        this.childIndex = childIndex;
+        this.advancement = $$0;
+        this.parent = $$1;
+        this.previousSibling = $$2;
+        this.childIndex = $$3;
         this.ancestor = this;
-        this.x = x;
+        this.x = $$4;
         this.y = -1.0f;
-        net.minecraft.advancements.TreeNodePosition treeNodePosition = null;
-        for (net.minecraft.advancements.Advancement advancement2 : advancement.getChildren()) {
-            treeNodePosition = this.addChild(advancement2, treeNodePosition);
+        net.minecraft.advancements.TreeNodePosition $$5 = null;
+        for (net.minecraft.advancements.Advancement $$6 : $$0.getChildren()) {
+            $$5 = this.addChild($$6, $$5);
         }
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.advancements.TreeNodePosition addChild(net.minecraft.advancements.Advancement advancement, @javax.annotation.Nullable net.minecraft.advancements.TreeNodePosition previous) {
-        if (advancement.getDisplay() != null) {
-            previous = new net.minecraft.advancements.TreeNodePosition(advancement, this, previous, this.children.size() + 1, this.x + 1);
-            this.children.add((java.lang.Object)previous);
+    public net.minecraft.advancements.TreeNodePosition addChild(net.minecraft.advancements.Advancement $$0, @javax.annotation.Nullable net.minecraft.advancements.TreeNodePosition $$1) {
+        if ($$0.getDisplay() != null) {
+            $$1 = new net.minecraft.advancements.TreeNodePosition($$0, this, $$1, this.children.size() + 1, this.x + 1);
+            this.children.add((java.lang.Object)$$1);
         } else {
-            for (net.minecraft.advancements.Advancement advancement2 : advancement.getChildren()) {
-                previous = this.addChild(advancement2, previous);
+            for (net.minecraft.advancements.Advancement $$2 : $$0.getChildren()) {
+                $$1 = this.addChild($$2, $$1);
             }
         }
-        return previous;
+        return $$1;
     }
 
     public void firstWalk() {
@@ -72,22 +72,22 @@
         }
     }
 
-    public float secondWalk(float offsetY, int columnX, float subtreeTopY) {
-        this.y += offsetY;
-        this.x = columnX;
-        if (this.y < subtreeTopY) {
-            subtreeTopY = this.y;
+    public float secondWalk(float $$0, int $$1, float $$2) {
+        this.y += $$0;
+        this.x = $$1;
+        if (this.y < $$2) {
+            $$2 = this.y;
         }
-        for (net.minecraft.advancements.TreeNodePosition treeNodePosition : this.children) {
-            subtreeTopY = treeNodePosition.secondWalk(offsetY + this.mod, columnX + 1, subtreeTopY);
+        for (net.minecraft.advancements.TreeNodePosition $$3 : this.children) {
+            $$2 = $$3.secondWalk($$0 + this.mod, $$1 + 1, $$2);
         }
-        return subtreeTopY;
+        return $$2;
     }
 
-    public void thirdWalk(float y) {
-        this.y += y;
-        for (net.minecraft.advancements.TreeNodePosition treeNodePosition : this.children) {
-            treeNodePosition.thirdWalk(y);
+    public void thirdWalk(float $$0) {
+        this.y += $$0;
+        for (net.minecraft.advancements.TreeNodePosition $$1 : this.children) {
+            $$1.thirdWalk($$0);
         }
     }
 
@@ -124,64 +124,64 @@
         return null;
     }
 
-    public net.minecraft.advancements.TreeNodePosition apportion(net.minecraft.advancements.TreeNodePosition node) {
+    public net.minecraft.advancements.TreeNodePosition apportion(net.minecraft.advancements.TreeNodePosition $$0) {
         if (this.previousSibling == null) {
-            return node;
+            return $$0;
         }
-        net.minecraft.advancements.TreeNodePosition treeNodePosition = this;
-        net.minecraft.advancements.TreeNodePosition treeNodePosition2 = this;
-        net.minecraft.advancements.TreeNodePosition treeNodePosition3 = this.previousSibling;
-        net.minecraft.advancements.TreeNodePosition treeNodePosition4 = (net.minecraft.advancements.TreeNodePosition)this.parent.children.get(0);
-        float f = this.mod;
-        float f2 = this.mod;
-        float f3 = treeNodePosition3.mod;
-        float f4 = treeNodePosition4.mod;
-        while (treeNodePosition3.nextOrThread() != null && treeNodePosition.previousOrThread() != null) {
-            treeNodePosition3 = treeNodePosition3.nextOrThread();
-            treeNodePosition = treeNodePosition.previousOrThread();
-            treeNodePosition4 = treeNodePosition4.previousOrThread();
-            treeNodePosition2 = treeNodePosition2.nextOrThread();
-            treeNodePosition2.ancestor = this;
-            float f5 = treeNodePosition3.y + f3 - (treeNodePosition.y + f) + 1.0f;
-            if (f5 > 0.0f) {
-                treeNodePosition3.getAncestor(this, node).moveSubtree(this, f5);
-                f += f5;
-                f2 += f5;
+        net.minecraft.advancements.TreeNodePosition $$1 = this;
+        net.minecraft.advancements.TreeNodePosition $$2 = this;
+        net.minecraft.advancements.TreeNodePosition $$3 = this.previousSibling;
+        net.minecraft.advancements.TreeNodePosition $$4 = (net.minecraft.advancements.TreeNodePosition)this.parent.children.get(0);
+        float $$5 = this.mod;
+        float $$6 = this.mod;
+        float $$7 = $$3.mod;
+        float $$8 = $$4.mod;
+        while ($$3.nextOrThread() != null && $$1.previousOrThread() != null) {
+            $$3 = $$3.nextOrThread();
+            $$1 = $$1.previousOrThread();
+            $$4 = $$4.previousOrThread();
+            $$2 = $$2.nextOrThread();
+            $$2.ancestor = this;
+            float $$9 = $$3.y + $$7 - ($$1.y + $$5) + 1.0f;
+            if ($$9 > 0.0f) {
+                $$3.getAncestor(this, $$0).moveSubtree(this, $$9);
+                $$5 += $$9;
+                $$6 += $$9;
             }
-            f3 += treeNodePosition3.mod;
-            f += treeNodePosition.mod;
-            f4 += treeNodePosition4.mod;
-            f2 += treeNodePosition2.mod;
+            $$7 += $$3.mod;
+            $$5 += $$1.mod;
+            $$8 += $$4.mod;
+            $$6 += $$2.mod;
         }
-        if (treeNodePosition3.nextOrThread() != null && treeNodePosition2.nextOrThread() == null) {
-            treeNodePosition2.thread = treeNodePosition3.nextOrThread();
-            treeNodePosition2.mod += f3 - f2;
+        if ($$3.nextOrThread() != null && $$2.nextOrThread() == null) {
+            $$2.thread = $$3.nextOrThread();
+            $$2.mod += $$7 - $$6;
         } else {
-            if (treeNodePosition.previousOrThread() != null && treeNodePosition4.previousOrThread() == null) {
-                treeNodePosition4.thread = treeNodePosition.previousOrThread();
-                treeNodePosition4.mod += f - f4;
+            if ($$1.previousOrThread() != null && $$4.previousOrThread() == null) {
+                $$4.thread = $$1.previousOrThread();
+                $$4.mod += $$5 - $$8;
             }
-            node = this;
+            $$0 = this;
         }
-        return node;
+        return $$0;
     }
 
-    public void moveSubtree(net.minecraft.advancements.TreeNodePosition node, float shift) {
-        float f = node.childIndex - this.childIndex;
-        if (f != 0.0f) {
-            node.change -= shift / f;
-            this.change += shift / f;
+    public void moveSubtree(net.minecraft.advancements.TreeNodePosition $$0, float $$1) {
+        float $$2 = $$0.childIndex - this.childIndex;
+        if ($$2 != 0.0f) {
+            $$0.change -= $$1 / $$2;
+            this.change += $$1 / $$2;
         }
-        node.shift += shift;
-        node.y += shift;
-        node.mod += shift;
+        $$0.shift += $$1;
+        $$0.y += $$1;
+        $$0.mod += $$1;
     }
 
-    public net.minecraft.advancements.TreeNodePosition getAncestor(net.minecraft.advancements.TreeNodePosition self, net.minecraft.advancements.TreeNodePosition other) {
-        if (this.ancestor != null && self.parent.children.contains((java.lang.Object)this.ancestor)) {
+    public net.minecraft.advancements.TreeNodePosition getAncestor(net.minecraft.advancements.TreeNodePosition $$0, net.minecraft.advancements.TreeNodePosition $$1) {
+        if (this.ancestor != null && $$0.parent.children.contains((java.lang.Object)this.ancestor)) {
             return this.ancestor;
         }
-        return other;
+        return $$1;
     }
 
     public void finalizePosition() {
@@ -195,17 +195,17 @@
         }
     }
 
-    public static void run(net.minecraft.advancements.Advancement root) {
-        if (root.getDisplay() == null) {
+    public static void run(net.minecraft.advancements.Advancement $$0) {
+        if ($$0.getDisplay() == null) {
             throw new java.lang.IllegalArgumentException("Can't position children of an invisible root!");
         }
-        net.minecraft.advancements.TreeNodePosition treeNodePosition = new net.minecraft.advancements.TreeNodePosition(root, null, null, 1, 0);
-        treeNodePosition.firstWalk();
-        float f = treeNodePosition.secondWalk(0.0f, 0, treeNodePosition.y);
-        if (f < 0.0f) {
-            treeNodePosition.thirdWalk(-f);
+        net.minecraft.advancements.TreeNodePosition $$1 = new net.minecraft.advancements.TreeNodePosition($$0, null, null, 1, 0);
+        $$1.firstWalk();
+        float $$2 = $$1.secondWalk(0.0f, 0, $$1.y);
+        if ($$2 < 0.0f) {
+            $$1.thirdWalk(-$$2);
         }
-        treeNodePosition.finalizePosition();
+        $$1.finalizePosition();
     }
 }
 