--- net/minecraft/advancements/CriteriaTriggers.java
+++ net/minecraft/advancements/CriteriaTriggers.java
@@ -61,17 +61,17 @@
     public net.minecraft.advancements.CriteriaTriggers() {
     }
 
-    public static <T extends net.minecraft.advancements.CriterionTrigger<?>> T register(T criterion) {
-        if (CRITERIA.containsKey((java.lang.Object)criterion.getId())) {
-            throw new java.lang.IllegalArgumentException("Duplicate criterion id " + criterion.getId());
+    public static <T extends net.minecraft.advancements.CriterionTrigger<?>> T register(T $$0) {
+        if (CRITERIA.containsKey((java.lang.Object)$$0.getId())) {
+            throw new java.lang.IllegalArgumentException("Duplicate criterion id " + $$0.getId());
         }
-        CRITERIA.put((java.lang.Object)criterion.getId(), criterion);
-        return criterion;
+        CRITERIA.put((java.lang.Object)$$0.getId(), $$0);
+        return $$0;
     }
 
     @javax.annotation.Nullable
-    public static <T extends net.minecraft.advancements.CriterionTriggerInstance> net.minecraft.advancements.CriterionTrigger<T> getCriterion(net.minecraft.resources.ResourceLocation id) {
-        return (net.minecraft.advancements.CriterionTrigger)CRITERIA.get((java.lang.Object)id);
+    public static <T extends net.minecraft.advancements.CriterionTriggerInstance> net.minecraft.advancements.CriterionTrigger<T> getCriterion(net.minecraft.resources.ResourceLocation $$0) {
+        return (net.minecraft.advancements.CriterionTrigger)CRITERIA.get((java.lang.Object)$$0);
     }
 
     public static java.lang.Iterable<? extends net.minecraft.advancements.CriterionTrigger<?>> all() {