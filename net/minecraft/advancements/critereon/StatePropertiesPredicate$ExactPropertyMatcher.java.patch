--- net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher.java
+++ net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher.java
@@ -13,10 +13,10 @@
         this.value = $$1;
     }
 
-    public <T extends java.lang.Comparable<T>> boolean match(net.minecraft.world.level.block.state.StateHolder<?, ?> properties, net.minecraft.world.level.block.state.properties.Property<T> propertyTarget) {
-        java.lang.Comparable comparable = properties.getValue(propertyTarget);
-        java.util.Optional optional = propertyTarget.getValue(this.value);
-        return optional.isPresent() && comparable.compareTo((java.lang.Object)((java.lang.Comparable)optional.get())) == 0;
+    public <T extends java.lang.Comparable<T>> boolean match(net.minecraft.world.level.block.state.StateHolder<?, ?> $$0, net.minecraft.world.level.block.state.properties.Property<T> $$1) {
+        java.lang.Comparable $$2 = $$0.getValue($$1);
+        java.util.Optional $$3 = $$1.getValue(this.value);
+        return $$3.isPresent() && $$2.compareTo((java.lang.Object)((java.lang.Comparable)$$3.get())) == 0;
     }
 
     public com.google.gson.JsonElement toJson() {