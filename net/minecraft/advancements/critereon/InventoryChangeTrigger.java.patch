--- net/minecraft/advancements/critereon/InventoryChangeTrigger.java
+++ net/minecraft/advancements/critereon/InventoryChangeTrigger.java
@@ -15,34 +15,34 @@
         return ID;
     }
 
-    public net.minecraft.advancements.critereon.InventoryChangeTrigger$TriggerInstance createInstance(com.google.gson.JsonObject json, net.minecraft.advancements.critereon.EntityPredicate$Composite entityPredicate, net.minecraft.advancements.critereon.DeserializationContext conditionsParser) {
-        com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)json, (java.lang.String)"slots", (com.google.gson.JsonObject)new com.google.gson.JsonObject());
-        net.minecraft.advancements.critereon.MinMaxBounds$Ints ints = net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)jsonObject.get("occupied"));
-        net.minecraft.advancements.critereon.MinMaxBounds$Ints ints2 = net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)jsonObject.get("full"));
-        net.minecraft.advancements.critereon.MinMaxBounds$Ints ints3 = net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)jsonObject.get("empty"));
-        net.minecraft.advancements.critereon.ItemPredicate[] itemPredicateArray = net.minecraft.advancements.critereon.ItemPredicate.fromJsonArray((com.google.gson.JsonElement)json.get("items"));
-        return new net.minecraft.advancements.critereon.InventoryChangeTrigger$TriggerInstance(entityPredicate, ints, ints2, ints3, itemPredicateArray);
+    public net.minecraft.advancements.critereon.InventoryChangeTrigger$TriggerInstance createInstance(com.google.gson.JsonObject $$0, net.minecraft.advancements.critereon.EntityPredicate$Composite $$1, net.minecraft.advancements.critereon.DeserializationContext $$2) {
+        com.google.gson.JsonObject $$3 = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$0, (java.lang.String)"slots", (com.google.gson.JsonObject)new com.google.gson.JsonObject());
+        net.minecraft.advancements.critereon.MinMaxBounds$Ints $$4 = net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)$$3.get("occupied"));
+        net.minecraft.advancements.critereon.MinMaxBounds$Ints $$5 = net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)$$3.get("full"));
+        net.minecraft.advancements.critereon.MinMaxBounds$Ints $$6 = net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)$$3.get("empty"));
+        net.minecraft.advancements.critereon.ItemPredicate[] $$7 = net.minecraft.advancements.critereon.ItemPredicate.fromJsonArray((com.google.gson.JsonElement)$$0.get("items"));
+        return new net.minecraft.advancements.critereon.InventoryChangeTrigger$TriggerInstance($$1, $$4, $$5, $$6, $$7);
     }
 
-    public void trigger(net.minecraft.server.level.ServerPlayer player, net.minecraft.world.entity.player.Inventory inventory, net.minecraft.world.item.ItemStack stack) {
-        int n = 0;
-        int n2 = 0;
-        int n3 = 0;
-        for (int i = 0; i < inventory.getContainerSize(); ++i) {
-            net.minecraft.world.item.ItemStack itemStack = inventory.getItem(i);
-            if (itemStack.isEmpty()) {
-                ++n2;
+    public void trigger(net.minecraft.server.level.ServerPlayer $$0, net.minecraft.world.entity.player.Inventory $$1, net.minecraft.world.item.ItemStack $$2) {
+        int $$3 = 0;
+        int $$4 = 0;
+        int $$5 = 0;
+        for (int $$6 = 0; $$6 < $$1.getContainerSize(); ++$$6) {
+            net.minecraft.world.item.ItemStack $$7 = $$1.getItem($$6);
+            if ($$7.isEmpty()) {
+                ++$$4;
                 continue;
             }
-            ++n3;
-            if (itemStack.getCount() < itemStack.getMaxStackSize()) continue;
-            ++n;
+            ++$$5;
+            if ($$7.getCount() < $$7.getMaxStackSize()) continue;
+            ++$$3;
         }
-        this.trigger(player, inventory, stack, n, n2, n3);
+        this.trigger($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public void trigger(net.minecraft.server.level.ServerPlayer player, net.minecraft.world.entity.player.Inventory inventory, net.minecraft.world.item.ItemStack stack, int full, int empty, int occupied) {
-        this.trigger(player, $$5 -> $$5.matches(inventory, stack, full, empty, occupied));
+    public void trigger(net.minecraft.server.level.ServerPlayer $$0, net.minecraft.world.entity.player.Inventory $$1, net.minecraft.world.item.ItemStack $$2, int $$3, int $$4, int $$52) {
+        this.trigger($$0, $$5 -> $$5.matches($$1, $$2, $$3, $$4, $$52));
     }
 
     public /* synthetic */ net.minecraft.advancements.critereon.AbstractCriterionTriggerInstance createInstance(com.google.gson.JsonObject jsonObject, net.minecraft.advancements.critereon.EntityPredicate$Composite composite, net.minecraft.advancements.critereon.DeserializationContext deserializationContext) {