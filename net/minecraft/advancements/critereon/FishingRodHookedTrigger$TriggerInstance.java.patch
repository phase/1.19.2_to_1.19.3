--- net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance.java
+++ net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance.java
@@ -17,42 +17,42 @@
         this.item = $$3;
     }
 
-    public static net.minecraft.advancements.critereon.FishingRodHookedTrigger$TriggerInstance fishedItem(net.minecraft.advancements.critereon.ItemPredicate rod, net.minecraft.advancements.critereon.EntityPredicate bobber, net.minecraft.advancements.critereon.ItemPredicate item) {
-        return new net.minecraft.advancements.critereon.FishingRodHookedTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, rod, net.minecraft.advancements.critereon.EntityPredicate$Composite.wrap((net.minecraft.advancements.critereon.EntityPredicate)bobber), item);
+    public static net.minecraft.advancements.critereon.FishingRodHookedTrigger$TriggerInstance fishedItem(net.minecraft.advancements.critereon.ItemPredicate $$0, net.minecraft.advancements.critereon.EntityPredicate $$1, net.minecraft.advancements.critereon.ItemPredicate $$2) {
+        return new net.minecraft.advancements.critereon.FishingRodHookedTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, $$0, net.minecraft.advancements.critereon.EntityPredicate$Composite.wrap((net.minecraft.advancements.critereon.EntityPredicate)$$1), $$2);
     }
 
-    public boolean matches(net.minecraft.world.item.ItemStack rod, net.minecraft.world.level.storage.loot.LootContext context, java.util.Collection<net.minecraft.world.item.ItemStack> items) {
-        if (!this.rod.matches(rod)) {
+    public boolean matches(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.level.storage.loot.LootContext $$1, java.util.Collection<net.minecraft.world.item.ItemStack> $$2) {
+        if (!this.rod.matches($$0)) {
             return false;
         }
-        if (!this.entity.matches(context)) {
+        if (!this.entity.matches($$1)) {
             return false;
         }
         if (this.item != net.minecraft.advancements.critereon.ItemPredicate.ANY) {
-            net.minecraft.world.entity.item.ItemEntity itemEntity;
-            boolean bl = false;
-            net.minecraft.world.entity.Entity entity = (net.minecraft.world.entity.Entity)context.getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParams.THIS_ENTITY);
-            if (entity instanceof net.minecraft.world.entity.item.ItemEntity && this.item.matches((itemEntity = (net.minecraft.world.entity.item.ItemEntity)entity).getItem())) {
-                bl = true;
+            net.minecraft.world.entity.item.ItemEntity $$5;
+            boolean $$3 = false;
+            net.minecraft.world.entity.Entity $$4 = (net.minecraft.world.entity.Entity)$$1.getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParams.THIS_ENTITY);
+            if ($$4 instanceof net.minecraft.world.entity.item.ItemEntity && this.item.matches(($$5 = (net.minecraft.world.entity.item.ItemEntity)$$4).getItem())) {
+                $$3 = true;
             }
-            for (net.minecraft.world.item.ItemStack itemStack : items) {
-                if (!this.item.matches(itemStack)) continue;
-                bl = true;
+            for (net.minecraft.world.item.ItemStack $$6 : $$2) {
+                if (!this.item.matches($$6)) continue;
+                $$3 = true;
                 break;
             }
-            if (!bl) {
+            if (!$$3) {
                 return false;
             }
         }
         return true;
     }
 
-    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext conditions) {
-        com.google.gson.JsonObject jsonObject = super.serializeToJson(conditions);
-        jsonObject.add("rod", this.rod.serializeToJson());
-        jsonObject.add("entity", this.entity.toJson(conditions));
-        jsonObject.add("item", this.item.serializeToJson());
-        return jsonObject;
+    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext $$0) {
+        com.google.gson.JsonObject $$1 = super.serializeToJson($$0);
+        $$1.add("rod", this.rod.serializeToJson());
+        $$1.add("entity", this.entity.toJson($$0));
+        $$1.add("item", this.item.serializeToJson());
+        return $$1;
     }
 }
 