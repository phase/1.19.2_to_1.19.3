--- net/minecraft/advancements/critereon/MinMaxBounds$Ints.java
+++ net/minecraft/advancements/critereon/MinMaxBounds$Ints.java
@@ -12,16 +12,16 @@
     @javax.annotation.Nullable
     public java.lang.Long maxSq;
 
-    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints create(com.mojang.brigadier.StringReader reader, @javax.annotation.Nullable java.lang.Integer min, @javax.annotation.Nullable java.lang.Integer max) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (min != null && max != null && min > max) {
-            throw ERROR_SWAPPED.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints create(com.mojang.brigadier.StringReader $$0, @javax.annotation.Nullable java.lang.Integer $$1, @javax.annotation.Nullable java.lang.Integer $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1 != null && $$2 != null && $$1 > $$2) {
+            throw ERROR_SWAPPED.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
         }
-        return new net.minecraft.advancements.critereon.MinMaxBounds$Ints(min, max);
+        return new net.minecraft.advancements.critereon.MinMaxBounds$Ints($$1, $$2);
     }
 
     @javax.annotation.Nullable
-    public static java.lang.Long squareOpt(@javax.annotation.Nullable java.lang.Integer value) {
-        return value == null ? null : java.lang.Long.valueOf((long)(value.longValue() * value.longValue()));
+    public static java.lang.Long squareOpt(@javax.annotation.Nullable java.lang.Integer $$0) {
+        return $$0 == null ? null : java.lang.Long.valueOf((long)($$0.longValue() * $$0.longValue()));
     }
 
     public net.minecraft.advancements.critereon.MinMaxBounds$Ints(@javax.annotation.Nullable java.lang.Integer $$0, @javax.annotation.Nullable java.lang.Integer $$1) {
@@ -30,27 +30,27 @@
         this.maxSq = net.minecraft.advancements.critereon.MinMaxBounds$Ints.squareOpt((java.lang.Integer)$$1);
     }
 
-    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints exactly(int value) {
-        return new net.minecraft.advancements.critereon.MinMaxBounds$Ints(java.lang.Integer.valueOf((int)value), java.lang.Integer.valueOf((int)value));
+    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints exactly(int $$0) {
+        return new net.minecraft.advancements.critereon.MinMaxBounds$Ints(java.lang.Integer.valueOf((int)$$0), java.lang.Integer.valueOf((int)$$0));
     }
 
     public static net.minecraft.advancements.critereon.MinMaxBounds$Ints between(int $$0, int $$1) {
         return new net.minecraft.advancements.critereon.MinMaxBounds$Ints(java.lang.Integer.valueOf((int)$$0), java.lang.Integer.valueOf((int)$$1));
     }
 
-    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints atLeast(int value) {
-        return new net.minecraft.advancements.critereon.MinMaxBounds$Ints(java.lang.Integer.valueOf((int)value), null);
+    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints atLeast(int $$0) {
+        return new net.minecraft.advancements.critereon.MinMaxBounds$Ints(java.lang.Integer.valueOf((int)$$0), null);
     }
 
     public static net.minecraft.advancements.critereon.MinMaxBounds$Ints atMost(int $$0) {
         return new net.minecraft.advancements.critereon.MinMaxBounds$Ints(null, java.lang.Integer.valueOf((int)$$0));
     }
 
-    public boolean matches(int value) {
-        if (this.min != null && (java.lang.Integer)this.min > value) {
+    public boolean matches(int $$0) {
+        if (this.min != null && (java.lang.Integer)this.min > $$0) {
             return false;
         }
-        return this.max == null || (java.lang.Integer)this.max >= value;
+        return this.max == null || (java.lang.Integer)this.max >= $$0;
     }
 
     public boolean matchesSqr(long $$0) {
@@ -60,16 +60,16 @@
         return this.maxSq == null || this.maxSq >= $$0;
     }
 
-    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints fromJson(@javax.annotation.Nullable com.google.gson.JsonElement element) {
-        return (net.minecraft.advancements.critereon.MinMaxBounds$Ints)net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)element, (net.minecraft.advancements.critereon.MinMaxBounds)ANY, net.minecraft.util.GsonHelper::convertToInt, net.minecraft.advancements.critereon.MinMaxBounds$Ints::new);
+    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints fromJson(@javax.annotation.Nullable com.google.gson.JsonElement $$0) {
+        return (net.minecraft.advancements.critereon.MinMaxBounds$Ints)net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromJson((com.google.gson.JsonElement)$$0, (net.minecraft.advancements.critereon.MinMaxBounds)ANY, net.minecraft.util.GsonHelper::convertToInt, net.minecraft.advancements.critereon.MinMaxBounds$Ints::new);
     }
 
-    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints fromReader(com.mojang.brigadier.StringReader reader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromReader((com.mojang.brigadier.StringReader)reader, $$0 -> $$0);
+    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints fromReader(com.mojang.brigadier.StringReader $$02) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromReader((com.mojang.brigadier.StringReader)$$02, $$0 -> $$0);
     }
 
-    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints fromReader(com.mojang.brigadier.StringReader reader, java.util.function.Function<java.lang.Integer, java.lang.Integer> valueFunction) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return (net.minecraft.advancements.critereon.MinMaxBounds$Ints)net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromReader((com.mojang.brigadier.StringReader)reader, net.minecraft.advancements.critereon.MinMaxBounds$Ints::create, java.lang.Integer::parseInt, () -> ((com.mojang.brigadier.exceptions.BuiltInExceptionProvider)com.mojang.brigadier.exceptions.CommandSyntaxException.BUILT_IN_EXCEPTIONS).readerInvalidInt(), valueFunction);
+    public static net.minecraft.advancements.critereon.MinMaxBounds$Ints fromReader(com.mojang.brigadier.StringReader $$0, java.util.function.Function<java.lang.Integer, java.lang.Integer> $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return (net.minecraft.advancements.critereon.MinMaxBounds$Ints)net.minecraft.advancements.critereon.MinMaxBounds$Ints.fromReader((com.mojang.brigadier.StringReader)$$0, net.minecraft.advancements.critereon.MinMaxBounds$Ints::create, java.lang.Integer::parseInt, () -> ((com.mojang.brigadier.exceptions.BuiltInExceptionProvider)com.mojang.brigadier.exceptions.CommandSyntaxException.BUILT_IN_EXCEPTIONS).readerInvalidInt(), $$1);
     }
 
     static {