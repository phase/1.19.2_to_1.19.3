--- net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance.java
+++ net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance.java
@@ -9,10 +9,10 @@
     public net.minecraft.advancements.critereon.EntityPredicate$Composite villager;
     public net.minecraft.advancements.critereon.ItemPredicate item;
 
-    public net.minecraft.advancements.critereon.TradeTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite player, net.minecraft.advancements.critereon.EntityPredicate$Composite villager, net.minecraft.advancements.critereon.ItemPredicate item) {
-        super(net.minecraft.advancements.critereon.TradeTrigger.ID, player);
-        this.villager = villager;
-        this.item = item;
+    public net.minecraft.advancements.critereon.TradeTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite $$0, net.minecraft.advancements.critereon.EntityPredicate$Composite $$1, net.minecraft.advancements.critereon.ItemPredicate $$2) {
+        super(net.minecraft.advancements.critereon.TradeTrigger.ID, $$0);
+        this.villager = $$1;
+        this.item = $$2;
     }
 
     public static net.minecraft.advancements.critereon.TradeTrigger$TriggerInstance tradedWithVillager() {
@@ -23,18 +23,18 @@
         return new net.minecraft.advancements.critereon.TradeTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.wrap((net.minecraft.advancements.critereon.EntityPredicate)$$0.build()), net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, net.minecraft.advancements.critereon.ItemPredicate.ANY);
     }
 
-    public boolean matches(net.minecraft.world.level.storage.loot.LootContext context, net.minecraft.world.item.ItemStack stack) {
-        if (!this.villager.matches(context)) {
+    public boolean matches(net.minecraft.world.level.storage.loot.LootContext $$0, net.minecraft.world.item.ItemStack $$1) {
+        if (!this.villager.matches($$0)) {
             return false;
         }
-        return this.item.matches(stack);
+        return this.item.matches($$1);
     }
 
-    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext conditions) {
-        com.google.gson.JsonObject jsonObject = super.serializeToJson(conditions);
-        jsonObject.add("item", this.item.serializeToJson());
-        jsonObject.add("villager", this.villager.toJson(conditions));
-        return jsonObject;
+    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext $$0) {
+        com.google.gson.JsonObject $$1 = super.serializeToJson($$0);
+        $$1.add("item", this.item.serializeToJson());
+        $$1.add("villager", this.villager.toJson($$0));
+        return $$1;
     }
 }
 