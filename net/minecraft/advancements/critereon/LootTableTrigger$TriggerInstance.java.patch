--- net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance.java
+++ net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance.java
@@ -13,18 +13,18 @@
         this.lootTable = $$1;
     }
 
-    public static net.minecraft.advancements.critereon.LootTableTrigger$TriggerInstance lootTableUsed(net.minecraft.resources.ResourceLocation generatedLoot) {
-        return new net.minecraft.advancements.critereon.LootTableTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, generatedLoot);
+    public static net.minecraft.advancements.critereon.LootTableTrigger$TriggerInstance lootTableUsed(net.minecraft.resources.ResourceLocation $$0) {
+        return new net.minecraft.advancements.critereon.LootTableTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, $$0);
     }
 
-    public boolean matches(net.minecraft.resources.ResourceLocation generatedLoot) {
-        return this.lootTable.equals((java.lang.Object)generatedLoot);
+    public boolean matches(net.minecraft.resources.ResourceLocation $$0) {
+        return this.lootTable.equals((java.lang.Object)$$0);
     }
 
-    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext conditions) {
-        com.google.gson.JsonObject jsonObject = super.serializeToJson(conditions);
-        jsonObject.addProperty("loot_table", this.lootTable.toString());
-        return jsonObject;
+    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext $$0) {
+        com.google.gson.JsonObject $$1 = super.serializeToJson($$0);
+        $$1.addProperty("loot_table", this.lootTable.toString());
+        return $$1;
     }
 }
 