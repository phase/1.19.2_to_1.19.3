--- net/minecraft/advancements/critereon/DamageSourcePredicate.java
+++ net/minecraft/advancements/critereon/DamageSourcePredicate.java
@@ -25,78 +25,78 @@
     public net.minecraft.advancements.critereon.EntityPredicate directEntity;
     public net.minecraft.advancements.critereon.EntityPredicate sourceEntity;
 
-    public net.minecraft.advancements.critereon.DamageSourcePredicate(@javax.annotation.Nullable java.lang.Boolean isProjectile, @javax.annotation.Nullable java.lang.Boolean isExplosion, @javax.annotation.Nullable java.lang.Boolean bypassesArmor, @javax.annotation.Nullable java.lang.Boolean bypassesInvulnerability, @javax.annotation.Nullable java.lang.Boolean bypassesMagic, @javax.annotation.Nullable java.lang.Boolean isFire, @javax.annotation.Nullable java.lang.Boolean isMagic, @javax.annotation.Nullable java.lang.Boolean isLightning, net.minecraft.advancements.critereon.EntityPredicate directEntity, net.minecraft.advancements.critereon.EntityPredicate sourceEntity) {
-        this.isProjectile = isProjectile;
-        this.isExplosion = isExplosion;
-        this.bypassesArmor = bypassesArmor;
-        this.bypassesInvulnerability = bypassesInvulnerability;
-        this.bypassesMagic = bypassesMagic;
-        this.isFire = isFire;
-        this.isMagic = isMagic;
-        this.isLightning = isLightning;
-        this.directEntity = directEntity;
-        this.sourceEntity = sourceEntity;
+    public net.minecraft.advancements.critereon.DamageSourcePredicate(@javax.annotation.Nullable java.lang.Boolean $$0, @javax.annotation.Nullable java.lang.Boolean $$1, @javax.annotation.Nullable java.lang.Boolean $$2, @javax.annotation.Nullable java.lang.Boolean $$3, @javax.annotation.Nullable java.lang.Boolean $$4, @javax.annotation.Nullable java.lang.Boolean $$5, @javax.annotation.Nullable java.lang.Boolean $$6, @javax.annotation.Nullable java.lang.Boolean $$7, net.minecraft.advancements.critereon.EntityPredicate $$8, net.minecraft.advancements.critereon.EntityPredicate $$9) {
+        this.isProjectile = $$0;
+        this.isExplosion = $$1;
+        this.bypassesArmor = $$2;
+        this.bypassesInvulnerability = $$3;
+        this.bypassesMagic = $$4;
+        this.isFire = $$5;
+        this.isMagic = $$6;
+        this.isLightning = $$7;
+        this.directEntity = $$8;
+        this.sourceEntity = $$9;
     }
 
-    public boolean matches(net.minecraft.server.level.ServerPlayer player, net.minecraft.world.damagesource.DamageSource source) {
-        return this.matches(player.getLevel(), player.position(), source);
+    public boolean matches(net.minecraft.server.level.ServerPlayer $$0, net.minecraft.world.damagesource.DamageSource $$1) {
+        return this.matches($$0.getLevel(), $$0.position(), $$1);
     }
 
-    public boolean matches(net.minecraft.server.level.ServerLevel level, net.minecraft.world.phys.Vec3 vector, net.minecraft.world.damagesource.DamageSource source) {
+    public boolean matches(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.phys.Vec3 $$1, net.minecraft.world.damagesource.DamageSource $$2) {
         if (this == ANY) {
             return true;
         }
-        if (this.isProjectile != null && this.isProjectile.booleanValue() != source.isProjectile()) {
+        if (this.isProjectile != null && this.isProjectile.booleanValue() != $$2.isProjectile()) {
             return false;
         }
-        if (this.isExplosion != null && this.isExplosion.booleanValue() != source.isExplosion()) {
+        if (this.isExplosion != null && this.isExplosion.booleanValue() != $$2.isExplosion()) {
             return false;
         }
-        if (this.bypassesArmor != null && this.bypassesArmor.booleanValue() != source.isBypassArmor()) {
+        if (this.bypassesArmor != null && this.bypassesArmor.booleanValue() != $$2.isBypassArmor()) {
             return false;
         }
-        if (this.bypassesInvulnerability != null && this.bypassesInvulnerability.booleanValue() != source.isBypassInvul()) {
+        if (this.bypassesInvulnerability != null && this.bypassesInvulnerability.booleanValue() != $$2.isBypassInvul()) {
             return false;
         }
-        if (this.bypassesMagic != null && this.bypassesMagic.booleanValue() != source.isBypassMagic()) {
+        if (this.bypassesMagic != null && this.bypassesMagic.booleanValue() != $$2.isBypassMagic()) {
             return false;
         }
-        if (this.isFire != null && this.isFire.booleanValue() != source.isFire()) {
+        if (this.isFire != null && this.isFire.booleanValue() != $$2.isFire()) {
             return false;
         }
-        if (this.isMagic != null && this.isMagic.booleanValue() != source.isMagic()) {
+        if (this.isMagic != null && this.isMagic.booleanValue() != $$2.isMagic()) {
             return false;
         }
-        if (this.isLightning != null && this.isLightning != (source == net.minecraft.world.damagesource.DamageSource.LIGHTNING_BOLT)) {
+        if (this.isLightning != null && this.isLightning != ($$2 == net.minecraft.world.damagesource.DamageSource.LIGHTNING_BOLT)) {
             return false;
         }
-        if (!this.directEntity.matches(level, vector, source.getDirectEntity())) {
+        if (!this.directEntity.matches($$0, $$1, $$2.getDirectEntity())) {
             return false;
         }
-        return this.sourceEntity.matches(level, vector, source.getEntity());
+        return this.sourceEntity.matches($$0, $$1, $$2.getEntity());
     }
 
-    public static net.minecraft.advancements.critereon.DamageSourcePredicate fromJson(@javax.annotation.Nullable com.google.gson.JsonElement element) {
-        if (element == null || element.isJsonNull()) {
+    public static net.minecraft.advancements.critereon.DamageSourcePredicate fromJson(@javax.annotation.Nullable com.google.gson.JsonElement $$0) {
+        if ($$0 == null || $$0.isJsonNull()) {
             return ANY;
         }
-        com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)element, (java.lang.String)"damage type");
-        java.lang.Boolean bl = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"is_projectile");
-        java.lang.Boolean bl2 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"is_explosion");
-        java.lang.Boolean bl3 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"bypasses_armor");
-        java.lang.Boolean bl4 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"bypasses_invulnerability");
-        java.lang.Boolean bl5 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"bypasses_magic");
-        java.lang.Boolean bl6 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"is_fire");
-        java.lang.Boolean bl7 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"is_magic");
-        java.lang.Boolean bl8 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"is_lightning");
-        net.minecraft.advancements.critereon.EntityPredicate entityPredicate = net.minecraft.advancements.critereon.EntityPredicate.fromJson((com.google.gson.JsonElement)jsonObject.get("direct_entity"));
-        net.minecraft.advancements.critereon.EntityPredicate entityPredicate2 = net.minecraft.advancements.critereon.EntityPredicate.fromJson((com.google.gson.JsonElement)jsonObject.get("source_entity"));
-        return new net.minecraft.advancements.critereon.DamageSourcePredicate(bl, bl2, bl3, bl4, bl5, bl6, bl7, bl8, entityPredicate, entityPredicate2);
+        com.google.gson.JsonObject $$1 = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$0, (java.lang.String)"damage type");
+        java.lang.Boolean $$2 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"is_projectile");
+        java.lang.Boolean $$3 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"is_explosion");
+        java.lang.Boolean $$4 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"bypasses_armor");
+        java.lang.Boolean $$5 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"bypasses_invulnerability");
+        java.lang.Boolean $$6 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"bypasses_magic");
+        java.lang.Boolean $$7 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"is_fire");
+        java.lang.Boolean $$8 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"is_magic");
+        java.lang.Boolean $$9 = net.minecraft.advancements.critereon.DamageSourcePredicate.getOptionalBoolean((com.google.gson.JsonObject)$$1, (java.lang.String)"is_lightning");
+        net.minecraft.advancements.critereon.EntityPredicate $$10 = net.minecraft.advancements.critereon.EntityPredicate.fromJson((com.google.gson.JsonElement)$$1.get("direct_entity"));
+        net.minecraft.advancements.critereon.EntityPredicate $$11 = net.minecraft.advancements.critereon.EntityPredicate.fromJson((com.google.gson.JsonElement)$$1.get("source_entity"));
+        return new net.minecraft.advancements.critereon.DamageSourcePredicate($$2, $$3, $$4, $$5, $$6, $$7, $$8, $$9, $$10, $$11);
     }
 
     @javax.annotation.Nullable
-    public static java.lang.Boolean getOptionalBoolean(com.google.gson.JsonObject object, java.lang.String memberName) {
-        return object.has(memberName) ? java.lang.Boolean.valueOf((boolean)net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)object, (java.lang.String)memberName)) : null;
+    public static java.lang.Boolean getOptionalBoolean(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        return $$0.has($$1) ? java.lang.Boolean.valueOf((boolean)net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)$$0, (java.lang.String)$$1)) : null;
     }
 
     public com.google.gson.JsonElement serializeToJson() {
@@ -117,9 +117,9 @@
         return $$0;
     }
 
-    public void addOptionally(com.google.gson.JsonObject obj, java.lang.String key, @javax.annotation.Nullable java.lang.Boolean value) {
-        if (value != null) {
-            obj.addProperty(key, value);
+    public void addOptionally(com.google.gson.JsonObject $$0, java.lang.String $$1, @javax.annotation.Nullable java.lang.Boolean $$2) {
+        if ($$2 != null) {
+            $$0.addProperty($$1, $$2);
         }
     }
 