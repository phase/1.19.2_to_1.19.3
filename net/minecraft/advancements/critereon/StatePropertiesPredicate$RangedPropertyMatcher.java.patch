--- net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher.java
+++ net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher.java
@@ -17,13 +17,14 @@
         this.maxValue = $$2;
     }
 
-    public <T extends java.lang.Comparable<T>> boolean match(net.minecraft.world.level.block.state.StateHolder<?, ?> properties, net.minecraft.world.level.block.state.properties.Property<T> propertyTarget) {
-        java.util.Optional optional;
-        java.lang.Comparable comparable = properties.getValue(propertyTarget);
-        if (!(this.minValue == null || (optional = propertyTarget.getValue(this.minValue)).isPresent() && comparable.compareTo((java.lang.Object)((java.lang.Comparable)optional.get())) >= 0)) {
+    public <T extends java.lang.Comparable<T>> boolean match(net.minecraft.world.level.block.state.StateHolder<?, ?> $$0, net.minecraft.world.level.block.state.properties.Property<T> $$1) {
+        java.util.Optional $$4;
+        java.util.Optional $$3;
+        java.lang.Comparable $$2 = $$0.getValue($$1);
+        if (!(this.minValue == null || ($$3 = $$1.getValue(this.minValue)).isPresent() && $$2.compareTo((java.lang.Object)((java.lang.Comparable)$$3.get())) >= 0)) {
             return false;
         }
-        return this.maxValue == null || (optional = propertyTarget.getValue(this.maxValue)).isPresent() && comparable.compareTo((java.lang.Object)((java.lang.Comparable)optional.get())) <= 0;
+        return this.maxValue == null || ($$4 = $$1.getValue(this.maxValue)).isPresent() && $$2.compareTo((java.lang.Object)((java.lang.Comparable)$$4.get())) <= 0;
     }
 
     public com.google.gson.JsonElement toJson() {