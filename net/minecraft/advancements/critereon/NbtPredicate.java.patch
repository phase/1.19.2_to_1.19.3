--- net/minecraft/advancements/critereon/NbtPredicate.java
+++ net/minecraft/advancements/critereon/NbtPredicate.java
@@ -13,25 +13,25 @@
         this.tag = $$0;
     }
 
-    public boolean matches(net.minecraft.world.item.ItemStack item) {
+    public boolean matches(net.minecraft.world.item.ItemStack $$0) {
         if (this == ANY) {
             return true;
         }
-        return this.matches((net.minecraft.nbt.Tag)item.getTag());
+        return this.matches((net.minecraft.nbt.Tag)$$0.getTag());
     }
 
-    public boolean matches(net.minecraft.world.entity.Entity entity) {
+    public boolean matches(net.minecraft.world.entity.Entity $$0) {
         if (this == ANY) {
             return true;
         }
-        return this.matches((net.minecraft.nbt.Tag)net.minecraft.advancements.critereon.NbtPredicate.getEntityTagToCompare((net.minecraft.world.entity.Entity)entity));
+        return this.matches((net.minecraft.nbt.Tag)net.minecraft.advancements.critereon.NbtPredicate.getEntityTagToCompare((net.minecraft.world.entity.Entity)$$0));
     }
 
-    public boolean matches(@javax.annotation.Nullable net.minecraft.nbt.Tag nbt) {
-        if (nbt == null) {
+    public boolean matches(@javax.annotation.Nullable net.minecraft.nbt.Tag $$0) {
+        if ($$0 == null) {
             return this == ANY;
         }
-        return this.tag == null || net.minecraft.nbt.NbtUtils.compareNbt((net.minecraft.nbt.Tag)this.tag, (net.minecraft.nbt.Tag)nbt, (boolean)true);
+        return this.tag == null || net.minecraft.nbt.NbtUtils.compareNbt((net.minecraft.nbt.Tag)this.tag, (net.minecraft.nbt.Tag)$$0, (boolean)true);
     }
 
     public com.google.gson.JsonElement serializeToJson() {
@@ -41,27 +41,30 @@
         return new com.google.gson.JsonPrimitive(this.tag.toString());
     }
 
-    public static net.minecraft.advancements.critereon.NbtPredicate fromJson(@javax.annotation.Nullable com.google.gson.JsonElement json) {
-        net.minecraft.nbt.CompoundTag compoundTag;
-        if (json == null || json.isJsonNull()) {
+    /*
+     * WARNING - void declaration
+     */
+    public static net.minecraft.advancements.critereon.NbtPredicate fromJson(@javax.annotation.Nullable com.google.gson.JsonElement $$0) {
+        void $$3;
+        if ($$0 == null || $$0.isJsonNull()) {
             return ANY;
         }
         try {
-            compoundTag = net.minecraft.nbt.TagParser.parseTag((java.lang.String)net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)json, (java.lang.String)"nbt"));
+            net.minecraft.nbt.CompoundTag $$1 = net.minecraft.nbt.TagParser.parseTag((java.lang.String)net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)$$0, (java.lang.String)"nbt"));
         }
-        catch (com.mojang.brigadier.exceptions.CommandSyntaxException commandSyntaxException) {
-            throw new com.google.gson.JsonSyntaxException("Invalid nbt tag: " + commandSyntaxException.getMessage());
+        catch (com.mojang.brigadier.exceptions.CommandSyntaxException $$2) {
+            throw new com.google.gson.JsonSyntaxException("Invalid nbt tag: " + $$2.getMessage());
         }
-        return new net.minecraft.advancements.critereon.NbtPredicate(compoundTag);
+        return new net.minecraft.advancements.critereon.NbtPredicate((net.minecraft.nbt.CompoundTag)$$3);
     }
 
-    public static net.minecraft.nbt.CompoundTag getEntityTagToCompare(net.minecraft.world.entity.Entity entity) {
-        net.minecraft.world.item.ItemStack itemStack;
-        net.minecraft.nbt.CompoundTag compoundTag = entity.saveWithoutId(new net.minecraft.nbt.CompoundTag());
-        if (entity instanceof net.minecraft.world.entity.player.Player && !(itemStack = ((net.minecraft.world.entity.player.Player)entity).getInventory().getSelected()).isEmpty()) {
-            compoundTag.put("SelectedItem", (net.minecraft.nbt.Tag)itemStack.save(new net.minecraft.nbt.CompoundTag()));
+    public static net.minecraft.nbt.CompoundTag getEntityTagToCompare(net.minecraft.world.entity.Entity $$0) {
+        net.minecraft.world.item.ItemStack $$2;
+        net.minecraft.nbt.CompoundTag $$1 = $$0.saveWithoutId(new net.minecraft.nbt.CompoundTag());
+        if ($$0 instanceof net.minecraft.world.entity.player.Player && !($$2 = ((net.minecraft.world.entity.player.Player)$$0).getInventory().getSelected()).isEmpty()) {
+            $$1.put("SelectedItem", (net.minecraft.nbt.Tag)$$2.save(new net.minecraft.nbt.CompoundTag()));
         }
-        return compoundTag;
+        return $$1;
     }
 
     static {