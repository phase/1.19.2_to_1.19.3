--- net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance.java
+++ net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance.java
@@ -13,28 +13,28 @@
         this.victims = $$1;
     }
 
-    public static net.minecraft.advancements.critereon.ChanneledLightningTrigger$TriggerInstance channeledLightning(net.minecraft.advancements.critereon.EntityPredicate ... victims) {
-        return new net.minecraft.advancements.critereon.ChanneledLightningTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, (net.minecraft.advancements.critereon.EntityPredicate$Composite[])java.util.stream.Stream.of((java.lang.Object[])victims).map(net.minecraft.advancements.critereon.EntityPredicate$Composite::wrap).toArray(net.minecraft.advancements.critereon.EntityPredicate$Composite[]::new));
+    public static net.minecraft.advancements.critereon.ChanneledLightningTrigger$TriggerInstance channeledLightning(net.minecraft.advancements.critereon.EntityPredicate ... $$0) {
+        return new net.minecraft.advancements.critereon.ChanneledLightningTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, (net.minecraft.advancements.critereon.EntityPredicate$Composite[])java.util.stream.Stream.of((java.lang.Object[])$$0).map(net.minecraft.advancements.critereon.EntityPredicate$Composite::wrap).toArray(net.minecraft.advancements.critereon.EntityPredicate$Composite[]::new));
     }
 
-    public boolean matches(java.util.Collection<? extends net.minecraft.world.level.storage.loot.LootContext> victims) {
-        for (net.minecraft.advancements.critereon.EntityPredicate$Composite composite : this.victims) {
-            boolean bl = false;
-            for (net.minecraft.world.level.storage.loot.LootContext lootContext : victims) {
-                if (!composite.matches(lootContext)) continue;
-                bl = true;
+    public boolean matches(java.util.Collection<? extends net.minecraft.world.level.storage.loot.LootContext> $$0) {
+        for (net.minecraft.advancements.critereon.EntityPredicate$Composite $$1 : this.victims) {
+            boolean $$2 = false;
+            for (net.minecraft.world.level.storage.loot.LootContext $$3 : $$0) {
+                if (!$$1.matches($$3)) continue;
+                $$2 = true;
                 break;
             }
-            if (bl) continue;
+            if ($$2) continue;
             return false;
         }
         return true;
     }
 
-    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext conditions) {
-        com.google.gson.JsonObject jsonObject = super.serializeToJson(conditions);
-        jsonObject.add("victims", net.minecraft.advancements.critereon.EntityPredicate$Composite.toJson((net.minecraft.advancements.critereon.EntityPredicate$Composite[])this.victims, (net.minecraft.advancements.critereon.SerializationContext)conditions));
-        return jsonObject;
+    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext $$0) {
+        com.google.gson.JsonObject $$1 = super.serializeToJson($$0);
+        $$1.add("victims", net.minecraft.advancements.critereon.EntityPredicate$Composite.toJson((net.minecraft.advancements.critereon.EntityPredicate$Composite[])this.victims, (net.minecraft.advancements.critereon.SerializationContext)$$0));
+        return $$1;
     }
 }
 