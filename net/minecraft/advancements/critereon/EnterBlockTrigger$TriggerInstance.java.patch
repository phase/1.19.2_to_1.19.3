--- net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance.java
+++ net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance.java
@@ -16,24 +16,24 @@
         this.state = $$2;
     }
 
-    public static net.minecraft.advancements.critereon.EnterBlockTrigger$TriggerInstance entersBlock(net.minecraft.world.level.block.Block block) {
-        return new net.minecraft.advancements.critereon.EnterBlockTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, block, net.minecraft.advancements.critereon.StatePropertiesPredicate.ANY);
+    public static net.minecraft.advancements.critereon.EnterBlockTrigger$TriggerInstance entersBlock(net.minecraft.world.level.block.Block $$0) {
+        return new net.minecraft.advancements.critereon.EnterBlockTrigger$TriggerInstance(net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, $$0, net.minecraft.advancements.critereon.StatePropertiesPredicate.ANY);
     }
 
-    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext conditions) {
-        com.google.gson.JsonObject jsonObject = super.serializeToJson(conditions);
+    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext $$0) {
+        com.google.gson.JsonObject $$1 = super.serializeToJson($$0);
         if (this.block != null) {
-            jsonObject.addProperty("block", net.minecraft.core.Registry.BLOCK.getKey((java.lang.Object)this.block).toString());
+            $$1.addProperty("block", net.minecraft.core.Registry.BLOCK.getKey((java.lang.Object)this.block).toString());
         }
-        jsonObject.add("state", this.state.serializeToJson());
-        return jsonObject;
+        $$1.add("state", this.state.serializeToJson());
+        return $$1;
     }
 
-    public boolean matches(net.minecraft.world.level.block.state.BlockState state) {
-        if (this.block != null && !state.is(this.block)) {
+    public boolean matches(net.minecraft.world.level.block.state.BlockState $$0) {
+        if (this.block != null && !$$0.is(this.block)) {
             return false;
         }
-        return this.state.matches(state);
+        return this.state.matches($$0);
     }
 }
 