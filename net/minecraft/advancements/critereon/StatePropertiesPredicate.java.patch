--- net/minecraft/advancements/critereon/StatePropertiesPredicate.java
+++ net/minecraft/advancements/critereon/StatePropertiesPredicate.java
@@ -8,59 +8,59 @@
     public static net.minecraft.advancements.critereon.StatePropertiesPredicate ANY;
     public java.util.List<net.minecraft.advancements.critereon.StatePropertiesPredicate$PropertyMatcher> properties;
 
-    public static net.minecraft.advancements.critereon.StatePropertiesPredicate$PropertyMatcher fromJson(java.lang.String name, com.google.gson.JsonElement element) {
-        if (element.isJsonPrimitive()) {
-            java.lang.String string = element.getAsString();
-            return new net.minecraft.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher(name, string);
+    public static net.minecraft.advancements.critereon.StatePropertiesPredicate$PropertyMatcher fromJson(java.lang.String $$0, com.google.gson.JsonElement $$1) {
+        if ($$1.isJsonPrimitive()) {
+            java.lang.String $$2 = $$1.getAsString();
+            return new net.minecraft.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher($$0, $$2);
         }
-        com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)element, (java.lang.String)"value");
-        java.lang.String string = jsonObject.has("min") ? net.minecraft.advancements.critereon.StatePropertiesPredicate.getStringOrNull((com.google.gson.JsonElement)jsonObject.get("min")) : null;
-        java.lang.String string2 = jsonObject.has("max") ? net.minecraft.advancements.critereon.StatePropertiesPredicate.getStringOrNull((com.google.gson.JsonElement)jsonObject.get("max")) : null;
-        return string != null && string.equals((java.lang.Object)string2) ? new net.minecraft.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher(name, string) : new net.minecraft.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher(name, string, string2);
+        com.google.gson.JsonObject $$3 = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$1, (java.lang.String)"value");
+        java.lang.String $$4 = $$3.has("min") ? net.minecraft.advancements.critereon.StatePropertiesPredicate.getStringOrNull((com.google.gson.JsonElement)$$3.get("min")) : null;
+        java.lang.String $$5 = $$3.has("max") ? net.minecraft.advancements.critereon.StatePropertiesPredicate.getStringOrNull((com.google.gson.JsonElement)$$3.get("max")) : null;
+        return $$4 != null && $$4.equals((java.lang.Object)$$5) ? new net.minecraft.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher($$0, $$4) : new net.minecraft.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher($$0, $$4, $$5);
     }
 
     @javax.annotation.Nullable
-    public static java.lang.String getStringOrNull(com.google.gson.JsonElement element) {
-        if (element.isJsonNull()) {
+    public static java.lang.String getStringOrNull(com.google.gson.JsonElement $$0) {
+        if ($$0.isJsonNull()) {
             return null;
         }
-        return element.getAsString();
+        return $$0.getAsString();
     }
 
     public net.minecraft.advancements.critereon.StatePropertiesPredicate(java.util.List<net.minecraft.advancements.critereon.StatePropertiesPredicate$PropertyMatcher> $$0) {
         this.properties = com.google.common.collect.ImmutableList.copyOf($$0);
     }
 
-    public <S extends net.minecraft.world.level.block.state.StateHolder<?, S>> boolean matches(net.minecraft.world.level.block.state.StateDefinition<?, S> properties, S targetProperty) {
-        for (net.minecraft.advancements.critereon.StatePropertiesPredicate$PropertyMatcher propertyMatcher : this.properties) {
-            if (propertyMatcher.match(properties, targetProperty)) continue;
+    public <S extends net.minecraft.world.level.block.state.StateHolder<?, S>> boolean matches(net.minecraft.world.level.block.state.StateDefinition<?, S> $$0, S $$1) {
+        for (net.minecraft.advancements.critereon.StatePropertiesPredicate$PropertyMatcher $$2 : this.properties) {
+            if ($$2.match($$0, $$1)) continue;
             return false;
         }
         return true;
     }
 
-    public boolean matches(net.minecraft.world.level.block.state.BlockState state) {
-        return this.matches(state.getBlock().getStateDefinition(), (net.minecraft.world.level.block.state.StateHolder)state);
+    public boolean matches(net.minecraft.world.level.block.state.BlockState $$0) {
+        return this.matches($$0.getBlock().getStateDefinition(), (net.minecraft.world.level.block.state.StateHolder)$$0);
     }
 
-    public boolean matches(net.minecraft.world.level.material.FluidState state) {
-        return this.matches(state.getType().getStateDefinition(), (net.minecraft.world.level.block.state.StateHolder)state);
+    public boolean matches(net.minecraft.world.level.material.FluidState $$0) {
+        return this.matches($$0.getType().getStateDefinition(), (net.minecraft.world.level.block.state.StateHolder)$$0);
     }
 
-    public void checkState(net.minecraft.world.level.block.state.StateDefinition<?, ?> properties, java.util.function.Consumer<java.lang.String> stringConsumer) {
-        this.properties.forEach($$2 -> $$2.checkState(properties, stringConsumer));
+    public void checkState(net.minecraft.world.level.block.state.StateDefinition<?, ?> $$0, java.util.function.Consumer<java.lang.String> $$1) {
+        this.properties.forEach($$2 -> $$2.checkState($$0, $$1));
     }
 
-    public static net.minecraft.advancements.critereon.StatePropertiesPredicate fromJson(@javax.annotation.Nullable com.google.gson.JsonElement element) {
-        if (element == null || element.isJsonNull()) {
+    public static net.minecraft.advancements.critereon.StatePropertiesPredicate fromJson(@javax.annotation.Nullable com.google.gson.JsonElement $$0) {
+        if ($$0 == null || $$0.isJsonNull()) {
             return ANY;
         }
-        com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)element, (java.lang.String)"properties");
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        for (java.util.Map$Entry entry : jsonObject.entrySet()) {
-            arrayList.add((java.lang.Object)net.minecraft.advancements.critereon.StatePropertiesPredicate.fromJson((java.lang.String)((java.lang.String)entry.getKey()), (com.google.gson.JsonElement)((com.google.gson.JsonElement)entry.getValue())));
+        com.google.gson.JsonObject $$1 = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$0, (java.lang.String)"properties");
+        java.util.ArrayList $$2 = com.google.common.collect.Lists.newArrayList();
+        for (java.util.Map$Entry $$3 : $$1.entrySet()) {
+            $$2.add((java.lang.Object)net.minecraft.advancements.critereon.StatePropertiesPredicate.fromJson((java.lang.String)((java.lang.String)$$3.getKey()), (com.google.gson.JsonElement)((com.google.gson.JsonElement)$$3.getValue())));
         }
-        return new net.minecraft.advancements.critereon.StatePropertiesPredicate((java.util.List)arrayList);
+        return new net.minecraft.advancements.critereon.StatePropertiesPredicate((java.util.List)$$2);
     }
 
     public com.google.gson.JsonElement serializeToJson() {