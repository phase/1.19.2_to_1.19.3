--- net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance.java
+++ net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance.java
@@ -15,26 +15,26 @@
         this.entity = $$2;
     }
 
-    public static net.minecraft.advancements.critereon.PlayerInteractTrigger$TriggerInstance itemUsedOnEntity(net.minecraft.advancements.critereon.EntityPredicate$Composite player, net.minecraft.advancements.critereon.ItemPredicate$Builder stack, net.minecraft.advancements.critereon.EntityPredicate$Composite entity) {
-        return new net.minecraft.advancements.critereon.PlayerInteractTrigger$TriggerInstance(player, stack.build(), entity);
+    public static net.minecraft.advancements.critereon.PlayerInteractTrigger$TriggerInstance itemUsedOnEntity(net.minecraft.advancements.critereon.EntityPredicate$Composite $$0, net.minecraft.advancements.critereon.ItemPredicate$Builder $$1, net.minecraft.advancements.critereon.EntityPredicate$Composite $$2) {
+        return new net.minecraft.advancements.critereon.PlayerInteractTrigger$TriggerInstance($$0, $$1.build(), $$2);
     }
 
     public static net.minecraft.advancements.critereon.PlayerInteractTrigger$TriggerInstance itemUsedOnEntity(net.minecraft.advancements.critereon.ItemPredicate$Builder $$0, net.minecraft.advancements.critereon.EntityPredicate$Composite $$1) {
         return net.minecraft.advancements.critereon.PlayerInteractTrigger$TriggerInstance.itemUsedOnEntity((net.minecraft.advancements.critereon.EntityPredicate$Composite)net.minecraft.advancements.critereon.EntityPredicate$Composite.ANY, (net.minecraft.advancements.critereon.ItemPredicate$Builder)$$0, (net.minecraft.advancements.critereon.EntityPredicate$Composite)$$1);
     }
 
-    public boolean matches(net.minecraft.world.item.ItemStack stack, net.minecraft.world.level.storage.loot.LootContext context) {
-        if (!this.item.matches(stack)) {
+    public boolean matches(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.level.storage.loot.LootContext $$1) {
+        if (!this.item.matches($$0)) {
             return false;
         }
-        return this.entity.matches(context);
+        return this.entity.matches($$1);
     }
 
-    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext conditions) {
-        com.google.gson.JsonObject jsonObject = super.serializeToJson(conditions);
-        jsonObject.add("item", this.item.serializeToJson());
-        jsonObject.add("entity", this.entity.toJson(conditions));
-        return jsonObject;
+    public com.google.gson.JsonObject serializeToJson(net.minecraft.advancements.critereon.SerializationContext $$0) {
+        com.google.gson.JsonObject $$1 = super.serializeToJson($$0);
+        $$1.add("item", this.item.serializeToJson());
+        $$1.add("entity", this.entity.toJson($$0));
+        return $$1;
     }
 }
 