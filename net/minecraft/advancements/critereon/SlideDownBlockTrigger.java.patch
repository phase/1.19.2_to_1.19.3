--- net/minecraft/advancements/critereon/SlideDownBlockTrigger.java
+++ net/minecraft/advancements/critereon/SlideDownBlockTrigger.java
@@ -15,28 +15,28 @@
         return ID;
     }
 
-    public net.minecraft.advancements.critereon.SlideDownBlockTrigger$TriggerInstance createInstance(com.google.gson.JsonObject json, net.minecraft.advancements.critereon.EntityPredicate$Composite entityPredicate, net.minecraft.advancements.critereon.DeserializationContext conditionsParser) {
-        net.minecraft.world.level.block.Block block = net.minecraft.advancements.critereon.SlideDownBlockTrigger.deserializeBlock((com.google.gson.JsonObject)json);
-        net.minecraft.advancements.critereon.StatePropertiesPredicate statePropertiesPredicate = net.minecraft.advancements.critereon.StatePropertiesPredicate.fromJson((com.google.gson.JsonElement)json.get("state"));
-        if (block != null) {
-            statePropertiesPredicate.checkState(block.getStateDefinition(), $$1 -> {
-                throw new com.google.gson.JsonSyntaxException("Block " + block + " has no property " + $$1);
+    public net.minecraft.advancements.critereon.SlideDownBlockTrigger$TriggerInstance createInstance(com.google.gson.JsonObject $$0, net.minecraft.advancements.critereon.EntityPredicate$Composite $$12, net.minecraft.advancements.critereon.DeserializationContext $$2) {
+        net.minecraft.world.level.block.Block $$3 = net.minecraft.advancements.critereon.SlideDownBlockTrigger.deserializeBlock((com.google.gson.JsonObject)$$0);
+        net.minecraft.advancements.critereon.StatePropertiesPredicate $$4 = net.minecraft.advancements.critereon.StatePropertiesPredicate.fromJson((com.google.gson.JsonElement)$$0.get("state"));
+        if ($$3 != null) {
+            $$4.checkState($$3.getStateDefinition(), $$1 -> {
+                throw new com.google.gson.JsonSyntaxException("Block " + $$3 + " has no property " + $$1);
             });
         }
-        return new net.minecraft.advancements.critereon.SlideDownBlockTrigger$TriggerInstance(entityPredicate, block, statePropertiesPredicate);
+        return new net.minecraft.advancements.critereon.SlideDownBlockTrigger$TriggerInstance($$12, $$3, $$4);
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.level.block.Block deserializeBlock(com.google.gson.JsonObject object) {
-        if (object.has("block")) {
-            net.minecraft.resources.ResourceLocation resourceLocation = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)object, (java.lang.String)"block"));
-            return (net.minecraft.world.level.block.Block)net.minecraft.core.Registry.BLOCK.getOptional(resourceLocation).orElseThrow(() -> new com.google.gson.JsonSyntaxException("Unknown block type '" + resourceLocation + "'"));
+    public static net.minecraft.world.level.block.Block deserializeBlock(com.google.gson.JsonObject $$0) {
+        if ($$0.has("block")) {
+            net.minecraft.resources.ResourceLocation $$1 = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"block"));
+            return (net.minecraft.world.level.block.Block)net.minecraft.core.Registry.BLOCK.getOptional($$1).orElseThrow(() -> new com.google.gson.JsonSyntaxException("Unknown block type '" + $$1 + "'"));
         }
         return null;
     }
 
-    public void trigger(net.minecraft.server.level.ServerPlayer player, net.minecraft.world.level.block.state.BlockState state) {
-        this.trigger(player, $$1 -> $$1.matches(state));
+    public void trigger(net.minecraft.server.level.ServerPlayer $$0, net.minecraft.world.level.block.state.BlockState $$12) {
+        this.trigger($$0, $$1 -> $$1.matches($$12));
     }
 
     public /* synthetic */ net.minecraft.advancements.critereon.AbstractCriterionTriggerInstance createInstance(com.google.gson.JsonObject jsonObject, net.minecraft.advancements.critereon.EntityPredicate$Composite composite, net.minecraft.advancements.critereon.DeserializationContext deserializationContext) {