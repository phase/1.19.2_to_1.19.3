--- net/minecraft/client/multiplayer/chat/ChatListener$1.java
+++ net/minecraft/client/multiplayer/chat/ChatListener$1.java
@@ -1,53 +1,0 @@
-/*
- * Decompiled with CFR 0.151.
- */
-package net.minecraft.client.multiplayer.chat;
-
-public class net.minecraft.client.multiplayer.chat.ChatListener$1
-implements net.minecraft.client.multiplayer.chat.ChatListener$Message
- {
-    public boolean removed;
-    public /* synthetic */ net.minecraft.network.chat.PlayerChatMessage val$message;
-    public /* synthetic */ net.minecraft.network.chat.ChatType$Bound val$boundChatType;
-    public /* synthetic */ net.minecraft.network.chat.Component val$decoratedMessage;
-    public /* synthetic */ net.minecraft.client.multiplayer.PlayerInfo val$senderPlayer;
-    public /* synthetic */ boolean val$onlyShowSecure;
-    public /* synthetic */ java.time.Instant val$received;
-    public /* synthetic */ net.minecraft.client.multiplayer.chat.ChatListener this$0;
-
-    public net.minecraft.client.multiplayer.chat.ChatListener$1() {
-        this.this$0 = $$0;
-        this.val$message = playerChatMessage;
-        this.val$boundChatType = bound;
-        this.val$decoratedMessage = component;
-        this.val$senderPlayer = playerInfo;
-        this.val$onlyShowSecure = bl;
-        this.val$received = instant;
-    }
-
-    public boolean accept() {
-        if (this.removed) {
-            byte[] $$0 = this.val$message.signedBody().hash().asBytes();
-            this.this$0.processPlayerChatHeader(this.val$message.signedHeader(), this.val$message.headerSignature(), $$0);
-            return false;
-        }
-        return this.this$0.processPlayerChatMessage(this.val$boundChatType, this.val$message, this.val$decoratedMessage, this.val$senderPlayer, this.val$onlyShowSecure, this.val$received);
-    }
-
-    public boolean removeIfSignatureMatches(net.minecraft.network.chat.MessageSignature $$0) {
-        if (this.val$message.headerSignature().equals((java.lang.Object)$$0)) {
-            this.removed = true;
-            return true;
-        }
-        return false;
-    }
-
-    public void remove() {
-        this.removed = true;
-    }
-
-    public boolean isVisible() {
-        return !this.removed;
-    }
-}
-