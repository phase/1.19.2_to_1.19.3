--- net/minecraft/client/renderer/debug/ChunkDebugRenderer.java
+++ net/minecraft/client/renderer/debug/ChunkDebugRenderer.java
@@ -18,13 +18,12 @@
         this.minecraft = $$0;
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, double camX, double camY, double camZ) {
-        net.minecraft.client.server.IntegratedServer integratedServer;
-        double d = net.minecraft.Util.getNanos();
-        if (d - this.lastUpdateTime > 3.0E9) {
-            this.lastUpdateTime = d;
-            integratedServer = this.minecraft.getSingleplayerServer();
-            this.data = integratedServer != null ? new net.minecraft.client.renderer.debug.ChunkDebugRenderer$ChunkData(this, integratedServer, camX, camZ) : null;
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, double $$2, double $$3, double $$4) {
+        double $$5 = net.minecraft.Util.getNanos();
+        if ($$5 - this.lastUpdateTime > 3.0E9) {
+            this.lastUpdateTime = $$5;
+            net.minecraft.client.server.IntegratedServer $$6 = this.minecraft.getSingleplayerServer();
+            this.data = $$6 != null ? new net.minecraft.client.renderer.debug.ChunkDebugRenderer$ChunkData(this, $$6, $$2, $$4) : null;
         }
         if (this.data != null) {
             com.mojang.blaze3d.systems.RenderSystem.enableBlend();
@@ -32,19 +31,19 @@
             com.mojang.blaze3d.systems.RenderSystem.lineWidth((float)2.0f);
             com.mojang.blaze3d.systems.RenderSystem.disableTexture();
             com.mojang.blaze3d.systems.RenderSystem.depthMask((boolean)false);
-            integratedServer = (java.util.Map)this.data.serverData.getNow(null);
-            double d2 = this.minecraft.gameRenderer.getMainCamera().getPosition().y * 0.85;
-            for (java.util.Map$Entry entry : this.data.clientData.entrySet()) {
-                net.minecraft.world.level.ChunkPos chunkPos = (net.minecraft.world.level.ChunkPos)entry.getKey();
-                java.lang.String string = (java.lang.String)entry.getValue();
-                if (integratedServer != null) {
-                    string = string + (java.lang.String)integratedServer.get((java.lang.Object)chunkPos);
+            java.util.Map $$7 = (java.util.Map)this.data.serverData.getNow(null);
+            double $$8 = this.minecraft.gameRenderer.getMainCamera().getPosition().y * 0.85;
+            for (java.util.Map$Entry $$9 : this.data.clientData.entrySet()) {
+                net.minecraft.world.level.ChunkPos $$10 = (net.minecraft.world.level.ChunkPos)$$9.getKey();
+                java.lang.String $$11 = (java.lang.String)$$9.getValue();
+                if ($$7 != null) {
+                    $$11 = $$11 + (java.lang.String)$$7.get((java.lang.Object)$$10);
                 }
-                java.lang.String[] stringArray = string.split("\n");
-                int n = 0;
-                for (java.lang.String string2 : stringArray) {
-                    net.minecraft.client.renderer.debug.DebugRenderer.renderFloatingText((java.lang.String)string2, (double)net.minecraft.core.SectionPos.sectionToBlockCoord((int)chunkPos.x, (int)8), (double)(d2 + (double)n), (double)net.minecraft.core.SectionPos.sectionToBlockCoord((int)chunkPos.z, (int)8), (int)-1, (float)0.15f);
-                    n -= 2;
+                java.lang.String[] $$12 = $$11.split("\n");
+                int $$13 = 0;
+                for (java.lang.String $$14 : $$12) {
+                    net.minecraft.client.renderer.debug.DebugRenderer.renderFloatingText((java.lang.String)$$14, (double)net.minecraft.core.SectionPos.sectionToBlockCoord((int)$$10.x, (int)8), (double)($$8 + (double)$$13), (double)net.minecraft.core.SectionPos.sectionToBlockCoord((int)$$10.z, (int)8), (int)-1, (float)0.15f);
+                    $$13 -= 2;
                 }
             }
             com.mojang.blaze3d.systems.RenderSystem.depthMask((boolean)true);