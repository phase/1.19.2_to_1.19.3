--- net/minecraft/client/renderer/debug/SolidFaceRenderer.java
+++ net/minecraft/client/renderer/debug/SolidFaceRenderer.java
@@ -12,92 +12,90 @@
         this.minecraft = $$0;
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, double camX, double camY, double camZ) {
-        net.minecraft.world.level.Level level = this.minecraft.player.level;
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, double $$2, double $$3, double $$4) {
+        net.minecraft.world.level.Level $$5 = this.minecraft.player.level;
         com.mojang.blaze3d.systems.RenderSystem.enableBlend();
         com.mojang.blaze3d.systems.RenderSystem.defaultBlendFunc();
         com.mojang.blaze3d.systems.RenderSystem.lineWidth((float)2.0f);
         com.mojang.blaze3d.systems.RenderSystem.disableTexture();
         com.mojang.blaze3d.systems.RenderSystem.depthMask((boolean)false);
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionColorShader);
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(camX, camY, camZ);
-        for (net.minecraft.core.BlockPos blockPos2 : net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)blockPos.offset(-6, -6, -6), (net.minecraft.core.BlockPos)blockPos.offset(6, 6, 6))) {
-            net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos2);
-            if (blockState.is(net.minecraft.world.level.block.Blocks.AIR)) continue;
-            net.minecraft.world.phys.shapes.VoxelShape voxelShape = blockState.getShape((net.minecraft.world.level.BlockGetter)level, blockPos2);
-            for (net.minecraft.world.phys.AABB aABB : voxelShape.toAabbs()) {
-                com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder;
-                com.mojang.blaze3d.vertex.Tesselator tesselator;
-                net.minecraft.world.phys.AABB aABB2 = aABB.move(blockPos2).inflate(0.002).move(-camX, -camY, -camZ);
-                double d = aABB2.minX;
-                double d2 = aABB2.minY;
-                double d3 = aABB2.minZ;
-                double d4 = aABB2.maxX;
-                double d5 = aABB2.maxY;
-                double d6 = aABB2.maxZ;
-                float f = 1.0f;
-                float f2 = 0.0f;
-                float f3 = 0.0f;
-                float f4 = 0.5f;
-                if (blockState.isFaceSturdy((net.minecraft.world.level.BlockGetter)level, blockPos2, net.minecraft.core.Direction.WEST)) {
-                    tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-                    bufferBuilder = tesselator.getBuilder();
-                    bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-                    bufferBuilder.vertex(d, d2, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d, d2, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d, d5, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d, d5, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    tesselator.end();
+        net.minecraft.core.BlockPos $$6 = new net.minecraft.core.BlockPos($$2, $$3, $$4);
+        for (net.minecraft.core.BlockPos $$7 : net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)$$6.offset(-6, -6, -6), (net.minecraft.core.BlockPos)$$6.offset(6, 6, 6))) {
+            net.minecraft.world.level.block.state.BlockState $$8 = $$5.getBlockState($$7);
+            if ($$8.is(net.minecraft.world.level.block.Blocks.AIR)) continue;
+            net.minecraft.world.phys.shapes.VoxelShape $$9 = $$8.getShape((net.minecraft.world.level.BlockGetter)$$5, $$7);
+            for (net.minecraft.world.phys.AABB $$10 : $$9.toAabbs()) {
+                net.minecraft.world.phys.AABB $$11 = $$10.move($$7).inflate(0.002).move(-$$2, -$$3, -$$4);
+                double $$12 = $$11.minX;
+                double $$13 = $$11.minY;
+                double $$14 = $$11.minZ;
+                double $$15 = $$11.maxX;
+                double $$16 = $$11.maxY;
+                double $$17 = $$11.maxZ;
+                float $$18 = 1.0f;
+                float $$19 = 0.0f;
+                float $$20 = 0.0f;
+                float $$21 = 0.5f;
+                if ($$8.isFaceSturdy((net.minecraft.world.level.BlockGetter)$$5, $$7, net.minecraft.core.Direction.WEST)) {
+                    com.mojang.blaze3d.vertex.Tesselator $$22 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+                    com.mojang.blaze3d.vertex.BufferBuilder $$23 = $$22.getBuilder();
+                    $$23.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+                    $$23.vertex($$12, $$13, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$23.vertex($$12, $$13, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$23.vertex($$12, $$16, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$23.vertex($$12, $$16, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$22.end();
                 }
-                if (blockState.isFaceSturdy((net.minecraft.world.level.BlockGetter)level, blockPos2, net.minecraft.core.Direction.SOUTH)) {
-                    tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-                    bufferBuilder = tesselator.getBuilder();
-                    bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-                    bufferBuilder.vertex(d, d5, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d, d2, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d5, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d2, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    tesselator.end();
+                if ($$8.isFaceSturdy((net.minecraft.world.level.BlockGetter)$$5, $$7, net.minecraft.core.Direction.SOUTH)) {
+                    com.mojang.blaze3d.vertex.Tesselator $$24 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+                    com.mojang.blaze3d.vertex.BufferBuilder $$25 = $$24.getBuilder();
+                    $$25.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+                    $$25.vertex($$12, $$16, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$25.vertex($$12, $$13, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$25.vertex($$15, $$16, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$25.vertex($$15, $$13, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$24.end();
                 }
-                if (blockState.isFaceSturdy((net.minecraft.world.level.BlockGetter)level, blockPos2, net.minecraft.core.Direction.EAST)) {
-                    tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-                    bufferBuilder = tesselator.getBuilder();
-                    bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-                    bufferBuilder.vertex(d4, d2, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d2, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d5, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d5, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    tesselator.end();
+                if ($$8.isFaceSturdy((net.minecraft.world.level.BlockGetter)$$5, $$7, net.minecraft.core.Direction.EAST)) {
+                    com.mojang.blaze3d.vertex.Tesselator $$26 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+                    com.mojang.blaze3d.vertex.BufferBuilder $$27 = $$26.getBuilder();
+                    $$27.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+                    $$27.vertex($$15, $$13, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$27.vertex($$15, $$13, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$27.vertex($$15, $$16, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$27.vertex($$15, $$16, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$26.end();
                 }
-                if (blockState.isFaceSturdy((net.minecraft.world.level.BlockGetter)level, blockPos2, net.minecraft.core.Direction.NORTH)) {
-                    tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-                    bufferBuilder = tesselator.getBuilder();
-                    bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-                    bufferBuilder.vertex(d4, d5, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d2, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d, d5, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d, d2, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    tesselator.end();
+                if ($$8.isFaceSturdy((net.minecraft.world.level.BlockGetter)$$5, $$7, net.minecraft.core.Direction.NORTH)) {
+                    com.mojang.blaze3d.vertex.Tesselator $$28 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+                    com.mojang.blaze3d.vertex.BufferBuilder $$29 = $$28.getBuilder();
+                    $$29.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+                    $$29.vertex($$15, $$16, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$29.vertex($$15, $$13, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$29.vertex($$12, $$16, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$29.vertex($$12, $$13, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$28.end();
                 }
-                if (blockState.isFaceSturdy((net.minecraft.world.level.BlockGetter)level, blockPos2, net.minecraft.core.Direction.DOWN)) {
-                    tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-                    bufferBuilder = tesselator.getBuilder();
-                    bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-                    bufferBuilder.vertex(d, d2, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d2, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d, d2, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    bufferBuilder.vertex(d4, d2, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                    tesselator.end();
+                if ($$8.isFaceSturdy((net.minecraft.world.level.BlockGetter)$$5, $$7, net.minecraft.core.Direction.DOWN)) {
+                    com.mojang.blaze3d.vertex.Tesselator $$30 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+                    com.mojang.blaze3d.vertex.BufferBuilder $$31 = $$30.getBuilder();
+                    $$31.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+                    $$31.vertex($$12, $$13, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$31.vertex($$15, $$13, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$31.vertex($$12, $$13, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$31.vertex($$15, $$13, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                    $$30.end();
                 }
-                if (!blockState.isFaceSturdy((net.minecraft.world.level.BlockGetter)level, blockPos2, net.minecraft.core.Direction.UP)) continue;
-                tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-                bufferBuilder = tesselator.getBuilder();
-                bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-                bufferBuilder.vertex(d, d5, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                bufferBuilder.vertex(d, d5, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                bufferBuilder.vertex(d4, d5, d3).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                bufferBuilder.vertex(d4, d5, d6).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
-                tesselator.end();
+                if (!$$8.isFaceSturdy((net.minecraft.world.level.BlockGetter)$$5, $$7, net.minecraft.core.Direction.UP)) continue;
+                com.mojang.blaze3d.vertex.Tesselator $$32 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+                com.mojang.blaze3d.vertex.BufferBuilder $$33 = $$32.getBuilder();
+                $$33.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+                $$33.vertex($$12, $$16, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                $$33.vertex($$12, $$16, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                $$33.vertex($$15, $$16, $$14).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                $$33.vertex($$15, $$16, $$17).color(1.0f, 0.0f, 0.0f, 0.5f).endVertex();
+                $$32.end();
             }
         }
         com.mojang.blaze3d.systems.RenderSystem.depthMask((boolean)true);