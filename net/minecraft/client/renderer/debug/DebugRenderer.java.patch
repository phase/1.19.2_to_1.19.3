--- net/minecraft/client/renderer/debug/DebugRenderer.java
+++ net/minecraft/client/renderer/debug/DebugRenderer.java
@@ -72,31 +72,31 @@
         return this.renderChunkborder;
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource$BufferSource buffer, double camX, double camY, double camZ) {
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource$BufferSource $$1, double $$2, double $$3, double $$4) {
         if (this.renderChunkborder && !net.minecraft.client.Minecraft.getInstance().showOnlyReducedInfo()) {
-            this.chunkBorderRenderer.render(matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, camX, camY, camZ);
+            this.chunkBorderRenderer.render($$0, (net.minecraft.client.renderer.MultiBufferSource)$$1, $$2, $$3, $$4);
         }
-        this.gameTestDebugRenderer.render(matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, camX, camY, camZ);
+        this.gameTestDebugRenderer.render($$0, (net.minecraft.client.renderer.MultiBufferSource)$$1, $$2, $$3, $$4);
     }
 
-    public static java.util.Optional<net.minecraft.world.entity.Entity> getTargetedEntity(@javax.annotation.Nullable net.minecraft.world.entity.Entity entity, int distance) {
-        int n;
-        java.util.function.Predicate predicate;
-        net.minecraft.world.phys.AABB aABB;
-        net.minecraft.world.phys.Vec3 vec3;
-        net.minecraft.world.phys.Vec3 vec32;
-        if (entity == null) {
+    public static java.util.Optional<net.minecraft.world.entity.Entity> getTargetedEntity(@javax.annotation.Nullable net.minecraft.world.entity.Entity $$02, int $$1) {
+        int $$6;
+        java.util.function.Predicate $$7;
+        net.minecraft.world.phys.AABB $$5;
+        net.minecraft.world.phys.Vec3 $$3;
+        net.minecraft.world.phys.Vec3 $$4;
+        if ($$02 == null) {
             return java.util.Optional.empty();
         }
-        net.minecraft.world.phys.Vec3 vec33 = entity.getEyePosition();
-        net.minecraft.world.phys.EntityHitResult entityHitResult = net.minecraft.world.entity.projectile.ProjectileUtil.getEntityHitResult((net.minecraft.world.entity.Entity)entity, (net.minecraft.world.phys.Vec3)vec33, (net.minecraft.world.phys.Vec3)(vec32 = vec33.add(vec3 = entity.getViewVector(1.0f).scale((double)distance))), (net.minecraft.world.phys.AABB)(aABB = entity.getBoundingBox().expandTowards(vec3).inflate(1.0)), (java.util.function.Predicate)(predicate = $$0 -> !$$0.isSpectator() && $$0.isPickable()), (double)(n = distance * distance));
-        if (entityHitResult == null) {
+        net.minecraft.world.phys.Vec3 $$2 = $$02.getEyePosition();
+        net.minecraft.world.phys.EntityHitResult $$8 = net.minecraft.world.entity.projectile.ProjectileUtil.getEntityHitResult((net.minecraft.world.entity.Entity)$$02, (net.minecraft.world.phys.Vec3)$$2, (net.minecraft.world.phys.Vec3)($$4 = $$2.add($$3 = $$02.getViewVector(1.0f).scale((double)$$1))), (net.minecraft.world.phys.AABB)($$5 = $$02.getBoundingBox().expandTowards($$3).inflate(1.0)), (java.util.function.Predicate)($$7 = $$0 -> !$$0.isSpectator() && $$0.isPickable()), (double)($$6 = $$1 * $$1));
+        if ($$8 == null) {
             return java.util.Optional.empty();
         }
-        if (vec33.distanceToSqr(entityHitResult.getLocation()) > (double)n) {
+        if ($$2.distanceToSqr($$8.getLocation()) > (double)$$6) {
             return java.util.Optional.empty();
         }
-        return java.util.Optional.of((java.lang.Object)entityHitResult.getEntity());
+        return java.util.Optional.of((java.lang.Object)$$8.getEntity());
     }
 
     public static void renderFilledBox(net.minecraft.core.BlockPos $$0, net.minecraft.core.BlockPos $$1, float $$2, float $$3, float $$4, float $$5) {
@@ -144,37 +144,37 @@
         net.minecraft.client.renderer.debug.DebugRenderer.renderFloatingText((java.lang.String)$$0, (double)$$1, (double)$$2, (double)$$3, (int)$$4, (float)$$5, (boolean)true, (float)0.0f, (boolean)false);
     }
 
-    public static void renderFloatingText(java.lang.String text, double d, double d2, double d3, int color, float f, boolean bl, float f2, boolean bl2) {
-        net.minecraft.client.Minecraft minecraft = net.minecraft.client.Minecraft.getInstance();
-        net.minecraft.client.Camera camera = minecraft.gameRenderer.getMainCamera();
-        if (!camera.isInitialized() || minecraft.getEntityRenderDispatcher().options == null) {
+    public static void renderFloatingText(java.lang.String $$0, double $$1, double $$2, double $$3, int $$4, float $$5, boolean $$6, float $$7, boolean $$8) {
+        net.minecraft.client.Minecraft $$9 = net.minecraft.client.Minecraft.getInstance();
+        net.minecraft.client.Camera $$10 = $$9.gameRenderer.getMainCamera();
+        if (!$$10.isInitialized() || $$9.getEntityRenderDispatcher().options == null) {
             return;
         }
-        net.minecraft.client.gui.Font font = minecraft.font;
-        double d4 = camera.getPosition().x;
-        double d5 = camera.getPosition().y;
-        double d6 = camera.getPosition().z;
-        com.mojang.blaze3d.vertex.PoseStack poseStack = com.mojang.blaze3d.systems.RenderSystem.getModelViewStack();
-        poseStack.pushPose();
-        poseStack.translate((double)((float)(d - d4)), (double)((float)(d2 - d5) + 0.07f), (double)((float)(d3 - d6)));
-        poseStack.mulPoseMatrix(new com.mojang.math.Matrix4f(camera.rotation()));
-        poseStack.scale(f, -f, f);
+        net.minecraft.client.gui.Font $$11 = $$9.font;
+        double $$12 = $$10.getPosition().x;
+        double $$13 = $$10.getPosition().y;
+        double $$14 = $$10.getPosition().z;
+        com.mojang.blaze3d.vertex.PoseStack $$15 = com.mojang.blaze3d.systems.RenderSystem.getModelViewStack();
+        $$15.pushPose();
+        $$15.translate((double)((float)($$1 - $$12)), (double)((float)($$2 - $$13) + 0.07f), (double)((float)($$3 - $$14)));
+        $$15.mulPoseMatrix(new com.mojang.math.Matrix4f($$10.rotation()));
+        $$15.scale($$5, -$$5, $$5);
         com.mojang.blaze3d.systems.RenderSystem.enableTexture();
-        if (bl2) {
+        if ($$8) {
             com.mojang.blaze3d.systems.RenderSystem.disableDepthTest();
         } else {
             com.mojang.blaze3d.systems.RenderSystem.enableDepthTest();
         }
         com.mojang.blaze3d.systems.RenderSystem.depthMask((boolean)true);
-        poseStack.scale(-1.0f, 1.0f, 1.0f);
+        $$15.scale(-1.0f, 1.0f, 1.0f);
         com.mojang.blaze3d.systems.RenderSystem.applyModelViewMatrix();
-        float f3 = bl ? (float)(-font.width(text)) / 2.0f : 0.0f;
-        net.minecraft.client.renderer.MultiBufferSource$BufferSource bufferSource = net.minecraft.client.renderer.MultiBufferSource.immediate((com.mojang.blaze3d.vertex.BufferBuilder)com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder());
-        font.drawInBatch(text, f3 -= f2 / f, 0.0f, color, false, com.mojang.math.Transformation.identity().getMatrix(), (net.minecraft.client.renderer.MultiBufferSource)bufferSource, bl2, 0, 0xF000F0);
-        bufferSource.endBatch();
+        float $$16 = $$6 ? (float)(-$$11.width($$0)) / 2.0f : 0.0f;
+        net.minecraft.client.renderer.MultiBufferSource$BufferSource $$17 = net.minecraft.client.renderer.MultiBufferSource.immediate((com.mojang.blaze3d.vertex.BufferBuilder)com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder());
+        $$11.drawInBatch($$0, $$16 -= $$7 / $$5, 0.0f, $$4, false, com.mojang.math.Transformation.identity().getMatrix(), (net.minecraft.client.renderer.MultiBufferSource)$$17, $$8, 0, 0xF000F0);
+        $$17.endBatch();
         com.mojang.blaze3d.systems.RenderSystem.setShaderColor((float)1.0f, (float)1.0f, (float)1.0f, (float)1.0f);
         com.mojang.blaze3d.systems.RenderSystem.enableDepthTest();
-        poseStack.popPose();
+        $$15.popPose();
         com.mojang.blaze3d.systems.RenderSystem.applyModelViewMatrix();
     }
 }