--- net/minecraft/client/renderer/debug/WorldGenAttemptRenderer.java
+++ net/minecraft/client/renderer/debug/WorldGenAttemptRenderer.java
@@ -22,30 +22,30 @@
         this.blues = com.google.common.collect.Lists.newArrayList();
     }
 
-    public void addPos(net.minecraft.core.BlockPos pos, float size, float red, float green, float blue, float alpha) {
-        this.toRender.add((java.lang.Object)pos);
-        this.scales.add((java.lang.Object)java.lang.Float.valueOf((float)size));
-        this.alphas.add((java.lang.Object)java.lang.Float.valueOf((float)alpha));
-        this.reds.add((java.lang.Object)java.lang.Float.valueOf((float)red));
-        this.greens.add((java.lang.Object)java.lang.Float.valueOf((float)green));
-        this.blues.add((java.lang.Object)java.lang.Float.valueOf((float)blue));
+    public void addPos(net.minecraft.core.BlockPos $$0, float $$1, float $$2, float $$3, float $$4, float $$5) {
+        this.toRender.add((java.lang.Object)$$0);
+        this.scales.add((java.lang.Object)java.lang.Float.valueOf((float)$$1));
+        this.alphas.add((java.lang.Object)java.lang.Float.valueOf((float)$$5));
+        this.reds.add((java.lang.Object)java.lang.Float.valueOf((float)$$2));
+        this.greens.add((java.lang.Object)java.lang.Float.valueOf((float)$$3));
+        this.blues.add((java.lang.Object)java.lang.Float.valueOf((float)$$4));
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, double camX, double camY, double camZ) {
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, double $$2, double $$3, double $$4) {
         com.mojang.blaze3d.systems.RenderSystem.enableBlend();
         com.mojang.blaze3d.systems.RenderSystem.defaultBlendFunc();
         com.mojang.blaze3d.systems.RenderSystem.disableTexture();
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionColorShader);
-        com.mojang.blaze3d.vertex.Tesselator tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = tesselator.getBuilder();
-        bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-        for (int i = 0; i < this.toRender.size(); ++i) {
-            net.minecraft.core.BlockPos blockPos = (net.minecraft.core.BlockPos)this.toRender.get(i);
-            java.lang.Float f = (java.lang.Float)this.scales.get(i);
-            float f2 = f.floatValue() / 2.0f;
-            net.minecraft.client.renderer.LevelRenderer.addChainedFilledBoxVertices((com.mojang.blaze3d.vertex.BufferBuilder)bufferBuilder, (double)((double)((float)blockPos.getX() + 0.5f - f2) - camX), (double)((double)((float)blockPos.getY() + 0.5f - f2) - camY), (double)((double)((float)blockPos.getZ() + 0.5f - f2) - camZ), (double)((double)((float)blockPos.getX() + 0.5f + f2) - camX), (double)((double)((float)blockPos.getY() + 0.5f + f2) - camY), (double)((double)((float)blockPos.getZ() + 0.5f + f2) - camZ), (float)((java.lang.Float)this.reds.get(i)).floatValue(), (float)((java.lang.Float)this.greens.get(i)).floatValue(), (float)((java.lang.Float)this.blues.get(i)).floatValue(), (float)((java.lang.Float)this.alphas.get(i)).floatValue());
+        com.mojang.blaze3d.vertex.Tesselator $$5 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+        com.mojang.blaze3d.vertex.BufferBuilder $$6 = $$5.getBuilder();
+        $$6.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+        for (int $$7 = 0; $$7 < this.toRender.size(); ++$$7) {
+            net.minecraft.core.BlockPos $$8 = (net.minecraft.core.BlockPos)this.toRender.get($$7);
+            java.lang.Float $$9 = (java.lang.Float)this.scales.get($$7);
+            float $$10 = $$9.floatValue() / 2.0f;
+            net.minecraft.client.renderer.LevelRenderer.addChainedFilledBoxVertices((com.mojang.blaze3d.vertex.BufferBuilder)$$6, (double)((double)((float)$$8.getX() + 0.5f - $$10) - $$2), (double)((double)((float)$$8.getY() + 0.5f - $$10) - $$3), (double)((double)((float)$$8.getZ() + 0.5f - $$10) - $$4), (double)((double)((float)$$8.getX() + 0.5f + $$10) - $$2), (double)((double)((float)$$8.getY() + 0.5f + $$10) - $$3), (double)((double)((float)$$8.getZ() + 0.5f + $$10) - $$4), (float)((java.lang.Float)this.reds.get($$7)).floatValue(), (float)((java.lang.Float)this.greens.get($$7)).floatValue(), (float)((java.lang.Float)this.blues.get($$7)).floatValue(), (float)((java.lang.Float)this.alphas.get($$7)).floatValue());
         }
-        tesselator.end();
+        $$5.end();
         com.mojang.blaze3d.systems.RenderSystem.enableTexture();
     }
 }