--- net/minecraft/client/renderer/debug/HeightMapRenderer.java
+++ net/minecraft/client/renderer/debug/HeightMapRenderer.java
@@ -14,35 +14,35 @@
         this.minecraft = $$0;
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, double camX, double camY, double camZ) {
-        net.minecraft.client.multiplayer.ClientLevel clientLevel = this.minecraft.level;
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, double $$2, double $$3, double $$4) {
+        net.minecraft.client.multiplayer.ClientLevel $$5 = this.minecraft.level;
         com.mojang.blaze3d.systems.RenderSystem.disableBlend();
         com.mojang.blaze3d.systems.RenderSystem.disableTexture();
         com.mojang.blaze3d.systems.RenderSystem.enableDepthTest();
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionColorShader);
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(camX, 0.0, camZ);
-        com.mojang.blaze3d.vertex.Tesselator tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = tesselator.getBuilder();
-        bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-        for (int i = -2; i <= 2; ++i) {
-            for (int j = -2; j <= 2; ++j) {
-                net.minecraft.world.level.chunk.ChunkAccess chunkAccess = clientLevel.getChunk(blockPos.offset(i * 16, 0, j * 16));
-                for (java.util.Map$Entry entry : chunkAccess.getHeightmaps()) {
-                    net.minecraft.world.level.levelgen.Heightmap$Types types = (net.minecraft.world.level.levelgen.Heightmap$Types)entry.getKey();
-                    net.minecraft.world.level.ChunkPos chunkPos = chunkAccess.getPos();
-                    com.mojang.math.Vector3f vector3f = this.getColor(types);
-                    for (int k = 0; k < 16; ++k) {
-                        for (int i2 = 0; i2 < 16; ++i2) {
-                            int n = net.minecraft.core.SectionPos.sectionToBlockCoord((int)chunkPos.x, (int)k);
-                            int n2 = net.minecraft.core.SectionPos.sectionToBlockCoord((int)chunkPos.z, (int)i2);
-                            float f = (float)((double)((float)clientLevel.getHeight(types, n, n2) + (float)types.ordinal() * 0.09375f) - camY);
-                            net.minecraft.client.renderer.LevelRenderer.addChainedFilledBoxVertices((com.mojang.blaze3d.vertex.BufferBuilder)bufferBuilder, (double)((double)((float)n + 0.25f) - camX), (double)f, (double)((double)((float)n2 + 0.25f) - camZ), (double)((double)((float)n + 0.75f) - camX), (double)(f + 0.09375f), (double)((double)((float)n2 + 0.75f) - camZ), (float)vector3f.x(), (float)vector3f.y(), (float)vector3f.z(), (float)1.0f);
+        net.minecraft.core.BlockPos $$6 = new net.minecraft.core.BlockPos($$2, 0.0, $$4);
+        com.mojang.blaze3d.vertex.Tesselator $$7 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+        com.mojang.blaze3d.vertex.BufferBuilder $$8 = $$7.getBuilder();
+        $$8.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.TRIANGLE_STRIP, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+        for (int $$9 = -2; $$9 <= 2; ++$$9) {
+            for (int $$10 = -2; $$10 <= 2; ++$$10) {
+                net.minecraft.world.level.chunk.ChunkAccess $$11 = $$5.getChunk($$6.offset($$9 * 16, 0, $$10 * 16));
+                for (java.util.Map$Entry $$12 : $$11.getHeightmaps()) {
+                    net.minecraft.world.level.levelgen.Heightmap$Types $$13 = (net.minecraft.world.level.levelgen.Heightmap$Types)$$12.getKey();
+                    net.minecraft.world.level.ChunkPos $$14 = $$11.getPos();
+                    com.mojang.math.Vector3f $$15 = this.getColor($$13);
+                    for (int $$16 = 0; $$16 < 16; ++$$16) {
+                        for (int $$17 = 0; $$17 < 16; ++$$17) {
+                            int $$18 = net.minecraft.core.SectionPos.sectionToBlockCoord((int)$$14.x, (int)$$16);
+                            int $$19 = net.minecraft.core.SectionPos.sectionToBlockCoord((int)$$14.z, (int)$$17);
+                            float $$20 = (float)((double)((float)$$5.getHeight($$13, $$18, $$19) + (float)$$13.ordinal() * 0.09375f) - $$3);
+                            net.minecraft.client.renderer.LevelRenderer.addChainedFilledBoxVertices((com.mojang.blaze3d.vertex.BufferBuilder)$$8, (double)((double)((float)$$18 + 0.25f) - $$2), (double)$$20, (double)((double)((float)$$19 + 0.25f) - $$4), (double)((double)((float)$$18 + 0.75f) - $$2), (double)($$20 + 0.09375f), (double)((double)((float)$$19 + 0.75f) - $$4), (float)$$15.x(), (float)$$15.y(), (float)$$15.z(), (float)1.0f);
                         }
                     }
                 }
             }
         }
-        tesselator.end();
+        $$7.end();
         com.mojang.blaze3d.systems.RenderSystem.enableTexture();
     }
 