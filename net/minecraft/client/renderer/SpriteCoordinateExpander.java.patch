--- net/minecraft/client/renderer/SpriteCoordinateExpander.java
+++ net/minecraft/client/renderer/SpriteCoordinateExpander.java
@@ -14,28 +14,28 @@
         this.sprite = $$1;
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer vertex(double x, double y, double z) {
-        return this.delegate.vertex(x, y, z);
+    public com.mojang.blaze3d.vertex.VertexConsumer vertex(double $$0, double $$1, double $$2) {
+        return this.delegate.vertex($$0, $$1, $$2);
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer color(int red, int green, int blue, int alpha) {
-        return this.delegate.color(red, green, blue, alpha);
+    public com.mojang.blaze3d.vertex.VertexConsumer color(int $$0, int $$1, int $$2, int $$3) {
+        return this.delegate.color($$0, $$1, $$2, $$3);
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer uv(float u, float v) {
-        return this.delegate.uv(this.sprite.getU((double)(u * 16.0f)), this.sprite.getV((double)(v * 16.0f)));
+    public com.mojang.blaze3d.vertex.VertexConsumer uv(float $$0, float $$1) {
+        return this.delegate.uv(this.sprite.getU((double)($$0 * 16.0f)), this.sprite.getV((double)($$1 * 16.0f)));
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer overlayCoords(int u, int v) {
-        return this.delegate.overlayCoords(u, v);
+    public com.mojang.blaze3d.vertex.VertexConsumer overlayCoords(int $$0, int $$1) {
+        return this.delegate.overlayCoords($$0, $$1);
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer uv2(int u, int v) {
-        return this.delegate.uv2(u, v);
+    public com.mojang.blaze3d.vertex.VertexConsumer uv2(int $$0, int $$1) {
+        return this.delegate.uv2($$0, $$1);
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer normal(float x, float y, float z) {
-        return this.delegate.normal(x, y, z);
+    public com.mojang.blaze3d.vertex.VertexConsumer normal(float $$0, float $$1, float $$2) {
+        return this.delegate.normal($$0, $$1, $$2);
     }
 
     public void endVertex() {
@@ -50,8 +50,8 @@
         this.delegate.unsetDefaultColor();
     }
 
-    public void vertex(float x, float y, float z, float red, float green, float blue, float alpha, float texU, float texV, int overlayUV, int lightmapUV, float normalX, float normalY, float normalZ) {
-        this.delegate.vertex(x, y, z, red, green, blue, alpha, this.sprite.getU((double)(texU * 16.0f)), this.sprite.getV((double)(texV * 16.0f)), overlayUV, lightmapUV, normalX, normalY, normalZ);
+    public void vertex(float $$0, float $$1, float $$2, float $$3, float $$4, float $$5, float $$6, float $$7, float $$8, int $$9, int $$10, float $$11, float $$12, float $$13) {
+        this.delegate.vertex($$0, $$1, $$2, $$3, $$4, $$5, $$6, this.sprite.getU((double)($$7 * 16.0f)), this.sprite.getV((double)($$8 * 16.0f)), $$9, $$10, $$11, $$12, $$13);
     }
 }
 