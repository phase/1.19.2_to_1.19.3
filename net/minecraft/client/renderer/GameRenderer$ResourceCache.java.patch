--- net/minecraft/client/renderer/GameRenderer$ResourceCache.java
+++ net/minecraft/client/renderer/GameRenderer$ResourceCache.java
@@ -1,0 +1,46 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.client.renderer;
+
+public class net.minecraft.client.renderer.GameRenderer$ResourceCache
+extends java.lang.Record
+implements net.minecraft.server.packs.resources.ResourceProvider
+ {
+    public net.minecraft.server.packs.resources.ResourceProvider original;
+    public java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.server.packs.resources.Resource> cache;
+
+    public net.minecraft.client.renderer.GameRenderer$ResourceCache(net.minecraft.server.packs.resources.ResourceProvider $$0, java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.server.packs.resources.Resource> $$1) {
+        this.original = $$0;
+        this.cache = $$1;
+    }
+
+    public java.util.Optional<net.minecraft.server.packs.resources.Resource> getResource(net.minecraft.resources.ResourceLocation $$0) {
+        net.minecraft.server.packs.resources.Resource $$1 = (net.minecraft.server.packs.resources.Resource)this.cache.get((java.lang.Object)$$0);
+        if ($$1 != null) {
+            return java.util.Optional.of((java.lang.Object)$$1);
+        }
+        return this.original.getResource($$0);
+    }
+
+    public java.lang.String toString() {
+        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.client.renderer.GameRenderer$ResourceCache.class, "original;cache", "original", "cache"}, this);
+    }
+
+    public int hashCode() {
+        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.client.renderer.GameRenderer$ResourceCache.class, "original;cache", "original", "cache"}, this);
+    }
+
+    public boolean equals(java.lang.Object $$0) {
+        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.client.renderer.GameRenderer$ResourceCache.class, "original;cache", "original", "cache"}, this, $$0);
+    }
+
+    public net.minecraft.server.packs.resources.ResourceProvider original() {
+        return this.original;
+    }
+
+    public java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.server.packs.resources.Resource> cache() {
+        return this.cache;
+    }
+}
+