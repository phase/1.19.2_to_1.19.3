--- net/minecraft/client/renderer/ItemInHandRenderer.java
+++ net/minecraft/client/renderer/ItemInHandRenderer.java
@@ -95,181 +95,178 @@
         this.itemRenderer = $$2;
     }
 
-    public void renderItem(net.minecraft.world.entity.LivingEntity livingEntity, net.minecraft.world.item.ItemStack itemStack, net.minecraft.client.renderer.block.model.ItemTransforms$TransformType transformType, boolean leftHand, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight) {
-        if (itemStack.isEmpty()) {
+    public void renderItem(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.item.ItemStack $$1, net.minecraft.client.renderer.block.model.ItemTransforms$TransformType $$2, boolean $$3, com.mojang.blaze3d.vertex.PoseStack $$4, net.minecraft.client.renderer.MultiBufferSource $$5, int $$6) {
+        if ($$1.isEmpty()) {
             return;
         }
-        this.itemRenderer.renderStatic(livingEntity, itemStack, transformType, leftHand, matrixStack, buffer, livingEntity.level, combinedLight, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY, livingEntity.getId() + transformType.ordinal());
+        this.itemRenderer.renderStatic($$0, $$1, $$2, $$3, $$4, $$5, $$0.level, $$6, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY, $$0.getId() + $$2.ordinal());
     }
 
-    public float calculateMapTilt(float pitch) {
-        float f = 1.0f - pitch / 45.0f + 0.1f;
-        f = net.minecraft.util.Mth.clamp((float)f, (float)0.0f, (float)1.0f);
-        f = -net.minecraft.util.Mth.cos((float)(f * (float)java.lang.Math.PI)) * 0.5f + 0.5f;
-        return f;
+    public float calculateMapTilt(float $$0) {
+        float $$1 = 1.0f - $$0 / 45.0f + 0.1f;
+        $$1 = net.minecraft.util.Mth.clamp((float)$$1, (float)0.0f, (float)1.0f);
+        $$1 = -net.minecraft.util.Mth.cos((float)($$1 * (float)java.lang.Math.PI)) * 0.5f + 0.5f;
+        return $$1;
     }
 
-    public void renderMapHand(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, net.minecraft.world.entity.HumanoidArm side) {
+    public void renderMapHand(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, net.minecraft.world.entity.HumanoidArm $$3) {
         com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)this.minecraft.player.getSkinTextureLocation());
-        net.minecraft.client.renderer.entity.player.PlayerRenderer playerRenderer = (net.minecraft.client.renderer.entity.player.PlayerRenderer)this.entityRenderDispatcher.getRenderer((net.minecraft.world.entity.Entity)this.minecraft.player);
-        matrixStack.pushPose();
-        float f = side == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1.0f : -1.0f;
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(92.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(45.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(f * -41.0f));
-        matrixStack.translate((double)(f * 0.3f), (double)-1.1f, (double)0.45f);
-        if (side == net.minecraft.world.entity.HumanoidArm.RIGHT) {
-            playerRenderer.renderRightHand(matrixStack, buffer, combinedLight, (net.minecraft.client.player.AbstractClientPlayer)this.minecraft.player);
+        net.minecraft.client.renderer.entity.player.PlayerRenderer $$4 = (net.minecraft.client.renderer.entity.player.PlayerRenderer)this.entityRenderDispatcher.getRenderer((net.minecraft.world.entity.Entity)this.minecraft.player);
+        $$0.pushPose();
+        float $$5 = $$3 == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1.0f : -1.0f;
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(92.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(45.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees($$5 * -41.0f));
+        $$0.translate((double)($$5 * 0.3f), (double)-1.1f, (double)0.45f);
+        if ($$3 == net.minecraft.world.entity.HumanoidArm.RIGHT) {
+            $$4.renderRightHand($$0, $$1, $$2, (net.minecraft.client.player.AbstractClientPlayer)this.minecraft.player);
         } else {
-            playerRenderer.renderLeftHand(matrixStack, buffer, combinedLight, (net.minecraft.client.player.AbstractClientPlayer)this.minecraft.player);
+            $$4.renderLeftHand($$0, $$1, $$2, (net.minecraft.client.player.AbstractClientPlayer)this.minecraft.player);
         }
-        matrixStack.popPose();
+        $$0.popPose();
     }
 
-    public void renderOneHandedMap(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, float equippedProgress, net.minecraft.world.entity.HumanoidArm hand, float swingProgress, net.minecraft.world.item.ItemStack stack) {
-        float f = hand == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1.0f : -1.0f;
-        matrixStack.translate((double)(f * 0.125f), -0.125, 0.0);
+    public void renderOneHandedMap(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, float $$3, net.minecraft.world.entity.HumanoidArm $$4, float $$5, net.minecraft.world.item.ItemStack $$6) {
+        float $$7 = $$4 == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1.0f : -1.0f;
+        $$0.translate((double)($$7 * 0.125f), -0.125, 0.0);
         if (!this.minecraft.player.isInvisible()) {
-            matrixStack.pushPose();
-            matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(f * 10.0f));
-            this.renderPlayerArm(matrixStack, buffer, combinedLight, equippedProgress, swingProgress, hand);
-            matrixStack.popPose();
+            $$0.pushPose();
+            $$0.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees($$7 * 10.0f));
+            this.renderPlayerArm($$0, $$1, $$2, $$3, $$5, $$4);
+            $$0.popPose();
         }
-        matrixStack.pushPose();
-        matrixStack.translate((double)(f * 0.51f), (double)(-0.08f + equippedProgress * -1.2f), -0.75);
-        float f2 = net.minecraft.util.Mth.sqrt((float)swingProgress);
-        float f3 = net.minecraft.util.Mth.sin((float)(f2 * (float)java.lang.Math.PI));
-        float f4 = -0.5f * f3;
-        float f5 = 0.4f * net.minecraft.util.Mth.sin((float)(f2 * ((float)java.lang.Math.PI * 2)));
-        float f6 = -0.3f * net.minecraft.util.Mth.sin((float)(swingProgress * (float)java.lang.Math.PI));
-        matrixStack.translate((double)(f * f4), (double)(f5 - 0.3f * f3), (double)f6);
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(f3 * -45.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(f * f3 * -30.0f));
-        this.renderMap(matrixStack, buffer, combinedLight, stack);
-        matrixStack.popPose();
+        $$0.pushPose();
+        $$0.translate((double)($$7 * 0.51f), (double)(-0.08f + $$3 * -1.2f), -0.75);
+        float $$8 = net.minecraft.util.Mth.sqrt((float)$$5);
+        float $$9 = net.minecraft.util.Mth.sin((float)($$8 * (float)java.lang.Math.PI));
+        float $$10 = -0.5f * $$9;
+        float $$11 = 0.4f * net.minecraft.util.Mth.sin((float)($$8 * ((float)java.lang.Math.PI * 2)));
+        float $$12 = -0.3f * net.minecraft.util.Mth.sin((float)($$5 * (float)java.lang.Math.PI));
+        $$0.translate((double)($$7 * $$10), (double)($$11 - 0.3f * $$9), (double)$$12);
+        $$0.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$9 * -45.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees($$7 * $$9 * -30.0f));
+        this.renderMap($$0, $$1, $$2, $$6);
+        $$0.popPose();
     }
 
-    public void renderTwoHandedMap(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, float pitch, float equippedProgress, float swingProgress) {
-        float f = net.minecraft.util.Mth.sqrt((float)swingProgress);
-        float f2 = -0.2f * net.minecraft.util.Mth.sin((float)(swingProgress * (float)java.lang.Math.PI));
-        float f3 = -0.4f * net.minecraft.util.Mth.sin((float)(f * (float)java.lang.Math.PI));
-        matrixStack.translate(0.0, (double)(-f2 / 2.0f), (double)f3);
-        float f4 = this.calculateMapTilt(pitch);
-        matrixStack.translate(0.0, (double)(0.04f + equippedProgress * -1.2f + f4 * -0.5f), (double)-0.72f);
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(f4 * -85.0f));
+    public void renderTwoHandedMap(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, float $$3, float $$4, float $$5) {
+        float $$6 = net.minecraft.util.Mth.sqrt((float)$$5);
+        float $$7 = -0.2f * net.minecraft.util.Mth.sin((float)($$5 * (float)java.lang.Math.PI));
+        float $$8 = -0.4f * net.minecraft.util.Mth.sin((float)($$6 * (float)java.lang.Math.PI));
+        $$0.translate(0.0, (double)(-$$7 / 2.0f), (double)$$8);
+        float $$9 = this.calculateMapTilt($$3);
+        $$0.translate(0.0, (double)(0.04f + $$4 * -1.2f + $$9 * -0.5f), (double)-0.72f);
+        $$0.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$9 * -85.0f));
         if (!this.minecraft.player.isInvisible()) {
-            matrixStack.pushPose();
-            matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(90.0f));
-            this.renderMapHand(matrixStack, buffer, combinedLight, net.minecraft.world.entity.HumanoidArm.RIGHT);
-            this.renderMapHand(matrixStack, buffer, combinedLight, net.minecraft.world.entity.HumanoidArm.LEFT);
-            matrixStack.popPose();
+            $$0.pushPose();
+            $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(90.0f));
+            this.renderMapHand($$0, $$1, $$2, net.minecraft.world.entity.HumanoidArm.RIGHT);
+            this.renderMapHand($$0, $$1, $$2, net.minecraft.world.entity.HumanoidArm.LEFT);
+            $$0.popPose();
         }
-        float f5 = net.minecraft.util.Mth.sin((float)(f * (float)java.lang.Math.PI));
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(f5 * 20.0f));
-        matrixStack.scale(2.0f, 2.0f, 2.0f);
-        this.renderMap(matrixStack, buffer, combinedLight, this.mainHandItem);
+        float $$10 = net.minecraft.util.Mth.sin((float)($$6 * (float)java.lang.Math.PI));
+        $$0.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$10 * 20.0f));
+        $$0.scale(2.0f, 2.0f, 2.0f);
+        this.renderMap($$0, $$1, $$2, this.mainHandItem);
     }
 
-    public void renderMap(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, net.minecraft.world.item.ItemStack stack) {
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(180.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(180.0f));
-        matrixStack.scale(0.38f, 0.38f, 0.38f);
-        matrixStack.translate(-0.5, -0.5, 0.0);
-        matrixStack.scale(0.0078125f, 0.0078125f, 0.0078125f);
-        java.lang.Integer n = net.minecraft.world.item.MapItem.getMapId((net.minecraft.world.item.ItemStack)stack);
-        net.minecraft.world.level.saveddata.maps.MapItemSavedData mapItemSavedData = net.minecraft.world.item.MapItem.getSavedData((java.lang.Integer)n, (net.minecraft.world.level.Level)this.minecraft.level);
-        com.mojang.blaze3d.vertex.VertexConsumer vertexConsumer = buffer.getBuffer(mapItemSavedData == null ? MAP_BACKGROUND : MAP_BACKGROUND_CHECKERBOARD);
-        com.mojang.math.Matrix4f matrix4f = matrixStack.last().pose();
-        vertexConsumer.vertex(matrix4f, -7.0f, 135.0f, 0.0f).color(255, 255, 255, 255).uv(0.0f, 1.0f).uv2(combinedLight).endVertex();
-        vertexConsumer.vertex(matrix4f, 135.0f, 135.0f, 0.0f).color(255, 255, 255, 255).uv(1.0f, 1.0f).uv2(combinedLight).endVertex();
-        vertexConsumer.vertex(matrix4f, 135.0f, -7.0f, 0.0f).color(255, 255, 255, 255).uv(1.0f, 0.0f).uv2(combinedLight).endVertex();
-        vertexConsumer.vertex(matrix4f, -7.0f, -7.0f, 0.0f).color(255, 255, 255, 255).uv(0.0f, 0.0f).uv2(combinedLight).endVertex();
-        if (mapItemSavedData != null) {
-            this.minecraft.gameRenderer.getMapRenderer().render(matrixStack, buffer, n.intValue(), mapItemSavedData, false, combinedLight);
+    public void renderMap(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, net.minecraft.world.item.ItemStack $$3) {
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(180.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(180.0f));
+        $$0.scale(0.38f, 0.38f, 0.38f);
+        $$0.translate(-0.5, -0.5, 0.0);
+        $$0.scale(0.0078125f, 0.0078125f, 0.0078125f);
+        java.lang.Integer $$4 = net.minecraft.world.item.MapItem.getMapId((net.minecraft.world.item.ItemStack)$$3);
+        net.minecraft.world.level.saveddata.maps.MapItemSavedData $$5 = net.minecraft.world.item.MapItem.getSavedData((java.lang.Integer)$$4, (net.minecraft.world.level.Level)this.minecraft.level);
+        com.mojang.blaze3d.vertex.VertexConsumer $$6 = $$1.getBuffer($$5 == null ? MAP_BACKGROUND : MAP_BACKGROUND_CHECKERBOARD);
+        com.mojang.math.Matrix4f $$7 = $$0.last().pose();
+        $$6.vertex($$7, -7.0f, 135.0f, 0.0f).color(255, 255, 255, 255).uv(0.0f, 1.0f).uv2($$2).endVertex();
+        $$6.vertex($$7, 135.0f, 135.0f, 0.0f).color(255, 255, 255, 255).uv(1.0f, 1.0f).uv2($$2).endVertex();
+        $$6.vertex($$7, 135.0f, -7.0f, 0.0f).color(255, 255, 255, 255).uv(1.0f, 0.0f).uv2($$2).endVertex();
+        $$6.vertex($$7, -7.0f, -7.0f, 0.0f).color(255, 255, 255, 255).uv(0.0f, 0.0f).uv2($$2).endVertex();
+        if ($$5 != null) {
+            this.minecraft.gameRenderer.getMapRenderer().render($$0, $$1, $$4.intValue(), $$5, false, $$2);
         }
     }
 
-    public void renderPlayerArm(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, float equippedProgress, float swingProgress, net.minecraft.world.entity.HumanoidArm side) {
-        boolean bl = side != net.minecraft.world.entity.HumanoidArm.LEFT;
-        float f = bl ? 1.0f : -1.0f;
-        float f2 = net.minecraft.util.Mth.sqrt((float)swingProgress);
-        float f3 = -0.3f * net.minecraft.util.Mth.sin((float)(f2 * (float)java.lang.Math.PI));
-        float f4 = 0.4f * net.minecraft.util.Mth.sin((float)(f2 * ((float)java.lang.Math.PI * 2)));
-        float f5 = -0.4f * net.minecraft.util.Mth.sin((float)(swingProgress * (float)java.lang.Math.PI));
-        matrixStack.translate((double)(f * (f3 + 0.64000005f)), (double)(f4 + -0.6f + equippedProgress * -0.6f), (double)(f5 + -0.71999997f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(f * 45.0f));
-        float f6 = net.minecraft.util.Mth.sin((float)(swingProgress * swingProgress * (float)java.lang.Math.PI));
-        float f7 = net.minecraft.util.Mth.sin((float)(f2 * (float)java.lang.Math.PI));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(f * f7 * 70.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(f * f6 * -20.0f));
-        net.minecraft.client.player.LocalPlayer localPlayer = this.minecraft.player;
-        com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)localPlayer.getSkinTextureLocation());
-        matrixStack.translate((double)(f * -1.0f), (double)3.6f, 3.5);
-        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(f * 120.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(200.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(f * -135.0f));
-        matrixStack.translate((double)(f * 5.6f), 0.0, 0.0);
-        net.minecraft.client.renderer.entity.player.PlayerRenderer playerRenderer = (net.minecraft.client.renderer.entity.player.PlayerRenderer)this.entityRenderDispatcher.getRenderer((net.minecraft.world.entity.Entity)localPlayer);
-        if (bl) {
-            playerRenderer.renderRightHand(matrixStack, buffer, combinedLight, (net.minecraft.client.player.AbstractClientPlayer)localPlayer);
+    public void renderPlayerArm(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, float $$3, float $$4, net.minecraft.world.entity.HumanoidArm $$5) {
+        boolean $$6 = $$5 != net.minecraft.world.entity.HumanoidArm.LEFT;
+        float $$7 = $$6 ? 1.0f : -1.0f;
+        float $$8 = net.minecraft.util.Mth.sqrt((float)$$4);
+        float $$9 = -0.3f * net.minecraft.util.Mth.sin((float)($$8 * (float)java.lang.Math.PI));
+        float $$10 = 0.4f * net.minecraft.util.Mth.sin((float)($$8 * ((float)java.lang.Math.PI * 2)));
+        float $$11 = -0.4f * net.minecraft.util.Mth.sin((float)($$4 * (float)java.lang.Math.PI));
+        $$0.translate((double)($$7 * ($$9 + 0.64000005f)), (double)($$10 + -0.6f + $$3 * -0.6f), (double)($$11 + -0.71999997f));
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees($$7 * 45.0f));
+        float $$12 = net.minecraft.util.Mth.sin((float)($$4 * $$4 * (float)java.lang.Math.PI));
+        float $$13 = net.minecraft.util.Mth.sin((float)($$8 * (float)java.lang.Math.PI));
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees($$7 * $$13 * 70.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees($$7 * $$12 * -20.0f));
+        net.minecraft.client.player.LocalPlayer $$14 = this.minecraft.player;
+        com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)$$14.getSkinTextureLocation());
+        $$0.translate((double)($$7 * -1.0f), (double)3.6f, 3.5);
+        $$0.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees($$7 * 120.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(200.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees($$7 * -135.0f));
+        $$0.translate((double)($$7 * 5.6f), 0.0, 0.0);
+        net.minecraft.client.renderer.entity.player.PlayerRenderer $$15 = (net.minecraft.client.renderer.entity.player.PlayerRenderer)this.entityRenderDispatcher.getRenderer((net.minecraft.world.entity.Entity)$$14);
+        if ($$6) {
+            $$15.renderRightHand($$0, $$1, $$2, (net.minecraft.client.player.AbstractClientPlayer)$$14);
         } else {
-            playerRenderer.renderLeftHand(matrixStack, buffer, combinedLight, (net.minecraft.client.player.AbstractClientPlayer)localPlayer);
+            $$15.renderLeftHand($$0, $$1, $$2, (net.minecraft.client.player.AbstractClientPlayer)$$14);
         }
     }
 
-    public void applyEatTransform(com.mojang.blaze3d.vertex.PoseStack matrixStack, float partialTicks, net.minecraft.world.entity.HumanoidArm hand, net.minecraft.world.item.ItemStack stack) {
-        float f;
-        float f2 = (float)this.minecraft.player.getUseItemRemainingTicks() - partialTicks + 1.0f;
-        float f3 = f2 / (float)stack.getUseDuration();
-        if (f3 < 0.8f) {
-            f = net.minecraft.util.Mth.abs((float)(net.minecraft.util.Mth.cos((float)(f2 / 4.0f * (float)java.lang.Math.PI)) * 0.1f));
-            matrixStack.translate(0.0, (double)f, 0.0);
+    public void applyEatTransform(com.mojang.blaze3d.vertex.PoseStack $$0, float $$1, net.minecraft.world.entity.HumanoidArm $$2, net.minecraft.world.item.ItemStack $$3) {
+        float $$4 = (float)this.minecraft.player.getUseItemRemainingTicks() - $$1 + 1.0f;
+        float $$5 = $$4 / (float)$$3.getUseDuration();
+        if ($$5 < 0.8f) {
+            float $$6 = net.minecraft.util.Mth.abs((float)(net.minecraft.util.Mth.cos((float)($$4 / 4.0f * (float)java.lang.Math.PI)) * 0.1f));
+            $$0.translate(0.0, (double)$$6, 0.0);
         }
-        f = 1.0f - (float)java.lang.Math.pow((double)f3, (double)27.0);
-        int n = hand == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1 : -1;
-        matrixStack.translate((double)(f * 0.6f * (float)n), (double)(f * -0.5f), (double)(f * 0.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * f * 90.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(f * 10.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)n * f * 30.0f));
+        float $$7 = 1.0f - (float)java.lang.Math.pow((double)$$5, (double)27.0);
+        int $$8 = $$2 == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1 : -1;
+        $$0.translate((double)($$7 * 0.6f * (float)$$8), (double)($$7 * -0.5f), (double)($$7 * 0.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$8 * $$7 * 90.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$7 * 10.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)$$8 * $$7 * 30.0f));
     }
 
-    public void applyItemArmAttackTransform(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.world.entity.HumanoidArm hand, float swingProgress) {
-        int n = hand == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1 : -1;
-        float f = net.minecraft.util.Mth.sin((float)(swingProgress * swingProgress * (float)java.lang.Math.PI));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * (45.0f + f * -20.0f)));
-        float f2 = net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)swingProgress) * (float)java.lang.Math.PI));
-        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)n * f2 * -20.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(f2 * -80.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * -45.0f));
+    public void applyItemArmAttackTransform(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.world.entity.HumanoidArm $$1, float $$2) {
+        int $$3 = $$1 == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1 : -1;
+        float $$4 = net.minecraft.util.Mth.sin((float)($$2 * $$2 * (float)java.lang.Math.PI));
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$3 * (45.0f + $$4 * -20.0f)));
+        float $$5 = net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)$$2) * (float)java.lang.Math.PI));
+        $$0.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)$$3 * $$5 * -20.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$5 * -80.0f));
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$3 * -45.0f));
     }
 
-    public void applyItemArmTransform(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.world.entity.HumanoidArm hand, float equippedProg) {
-        int n = hand == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1 : -1;
-        matrixStack.translate((double)((float)n * 0.56f), (double)(-0.52f + equippedProg * -0.6f), (double)-0.72f);
+    public void applyItemArmTransform(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.world.entity.HumanoidArm $$1, float $$2) {
+        int $$3 = $$1 == net.minecraft.world.entity.HumanoidArm.RIGHT ? 1 : -1;
+        $$0.translate((double)((float)$$3 * 0.56f), (double)(-0.52f + $$2 * -0.6f), (double)-0.72f);
     }
 
-    public void renderHandsWithItems(float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource$BufferSource buffer, net.minecraft.client.player.LocalPlayer playerEntity, int combinedLight) {
-        float f;
-        float f2;
-        float f3 = playerEntity.getAttackAnim(partialTicks);
-        net.minecraft.world.InteractionHand interactionHand = (net.minecraft.world.InteractionHand)com.google.common.base.MoreObjects.firstNonNull((java.lang.Object)playerEntity.swingingArm, (java.lang.Object)net.minecraft.world.InteractionHand.MAIN_HAND);
-        float f4 = net.minecraft.util.Mth.lerp((float)partialTicks, (float)playerEntity.xRotO, (float)playerEntity.getXRot());
-        net.minecraft.client.renderer.ItemInHandRenderer$HandRenderSelection handRenderSelection = net.minecraft.client.renderer.ItemInHandRenderer.evaluateWhichHandsToRender((net.minecraft.client.player.LocalPlayer)playerEntity);
-        float f5 = net.minecraft.util.Mth.lerp((float)partialTicks, (float)playerEntity.xBobO, (float)playerEntity.xBob);
-        float f6 = net.minecraft.util.Mth.lerp((float)partialTicks, (float)playerEntity.yBobO, (float)playerEntity.yBob);
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees((playerEntity.getViewXRot(partialTicks) - f5) * 0.1f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((playerEntity.getViewYRot(partialTicks) - f6) * 0.1f));
-        if (handRenderSelection.renderMainHand) {
-            f2 = interactionHand == net.minecraft.world.InteractionHand.MAIN_HAND ? f3 : 0.0f;
-            f = 1.0f - net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.oMainHandHeight, (float)this.mainHandHeight);
-            this.renderArmWithItem((net.minecraft.client.player.AbstractClientPlayer)playerEntity, partialTicks, f4, net.minecraft.world.InteractionHand.MAIN_HAND, f2, this.mainHandItem, f, matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, combinedLight);
+    public void renderHandsWithItems(float $$0, com.mojang.blaze3d.vertex.PoseStack $$1, net.minecraft.client.renderer.MultiBufferSource$BufferSource $$2, net.minecraft.client.player.LocalPlayer $$3, int $$4) {
+        float $$5 = $$3.getAttackAnim($$0);
+        net.minecraft.world.InteractionHand $$6 = (net.minecraft.world.InteractionHand)com.google.common.base.MoreObjects.firstNonNull((java.lang.Object)$$3.swingingArm, (java.lang.Object)net.minecraft.world.InteractionHand.MAIN_HAND);
+        float $$7 = net.minecraft.util.Mth.lerp((float)$$0, (float)$$3.xRotO, (float)$$3.getXRot());
+        net.minecraft.client.renderer.ItemInHandRenderer$HandRenderSelection $$8 = net.minecraft.client.renderer.ItemInHandRenderer.evaluateWhichHandsToRender((net.minecraft.client.player.LocalPlayer)$$3);
+        float $$9 = net.minecraft.util.Mth.lerp((float)$$0, (float)$$3.xBobO, (float)$$3.xBob);
+        float $$10 = net.minecraft.util.Mth.lerp((float)$$0, (float)$$3.yBobO, (float)$$3.yBob);
+        $$1.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(($$3.getViewXRot($$0) - $$9) * 0.1f));
+        $$1.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(($$3.getViewYRot($$0) - $$10) * 0.1f));
+        if ($$8.renderMainHand) {
+            float $$11 = $$6 == net.minecraft.world.InteractionHand.MAIN_HAND ? $$5 : 0.0f;
+            float $$12 = 1.0f - net.minecraft.util.Mth.lerp((float)$$0, (float)this.oMainHandHeight, (float)this.mainHandHeight);
+            this.renderArmWithItem((net.minecraft.client.player.AbstractClientPlayer)$$3, $$0, $$7, net.minecraft.world.InteractionHand.MAIN_HAND, $$11, this.mainHandItem, $$12, $$1, (net.minecraft.client.renderer.MultiBufferSource)$$2, $$4);
         }
-        if (handRenderSelection.renderOffHand) {
-            f2 = interactionHand == net.minecraft.world.InteractionHand.OFF_HAND ? f3 : 0.0f;
-            f = 1.0f - net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.oOffHandHeight, (float)this.offHandHeight);
-            this.renderArmWithItem((net.minecraft.client.player.AbstractClientPlayer)playerEntity, partialTicks, f4, net.minecraft.world.InteractionHand.OFF_HAND, f2, this.offHandItem, f, matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, combinedLight);
+        if ($$8.renderOffHand) {
+            float $$13 = $$6 == net.minecraft.world.InteractionHand.OFF_HAND ? $$5 : 0.0f;
+            float $$14 = 1.0f - net.minecraft.util.Mth.lerp((float)$$0, (float)this.oOffHandHeight, (float)this.offHandHeight);
+            this.renderArmWithItem((net.minecraft.client.player.AbstractClientPlayer)$$3, $$0, $$7, net.minecraft.world.InteractionHand.OFF_HAND, $$13, this.offHandItem, $$14, $$1, (net.minecraft.client.renderer.MultiBufferSource)$$2, $$4);
         }
-        buffer.endBatch();
+        $$2.endBatch();
     }
 
     @com.google.common.annotations.VisibleForTesting
@@ -304,145 +301,145 @@
         return $$0.is(net.minecraft.world.item.Items.CROSSBOW) && net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)$$0);
     }
 
-    public void renderArmWithItem(net.minecraft.client.player.AbstractClientPlayer player, float partialTicks, float pitch, net.minecraft.world.InteractionHand hand, float swingProgress, net.minecraft.world.item.ItemStack stack, float equippedProgress, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight) {
-        if (player.isScoping()) {
+    public void renderArmWithItem(net.minecraft.client.player.AbstractClientPlayer $$0, float $$1, float $$2, net.minecraft.world.InteractionHand $$3, float $$4, net.minecraft.world.item.ItemStack $$5, float $$6, com.mojang.blaze3d.vertex.PoseStack $$7, net.minecraft.client.renderer.MultiBufferSource $$8, int $$9) {
+        if ($$0.isScoping()) {
             return;
         }
-        boolean bl = hand == net.minecraft.world.InteractionHand.MAIN_HAND;
-        net.minecraft.world.entity.HumanoidArm humanoidArm = bl ? player.getMainArm() : player.getMainArm().getOpposite();
-        matrixStack.pushPose();
-        if (stack.isEmpty()) {
-            if (bl && !player.isInvisible()) {
-                this.renderPlayerArm(matrixStack, buffer, combinedLight, equippedProgress, swingProgress, humanoidArm);
+        boolean $$10 = $$3 == net.minecraft.world.InteractionHand.MAIN_HAND;
+        net.minecraft.world.entity.HumanoidArm $$11 = $$10 ? $$0.getMainArm() : $$0.getMainArm().getOpposite();
+        $$7.pushPose();
+        if ($$5.isEmpty()) {
+            if ($$10 && !$$0.isInvisible()) {
+                this.renderPlayerArm($$7, $$8, $$9, $$6, $$4, $$11);
             }
-        } else if (stack.is(net.minecraft.world.item.Items.FILLED_MAP)) {
-            if (bl && this.offHandItem.isEmpty()) {
-                this.renderTwoHandedMap(matrixStack, buffer, combinedLight, pitch, equippedProgress, swingProgress);
+        } else if ($$5.is(net.minecraft.world.item.Items.FILLED_MAP)) {
+            if ($$10 && this.offHandItem.isEmpty()) {
+                this.renderTwoHandedMap($$7, $$8, $$9, $$2, $$6, $$4);
             } else {
-                this.renderOneHandedMap(matrixStack, buffer, combinedLight, equippedProgress, humanoidArm, swingProgress, stack);
+                this.renderOneHandedMap($$7, $$8, $$9, $$6, $$11, $$4, $$5);
             }
-        } else if (stack.is(net.minecraft.world.item.Items.CROSSBOW)) {
-            int n;
-            boolean bl2 = net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)stack);
-            boolean bl3 = humanoidArm == net.minecraft.world.entity.HumanoidArm.RIGHT;
-            int n2 = n = bl3 ? 1 : -1;
-            if (player.isUsingItem() && player.getUseItemRemainingTicks() > 0 && player.getUsedItemHand() == hand) {
-                this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
-                matrixStack.translate((double)((float)n * -0.4785682f), (double)-0.094387f, 0.05731530860066414);
-                matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(-11.935f));
-                matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * 65.3f));
-                matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)n * -9.785f));
-                float f = (float)stack.getUseDuration() - ((float)this.minecraft.player.getUseItemRemainingTicks() - partialTicks + 1.0f);
-                float f2 = f / (float)net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)stack);
-                if (f2 > 1.0f) {
-                    f2 = 1.0f;
+        } else if ($$5.is(net.minecraft.world.item.Items.CROSSBOW)) {
+            int $$14;
+            boolean $$12 = net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)$$5);
+            boolean $$13 = $$11 == net.minecraft.world.entity.HumanoidArm.RIGHT;
+            int n = $$14 = $$13 ? 1 : -1;
+            if ($$0.isUsingItem() && $$0.getUseItemRemainingTicks() > 0 && $$0.getUsedItemHand() == $$3) {
+                this.applyItemArmTransform($$7, $$11, $$6);
+                $$7.translate((double)((float)$$14 * -0.4785682f), (double)-0.094387f, 0.05731530860066414);
+                $$7.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(-11.935f));
+                $$7.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$14 * 65.3f));
+                $$7.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)$$14 * -9.785f));
+                float $$15 = (float)$$5.getUseDuration() - ((float)this.minecraft.player.getUseItemRemainingTicks() - $$1 + 1.0f);
+                float $$16 = $$15 / (float)net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)$$5);
+                if ($$16 > 1.0f) {
+                    $$16 = 1.0f;
                 }
-                if (f2 > 0.1f) {
-                    float f3 = net.minecraft.util.Mth.sin((float)((f - 0.1f) * 1.3f));
-                    float f4 = f2 - 0.1f;
-                    float f5 = f3 * f4;
-                    matrixStack.translate((double)(f5 * 0.0f), (double)(f5 * 0.004f), (double)(f5 * 0.0f));
+                if ($$16 > 0.1f) {
+                    float $$17 = net.minecraft.util.Mth.sin((float)(($$15 - 0.1f) * 1.3f));
+                    float $$18 = $$16 - 0.1f;
+                    float $$19 = $$17 * $$18;
+                    $$7.translate((double)($$19 * 0.0f), (double)($$19 * 0.004f), (double)($$19 * 0.0f));
                 }
-                matrixStack.translate((double)(f2 * 0.0f), (double)(f2 * 0.0f), (double)(f2 * 0.04f));
-                matrixStack.scale(1.0f, 1.0f, 1.0f + f2 * 0.2f);
-                matrixStack.mulPose(com.mojang.math.Vector3f.YN.rotationDegrees((float)n * 45.0f));
+                $$7.translate((double)($$16 * 0.0f), (double)($$16 * 0.0f), (double)($$16 * 0.04f));
+                $$7.scale(1.0f, 1.0f, 1.0f + $$16 * 0.2f);
+                $$7.mulPose(com.mojang.math.Vector3f.YN.rotationDegrees((float)$$14 * 45.0f));
             } else {
-                float f = -0.4f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)swingProgress) * (float)java.lang.Math.PI));
-                float f6 = 0.2f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)swingProgress) * ((float)java.lang.Math.PI * 2)));
-                float f7 = -0.2f * net.minecraft.util.Mth.sin((float)(swingProgress * (float)java.lang.Math.PI));
-                matrixStack.translate((double)((float)n * f), (double)f6, (double)f7);
-                this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
-                this.applyItemArmAttackTransform(matrixStack, humanoidArm, swingProgress);
-                if (bl2 && swingProgress < 0.001f && bl) {
-                    matrixStack.translate((double)((float)n * -0.641864f), 0.0, 0.0);
-                    matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * 10.0f));
+                float $$20 = -0.4f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)$$4) * (float)java.lang.Math.PI));
+                float $$21 = 0.2f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)$$4) * ((float)java.lang.Math.PI * 2)));
+                float $$22 = -0.2f * net.minecraft.util.Mth.sin((float)($$4 * (float)java.lang.Math.PI));
+                $$7.translate((double)((float)$$14 * $$20), (double)$$21, (double)$$22);
+                this.applyItemArmTransform($$7, $$11, $$6);
+                this.applyItemArmAttackTransform($$7, $$11, $$4);
+                if ($$12 && $$4 < 0.001f && $$10) {
+                    $$7.translate((double)((float)$$14 * -0.641864f), 0.0, 0.0);
+                    $$7.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$14 * 10.0f));
                 }
             }
-            this.renderItem((net.minecraft.world.entity.LivingEntity)player, stack, bl3 ? net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_RIGHT_HAND : net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_LEFT_HAND, !bl3, matrixStack, buffer, combinedLight);
+            this.renderItem((net.minecraft.world.entity.LivingEntity)$$0, $$5, $$13 ? net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_RIGHT_HAND : net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_LEFT_HAND, !$$13, $$7, $$8, $$9);
         } else {
-            boolean bl4;
-            boolean bl5 = bl4 = humanoidArm == net.minecraft.world.entity.HumanoidArm.RIGHT;
-            if (player.isUsingItem() && player.getUseItemRemainingTicks() > 0 && player.getUsedItemHand() == hand) {
-                int n = bl4 ? 1 : -1;
-                switch (net.minecraft.client.renderer.ItemInHandRenderer$1.$SwitchMap$net$minecraft$world$item$UseAnim[stack.getUseAnimation().ordinal()]) {
+            boolean $$23;
+            boolean bl = $$23 = $$11 == net.minecraft.world.entity.HumanoidArm.RIGHT;
+            if ($$0.isUsingItem() && $$0.getUseItemRemainingTicks() > 0 && $$0.getUsedItemHand() == $$3) {
+                int $$24 = $$23 ? 1 : -1;
+                switch (net.minecraft.client.renderer.ItemInHandRenderer$1.$SwitchMap$net$minecraft$world$item$UseAnim[$$5.getUseAnimation().ordinal()]) {
                     case 1: {
-                        this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
+                        this.applyItemArmTransform($$7, $$11, $$6);
                         break;
                     }
                     case 2: 
                     case 3: {
-                        this.applyEatTransform(matrixStack, partialTicks, humanoidArm, stack);
-                        this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
+                        this.applyEatTransform($$7, $$1, $$11, $$5);
+                        this.applyItemArmTransform($$7, $$11, $$6);
                         break;
                     }
                     case 4: {
-                        this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
+                        this.applyItemArmTransform($$7, $$11, $$6);
                         break;
                     }
                     case 5: {
-                        this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
-                        matrixStack.translate((double)((float)n * -0.2785682f), 0.18344387412071228, 0.15731531381607056);
-                        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(-13.935f));
-                        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * 35.3f));
-                        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)n * -9.785f));
-                        float f = (float)stack.getUseDuration() - ((float)this.minecraft.player.getUseItemRemainingTicks() - partialTicks + 1.0f);
-                        float f8 = f / 20.0f;
-                        f8 = (f8 * f8 + f8 * 2.0f) / 3.0f;
-                        if (f8 > 1.0f) {
-                            f8 = 1.0f;
+                        this.applyItemArmTransform($$7, $$11, $$6);
+                        $$7.translate((double)((float)$$24 * -0.2785682f), 0.18344387412071228, 0.15731531381607056);
+                        $$7.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(-13.935f));
+                        $$7.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$24 * 35.3f));
+                        $$7.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)$$24 * -9.785f));
+                        float $$25 = (float)$$5.getUseDuration() - ((float)this.minecraft.player.getUseItemRemainingTicks() - $$1 + 1.0f);
+                        float $$26 = $$25 / 20.0f;
+                        $$26 = ($$26 * $$26 + $$26 * 2.0f) / 3.0f;
+                        if ($$26 > 1.0f) {
+                            $$26 = 1.0f;
                         }
-                        if (f8 > 0.1f) {
-                            float f9 = net.minecraft.util.Mth.sin((float)((f - 0.1f) * 1.3f));
-                            float f10 = f8 - 0.1f;
-                            float f11 = f9 * f10;
-                            matrixStack.translate((double)(f11 * 0.0f), (double)(f11 * 0.004f), (double)(f11 * 0.0f));
+                        if ($$26 > 0.1f) {
+                            float $$27 = net.minecraft.util.Mth.sin((float)(($$25 - 0.1f) * 1.3f));
+                            float $$28 = $$26 - 0.1f;
+                            float $$29 = $$27 * $$28;
+                            $$7.translate((double)($$29 * 0.0f), (double)($$29 * 0.004f), (double)($$29 * 0.0f));
                         }
-                        matrixStack.translate((double)(f8 * 0.0f), (double)(f8 * 0.0f), (double)(f8 * 0.04f));
-                        matrixStack.scale(1.0f, 1.0f, 1.0f + f8 * 0.2f);
-                        matrixStack.mulPose(com.mojang.math.Vector3f.YN.rotationDegrees((float)n * 45.0f));
+                        $$7.translate((double)($$26 * 0.0f), (double)($$26 * 0.0f), (double)($$26 * 0.04f));
+                        $$7.scale(1.0f, 1.0f, 1.0f + $$26 * 0.2f);
+                        $$7.mulPose(com.mojang.math.Vector3f.YN.rotationDegrees((float)$$24 * 45.0f));
                         break;
                     }
                     case 6: {
-                        this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
-                        matrixStack.translate((double)((float)n * -0.5f), (double)0.7f, (double)0.1f);
-                        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(-55.0f));
-                        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * 35.3f));
-                        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)n * -9.785f));
-                        float f = (float)stack.getUseDuration() - ((float)this.minecraft.player.getUseItemRemainingTicks() - partialTicks + 1.0f);
-                        float f12 = f / 10.0f;
-                        if (f12 > 1.0f) {
-                            f12 = 1.0f;
+                        this.applyItemArmTransform($$7, $$11, $$6);
+                        $$7.translate((double)((float)$$24 * -0.5f), (double)0.7f, (double)0.1f);
+                        $$7.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(-55.0f));
+                        $$7.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$24 * 35.3f));
+                        $$7.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)$$24 * -9.785f));
+                        float $$30 = (float)$$5.getUseDuration() - ((float)this.minecraft.player.getUseItemRemainingTicks() - $$1 + 1.0f);
+                        float $$31 = $$30 / 10.0f;
+                        if ($$31 > 1.0f) {
+                            $$31 = 1.0f;
                         }
-                        if (f12 > 0.1f) {
-                            float f13 = net.minecraft.util.Mth.sin((float)((f - 0.1f) * 1.3f));
-                            float f14 = f12 - 0.1f;
-                            float f15 = f13 * f14;
-                            matrixStack.translate((double)(f15 * 0.0f), (double)(f15 * 0.004f), (double)(f15 * 0.0f));
+                        if ($$31 > 0.1f) {
+                            float $$32 = net.minecraft.util.Mth.sin((float)(($$30 - 0.1f) * 1.3f));
+                            float $$33 = $$31 - 0.1f;
+                            float $$34 = $$32 * $$33;
+                            $$7.translate((double)($$34 * 0.0f), (double)($$34 * 0.004f), (double)($$34 * 0.0f));
                         }
-                        matrixStack.translate(0.0, 0.0, (double)(f12 * 0.2f));
-                        matrixStack.scale(1.0f, 1.0f, 1.0f + f12 * 0.2f);
-                        matrixStack.mulPose(com.mojang.math.Vector3f.YN.rotationDegrees((float)n * 45.0f));
+                        $$7.translate(0.0, 0.0, (double)($$31 * 0.2f));
+                        $$7.scale(1.0f, 1.0f, 1.0f + $$31 * 0.2f);
+                        $$7.mulPose(com.mojang.math.Vector3f.YN.rotationDegrees((float)$$24 * 45.0f));
                         break;
                     }
                 }
-            } else if (player.isAutoSpinAttack()) {
-                this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
-                int n = bl4 ? 1 : -1;
-                matrixStack.translate((double)((float)n * -0.4f), (double)0.8f, (double)0.3f);
-                matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)n * 65.0f));
-                matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)n * -85.0f));
+            } else if ($$0.isAutoSpinAttack()) {
+                this.applyItemArmTransform($$7, $$11, $$6);
+                int $$35 = $$23 ? 1 : -1;
+                $$7.translate((double)((float)$$35 * -0.4f), (double)0.8f, (double)0.3f);
+                $$7.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees((float)$$35 * 65.0f));
+                $$7.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)$$35 * -85.0f));
             } else {
-                float f = -0.4f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)swingProgress) * (float)java.lang.Math.PI));
-                float f16 = 0.2f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)swingProgress) * ((float)java.lang.Math.PI * 2)));
-                float f17 = -0.2f * net.minecraft.util.Mth.sin((float)(swingProgress * (float)java.lang.Math.PI));
-                int n = bl4 ? 1 : -1;
-                matrixStack.translate((double)((float)n * f), (double)f16, (double)f17);
-                this.applyItemArmTransform(matrixStack, humanoidArm, equippedProgress);
-                this.applyItemArmAttackTransform(matrixStack, humanoidArm, swingProgress);
+                float $$36 = -0.4f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)$$4) * (float)java.lang.Math.PI));
+                float $$37 = 0.2f * net.minecraft.util.Mth.sin((float)(net.minecraft.util.Mth.sqrt((float)$$4) * ((float)java.lang.Math.PI * 2)));
+                float $$38 = -0.2f * net.minecraft.util.Mth.sin((float)($$4 * (float)java.lang.Math.PI));
+                int $$39 = $$23 ? 1 : -1;
+                $$7.translate((double)((float)$$39 * $$36), (double)$$37, (double)$$38);
+                this.applyItemArmTransform($$7, $$11, $$6);
+                this.applyItemArmAttackTransform($$7, $$11, $$4);
             }
-            this.renderItem((net.minecraft.world.entity.LivingEntity)player, stack, bl4 ? net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_RIGHT_HAND : net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_LEFT_HAND, !bl4, matrixStack, buffer, combinedLight);
+            this.renderItem((net.minecraft.world.entity.LivingEntity)$$0, $$5, $$23 ? net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_RIGHT_HAND : net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIRST_PERSON_LEFT_HAND, !$$23, $$7, $$8, $$9);
         }
-        matrixStack.popPose();
+        $$7.popPose();
     }
 
     public void tick() {
@@ -473,8 +470,8 @@
         }
     }
 
-    public void itemUsed(net.minecraft.world.InteractionHand hand) {
-        if (hand == net.minecraft.world.InteractionHand.MAIN_HAND) {
+    public void itemUsed(net.minecraft.world.InteractionHand $$0) {
+        if ($$0 == net.minecraft.world.InteractionHand.MAIN_HAND) {
             this.mainHandHeight = 0.0f;
         } else {
             this.offHandHeight = 0.0f;