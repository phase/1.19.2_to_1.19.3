--- net/minecraft/client/renderer/chunk/VisibilitySet.java
+++ net/minecraft/client/renderer/chunk/VisibilitySet.java
@@ -12,25 +12,25 @@
         this.data = new java.util.BitSet(FACINGS * FACINGS);
     }
 
-    public void add(java.util.Set<net.minecraft.core.Direction> facing) {
-        for (net.minecraft.core.Direction direction : facing) {
-            for (net.minecraft.core.Direction direction2 : facing) {
-                this.set(direction, direction2, true);
+    public void add(java.util.Set<net.minecraft.core.Direction> $$0) {
+        for (net.minecraft.core.Direction $$1 : $$0) {
+            for (net.minecraft.core.Direction $$2 : $$0) {
+                this.set($$1, $$2, true);
             }
         }
     }
 
-    public void set(net.minecraft.core.Direction facing, net.minecraft.core.Direction facing2, boolean value) {
-        this.data.set(facing.ordinal() + facing2.ordinal() * FACINGS, value);
-        this.data.set(facing2.ordinal() + facing.ordinal() * FACINGS, value);
+    public void set(net.minecraft.core.Direction $$0, net.minecraft.core.Direction $$1, boolean $$2) {
+        this.data.set($$0.ordinal() + $$1.ordinal() * FACINGS, $$2);
+        this.data.set($$1.ordinal() + $$0.ordinal() * FACINGS, $$2);
     }
 
-    public void setAll(boolean visible) {
-        this.data.set(0, this.data.size(), visible);
+    public void setAll(boolean $$0) {
+        this.data.set(0, this.data.size(), $$0);
     }
 
-    public boolean visibilityBetween(net.minecraft.core.Direction facing, net.minecraft.core.Direction facing2) {
-        return this.data.get(facing.ordinal() + facing2.ordinal() * FACINGS);
+    public boolean visibilityBetween(net.minecraft.core.Direction $$0, net.minecraft.core.Direction $$1) {
+        return this.data.get($$0.ordinal() + $$1.ordinal() * FACINGS);
     }
 
     public java.lang.String toString() {