--- net/minecraft/client/renderer/LightTexture.java
+++ net/minecraft/client/renderer/LightTexture.java
@@ -66,88 +66,97 @@
         return java.lang.Math.max((float)0.0f, (float)(net.minecraft.util.Mth.cos((float)(((float)$$0.tickCount - $$2) * (float)java.lang.Math.PI * 0.025f)) * $$3));
     }
 
-    public void updateLightTexture(float partialTicks) {
+    public void updateLightTexture(float $$0) {
+        float $$11;
+        float $$4;
         if (!this.updateLightTexture) {
             return;
         }
         this.updateLightTexture = false;
         this.minecraft.getProfiler().push("lightTex");
-        net.minecraft.client.multiplayer.ClientLevel clientLevel = this.minecraft.level;
-        if (clientLevel == null) {
+        net.minecraft.client.multiplayer.ClientLevel $$1 = this.minecraft.level;
+        if ($$1 == null) {
             return;
         }
-        float f = clientLevel.getSkyDarken(1.0f);
-        float f2 = clientLevel.getSkyFlashTime() > 0 ? 1.0f : f * 0.95f + 0.05f;
-        float f3 = ((java.lang.Double)this.minecraft.options.darknessEffectScale().get()).floatValue();
-        float f4 = this.getDarknessGamma(partialTicks) * f3;
-        float f5 = this.calculateDarknessScale((net.minecraft.world.entity.LivingEntity)this.minecraft.player, f4, partialTicks) * f3;
-        float f6 = this.minecraft.player.getWaterVision();
-        float f7 = this.minecraft.player.hasEffect(net.minecraft.world.effect.MobEffects.NIGHT_VISION) ? net.minecraft.client.renderer.GameRenderer.getNightVisionScale((net.minecraft.world.entity.LivingEntity)this.minecraft.player, (float)partialTicks) : (f6 > 0.0f && this.minecraft.player.hasEffect(net.minecraft.world.effect.MobEffects.CONDUIT_POWER) ? f6 : 0.0f);
-        com.mojang.math.Vector3f vector3f = new com.mojang.math.Vector3f(f, f, 1.0f);
-        vector3f.lerp(new com.mojang.math.Vector3f(1.0f, 1.0f, 1.0f), 0.35f);
-        float f8 = this.blockLightRedFlicker + 1.5f;
-        com.mojang.math.Vector3f vector3f2 = new com.mojang.math.Vector3f();
-        for (int i = 0; i < 16; ++i) {
-            for (int j = 0; j < 16; ++j) {
-                float f9;
-                com.mojang.math.Vector3f vector3f3;
-                float f10;
-                float f11;
-                float f12 = net.minecraft.client.renderer.LightTexture.getBrightness((net.minecraft.world.level.dimension.DimensionType)clientLevel.dimensionType(), (int)i) * f2;
-                float f13 = f11 = net.minecraft.client.renderer.LightTexture.getBrightness((net.minecraft.world.level.dimension.DimensionType)clientLevel.dimensionType(), (int)j) * f8;
-                float f14 = f11 * ((f11 * 0.6f + 0.4f) * 0.6f + 0.4f);
-                float f15 = f11 * (f11 * f11 * 0.6f + 0.4f);
-                vector3f2.set(f13, f14, f15);
-                boolean bl = clientLevel.effects().forceBrightLightmap();
-                if (bl) {
-                    vector3f2.lerp(new com.mojang.math.Vector3f(0.99f, 1.12f, 1.0f), 0.25f);
-                    vector3f2.clamp(0.0f, 1.0f);
+        float $$2 = $$1.getSkyDarken(1.0f);
+        if ($$1.getSkyFlashTime() > 0) {
+            float $$3 = 1.0f;
+        } else {
+            $$4 = $$2 * 0.95f + 0.05f;
+        }
+        float $$5 = ((java.lang.Double)this.minecraft.options.darknessEffectScale().get()).floatValue();
+        float $$6 = this.getDarknessGamma($$0) * $$5;
+        float $$7 = this.calculateDarknessScale((net.minecraft.world.entity.LivingEntity)this.minecraft.player, $$6, $$0) * $$5;
+        float $$8 = this.minecraft.player.getWaterVision();
+        if (this.minecraft.player.hasEffect(net.minecraft.world.effect.MobEffects.NIGHT_VISION)) {
+            float $$9 = net.minecraft.client.renderer.GameRenderer.getNightVisionScale((net.minecraft.world.entity.LivingEntity)this.minecraft.player, (float)$$0);
+        } else if ($$8 > 0.0f && this.minecraft.player.hasEffect(net.minecraft.world.effect.MobEffects.CONDUIT_POWER)) {
+            float $$10 = $$8;
+        } else {
+            $$11 = 0.0f;
+        }
+        com.mojang.math.Vector3f $$12 = new com.mojang.math.Vector3f($$2, $$2, 1.0f);
+        $$12.lerp(new com.mojang.math.Vector3f(1.0f, 1.0f, 1.0f), 0.35f);
+        float $$13 = this.blockLightRedFlicker + 1.5f;
+        com.mojang.math.Vector3f $$14 = new com.mojang.math.Vector3f();
+        for (int $$15 = 0; $$15 < 16; ++$$15) {
+            for (int $$16 = 0; $$16 < 16; ++$$16) {
+                float $$26;
+                float $$18;
+                float $$17 = net.minecraft.client.renderer.LightTexture.getBrightness((net.minecraft.world.level.dimension.DimensionType)$$1.dimensionType(), (int)$$15) * $$4;
+                float $$19 = $$18 = net.minecraft.client.renderer.LightTexture.getBrightness((net.minecraft.world.level.dimension.DimensionType)$$1.dimensionType(), (int)$$16) * $$13;
+                float $$20 = $$18 * (($$18 * 0.6f + 0.4f) * 0.6f + 0.4f);
+                float $$21 = $$18 * ($$18 * $$18 * 0.6f + 0.4f);
+                $$14.set($$19, $$20, $$21);
+                boolean $$22 = $$1.effects().forceBrightLightmap();
+                if ($$22) {
+                    $$14.lerp(new com.mojang.math.Vector3f(0.99f, 1.12f, 1.0f), 0.25f);
+                    $$14.clamp(0.0f, 1.0f);
                 } else {
-                    com.mojang.math.Vector3f vector3f4 = vector3f.copy();
-                    vector3f4.mul(f12);
-                    vector3f2.add(vector3f4);
-                    vector3f2.lerp(new com.mojang.math.Vector3f(0.75f, 0.75f, 0.75f), 0.04f);
-                    if (this.renderer.getDarkenWorldAmount(partialTicks) > 0.0f) {
-                        f10 = this.renderer.getDarkenWorldAmount(partialTicks);
-                        vector3f3 = vector3f2.copy();
-                        vector3f3.mul(0.7f, 0.6f, 0.6f);
-                        vector3f2.lerp(vector3f3, f10);
+                    com.mojang.math.Vector3f $$23 = $$12.copy();
+                    $$23.mul($$17);
+                    $$14.add($$23);
+                    $$14.lerp(new com.mojang.math.Vector3f(0.75f, 0.75f, 0.75f), 0.04f);
+                    if (this.renderer.getDarkenWorldAmount($$0) > 0.0f) {
+                        float $$24 = this.renderer.getDarkenWorldAmount($$0);
+                        com.mojang.math.Vector3f $$25 = $$14.copy();
+                        $$25.mul(0.7f, 0.6f, 0.6f);
+                        $$14.lerp($$25, $$24);
                     }
                 }
-                if (f7 > 0.0f && (f9 = java.lang.Math.max((float)vector3f2.x(), (float)java.lang.Math.max((float)vector3f2.y(), (float)vector3f2.z()))) < 1.0f) {
-                    float f16 = 1.0f;
-                    f10 = f9 / f9;
-                    vector3f3 = vector3f2.copy();
-                    vector3f3.mul(f10);
-                    vector3f2.lerp(vector3f3, f7);
+                if ($$11 > 0.0f && ($$26 = java.lang.Math.max((float)$$14.x(), (float)java.lang.Math.max((float)$$14.y(), (float)$$14.z()))) < 1.0f) {
+                    float $$27 = 1.0f / $$26;
+                    com.mojang.math.Vector3f $$28 = $$14.copy();
+                    $$28.mul($$27);
+                    $$14.lerp($$28, $$11);
                 }
-                if (!bl) {
-                    if (f5 > 0.0f) {
-                        vector3f2.add(-f5, -f5, -f5);
+                if (!$$22) {
+                    if ($$7 > 0.0f) {
+                        $$14.add(-$$7, -$$7, -$$7);
                     }
-                    vector3f2.clamp(0.0f, 1.0f);
+                    $$14.clamp(0.0f, 1.0f);
                 }
-                float f17 = ((java.lang.Double)this.minecraft.options.gamma().get()).floatValue();
-                com.mojang.math.Vector3f vector3f5 = vector3f2.copy();
-                vector3f5.map(arg_0 -> this.notGamma(arg_0));
-                vector3f2.lerp(vector3f5, java.lang.Math.max((float)0.0f, (float)(f17 - f4)));
-                vector3f2.lerp(new com.mojang.math.Vector3f(0.75f, 0.75f, 0.75f), 0.04f);
-                vector3f2.clamp(0.0f, 1.0f);
-                vector3f2.mul(255.0f);
-                int n = 255;
-                int n2 = (int)vector3f2.x();
-                int n3 = (int)vector3f2.y();
-                int n4 = (int)vector3f2.z();
-                this.lightPixels.setPixelRGBA(j, i, 0xFF000000 | n4 << 16 | n3 << 8 | n2);
+                float $$29 = ((java.lang.Double)this.minecraft.options.gamma().get()).floatValue();
+                com.mojang.math.Vector3f $$30 = $$14.copy();
+                $$30.map(arg_0 -> this.notGamma(arg_0));
+                $$14.lerp($$30, java.lang.Math.max((float)0.0f, (float)($$29 - $$6)));
+                $$14.lerp(new com.mojang.math.Vector3f(0.75f, 0.75f, 0.75f), 0.04f);
+                $$14.clamp(0.0f, 1.0f);
+                $$14.mul(255.0f);
+                int $$31 = 255;
+                int $$32 = (int)$$14.x();
+                int $$33 = (int)$$14.y();
+                int $$34 = (int)$$14.z();
+                this.lightPixels.setPixelRGBA($$16, $$15, 0xFF000000 | $$34 << 16 | $$33 << 8 | $$32);
             }
         }
         this.lightTexture.upload();
         this.minecraft.getProfiler().pop();
     }
 
-    public float notGamma(float value) {
-        float f = 1.0f - value;
-        return 1.0f - f * f * f * f;
+    public float notGamma(float $$0) {
+        float $$1 = 1.0f - $$0;
+        return 1.0f - $$1 * $$1 * $$1 * $$1;
     }
 
     public static float getBrightness(net.minecraft.world.level.dimension.DimensionType $$0, int $$1) {
@@ -156,16 +165,16 @@
         return net.minecraft.util.Mth.lerp((float)$$0.ambientLight(), (float)$$3, (float)1.0f);
     }
 
-    public static int pack(int blockLight, int skyLight) {
-        return blockLight << 4 | skyLight << 20;
+    public static int pack(int $$0, int $$1) {
+        return $$0 << 4 | $$1 << 20;
     }
 
-    public static int block(int packedLight) {
-        return packedLight >> 4 & 0xFFFF;
+    public static int block(int $$0) {
+        return $$0 >> 4 & 0xFFFF;
     }
 
-    public static int sky(int packedLight) {
-        return packedLight >> 20 & 0xFFFF;
+    public static int sky(int $$0) {
+        return $$0 >> 20 & 0xFFFF;
     }
 }
 