--- net/minecraft/client/renderer/culling/Frustum.java
+++ net/minecraft/client/renderer/culling/Frustum.java
@@ -41,58 +41,58 @@
         return this;
     }
 
-    public void prepare(double camX, double camY, double camZ) {
-        this.camX = camX;
-        this.camY = camY;
-        this.camZ = camZ;
+    public void prepare(double $$0, double $$1, double $$2) {
+        this.camX = $$0;
+        this.camY = $$1;
+        this.camZ = $$2;
     }
 
-    public void calculateFrustum(com.mojang.math.Matrix4f projection, com.mojang.math.Matrix4f frustrumMatrix) {
-        com.mojang.math.Matrix4f matrix4f = frustrumMatrix.copy();
-        matrix4f.multiply(projection);
-        matrix4f.transpose();
+    public void calculateFrustum(com.mojang.math.Matrix4f $$0, com.mojang.math.Matrix4f $$1) {
+        com.mojang.math.Matrix4f $$2 = $$1.copy();
+        $$2.multiply($$0);
+        $$2.transpose();
         this.viewVector = new com.mojang.math.Vector4f(0.0f, 0.0f, 1.0f, 0.0f);
-        this.viewVector.transform(matrix4f);
-        this.getPlane(matrix4f, -1, 0, 0, 0);
-        this.getPlane(matrix4f, 1, 0, 0, 1);
-        this.getPlane(matrix4f, 0, -1, 0, 2);
-        this.getPlane(matrix4f, 0, 1, 0, 3);
-        this.getPlane(matrix4f, 0, 0, -1, 4);
-        this.getPlane(matrix4f, 0, 0, 1, 5);
+        this.viewVector.transform($$2);
+        this.getPlane($$2, -1, 0, 0, 0);
+        this.getPlane($$2, 1, 0, 0, 1);
+        this.getPlane($$2, 0, -1, 0, 2);
+        this.getPlane($$2, 0, 1, 0, 3);
+        this.getPlane($$2, 0, 0, -1, 4);
+        this.getPlane($$2, 0, 0, 1, 5);
     }
 
-    public void getPlane(com.mojang.math.Matrix4f frustrumMatrix, int x, int y, int z, int id) {
-        com.mojang.math.Vector4f vector4f = new com.mojang.math.Vector4f((float)x, (float)y, (float)z, 1.0f);
-        vector4f.transform(frustrumMatrix);
-        vector4f.normalize();
-        this.frustumData[id] = vector4f;
+    public void getPlane(com.mojang.math.Matrix4f $$0, int $$1, int $$2, int $$3, int $$4) {
+        com.mojang.math.Vector4f $$5 = new com.mojang.math.Vector4f((float)$$1, (float)$$2, (float)$$3, 1.0f);
+        $$5.transform($$0);
+        $$5.normalize();
+        this.frustumData[$$4] = $$5;
     }
 
-    public boolean isVisible(net.minecraft.world.phys.AABB aabb) {
-        return this.cubeInFrustum(aabb.minX, aabb.minY, aabb.minZ, aabb.maxX, aabb.maxY, aabb.maxZ);
+    public boolean isVisible(net.minecraft.world.phys.AABB $$0) {
+        return this.cubeInFrustum($$0.minX, $$0.minY, $$0.minZ, $$0.maxX, $$0.maxY, $$0.maxZ);
     }
 
-    public boolean cubeInFrustum(double minX, double minY, double minZ, double maxX, double maxY, double maxZ) {
-        float f = (float)(minX - this.camX);
-        float f2 = (float)(minY - this.camY);
-        float f3 = (float)(minZ - this.camZ);
-        float f4 = (float)(maxX - this.camX);
-        float f5 = (float)(maxY - this.camY);
-        float f6 = (float)(maxZ - this.camZ);
-        return this.cubeInFrustum(f, f2, f3, f4, f5, f6);
+    public boolean cubeInFrustum(double $$0, double $$1, double $$2, double $$3, double $$4, double $$5) {
+        float $$6 = (float)($$0 - this.camX);
+        float $$7 = (float)($$1 - this.camY);
+        float $$8 = (float)($$2 - this.camZ);
+        float $$9 = (float)($$3 - this.camX);
+        float $$10 = (float)($$4 - this.camY);
+        float $$11 = (float)($$5 - this.camZ);
+        return this.cubeInFrustum($$6, $$7, $$8, $$9, $$10, $$11);
     }
 
-    public boolean cubeInFrustum(float minX, float minY, float minZ, float maxX, float maxY, float maxZ) {
-        for (int i = 0; i < 6; ++i) {
-            com.mojang.math.Vector4f vector4f = this.frustumData[i];
-            if (vector4f.dot(new com.mojang.math.Vector4f(minX, minY, minZ, 1.0f)) > 0.0f) continue;
-            if (vector4f.dot(new com.mojang.math.Vector4f(maxX, minY, minZ, 1.0f)) > 0.0f) continue;
-            if (vector4f.dot(new com.mojang.math.Vector4f(minX, maxY, minZ, 1.0f)) > 0.0f) continue;
-            if (vector4f.dot(new com.mojang.math.Vector4f(maxX, maxY, minZ, 1.0f)) > 0.0f) continue;
-            if (vector4f.dot(new com.mojang.math.Vector4f(minX, minY, maxZ, 1.0f)) > 0.0f) continue;
-            if (vector4f.dot(new com.mojang.math.Vector4f(maxX, minY, maxZ, 1.0f)) > 0.0f) continue;
-            if (vector4f.dot(new com.mojang.math.Vector4f(minX, maxY, maxZ, 1.0f)) > 0.0f) continue;
-            if (vector4f.dot(new com.mojang.math.Vector4f(maxX, maxY, maxZ, 1.0f)) > 0.0f) continue;
+    public boolean cubeInFrustum(float $$0, float $$1, float $$2, float $$3, float $$4, float $$5) {
+        for (int $$6 = 0; $$6 < 6; ++$$6) {
+            com.mojang.math.Vector4f $$7 = this.frustumData[$$6];
+            if ($$7.dot(new com.mojang.math.Vector4f($$0, $$1, $$2, 1.0f)) > 0.0f) continue;
+            if ($$7.dot(new com.mojang.math.Vector4f($$3, $$1, $$2, 1.0f)) > 0.0f) continue;
+            if ($$7.dot(new com.mojang.math.Vector4f($$0, $$4, $$2, 1.0f)) > 0.0f) continue;
+            if ($$7.dot(new com.mojang.math.Vector4f($$3, $$4, $$2, 1.0f)) > 0.0f) continue;
+            if ($$7.dot(new com.mojang.math.Vector4f($$0, $$1, $$5, 1.0f)) > 0.0f) continue;
+            if ($$7.dot(new com.mojang.math.Vector4f($$3, $$1, $$5, 1.0f)) > 0.0f) continue;
+            if ($$7.dot(new com.mojang.math.Vector4f($$0, $$4, $$5, 1.0f)) > 0.0f) continue;
+            if ($$7.dot(new com.mojang.math.Vector4f($$3, $$4, $$5, 1.0f)) > 0.0f) continue;
             return false;
         }
         return true;