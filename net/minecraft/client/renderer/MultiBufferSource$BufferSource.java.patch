--- net/minecraft/client/renderer/MultiBufferSource$BufferSource.java
+++ net/minecraft/client/renderer/MultiBufferSource$BufferSource.java
@@ -34,8 +34,8 @@
         return $$2;
     }
 
-    public com.mojang.blaze3d.vertex.BufferBuilder getBuilderRaw(net.minecraft.client.renderer.RenderType renderType) {
-        return (com.mojang.blaze3d.vertex.BufferBuilder)this.fixedBuffers.getOrDefault((java.lang.Object)renderType, (java.lang.Object)this.builder);
+    public com.mojang.blaze3d.vertex.BufferBuilder getBuilderRaw(net.minecraft.client.renderer.RenderType $$0) {
+        return (com.mojang.blaze3d.vertex.BufferBuilder)this.fixedBuffers.getOrDefault((java.lang.Object)$$0, (java.lang.Object)this.builder);
     }
 
     public void endLastBatch() {
@@ -60,17 +60,17 @@
         }
     }
 
-    public void endBatch(net.minecraft.client.renderer.RenderType renderType) {
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = this.getBuilderRaw(renderType);
-        boolean bl = java.util.Objects.equals((java.lang.Object)this.lastState, (java.lang.Object)renderType.asOptional());
-        if (!bl && bufferBuilder == this.builder) {
+    public void endBatch(net.minecraft.client.renderer.RenderType $$0) {
+        com.mojang.blaze3d.vertex.BufferBuilder $$1 = this.getBuilderRaw($$0);
+        boolean $$2 = java.util.Objects.equals((java.lang.Object)this.lastState, (java.lang.Object)$$0.asOptional());
+        if (!$$2 && $$1 == this.builder) {
             return;
         }
-        if (!this.startedBuffers.remove((java.lang.Object)bufferBuilder)) {
+        if (!this.startedBuffers.remove((java.lang.Object)$$1)) {
             return;
         }
-        renderType.end(bufferBuilder, 0, 0, 0);
-        if (bl) {
+        $$0.end($$1, 0, 0, 0);
+        if ($$2) {
             this.lastState = java.util.Optional.empty();
         }
     }