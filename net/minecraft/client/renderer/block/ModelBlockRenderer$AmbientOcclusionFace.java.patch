--- net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace.java
+++ net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace.java
@@ -13,162 +13,160 @@
         this.lightmap = new int[4];
     }
 
-    public void calculate(net.minecraft.world.level.BlockAndTintGetter reader, net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction direction, float[] vertexes, java.util.BitSet bitSet, boolean applyDiffuseLighting) {
-        float f;
-        int n;
-        float f2;
-        int n2;
-        float f3;
-        int n3;
-        float f4;
-        int n4;
-        float f5;
-        net.minecraft.world.level.block.state.BlockState blockState;
-        boolean bl;
-        net.minecraft.core.BlockPos blockPos = bitSet.get(0) ? pos.relative(direction) : pos;
-        net.minecraft.client.renderer.block.ModelBlockRenderer$AdjacencyInfo adjacencyInfo = net.minecraft.client.renderer.block.ModelBlockRenderer$AdjacencyInfo.fromFacing((net.minecraft.core.Direction)direction);
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = new net.minecraft.core.BlockPos$MutableBlockPos();
-        net.minecraft.client.renderer.block.ModelBlockRenderer$Cache cache = (net.minecraft.client.renderer.block.ModelBlockRenderer$Cache)net.minecraft.client.renderer.block.ModelBlockRenderer.CACHE.get();
-        mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[0]);
-        net.minecraft.world.level.block.state.BlockState blockState2 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-        int n5 = cache.getLightColor(blockState2, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        float f6 = cache.getShadeBrightness(blockState2, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[1]);
-        net.minecraft.world.level.block.state.BlockState blockState3 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-        int n6 = cache.getLightColor(blockState3, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        float f7 = cache.getShadeBrightness(blockState3, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[2]);
-        net.minecraft.world.level.block.state.BlockState blockState4 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-        int n7 = cache.getLightColor(blockState4, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        float f8 = cache.getShadeBrightness(blockState4, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[3]);
-        net.minecraft.world.level.block.state.BlockState blockState5 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-        int n8 = cache.getLightColor(blockState5, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        float f9 = cache.getShadeBrightness(blockState5, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-        net.minecraft.world.level.block.state.BlockState blockState6 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[0]).move(direction));
-        boolean bl2 = !blockState6.isViewBlocking((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) || blockState6.getLightBlock((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) == 0;
-        net.minecraft.world.level.block.state.BlockState blockState7 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[1]).move(direction));
-        boolean bl3 = !blockState7.isViewBlocking((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) || blockState7.getLightBlock((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) == 0;
-        net.minecraft.world.level.block.state.BlockState blockState8 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[2]).move(direction));
-        boolean bl4 = !blockState8.isViewBlocking((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) || blockState8.getLightBlock((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) == 0;
-        net.minecraft.world.level.block.state.BlockState blockState9 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[3]).move(direction));
-        boolean bl5 = bl = !blockState9.isViewBlocking((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) || blockState9.getLightBlock((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos) == 0;
-        if (bl4 || bl2) {
-            mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[0]).move(adjacencyInfo.corners[2]);
-            blockState = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-            f5 = cache.getShadeBrightness(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-            n4 = cache.getLightColor(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
+    public void calculate(net.minecraft.world.level.BlockAndTintGetter $$0, net.minecraft.world.level.block.state.BlockState $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.Direction $$3, float[] $$4, java.util.BitSet $$5, boolean $$6) {
+        int $$50;
+        float $$49;
+        int $$45;
+        float $$44;
+        int $$40;
+        float $$39;
+        int $$35;
+        float $$34;
+        boolean $$30;
+        net.minecraft.core.BlockPos $$7 = $$5.get(0) ? $$2.relative($$3) : $$2;
+        net.minecraft.client.renderer.block.ModelBlockRenderer$AdjacencyInfo $$8 = net.minecraft.client.renderer.block.ModelBlockRenderer$AdjacencyInfo.fromFacing((net.minecraft.core.Direction)$$3);
+        net.minecraft.core.BlockPos$MutableBlockPos $$9 = new net.minecraft.core.BlockPos$MutableBlockPos();
+        net.minecraft.client.renderer.block.ModelBlockRenderer$Cache $$10 = (net.minecraft.client.renderer.block.ModelBlockRenderer$Cache)net.minecraft.client.renderer.block.ModelBlockRenderer.CACHE.get();
+        $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[0]);
+        net.minecraft.world.level.block.state.BlockState $$11 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+        int $$12 = $$10.getLightColor($$11, $$0, (net.minecraft.core.BlockPos)$$9);
+        float $$13 = $$10.getShadeBrightness($$11, $$0, (net.minecraft.core.BlockPos)$$9);
+        $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[1]);
+        net.minecraft.world.level.block.state.BlockState $$14 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+        int $$15 = $$10.getLightColor($$14, $$0, (net.minecraft.core.BlockPos)$$9);
+        float $$16 = $$10.getShadeBrightness($$14, $$0, (net.minecraft.core.BlockPos)$$9);
+        $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[2]);
+        net.minecraft.world.level.block.state.BlockState $$17 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+        int $$18 = $$10.getLightColor($$17, $$0, (net.minecraft.core.BlockPos)$$9);
+        float $$19 = $$10.getShadeBrightness($$17, $$0, (net.minecraft.core.BlockPos)$$9);
+        $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[3]);
+        net.minecraft.world.level.block.state.BlockState $$20 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+        int $$21 = $$10.getLightColor($$20, $$0, (net.minecraft.core.BlockPos)$$9);
+        float $$22 = $$10.getShadeBrightness($$20, $$0, (net.minecraft.core.BlockPos)$$9);
+        net.minecraft.world.level.block.state.BlockState $$23 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[0]).move($$3));
+        boolean $$24 = !$$23.isViewBlocking((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) || $$23.getLightBlock((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) == 0;
+        net.minecraft.world.level.block.state.BlockState $$25 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[1]).move($$3));
+        boolean $$26 = !$$25.isViewBlocking((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) || $$25.getLightBlock((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) == 0;
+        net.minecraft.world.level.block.state.BlockState $$27 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[2]).move($$3));
+        boolean $$28 = !$$27.isViewBlocking((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) || $$27.getLightBlock((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) == 0;
+        net.minecraft.world.level.block.state.BlockState $$29 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[3]).move($$3));
+        boolean bl = $$30 = !$$29.isViewBlocking((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) || $$29.getLightBlock((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9) == 0;
+        if ($$28 || $$24) {
+            $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[0]).move($$8.corners[2]);
+            net.minecraft.world.level.block.state.BlockState $$31 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+            float $$32 = $$10.getShadeBrightness($$31, $$0, (net.minecraft.core.BlockPos)$$9);
+            int $$33 = $$10.getLightColor($$31, $$0, (net.minecraft.core.BlockPos)$$9);
         } else {
-            f5 = f6;
-            n4 = n5;
+            $$34 = $$13;
+            $$35 = $$12;
         }
-        if (bl || bl2) {
-            mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[0]).move(adjacencyInfo.corners[3]);
-            blockState = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-            f4 = cache.getShadeBrightness(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-            n3 = cache.getLightColor(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
+        if ($$30 || $$24) {
+            $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[0]).move($$8.corners[3]);
+            net.minecraft.world.level.block.state.BlockState $$36 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+            float $$37 = $$10.getShadeBrightness($$36, $$0, (net.minecraft.core.BlockPos)$$9);
+            int $$38 = $$10.getLightColor($$36, $$0, (net.minecraft.core.BlockPos)$$9);
         } else {
-            f4 = f6;
-            n3 = n5;
+            $$39 = $$13;
+            $$40 = $$12;
         }
-        if (bl4 || bl3) {
-            mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[1]).move(adjacencyInfo.corners[2]);
-            blockState = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-            f3 = cache.getShadeBrightness(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-            n2 = cache.getLightColor(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
+        if ($$28 || $$26) {
+            $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[1]).move($$8.corners[2]);
+            net.minecraft.world.level.block.state.BlockState $$41 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+            float $$42 = $$10.getShadeBrightness($$41, $$0, (net.minecraft.core.BlockPos)$$9);
+            int $$43 = $$10.getLightColor($$41, $$0, (net.minecraft.core.BlockPos)$$9);
         } else {
-            f3 = f6;
-            n2 = n5;
+            $$44 = $$13;
+            $$45 = $$12;
         }
-        if (bl || bl3) {
-            mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, adjacencyInfo.corners[1]).move(adjacencyInfo.corners[3]);
-            blockState = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-            f2 = cache.getShadeBrightness(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
-            n = cache.getLightColor(blockState, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
+        if ($$30 || $$26) {
+            $$9.setWithOffset((net.minecraft.core.Vec3i)$$7, $$8.corners[1]).move($$8.corners[3]);
+            net.minecraft.world.level.block.state.BlockState $$46 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+            float $$47 = $$10.getShadeBrightness($$46, $$0, (net.minecraft.core.BlockPos)$$9);
+            int $$48 = $$10.getLightColor($$46, $$0, (net.minecraft.core.BlockPos)$$9);
         } else {
-            f2 = f6;
-            n = n5;
+            $$49 = $$13;
+            $$50 = $$12;
         }
-        int n9 = cache.getLightColor(state, reader, pos);
-        mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)pos, direction);
-        net.minecraft.world.level.block.state.BlockState blockState10 = reader.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos);
-        if (bitSet.get(0) || !blockState10.isSolidRender((net.minecraft.world.level.BlockGetter)reader, (net.minecraft.core.BlockPos)mutableBlockPos)) {
-            n9 = cache.getLightColor(blockState10, reader, (net.minecraft.core.BlockPos)mutableBlockPos);
+        int $$51 = $$10.getLightColor($$1, $$0, $$2);
+        $$9.setWithOffset((net.minecraft.core.Vec3i)$$2, $$3);
+        net.minecraft.world.level.block.state.BlockState $$52 = $$0.getBlockState((net.minecraft.core.BlockPos)$$9);
+        if ($$5.get(0) || !$$52.isSolidRender((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$9)) {
+            $$51 = $$10.getLightColor($$52, $$0, (net.minecraft.core.BlockPos)$$9);
         }
-        float f10 = bitSet.get(0) ? cache.getShadeBrightness(reader.getBlockState(blockPos), reader, blockPos) : cache.getShadeBrightness(reader.getBlockState(pos), reader, pos);
-        net.minecraft.client.renderer.block.ModelBlockRenderer$AmbientVertexRemap ambientVertexRemap = net.minecraft.client.renderer.block.ModelBlockRenderer$AmbientVertexRemap.fromFacing((net.minecraft.core.Direction)direction);
-        if (!bitSet.get(1) || !adjacencyInfo.doNonCubicWeight) {
-            f = (f9 + f6 + f4 + f10) * 0.25f;
-            var45_46 = (f8 + f6 + f5 + f10) * 0.25f;
-            var46_48 = (f8 + f7 + f3 + f10) * 0.25f;
-            var47_49 = (f9 + f7 + f2 + f10) * 0.25f;
-            this.lightmap[ambientVertexRemap.vert0] = this.blend(n8, n5, n3, n9);
-            this.lightmap[ambientVertexRemap.vert1] = this.blend(n7, n5, n4, n9);
-            this.lightmap[ambientVertexRemap.vert2] = this.blend(n7, n6, n2, n9);
-            this.lightmap[ambientVertexRemap.vert3] = this.blend(n8, n6, n, n9);
-            this.brightness[ambientVertexRemap.vert0] = f;
-            this.brightness[ambientVertexRemap.vert1] = var45_46;
-            this.brightness[ambientVertexRemap.vert2] = var46_48;
-            this.brightness[ambientVertexRemap.vert3] = var47_49;
+        float $$53 = $$5.get(0) ? $$10.getShadeBrightness($$0.getBlockState($$7), $$0, $$7) : $$10.getShadeBrightness($$0.getBlockState($$2), $$0, $$2);
+        net.minecraft.client.renderer.block.ModelBlockRenderer$AmbientVertexRemap $$54 = net.minecraft.client.renderer.block.ModelBlockRenderer$AmbientVertexRemap.fromFacing((net.minecraft.core.Direction)$$3);
+        if (!$$5.get(1) || !$$8.doNonCubicWeight) {
+            float $$55 = ($$22 + $$13 + $$39 + $$53) * 0.25f;
+            float $$56 = ($$19 + $$13 + $$34 + $$53) * 0.25f;
+            float $$57 = ($$19 + $$16 + $$44 + $$53) * 0.25f;
+            float $$58 = ($$22 + $$16 + $$49 + $$53) * 0.25f;
+            this.lightmap[$$54.vert0] = this.blend($$21, $$12, $$40, $$51);
+            this.lightmap[$$54.vert1] = this.blend($$18, $$12, $$35, $$51);
+            this.lightmap[$$54.vert2] = this.blend($$18, $$15, $$45, $$51);
+            this.lightmap[$$54.vert3] = this.blend($$21, $$15, $$50, $$51);
+            this.brightness[$$54.vert0] = $$55;
+            this.brightness[$$54.vert1] = $$56;
+            this.brightness[$$54.vert2] = $$57;
+            this.brightness[$$54.vert3] = $$58;
         } else {
-            f = (f9 + f6 + f4 + f10) * 0.25f;
-            var45_46 = (f8 + f6 + f5 + f10) * 0.25f;
-            var46_48 = (f8 + f7 + f3 + f10) * 0.25f;
-            var47_49 = (f9 + f7 + f2 + f10) * 0.25f;
-            float f11 = vertexes[adjacencyInfo.vert0Weights[0].shape] * vertexes[adjacencyInfo.vert0Weights[1].shape];
-            float f12 = vertexes[adjacencyInfo.vert0Weights[2].shape] * vertexes[adjacencyInfo.vert0Weights[3].shape];
-            float f13 = vertexes[adjacencyInfo.vert0Weights[4].shape] * vertexes[adjacencyInfo.vert0Weights[5].shape];
-            float f14 = vertexes[adjacencyInfo.vert0Weights[6].shape] * vertexes[adjacencyInfo.vert0Weights[7].shape];
-            float f15 = vertexes[adjacencyInfo.vert1Weights[0].shape] * vertexes[adjacencyInfo.vert1Weights[1].shape];
-            float f16 = vertexes[adjacencyInfo.vert1Weights[2].shape] * vertexes[adjacencyInfo.vert1Weights[3].shape];
-            float f17 = vertexes[adjacencyInfo.vert1Weights[4].shape] * vertexes[adjacencyInfo.vert1Weights[5].shape];
-            float f18 = vertexes[adjacencyInfo.vert1Weights[6].shape] * vertexes[adjacencyInfo.vert1Weights[7].shape];
-            float f19 = vertexes[adjacencyInfo.vert2Weights[0].shape] * vertexes[adjacencyInfo.vert2Weights[1].shape];
-            float f20 = vertexes[adjacencyInfo.vert2Weights[2].shape] * vertexes[adjacencyInfo.vert2Weights[3].shape];
-            float f21 = vertexes[adjacencyInfo.vert2Weights[4].shape] * vertexes[adjacencyInfo.vert2Weights[5].shape];
-            float f22 = vertexes[adjacencyInfo.vert2Weights[6].shape] * vertexes[adjacencyInfo.vert2Weights[7].shape];
-            float f23 = vertexes[adjacencyInfo.vert3Weights[0].shape] * vertexes[adjacencyInfo.vert3Weights[1].shape];
-            float f24 = vertexes[adjacencyInfo.vert3Weights[2].shape] * vertexes[adjacencyInfo.vert3Weights[3].shape];
-            float f25 = vertexes[adjacencyInfo.vert3Weights[4].shape] * vertexes[adjacencyInfo.vert3Weights[5].shape];
-            float f26 = vertexes[adjacencyInfo.vert3Weights[6].shape] * vertexes[adjacencyInfo.vert3Weights[7].shape];
-            this.brightness[ambientVertexRemap.vert0] = f * f11 + var45_46 * f12 + var46_48 * f13 + var47_49 * f14;
-            this.brightness[ambientVertexRemap.vert1] = f * f15 + var45_46 * f16 + var46_48 * f17 + var47_49 * f18;
-            this.brightness[ambientVertexRemap.vert2] = f * f19 + var45_46 * f20 + var46_48 * f21 + var47_49 * f22;
-            this.brightness[ambientVertexRemap.vert3] = f * f23 + var45_46 * f24 + var46_48 * f25 + var47_49 * f26;
-            int n10 = this.blend(n8, n5, n3, n9);
-            int n11 = this.blend(n7, n5, n4, n9);
-            int n12 = this.blend(n7, n6, n2, n9);
-            int n13 = this.blend(n8, n6, n, n9);
-            this.lightmap[ambientVertexRemap.vert0] = this.blend(n10, n11, n12, n13, f11, f12, f13, f14);
-            this.lightmap[ambientVertexRemap.vert1] = this.blend(n10, n11, n12, n13, f15, f16, f17, f18);
-            this.lightmap[ambientVertexRemap.vert2] = this.blend(n10, n11, n12, n13, f19, f20, f21, f22);
-            this.lightmap[ambientVertexRemap.vert3] = this.blend(n10, n11, n12, n13, f23, f24, f25, f26);
+            float $$59 = ($$22 + $$13 + $$39 + $$53) * 0.25f;
+            float $$60 = ($$19 + $$13 + $$34 + $$53) * 0.25f;
+            float $$61 = ($$19 + $$16 + $$44 + $$53) * 0.25f;
+            float $$62 = ($$22 + $$16 + $$49 + $$53) * 0.25f;
+            float $$63 = $$4[$$8.vert0Weights[0].shape] * $$4[$$8.vert0Weights[1].shape];
+            float $$64 = $$4[$$8.vert0Weights[2].shape] * $$4[$$8.vert0Weights[3].shape];
+            float $$65 = $$4[$$8.vert0Weights[4].shape] * $$4[$$8.vert0Weights[5].shape];
+            float $$66 = $$4[$$8.vert0Weights[6].shape] * $$4[$$8.vert0Weights[7].shape];
+            float $$67 = $$4[$$8.vert1Weights[0].shape] * $$4[$$8.vert1Weights[1].shape];
+            float $$68 = $$4[$$8.vert1Weights[2].shape] * $$4[$$8.vert1Weights[3].shape];
+            float $$69 = $$4[$$8.vert1Weights[4].shape] * $$4[$$8.vert1Weights[5].shape];
+            float $$70 = $$4[$$8.vert1Weights[6].shape] * $$4[$$8.vert1Weights[7].shape];
+            float $$71 = $$4[$$8.vert2Weights[0].shape] * $$4[$$8.vert2Weights[1].shape];
+            float $$72 = $$4[$$8.vert2Weights[2].shape] * $$4[$$8.vert2Weights[3].shape];
+            float $$73 = $$4[$$8.vert2Weights[4].shape] * $$4[$$8.vert2Weights[5].shape];
+            float $$74 = $$4[$$8.vert2Weights[6].shape] * $$4[$$8.vert2Weights[7].shape];
+            float $$75 = $$4[$$8.vert3Weights[0].shape] * $$4[$$8.vert3Weights[1].shape];
+            float $$76 = $$4[$$8.vert3Weights[2].shape] * $$4[$$8.vert3Weights[3].shape];
+            float $$77 = $$4[$$8.vert3Weights[4].shape] * $$4[$$8.vert3Weights[5].shape];
+            float $$78 = $$4[$$8.vert3Weights[6].shape] * $$4[$$8.vert3Weights[7].shape];
+            this.brightness[$$54.vert0] = $$59 * $$63 + $$60 * $$64 + $$61 * $$65 + $$62 * $$66;
+            this.brightness[$$54.vert1] = $$59 * $$67 + $$60 * $$68 + $$61 * $$69 + $$62 * $$70;
+            this.brightness[$$54.vert2] = $$59 * $$71 + $$60 * $$72 + $$61 * $$73 + $$62 * $$74;
+            this.brightness[$$54.vert3] = $$59 * $$75 + $$60 * $$76 + $$61 * $$77 + $$62 * $$78;
+            int $$79 = this.blend($$21, $$12, $$40, $$51);
+            int $$80 = this.blend($$18, $$12, $$35, $$51);
+            int $$81 = this.blend($$18, $$15, $$45, $$51);
+            int $$82 = this.blend($$21, $$15, $$50, $$51);
+            this.lightmap[$$54.vert0] = this.blend($$79, $$80, $$81, $$82, $$63, $$64, $$65, $$66);
+            this.lightmap[$$54.vert1] = this.blend($$79, $$80, $$81, $$82, $$67, $$68, $$69, $$70);
+            this.lightmap[$$54.vert2] = this.blend($$79, $$80, $$81, $$82, $$71, $$72, $$73, $$74);
+            this.lightmap[$$54.vert3] = this.blend($$79, $$80, $$81, $$82, $$75, $$76, $$77, $$78);
         }
-        f = reader.getShade(direction, applyDiffuseLighting);
-        int n14 = 0;
-        while (n14 < this.brightness.length) {
-            int n15 = n14++;
-            this.brightness[n15] = this.brightness[n15] * f;
+        float $$83 = $$0.getShade($$3, $$6);
+        int $$84 = 0;
+        while ($$84 < this.brightness.length) {
+            int n = $$84++;
+            this.brightness[n] = this.brightness[n] * $$83;
         }
     }
 
-    public int blend(int br1, int br2, int br3, int br4) {
-        if (br1 == 0) {
-            br1 = br4;
+    public int blend(int $$0, int $$1, int $$2, int $$3) {
+        if ($$0 == 0) {
+            $$0 = $$3;
         }
-        if (br2 == 0) {
-            br2 = br4;
+        if ($$1 == 0) {
+            $$1 = $$3;
         }
-        if (br3 == 0) {
-            br3 = br4;
+        if ($$2 == 0) {
+            $$2 = $$3;
         }
-        return br1 + br2 + br3 + br4 >> 2 & 0xFF00FF;
+        return $$0 + $$1 + $$2 + $$3 >> 2 & 0xFF00FF;
     }
 
-    public int blend(int b1, int b2, int b3, int b4, float w1, float w2, float w3, float w4) {
-        int n = (int)((float)(b1 >> 16 & 0xFF) * w1 + (float)(b2 >> 16 & 0xFF) * w2 + (float)(b3 >> 16 & 0xFF) * w3 + (float)(b4 >> 16 & 0xFF) * w4) & 0xFF;
-        int n2 = (int)((float)(b1 & 0xFF) * w1 + (float)(b2 & 0xFF) * w2 + (float)(b3 & 0xFF) * w3 + (float)(b4 & 0xFF) * w4) & 0xFF;
-        return n << 16 | n2;
+    public int blend(int $$0, int $$1, int $$2, int $$3, float $$4, float $$5, float $$6, float $$7) {
+        int $$8 = (int)((float)($$0 >> 16 & 0xFF) * $$4 + (float)($$1 >> 16 & 0xFF) * $$5 + (float)($$2 >> 16 & 0xFF) * $$6 + (float)($$3 >> 16 & 0xFF) * $$7) & 0xFF;
+        int $$9 = (int)((float)($$0 & 0xFF) * $$4 + (float)($$1 & 0xFF) * $$5 + (float)($$2 & 0xFF) * $$6 + (float)($$3 & 0xFF) * $$7) & 0xFF;
+        return $$8 << 16 | $$9;
     }
 }
 