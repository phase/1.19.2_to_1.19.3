--- net/minecraft/client/renderer/block/model/Variant$Deserializer.java
+++ net/minecraft/client/renderer/block/model/Variant$Deserializer.java
@@ -27,30 +27,30 @@
         return new net.minecraft.client.renderer.block.model.Variant($$4, $$5.getRotation(), $$6, $$7);
     }
 
-    public boolean getUvLock(com.google.gson.JsonObject json) {
-        return net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)json, (java.lang.String)"uvlock", (boolean)false);
+    public boolean getUvLock(com.google.gson.JsonObject $$0) {
+        return net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)$$0, (java.lang.String)"uvlock", (boolean)false);
     }
 
-    public net.minecraft.client.resources.model.BlockModelRotation getBlockRotation(com.google.gson.JsonObject json) {
-        int n;
-        int n2 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)json, (java.lang.String)"x", (int)0);
-        net.minecraft.client.resources.model.BlockModelRotation blockModelRotation = net.minecraft.client.resources.model.BlockModelRotation.by((int)n2, (int)(n = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)json, (java.lang.String)"y", (int)0)));
-        if (blockModelRotation == null) {
-            throw new com.google.gson.JsonParseException("Invalid BlockModelRotation x: " + n2 + ", y: " + n);
+    public net.minecraft.client.resources.model.BlockModelRotation getBlockRotation(com.google.gson.JsonObject $$0) {
+        int $$2;
+        int $$1 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"x", (int)0);
+        net.minecraft.client.resources.model.BlockModelRotation $$3 = net.minecraft.client.resources.model.BlockModelRotation.by((int)$$1, (int)($$2 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"y", (int)0)));
+        if ($$3 == null) {
+            throw new com.google.gson.JsonParseException("Invalid BlockModelRotation x: " + $$1 + ", y: " + $$2);
         }
-        return blockModelRotation;
+        return $$3;
     }
 
-    public net.minecraft.resources.ResourceLocation getModel(com.google.gson.JsonObject json) {
-        return new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)json, (java.lang.String)"model"));
+    public net.minecraft.resources.ResourceLocation getModel(com.google.gson.JsonObject $$0) {
+        return new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"model"));
     }
 
-    public int getWeight(com.google.gson.JsonObject json) {
-        int n = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)json, (java.lang.String)"weight", (int)1);
-        if (n < 1) {
-            throw new com.google.gson.JsonParseException("Invalid weight " + n + " found, expected integer >= 1");
+    public int getWeight(com.google.gson.JsonObject $$0) {
+        int $$1 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"weight", (int)1);
+        if ($$1 < 1) {
+            throw new com.google.gson.JsonParseException("Invalid weight " + $$1 + " found, expected integer >= 1");
         }
-        return n;
+        return $$1;
     }
 
     public /* synthetic */ java.lang.Object deserialize(com.google.gson.JsonElement jsonElement, java.lang.reflect.Type type, com.google.gson.JsonDeserializationContext jsonDeserializationContext) throws com.google.gson.JsonParseException {