--- net/minecraft/client/renderer/block/model/FaceBakery.java
+++ net/minecraft/client/renderer/block/model/FaceBakery.java
@@ -15,235 +15,241 @@
     public net.minecraft.client.renderer.block.model.FaceBakery() {
     }
 
-    public net.minecraft.client.renderer.block.model.BakedQuad bakeQuad(com.mojang.math.Vector3f posFrom, com.mojang.math.Vector3f posTo, net.minecraft.client.renderer.block.model.BlockElementFace face, net.minecraft.client.renderer.texture.TextureAtlasSprite sprite, net.minecraft.core.Direction facing, net.minecraft.client.resources.model.ModelState transform, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation partRotation, boolean shade, net.minecraft.resources.ResourceLocation modelLocation) {
-        net.minecraft.client.renderer.block.model.BlockFaceUV blockFaceUV = face.uv;
-        if (transform.isUvLocked()) {
-            blockFaceUV = net.minecraft.client.renderer.block.model.FaceBakery.recomputeUVs((net.minecraft.client.renderer.block.model.BlockFaceUV)face.uv, (net.minecraft.core.Direction)facing, (com.mojang.math.Transformation)transform.getRotation(), (net.minecraft.resources.ResourceLocation)modelLocation);
+    public net.minecraft.client.renderer.block.model.BakedQuad bakeQuad(com.mojang.math.Vector3f $$0, com.mojang.math.Vector3f $$1, net.minecraft.client.renderer.block.model.BlockElementFace $$2, net.minecraft.client.renderer.texture.TextureAtlasSprite $$3, net.minecraft.core.Direction $$4, net.minecraft.client.resources.model.ModelState $$5, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation $$6, boolean $$7, net.minecraft.resources.ResourceLocation $$8) {
+        net.minecraft.client.renderer.block.model.BlockFaceUV $$9 = $$2.uv;
+        if ($$5.isUvLocked()) {
+            $$9 = net.minecraft.client.renderer.block.model.FaceBakery.recomputeUVs((net.minecraft.client.renderer.block.model.BlockFaceUV)$$2.uv, (net.minecraft.core.Direction)$$4, (com.mojang.math.Transformation)$$5.getRotation(), (net.minecraft.resources.ResourceLocation)$$8);
         }
-        float[] fArray = new float[blockFaceUV.uvs.length];
-        java.lang.System.arraycopy((java.lang.Object)blockFaceUV.uvs, (int)0, (java.lang.Object)fArray, (int)0, (int)fArray.length);
-        float f = sprite.uvShrinkRatio();
-        float f2 = (blockFaceUV.uvs[0] + blockFaceUV.uvs[0] + blockFaceUV.uvs[2] + blockFaceUV.uvs[2]) / 4.0f;
-        float f3 = (blockFaceUV.uvs[1] + blockFaceUV.uvs[1] + blockFaceUV.uvs[3] + blockFaceUV.uvs[3]) / 4.0f;
-        blockFaceUV.uvs[0] = net.minecraft.util.Mth.lerp((float)f, (float)blockFaceUV.uvs[0], (float)f2);
-        blockFaceUV.uvs[2] = net.minecraft.util.Mth.lerp((float)f, (float)blockFaceUV.uvs[2], (float)f2);
-        blockFaceUV.uvs[1] = net.minecraft.util.Mth.lerp((float)f, (float)blockFaceUV.uvs[1], (float)f3);
-        blockFaceUV.uvs[3] = net.minecraft.util.Mth.lerp((float)f, (float)blockFaceUV.uvs[3], (float)f3);
-        int[] nArray = this.makeVertices(blockFaceUV, sprite, facing, this.setupShape(posFrom, posTo), transform.getRotation(), partRotation, shade);
-        net.minecraft.core.Direction direction = net.minecraft.client.renderer.block.model.FaceBakery.calculateFacing((int[])nArray);
-        java.lang.System.arraycopy((java.lang.Object)fArray, (int)0, (java.lang.Object)blockFaceUV.uvs, (int)0, (int)fArray.length);
-        if (partRotation == null) {
-            this.recalculateWinding(nArray, direction);
+        float[] $$10 = new float[$$9.uvs.length];
+        java.lang.System.arraycopy((java.lang.Object)$$9.uvs, (int)0, (java.lang.Object)$$10, (int)0, (int)$$10.length);
+        float $$11 = $$3.uvShrinkRatio();
+        float $$12 = ($$9.uvs[0] + $$9.uvs[0] + $$9.uvs[2] + $$9.uvs[2]) / 4.0f;
+        float $$13 = ($$9.uvs[1] + $$9.uvs[1] + $$9.uvs[3] + $$9.uvs[3]) / 4.0f;
+        $$9.uvs[0] = net.minecraft.util.Mth.lerp((float)$$11, (float)$$9.uvs[0], (float)$$12);
+        $$9.uvs[2] = net.minecraft.util.Mth.lerp((float)$$11, (float)$$9.uvs[2], (float)$$12);
+        $$9.uvs[1] = net.minecraft.util.Mth.lerp((float)$$11, (float)$$9.uvs[1], (float)$$13);
+        $$9.uvs[3] = net.minecraft.util.Mth.lerp((float)$$11, (float)$$9.uvs[3], (float)$$13);
+        int[] $$14 = this.makeVertices($$9, $$3, $$4, this.setupShape($$0, $$1), $$5.getRotation(), $$6, $$7);
+        net.minecraft.core.Direction $$15 = net.minecraft.client.renderer.block.model.FaceBakery.calculateFacing((int[])$$14);
+        java.lang.System.arraycopy((java.lang.Object)$$10, (int)0, (java.lang.Object)$$9.uvs, (int)0, (int)$$10.length);
+        if ($$6 == null) {
+            this.recalculateWinding($$14, $$15);
         }
-        return new net.minecraft.client.renderer.block.model.BakedQuad(nArray, face.tintIndex, direction, sprite, shade);
+        return new net.minecraft.client.renderer.block.model.BakedQuad($$14, $$2.tintIndex, $$15, $$3, $$7);
     }
 
-    public static net.minecraft.client.renderer.block.model.BlockFaceUV recomputeUVs(net.minecraft.client.renderer.block.model.BlockFaceUV blockFaceUV, net.minecraft.core.Direction facing, com.mojang.math.Transformation modelRotation, net.minecraft.resources.ResourceLocation modelLocation) {
-        float f;
-        float f2;
-        float f3;
-        float f4;
-        com.mojang.math.Matrix4f matrix4f = net.minecraft.core.BlockMath.getUVLockTransform((com.mojang.math.Transformation)modelRotation, (net.minecraft.core.Direction)facing, () -> "Unable to resolve UVLock for model: " + modelLocation).getMatrix();
-        float f5 = blockFaceUV.getU(blockFaceUV.getReverseIndex(0));
-        float f6 = blockFaceUV.getV(blockFaceUV.getReverseIndex(0));
-        com.mojang.math.Vector4f vector4f = new com.mojang.math.Vector4f(f5 / 16.0f, f6 / 16.0f, 0.0f, 1.0f);
-        vector4f.transform(matrix4f);
-        float f7 = 16.0f * vector4f.x();
-        float f8 = 16.0f * vector4f.y();
-        float f9 = blockFaceUV.getU(blockFaceUV.getReverseIndex(2));
-        float f10 = blockFaceUV.getV(blockFaceUV.getReverseIndex(2));
-        com.mojang.math.Vector4f vector4f2 = new com.mojang.math.Vector4f(f9 / 16.0f, f10 / 16.0f, 0.0f, 1.0f);
-        vector4f2.transform(matrix4f);
-        float f11 = 16.0f * vector4f2.x();
-        float f12 = 16.0f * vector4f2.y();
-        if (java.lang.Math.signum((float)(f9 - f5)) == java.lang.Math.signum((float)(f11 - f7))) {
-            f4 = f7;
-            f3 = f11;
+    public static net.minecraft.client.renderer.block.model.BlockFaceUV recomputeUVs(net.minecraft.client.renderer.block.model.BlockFaceUV $$0, net.minecraft.core.Direction $$1, com.mojang.math.Transformation $$2, net.minecraft.resources.ResourceLocation $$3) {
+        float $$22;
+        float $$21;
+        float $$18;
+        float $$17;
+        com.mojang.math.Matrix4f $$4 = net.minecraft.core.BlockMath.getUVLockTransform((com.mojang.math.Transformation)$$2, (net.minecraft.core.Direction)$$1, () -> "Unable to resolve UVLock for model: " + $$3).getMatrix();
+        float $$5 = $$0.getU($$0.getReverseIndex(0));
+        float $$6 = $$0.getV($$0.getReverseIndex(0));
+        com.mojang.math.Vector4f $$7 = new com.mojang.math.Vector4f($$5 / 16.0f, $$6 / 16.0f, 0.0f, 1.0f);
+        $$7.transform($$4);
+        float $$8 = 16.0f * $$7.x();
+        float $$9 = 16.0f * $$7.y();
+        float $$10 = $$0.getU($$0.getReverseIndex(2));
+        float $$11 = $$0.getV($$0.getReverseIndex(2));
+        com.mojang.math.Vector4f $$12 = new com.mojang.math.Vector4f($$10 / 16.0f, $$11 / 16.0f, 0.0f, 1.0f);
+        $$12.transform($$4);
+        float $$13 = 16.0f * $$12.x();
+        float $$14 = 16.0f * $$12.y();
+        if (java.lang.Math.signum((float)($$10 - $$5)) == java.lang.Math.signum((float)($$13 - $$8))) {
+            float $$15 = $$8;
+            float $$16 = $$13;
         } else {
-            f4 = f11;
-            f3 = f7;
+            $$17 = $$13;
+            $$18 = $$8;
         }
-        if (java.lang.Math.signum((float)(f10 - f6)) == java.lang.Math.signum((float)(f12 - f8))) {
-            f2 = f8;
-            f = f12;
+        if (java.lang.Math.signum((float)($$11 - $$6)) == java.lang.Math.signum((float)($$14 - $$9))) {
+            float $$19 = $$9;
+            float $$20 = $$14;
         } else {
-            f2 = f12;
-            f = f8;
+            $$21 = $$14;
+            $$22 = $$9;
         }
-        float f13 = (float)java.lang.Math.toRadians((double)blockFaceUV.rotation);
-        com.mojang.math.Vector3f vector3f = new com.mojang.math.Vector3f(net.minecraft.util.Mth.cos((float)f13), net.minecraft.util.Mth.sin((float)f13), 0.0f);
-        com.mojang.math.Matrix3f matrix3f = new com.mojang.math.Matrix3f(matrix4f);
-        vector3f.transform(matrix3f);
-        int n = java.lang.Math.floorMod((int)(-((int)java.lang.Math.round((double)(java.lang.Math.toDegrees((double)java.lang.Math.atan2((double)vector3f.y(), (double)vector3f.x())) / 90.0))) * 90), (int)360);
-        return new net.minecraft.client.renderer.block.model.BlockFaceUV(new float[]{f4, f2, f3, f}, n);
+        float $$23 = (float)java.lang.Math.toRadians((double)$$0.rotation);
+        com.mojang.math.Vector3f $$24 = new com.mojang.math.Vector3f(net.minecraft.util.Mth.cos((float)$$23), net.minecraft.util.Mth.sin((float)$$23), 0.0f);
+        com.mojang.math.Matrix3f $$25 = new com.mojang.math.Matrix3f($$4);
+        $$24.transform($$25);
+        int $$26 = java.lang.Math.floorMod((int)(-((int)java.lang.Math.round((double)(java.lang.Math.toDegrees((double)java.lang.Math.atan2((double)$$24.y(), (double)$$24.x())) / 90.0))) * 90), (int)360);
+        return new net.minecraft.client.renderer.block.model.BlockFaceUV(new float[]{$$17, $$21, $$18, $$22}, $$26);
     }
 
-    public int[] makeVertices(net.minecraft.client.renderer.block.model.BlockFaceUV uvs, net.minecraft.client.renderer.texture.TextureAtlasSprite sprite, net.minecraft.core.Direction orientation, float[] posDiv16, com.mojang.math.Transformation rotation, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation partRotation, boolean shade) {
-        int[] nArray = new int[32];
-        for (int i = 0; i < 4; ++i) {
-            this.bakeVertex(nArray, i, orientation, uvs, posDiv16, sprite, rotation, partRotation, shade);
+    public int[] makeVertices(net.minecraft.client.renderer.block.model.BlockFaceUV $$0, net.minecraft.client.renderer.texture.TextureAtlasSprite $$1, net.minecraft.core.Direction $$2, float[] $$3, com.mojang.math.Transformation $$4, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation $$5, boolean $$6) {
+        int[] $$7 = new int[32];
+        for (int $$8 = 0; $$8 < 4; ++$$8) {
+            this.bakeVertex($$7, $$8, $$2, $$0, $$3, $$1, $$4, $$5, $$6);
         }
-        return nArray;
+        return $$7;
     }
 
-    public float[] setupShape(com.mojang.math.Vector3f pos1, com.mojang.math.Vector3f pos2) {
-        float[] fArray = new float[net.minecraft.core.Direction.values().length];
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X] = pos1.x() / 16.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y] = pos1.y() / 16.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z] = pos1.z() / 16.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X] = pos2.x() / 16.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y] = pos2.y() / 16.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z] = pos2.z() / 16.0f;
-        return fArray;
+    public float[] setupShape(com.mojang.math.Vector3f $$0, com.mojang.math.Vector3f $$1) {
+        float[] $$2 = new float[net.minecraft.core.Direction.values().length];
+        $$2[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X] = $$0.x() / 16.0f;
+        $$2[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y] = $$0.y() / 16.0f;
+        $$2[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z] = $$0.z() / 16.0f;
+        $$2[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X] = $$1.x() / 16.0f;
+        $$2[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y] = $$1.y() / 16.0f;
+        $$2[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z] = $$1.z() / 16.0f;
+        return $$2;
     }
 
-    public void bakeVertex(int[] vertexData, int vertexIndex, net.minecraft.core.Direction facing, net.minecraft.client.renderer.block.model.BlockFaceUV blockFaceUV, float[] posDiv16, net.minecraft.client.renderer.texture.TextureAtlasSprite sprite, com.mojang.math.Transformation rotation, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation partRotation, boolean shade) {
-        net.minecraft.client.renderer.FaceInfo$VertexInfo vertexInfo = net.minecraft.client.renderer.FaceInfo.fromFacing((net.minecraft.core.Direction)facing).getVertexInfo(vertexIndex);
-        com.mojang.math.Vector3f vector3f = new com.mojang.math.Vector3f(posDiv16[vertexInfo.xFace], posDiv16[vertexInfo.yFace], posDiv16[vertexInfo.zFace]);
-        this.applyElementRotation(vector3f, partRotation);
-        this.applyModelRotation(vector3f, rotation);
-        this.fillVertex(vertexData, vertexIndex, vector3f, sprite, blockFaceUV);
+    public void bakeVertex(int[] $$0, int $$1, net.minecraft.core.Direction $$2, net.minecraft.client.renderer.block.model.BlockFaceUV $$3, float[] $$4, net.minecraft.client.renderer.texture.TextureAtlasSprite $$5, com.mojang.math.Transformation $$6, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation $$7, boolean $$8) {
+        net.minecraft.client.renderer.FaceInfo$VertexInfo $$9 = net.minecraft.client.renderer.FaceInfo.fromFacing((net.minecraft.core.Direction)$$2).getVertexInfo($$1);
+        com.mojang.math.Vector3f $$10 = new com.mojang.math.Vector3f($$4[$$9.xFace], $$4[$$9.yFace], $$4[$$9.zFace]);
+        this.applyElementRotation($$10, $$7);
+        this.applyModelRotation($$10, $$6);
+        this.fillVertex($$0, $$1, $$10, $$5, $$3);
     }
 
-    public void fillVertex(int[] vertexData, int vertexIndex, com.mojang.math.Vector3f vector, net.minecraft.client.renderer.texture.TextureAtlasSprite sprite, net.minecraft.client.renderer.block.model.BlockFaceUV blockFaceUV) {
-        int n = vertexIndex * 8;
-        vertexData[n] = java.lang.Float.floatToRawIntBits((float)vector.x());
-        vertexData[n + 1] = java.lang.Float.floatToRawIntBits((float)vector.y());
-        vertexData[n + 2] = java.lang.Float.floatToRawIntBits((float)vector.z());
-        vertexData[n + 3] = -1;
-        vertexData[n + 4] = java.lang.Float.floatToRawIntBits((float)sprite.getU((double)blockFaceUV.getU(vertexIndex)));
-        vertexData[n + 4 + 1] = java.lang.Float.floatToRawIntBits((float)sprite.getV((double)blockFaceUV.getV(vertexIndex)));
+    public void fillVertex(int[] $$0, int $$1, com.mojang.math.Vector3f $$2, net.minecraft.client.renderer.texture.TextureAtlasSprite $$3, net.minecraft.client.renderer.block.model.BlockFaceUV $$4) {
+        int $$5 = $$1 * 8;
+        $$0[$$5] = java.lang.Float.floatToRawIntBits((float)$$2.x());
+        $$0[$$5 + 1] = java.lang.Float.floatToRawIntBits((float)$$2.y());
+        $$0[$$5 + 2] = java.lang.Float.floatToRawIntBits((float)$$2.z());
+        $$0[$$5 + 3] = -1;
+        $$0[$$5 + 4] = java.lang.Float.floatToRawIntBits((float)$$3.getU((double)$$4.getU($$1)));
+        $$0[$$5 + 4 + 1] = java.lang.Float.floatToRawIntBits((float)$$3.getV((double)$$4.getV($$1)));
     }
 
-    public void applyElementRotation(com.mojang.math.Vector3f vec, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation partRotation) {
-        com.mojang.math.Vector3f vector3f;
-        if (partRotation == null) {
+    /*
+     * WARNING - void declaration
+     */
+    public void applyElementRotation(com.mojang.math.Vector3f $$0, @javax.annotation.Nullable net.minecraft.client.renderer.block.model.BlockElementRotation $$1) {
+        void $$9;
+        void $$8;
+        if ($$1 == null) {
             return;
         }
-        com.mojang.math.Vector3f vector3f2 = switch (net.minecraft.client.renderer.block.model.FaceBakery$1.$SwitchMap$net$minecraft$core$Direction$Axis[partRotation.axis.ordinal()]) {
-            case 1 -> {
-                vector3f = com.mojang.math.Vector3f.XP;
-                yield new com.mojang.math.Vector3f(0.0f, 1.0f, 1.0f);
+        switch (net.minecraft.client.renderer.block.model.FaceBakery$1.$SwitchMap$net$minecraft$core$Direction$Axis[$$1.axis.ordinal()]) {
+            case 1: {
+                com.mojang.math.Vector3f $$2 = com.mojang.math.Vector3f.XP;
+                com.mojang.math.Vector3f $$3 = new com.mojang.math.Vector3f(0.0f, 1.0f, 1.0f);
+                break;
             }
-            case 2 -> {
-                vector3f = com.mojang.math.Vector3f.YP;
-                yield new com.mojang.math.Vector3f(1.0f, 0.0f, 1.0f);
+            case 2: {
+                com.mojang.math.Vector3f $$4 = com.mojang.math.Vector3f.YP;
+                com.mojang.math.Vector3f $$5 = new com.mojang.math.Vector3f(1.0f, 0.0f, 1.0f);
+                break;
             }
-            case 3 -> {
-                vector3f = com.mojang.math.Vector3f.ZP;
-                yield new com.mojang.math.Vector3f(1.0f, 1.0f, 0.0f);
+            case 3: {
+                com.mojang.math.Vector3f $$6 = com.mojang.math.Vector3f.ZP;
+                com.mojang.math.Vector3f $$7 = new com.mojang.math.Vector3f(1.0f, 1.0f, 0.0f);
+                break;
             }
-            default -> throw new java.lang.IllegalArgumentException("There are only 3 axes");
-        };
-        com.mojang.math.Quaternion quaternion = vector3f.rotationDegrees(partRotation.angle);
-        if (partRotation.rescale) {
-            if (java.lang.Math.abs((float)partRotation.angle) == 22.5f) {
-                vector3f2.mul(RESCALE_22_5);
+            default: {
+                throw new java.lang.IllegalArgumentException("There are only 3 axes");
+            }
+        }
+        com.mojang.math.Quaternion $$10 = $$8.rotationDegrees($$1.angle);
+        if ($$1.rescale) {
+            if (java.lang.Math.abs((float)$$1.angle) == 22.5f) {
+                $$9.mul(RESCALE_22_5);
             } else {
-                vector3f2.mul(RESCALE_45);
+                $$9.mul(RESCALE_45);
             }
-            vector3f2.add(1.0f, 1.0f, 1.0f);
+            $$9.add(1.0f, 1.0f, 1.0f);
         } else {
-            vector3f2.set(1.0f, 1.0f, 1.0f);
+            $$9.set(1.0f, 1.0f, 1.0f);
         }
-        this.rotateVertexBy(vec, partRotation.origin.copy(), new com.mojang.math.Matrix4f(quaternion), vector3f2);
+        this.rotateVertexBy($$0, $$1.origin.copy(), new com.mojang.math.Matrix4f($$10), (com.mojang.math.Vector3f)$$9);
     }
 
-    public void applyModelRotation(com.mojang.math.Vector3f pos, com.mojang.math.Transformation transform) {
-        if (transform == com.mojang.math.Transformation.identity()) {
+    public void applyModelRotation(com.mojang.math.Vector3f $$0, com.mojang.math.Transformation $$1) {
+        if ($$1 == com.mojang.math.Transformation.identity()) {
             return;
         }
-        this.rotateVertexBy(pos, new com.mojang.math.Vector3f(0.5f, 0.5f, 0.5f), transform.getMatrix(), new com.mojang.math.Vector3f(1.0f, 1.0f, 1.0f));
+        this.rotateVertexBy($$0, new com.mojang.math.Vector3f(0.5f, 0.5f, 0.5f), $$1.getMatrix(), new com.mojang.math.Vector3f(1.0f, 1.0f, 1.0f));
     }
 
-    public void rotateVertexBy(com.mojang.math.Vector3f pos, com.mojang.math.Vector3f origin, com.mojang.math.Matrix4f transform, com.mojang.math.Vector3f scale) {
-        com.mojang.math.Vector4f vector4f = new com.mojang.math.Vector4f(pos.x() - origin.x(), pos.y() - origin.y(), pos.z() - origin.z(), 1.0f);
-        vector4f.transform(transform);
-        vector4f.mul(scale);
-        pos.set(vector4f.x() + origin.x(), vector4f.y() + origin.y(), vector4f.z() + origin.z());
+    public void rotateVertexBy(com.mojang.math.Vector3f $$0, com.mojang.math.Vector3f $$1, com.mojang.math.Matrix4f $$2, com.mojang.math.Vector3f $$3) {
+        com.mojang.math.Vector4f $$4 = new com.mojang.math.Vector4f($$0.x() - $$1.x(), $$0.y() - $$1.y(), $$0.z() - $$1.z(), 1.0f);
+        $$4.transform($$2);
+        $$4.mul($$3);
+        $$0.set($$4.x() + $$1.x(), $$4.y() + $$1.y(), $$4.z() + $$1.z());
     }
 
-    public static net.minecraft.core.Direction calculateFacing(int[] faceData) {
-        com.mojang.math.Vector3f vector3f = new com.mojang.math.Vector3f(java.lang.Float.intBitsToFloat((int)faceData[0]), java.lang.Float.intBitsToFloat((int)faceData[1]), java.lang.Float.intBitsToFloat((int)faceData[2]));
-        com.mojang.math.Vector3f vector3f2 = new com.mojang.math.Vector3f(java.lang.Float.intBitsToFloat((int)faceData[8]), java.lang.Float.intBitsToFloat((int)faceData[9]), java.lang.Float.intBitsToFloat((int)faceData[10]));
-        com.mojang.math.Vector3f vector3f3 = new com.mojang.math.Vector3f(java.lang.Float.intBitsToFloat((int)faceData[16]), java.lang.Float.intBitsToFloat((int)faceData[17]), java.lang.Float.intBitsToFloat((int)faceData[18]));
-        com.mojang.math.Vector3f vector3f4 = vector3f.copy();
-        vector3f4.sub(vector3f2);
-        com.mojang.math.Vector3f vector3f5 = vector3f3.copy();
-        vector3f5.sub(vector3f2);
-        com.mojang.math.Vector3f vector3f6 = vector3f5.copy();
-        vector3f6.cross(vector3f4);
-        vector3f6.normalize();
-        net.minecraft.core.Direction direction = null;
-        float f = 0.0f;
-        for (net.minecraft.core.Direction direction2 : net.minecraft.core.Direction.values()) {
-            net.minecraft.core.Vec3i vec3i = direction2.getNormal();
-            com.mojang.math.Vector3f vector3f7 = new com.mojang.math.Vector3f((float)vec3i.getX(), (float)vec3i.getY(), (float)vec3i.getZ());
-            float f2 = vector3f6.dot(vector3f7);
-            if (!(f2 >= 0.0f) || !(f2 > f)) continue;
-            f = f2;
-            direction = direction2;
+    public static net.minecraft.core.Direction calculateFacing(int[] $$0) {
+        com.mojang.math.Vector3f $$1 = new com.mojang.math.Vector3f(java.lang.Float.intBitsToFloat((int)$$0[0]), java.lang.Float.intBitsToFloat((int)$$0[1]), java.lang.Float.intBitsToFloat((int)$$0[2]));
+        com.mojang.math.Vector3f $$2 = new com.mojang.math.Vector3f(java.lang.Float.intBitsToFloat((int)$$0[8]), java.lang.Float.intBitsToFloat((int)$$0[9]), java.lang.Float.intBitsToFloat((int)$$0[10]));
+        com.mojang.math.Vector3f $$3 = new com.mojang.math.Vector3f(java.lang.Float.intBitsToFloat((int)$$0[16]), java.lang.Float.intBitsToFloat((int)$$0[17]), java.lang.Float.intBitsToFloat((int)$$0[18]));
+        com.mojang.math.Vector3f $$4 = $$1.copy();
+        $$4.sub($$2);
+        com.mojang.math.Vector3f $$5 = $$3.copy();
+        $$5.sub($$2);
+        com.mojang.math.Vector3f $$6 = $$5.copy();
+        $$6.cross($$4);
+        $$6.normalize();
+        net.minecraft.core.Direction $$7 = null;
+        float $$8 = 0.0f;
+        for (net.minecraft.core.Direction $$9 : net.minecraft.core.Direction.values()) {
+            net.minecraft.core.Vec3i $$10 = $$9.getNormal();
+            com.mojang.math.Vector3f $$11 = new com.mojang.math.Vector3f((float)$$10.getX(), (float)$$10.getY(), (float)$$10.getZ());
+            float $$12 = $$6.dot($$11);
+            if (!($$12 >= 0.0f) || !($$12 > $$8)) continue;
+            $$8 = $$12;
+            $$7 = $$9;
         }
-        if (direction == null) {
+        if ($$7 == null) {
             return net.minecraft.core.Direction.UP;
         }
-        return direction;
+        return $$7;
     }
 
-    public void recalculateWinding(int[] vertexData, net.minecraft.core.Direction direction) {
-        float f;
-        int n;
-        int[] nArray = new int[vertexData.length];
-        java.lang.System.arraycopy((java.lang.Object)vertexData, (int)0, (java.lang.Object)nArray, (int)0, (int)vertexData.length);
-        float[] fArray = new float[net.minecraft.core.Direction.values().length];
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X] = 999.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y] = 999.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z] = 999.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X] = -999.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y] = -999.0f;
-        fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z] = -999.0f;
-        for (int i = 0; i < 4; ++i) {
-            n = 8 * i;
-            float f2 = java.lang.Float.intBitsToFloat((int)nArray[n]);
-            float f3 = java.lang.Float.intBitsToFloat((int)nArray[n + 1]);
-            f = java.lang.Float.intBitsToFloat((int)nArray[n + 2]);
-            if (f2 < fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X]) {
-                fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X] = f2;
+    public void recalculateWinding(int[] $$0, net.minecraft.core.Direction $$1) {
+        int[] $$2 = new int[$$0.length];
+        java.lang.System.arraycopy((java.lang.Object)$$0, (int)0, (java.lang.Object)$$2, (int)0, (int)$$0.length);
+        float[] $$3 = new float[net.minecraft.core.Direction.values().length];
+        $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X] = 999.0f;
+        $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y] = 999.0f;
+        $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z] = 999.0f;
+        $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X] = -999.0f;
+        $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y] = -999.0f;
+        $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z] = -999.0f;
+        for (int $$4 = 0; $$4 < 4; ++$$4) {
+            int $$5 = 8 * $$4;
+            float $$6 = java.lang.Float.intBitsToFloat((int)$$2[$$5]);
+            float $$7 = java.lang.Float.intBitsToFloat((int)$$2[$$5 + 1]);
+            float $$8 = java.lang.Float.intBitsToFloat((int)$$2[$$5 + 2]);
+            if ($$6 < $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X]) {
+                $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_X] = $$6;
             }
-            if (f3 < fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y]) {
-                fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y] = f3;
+            if ($$7 < $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y]) {
+                $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Y] = $$7;
             }
-            if (f < fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z]) {
-                fArray[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z] = f;
+            if ($$8 < $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z]) {
+                $$3[net.minecraft.client.renderer.FaceInfo$Constants.MIN_Z] = $$8;
             }
-            if (f2 > fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X]) {
-                fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X] = f2;
+            if ($$6 > $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X]) {
+                $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_X] = $$6;
             }
-            if (f3 > fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y]) {
-                fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y] = f3;
+            if ($$7 > $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y]) {
+                $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Y] = $$7;
             }
-            if (!(f > fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z])) continue;
-            fArray[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z] = f;
+            if (!($$8 > $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z])) continue;
+            $$3[net.minecraft.client.renderer.FaceInfo$Constants.MAX_Z] = $$8;
         }
-        net.minecraft.client.renderer.FaceInfo faceInfo = net.minecraft.client.renderer.FaceInfo.fromFacing((net.minecraft.core.Direction)direction);
-        for (n = 0;
- n < 4; ++n) {
-            int n2 = 8 * n;
-            net.minecraft.client.renderer.FaceInfo$VertexInfo vertexInfo = faceInfo.getVertexInfo(n);
-            f = fArray[vertexInfo.xFace];
-            float f4 = fArray[vertexInfo.yFace];
-            float f5 = fArray[vertexInfo.zFace];
-            vertexData[n2] = java.lang.Float.floatToRawIntBits((float)f);
-            vertexData[n2 + 1] = java.lang.Float.floatToRawIntBits((float)f4);
-            vertexData[n2 + 2] = java.lang.Float.floatToRawIntBits((float)f5);
-            for (int i = 0; i < 4; ++i) {
-                int n3 = 8 * i;
-                float f6 = java.lang.Float.intBitsToFloat((int)nArray[n3]);
-                float f7 = java.lang.Float.intBitsToFloat((int)nArray[n3 + 1]);
-                float f8 = java.lang.Float.intBitsToFloat((int)nArray[n3 + 2]);
-                if (!net.minecraft.util.Mth.equal((float)f, (float)f6) || !net.minecraft.util.Mth.equal((float)f4, (float)f7) || !net.minecraft.util.Mth.equal((float)f5, (float)f8)) continue;
-                vertexData[n2 + 4] = nArray[n3 + 4];
-                vertexData[n2 + 4 + 1] = nArray[n3 + 4 + 1];
+        net.minecraft.client.renderer.FaceInfo $$9 = net.minecraft.client.renderer.FaceInfo.fromFacing((net.minecraft.core.Direction)$$1);
+        for (int $$10 = 0; $$10 < 4; ++$$10) {
+            int $$11 = 8 * $$10;
+            net.minecraft.client.renderer.FaceInfo$VertexInfo $$12 = $$9.getVertexInfo($$10);
+            float $$13 = $$3[$$12.xFace];
+            float $$14 = $$3[$$12.yFace];
+            float $$15 = $$3[$$12.zFace];
+            $$0[$$11] = java.lang.Float.floatToRawIntBits((float)$$13);
+            $$0[$$11 + 1] = java.lang.Float.floatToRawIntBits((float)$$14);
+            $$0[$$11 + 2] = java.lang.Float.floatToRawIntBits((float)$$15);
+            for (int $$16 = 0; $$16 < 4; ++$$16) {
+                int $$17 = 8 * $$16;
+                float $$18 = java.lang.Float.intBitsToFloat((int)$$2[$$17]);
+                float $$19 = java.lang.Float.intBitsToFloat((int)$$2[$$17 + 1]);
+                float $$20 = java.lang.Float.intBitsToFloat((int)$$2[$$17 + 2]);
+                if (!net.minecraft.util.Mth.equal((float)$$13, (float)$$18) || !net.minecraft.util.Mth.equal((float)$$14, (float)$$19) || !net.minecraft.util.Mth.equal((float)$$15, (float)$$20)) continue;
+                $$0[$$11 + 4] = $$2[$$17 + 4];
+                $$0[$$11 + 4 + 1] = $$2[$$17 + 4 + 1];
             }
         }
     }