--- net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer.java
+++ net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer.java
@@ -14,35 +14,35 @@
         return new net.minecraft.client.renderer.block.model.multipart.Selector(this.getSelector($$3), (net.minecraft.client.renderer.block.model.MultiVariant)$$2.deserialize($$3.get("apply"), net.minecraft.client.renderer.block.model.MultiVariant.class));
     }
 
-    public net.minecraft.client.renderer.block.model.multipart.Condition getSelector(com.google.gson.JsonObject json) {
-        if (json.has("when")) {
-            return net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getCondition((com.google.gson.JsonObject)net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)json, (java.lang.String)"when"));
+    public net.minecraft.client.renderer.block.model.multipart.Condition getSelector(com.google.gson.JsonObject $$0) {
+        if ($$0.has("when")) {
+            return net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getCondition((com.google.gson.JsonObject)net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$0, (java.lang.String)"when"));
         }
         return net.minecraft.client.renderer.block.model.multipart.Condition.TRUE;
     }
 
     @com.google.common.annotations.VisibleForTesting
-    public static net.minecraft.client.renderer.block.model.multipart.Condition getCondition(com.google.gson.JsonObject json) {
-        java.util.Set set = json.entrySet();
-        if (set.isEmpty()) {
+    public static net.minecraft.client.renderer.block.model.multipart.Condition getCondition(com.google.gson.JsonObject $$02) {
+        java.util.Set $$1 = $$02.entrySet();
+        if ($$1.isEmpty()) {
             throw new com.google.gson.JsonParseException("No elements found in selector");
         }
-        if (set.size() == 1) {
-            if (json.has("OR")) {
-                java.util.List list = (java.util.List)com.google.common.collect.Streams.stream((java.lang.Iterable)net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)json, (java.lang.String)"OR")).map($$0 -> net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getCondition((com.google.gson.JsonObject)$$0.getAsJsonObject())).collect(java.util.stream.Collectors.toList());
-                return new net.minecraft.client.renderer.block.model.multipart.OrCondition((java.lang.Iterable)list);
+        if ($$1.size() == 1) {
+            if ($$02.has("OR")) {
+                java.util.List $$2 = (java.util.List)com.google.common.collect.Streams.stream((java.lang.Iterable)net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$02, (java.lang.String)"OR")).map($$0 -> net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getCondition((com.google.gson.JsonObject)$$0.getAsJsonObject())).collect(java.util.stream.Collectors.toList());
+                return new net.minecraft.client.renderer.block.model.multipart.OrCondition((java.lang.Iterable)$$2);
             }
-            if (json.has("AND")) {
-                java.util.List list = (java.util.List)com.google.common.collect.Streams.stream((java.lang.Iterable)net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)json, (java.lang.String)"AND")).map($$0 -> net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getCondition((com.google.gson.JsonObject)$$0.getAsJsonObject())).collect(java.util.stream.Collectors.toList());
-                return new net.minecraft.client.renderer.block.model.multipart.AndCondition((java.lang.Iterable)list);
+            if ($$02.has("AND")) {
+                java.util.List $$3 = (java.util.List)com.google.common.collect.Streams.stream((java.lang.Iterable)net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$02, (java.lang.String)"AND")).map($$0 -> net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getCondition((com.google.gson.JsonObject)$$0.getAsJsonObject())).collect(java.util.stream.Collectors.toList());
+                return new net.minecraft.client.renderer.block.model.multipart.AndCondition((java.lang.Iterable)$$3);
             }
-            return net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getKeyValueCondition((java.util.Map$Entry)((java.util.Map$Entry)set.iterator().next()));
+            return net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer.getKeyValueCondition((java.util.Map$Entry)((java.util.Map$Entry)$$1.iterator().next()));
         }
-        return new net.minecraft.client.renderer.block.model.multipart.AndCondition((java.lang.Iterable)set.stream().map(net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer::getKeyValueCondition).collect(java.util.stream.Collectors.toList()));
+        return new net.minecraft.client.renderer.block.model.multipart.AndCondition((java.lang.Iterable)$$1.stream().map(net.minecraft.client.renderer.block.model.multipart.Selector$Deserializer::getKeyValueCondition).collect(java.util.stream.Collectors.toList()));
     }
 
-    public static net.minecraft.client.renderer.block.model.multipart.Condition getKeyValueCondition(java.util.Map$Entry<java.lang.String, com.google.gson.JsonElement> entry) {
-        return new net.minecraft.client.renderer.block.model.multipart.KeyValueCondition((java.lang.String)entry.getKey(), ((com.google.gson.JsonElement)entry.getValue()).getAsString());
+    public static net.minecraft.client.renderer.block.model.multipart.Condition getKeyValueCondition(java.util.Map$Entry<java.lang.String, com.google.gson.JsonElement> $$0) {
+        return new net.minecraft.client.renderer.block.model.multipart.KeyValueCondition((java.lang.String)$$0.getKey(), ((com.google.gson.JsonElement)$$0.getValue()).getAsString());
     }
 
     public /* synthetic */ java.lang.Object deserialize(com.google.gson.JsonElement jsonElement, java.lang.reflect.Type type, com.google.gson.JsonDeserializationContext jsonDeserializationContext) throws com.google.gson.JsonParseException {