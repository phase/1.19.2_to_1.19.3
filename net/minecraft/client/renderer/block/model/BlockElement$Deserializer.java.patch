--- net/minecraft/client/renderer/block/model/BlockElement$Deserializer.java
+++ net/minecraft/client/renderer/block/model/BlockElement$Deserializer.java
@@ -25,89 +25,89 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.client.renderer.block.model.BlockElementRotation getRotation(com.google.gson.JsonObject object) {
-        net.minecraft.client.renderer.block.model.BlockElementRotation blockElementRotation = null;
-        if (object.has("rotation")) {
-            com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)object, (java.lang.String)"rotation");
-            com.mojang.math.Vector3f vector3f = this.getVector3f(jsonObject, "origin");
-            vector3f.mul(0.0625f);
-            net.minecraft.core.Direction$Axis axis = this.getAxis(jsonObject);
-            float f = this.getAngle(jsonObject);
-            boolean bl = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"rescale", (boolean)false);
-            blockElementRotation = new net.minecraft.client.renderer.block.model.BlockElementRotation(vector3f, axis, f, bl);
+    public net.minecraft.client.renderer.block.model.BlockElementRotation getRotation(com.google.gson.JsonObject $$0) {
+        net.minecraft.client.renderer.block.model.BlockElementRotation $$1 = null;
+        if ($$0.has("rotation")) {
+            com.google.gson.JsonObject $$2 = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$0, (java.lang.String)"rotation");
+            com.mojang.math.Vector3f $$3 = this.getVector3f($$2, "origin");
+            $$3.mul(0.0625f);
+            net.minecraft.core.Direction$Axis $$4 = this.getAxis($$2);
+            float $$5 = this.getAngle($$2);
+            boolean $$6 = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)$$2, (java.lang.String)"rescale", (boolean)false);
+            $$1 = new net.minecraft.client.renderer.block.model.BlockElementRotation($$3, $$4, $$5, $$6);
         }
-        return blockElementRotation;
+        return $$1;
     }
 
-    public float getAngle(com.google.gson.JsonObject object) {
-        float f = net.minecraft.util.GsonHelper.getAsFloat((com.google.gson.JsonObject)object, (java.lang.String)"angle");
-        if (f != 0.0f && net.minecraft.util.Mth.abs((float)f) != 22.5f && net.minecraft.util.Mth.abs((float)f) != 45.0f) {
-            throw new com.google.gson.JsonParseException("Invalid rotation " + f + " found, only -45/-22.5/0/22.5/45 allowed");
+    public float getAngle(com.google.gson.JsonObject $$0) {
+        float $$1 = net.minecraft.util.GsonHelper.getAsFloat((com.google.gson.JsonObject)$$0, (java.lang.String)"angle");
+        if ($$1 != 0.0f && net.minecraft.util.Mth.abs((float)$$1) != 22.5f && net.minecraft.util.Mth.abs((float)$$1) != 45.0f) {
+            throw new com.google.gson.JsonParseException("Invalid rotation " + $$1 + " found, only -45/-22.5/0/22.5/45 allowed");
         }
-        return f;
+        return $$1;
     }
 
-    public net.minecraft.core.Direction$Axis getAxis(com.google.gson.JsonObject object) {
-        java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)object, (java.lang.String)"axis");
-        net.minecraft.core.Direction$Axis axis = net.minecraft.core.Direction$Axis.byName((java.lang.String)string.toLowerCase(java.util.Locale.ROOT));
-        if (axis == null) {
-            throw new com.google.gson.JsonParseException("Invalid rotation axis: " + string);
+    public net.minecraft.core.Direction$Axis getAxis(com.google.gson.JsonObject $$0) {
+        java.lang.String $$1 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"axis");
+        net.minecraft.core.Direction$Axis $$2 = net.minecraft.core.Direction$Axis.byName((java.lang.String)$$1.toLowerCase(java.util.Locale.ROOT));
+        if ($$2 == null) {
+            throw new com.google.gson.JsonParseException("Invalid rotation axis: " + $$1);
         }
-        return axis;
+        return $$2;
     }
 
-    public java.util.Map<net.minecraft.core.Direction, net.minecraft.client.renderer.block.model.BlockElementFace> getFaces(com.google.gson.JsonDeserializationContext deserializationContext, com.google.gson.JsonObject object) {
-        java.util.Map map = this.filterNullFromFaces(deserializationContext, object);
-        if (map.isEmpty()) {
+    public java.util.Map<net.minecraft.core.Direction, net.minecraft.client.renderer.block.model.BlockElementFace> getFaces(com.google.gson.JsonDeserializationContext $$0, com.google.gson.JsonObject $$1) {
+        java.util.Map $$2 = this.filterNullFromFaces($$0, $$1);
+        if ($$2.isEmpty()) {
             throw new com.google.gson.JsonParseException("Expected between 1 and 6 unique faces, got 0");
         }
-        return map;
+        return $$2;
     }
 
-    public java.util.Map<net.minecraft.core.Direction, net.minecraft.client.renderer.block.model.BlockElementFace> filterNullFromFaces(com.google.gson.JsonDeserializationContext deserializationContext, com.google.gson.JsonObject object) {
-        java.util.EnumMap enumMap = com.google.common.collect.Maps.newEnumMap(net.minecraft.core.Direction.class);
-        com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)object, (java.lang.String)"faces");
-        for (java.util.Map$Entry entry : jsonObject.entrySet()) {
-            net.minecraft.core.Direction direction = this.getFacing((java.lang.String)entry.getKey());
-            enumMap.put((java.lang.Object)direction, (java.lang.Object)((net.minecraft.client.renderer.block.model.BlockElementFace)deserializationContext.deserialize((com.google.gson.JsonElement)entry.getValue(), net.minecraft.client.renderer.block.model.BlockElementFace.class)));
+    public java.util.Map<net.minecraft.core.Direction, net.minecraft.client.renderer.block.model.BlockElementFace> filterNullFromFaces(com.google.gson.JsonDeserializationContext $$0, com.google.gson.JsonObject $$1) {
+        java.util.EnumMap $$2 = com.google.common.collect.Maps.newEnumMap(net.minecraft.core.Direction.class);
+        com.google.gson.JsonObject $$3 = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$1, (java.lang.String)"faces");
+        for (java.util.Map$Entry $$4 : $$3.entrySet()) {
+            net.minecraft.core.Direction $$5 = this.getFacing((java.lang.String)$$4.getKey());
+            $$2.put((java.lang.Object)$$5, (java.lang.Object)((net.minecraft.client.renderer.block.model.BlockElementFace)$$0.deserialize((com.google.gson.JsonElement)$$4.getValue(), net.minecraft.client.renderer.block.model.BlockElementFace.class)));
         }
-        return enumMap;
+        return $$2;
     }
 
-    public net.minecraft.core.Direction getFacing(java.lang.String name) {
-        net.minecraft.core.Direction direction = net.minecraft.core.Direction.byName((java.lang.String)name);
-        if (direction == null) {
-            throw new com.google.gson.JsonParseException("Unknown facing: " + name);
+    public net.minecraft.core.Direction getFacing(java.lang.String $$0) {
+        net.minecraft.core.Direction $$1 = net.minecraft.core.Direction.byName((java.lang.String)$$0);
+        if ($$1 == null) {
+            throw new com.google.gson.JsonParseException("Unknown facing: " + $$0);
         }
-        return direction;
+        return $$1;
     }
 
-    public com.mojang.math.Vector3f getTo(com.google.gson.JsonObject json) {
-        com.mojang.math.Vector3f vector3f = this.getVector3f(json, "to");
-        if (vector3f.x() < -16.0f || vector3f.y() < -16.0f || vector3f.z() < -16.0f || vector3f.x() > 32.0f || vector3f.y() > 32.0f || vector3f.z() > 32.0f) {
-            throw new com.google.gson.JsonParseException("'to' specifier exceeds the allowed boundaries: " + vector3f);
+    public com.mojang.math.Vector3f getTo(com.google.gson.JsonObject $$0) {
+        com.mojang.math.Vector3f $$1 = this.getVector3f($$0, "to");
+        if ($$1.x() < -16.0f || $$1.y() < -16.0f || $$1.z() < -16.0f || $$1.x() > 32.0f || $$1.y() > 32.0f || $$1.z() > 32.0f) {
+            throw new com.google.gson.JsonParseException("'to' specifier exceeds the allowed boundaries: " + $$1);
         }
-        return vector3f;
+        return $$1;
     }
 
-    public com.mojang.math.Vector3f getFrom(com.google.gson.JsonObject json) {
-        com.mojang.math.Vector3f vector3f = this.getVector3f(json, "from");
-        if (vector3f.x() < -16.0f || vector3f.y() < -16.0f || vector3f.z() < -16.0f || vector3f.x() > 32.0f || vector3f.y() > 32.0f || vector3f.z() > 32.0f) {
-            throw new com.google.gson.JsonParseException("'from' specifier exceeds the allowed boundaries: " + vector3f);
+    public com.mojang.math.Vector3f getFrom(com.google.gson.JsonObject $$0) {
+        com.mojang.math.Vector3f $$1 = this.getVector3f($$0, "from");
+        if ($$1.x() < -16.0f || $$1.y() < -16.0f || $$1.z() < -16.0f || $$1.x() > 32.0f || $$1.y() > 32.0f || $$1.z() > 32.0f) {
+            throw new com.google.gson.JsonParseException("'from' specifier exceeds the allowed boundaries: " + $$1);
         }
-        return vector3f;
+        return $$1;
     }
 
-    public com.mojang.math.Vector3f getVector3f(com.google.gson.JsonObject json, java.lang.String name) {
-        com.google.gson.JsonArray jsonArray = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)json, (java.lang.String)name);
-        if (jsonArray.size() != 3) {
-            throw new com.google.gson.JsonParseException("Expected 3 " + name + " values, found: " + jsonArray.size());
+    public com.mojang.math.Vector3f getVector3f(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        com.google.gson.JsonArray $$2 = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$0, (java.lang.String)$$1);
+        if ($$2.size() != 3) {
+            throw new com.google.gson.JsonParseException("Expected 3 " + $$1 + " values, found: " + $$2.size());
         }
-        float[] fArray = new float[3];
-        for (int i = 0; i < fArray.length; ++i) {
-            fArray[i] = net.minecraft.util.GsonHelper.convertToFloat((com.google.gson.JsonElement)jsonArray.get(i), (java.lang.String)(name + "[" + i + "]"));
+        float[] $$3 = new float[3];
+        for (int $$4 = 0; $$4 < $$3.length; ++$$4) {
+            $$3[$$4] = net.minecraft.util.GsonHelper.convertToFloat((com.google.gson.JsonElement)$$2.get($$4), (java.lang.String)($$1 + "[" + $$4 + "]"));
         }
-        return new com.mojang.math.Vector3f(fArray[0], fArray[1], fArray[2]);
+        return new com.mojang.math.Vector3f($$3[0], $$3[1], $$3[2]);
     }
 
     public /* synthetic */ java.lang.Object deserialize(com.google.gson.JsonElement jsonElement, java.lang.reflect.Type type, com.google.gson.JsonDeserializationContext jsonDeserializationContext) throws com.google.gson.JsonParseException {