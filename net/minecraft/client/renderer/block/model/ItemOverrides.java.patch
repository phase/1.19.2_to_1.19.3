--- net/minecraft/client/renderer/block/model/ItemOverrides.java
+++ net/minecraft/client/renderer/block/model/ItemOverrides.java
@@ -14,29 +14,29 @@
         this.properties = new net.minecraft.resources.ResourceLocation[0];
     }
 
-    public net.minecraft.client.renderer.block.model.ItemOverrides(net.minecraft.client.resources.model.ModelBakery $$0, net.minecraft.client.renderer.block.model.BlockModel $$1, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.resources.model.UnbakedModel> $$2, java.util.List<net.minecraft.client.renderer.block.model.ItemOverride> $$3) {
-        this.properties = (net.minecraft.resources.ResourceLocation[])$$3.stream().flatMap(net.minecraft.client.renderer.block.model.ItemOverride::getPredicates).map(net.minecraft.client.renderer.block.model.ItemOverride$Predicate::getProperty).distinct().toArray(net.minecraft.resources.ResourceLocation[]::new);
-        it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap $$4 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap();
-        for (int $$5 = 0; $$5 < this.properties.length; ++$$5) {
-            $$4.put((java.lang.Object)this.properties[$$5], $$5);
+    public net.minecraft.client.renderer.block.model.ItemOverrides(net.minecraft.client.resources.model.ModelBaker $$0, net.minecraft.client.renderer.block.model.BlockModel $$1, java.util.List<net.minecraft.client.renderer.block.model.ItemOverride> $$2) {
+        this.properties = (net.minecraft.resources.ResourceLocation[])$$2.stream().flatMap(net.minecraft.client.renderer.block.model.ItemOverride::getPredicates).map(net.minecraft.client.renderer.block.model.ItemOverride$Predicate::getProperty).distinct().toArray(net.minecraft.resources.ResourceLocation[]::new);
+        it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap $$3 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap();
+        for (int $$4 = 0; $$4 < this.properties.length; ++$$4) {
+            $$3.put((java.lang.Object)this.properties[$$4], $$4);
         }
-        java.util.ArrayList $$6 = com.google.common.collect.Lists.newArrayList();
-        for (int $$7 = $$3.size() - 1; $$7 >= 0; --$$7) {
-            net.minecraft.client.renderer.block.model.ItemOverride $$8 = (net.minecraft.client.renderer.block.model.ItemOverride)$$3.get($$7);
-            net.minecraft.client.resources.model.BakedModel $$9 = this.bakeModel($$0, $$1, $$2, $$8);
-            net.minecraft.client.renderer.block.model.ItemOverrides$PropertyMatcher[] $$10 = (net.minecraft.client.renderer.block.model.ItemOverrides$PropertyMatcher[])$$8.getPredicates().map(arg_0 -> net.minecraft.client.renderer.block.model.ItemOverrides.lambda$new$1((it.unimi.dsi.fastutil.objects.Object2IntMap)$$4, arg_0)).toArray(net.minecraft.client.renderer.block.model.ItemOverrides$PropertyMatcher[]::new);
-            $$6.add((java.lang.Object)new net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride($$10, $$9));
+        java.util.ArrayList $$5 = com.google.common.collect.Lists.newArrayList();
+        for (int $$6 = $$2.size() - 1; $$6 >= 0; --$$6) {
+            net.minecraft.client.renderer.block.model.ItemOverride $$7 = (net.minecraft.client.renderer.block.model.ItemOverride)$$2.get($$6);
+            net.minecraft.client.resources.model.BakedModel $$8 = this.bakeModel($$0, $$1, $$7);
+            net.minecraft.client.renderer.block.model.ItemOverrides$PropertyMatcher[] $$9 = (net.minecraft.client.renderer.block.model.ItemOverrides$PropertyMatcher[])$$7.getPredicates().map(arg_0 -> net.minecraft.client.renderer.block.model.ItemOverrides.lambda$new$1((it.unimi.dsi.fastutil.objects.Object2IntMap)$$3, arg_0)).toArray(net.minecraft.client.renderer.block.model.ItemOverrides$PropertyMatcher[]::new);
+            $$5.add((java.lang.Object)new net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride($$9, $$8));
         }
-        this.overrides = (net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride[])$$6.toArray((java.lang.Object[])new net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride[0]);
+        this.overrides = (net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride[])$$5.toArray((java.lang.Object[])new net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride[0]);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.client.resources.model.BakedModel bakeModel(net.minecraft.client.resources.model.ModelBakery $$0, net.minecraft.client.renderer.block.model.BlockModel $$1, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.resources.model.UnbakedModel> $$2, net.minecraft.client.renderer.block.model.ItemOverride $$3) {
-        net.minecraft.client.resources.model.UnbakedModel $$4 = (net.minecraft.client.resources.model.UnbakedModel)$$2.apply((java.lang.Object)$$3.getModel());
-        if (java.util.Objects.equals((java.lang.Object)$$4, (java.lang.Object)$$1)) {
+    public net.minecraft.client.resources.model.BakedModel bakeModel(net.minecraft.client.resources.model.ModelBaker $$0, net.minecraft.client.renderer.block.model.BlockModel $$1, net.minecraft.client.renderer.block.model.ItemOverride $$2) {
+        net.minecraft.client.resources.model.UnbakedModel $$3 = $$0.getModel($$2.getModel());
+        if (java.util.Objects.equals((java.lang.Object)$$3, (java.lang.Object)$$1)) {
             return null;
         }
-        return $$0.bake($$3.getModel(), (net.minecraft.client.resources.model.ModelState)net.minecraft.client.resources.model.BlockModelRotation.X0_Y0);
+        return $$0.bake($$2.getModel(), (net.minecraft.client.resources.model.ModelState)net.minecraft.client.resources.model.BlockModelRotation.X0_Y0);
     }
 
     @javax.annotation.Nullable