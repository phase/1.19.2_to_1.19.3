--- net/minecraft/client/renderer/texture/SpriteLoader$Preparations.java
+++ net/minecraft/client/renderer/texture/SpriteLoader$Preparations.java
@@ -1,0 +1,65 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.client.renderer.texture;
+
+public class net.minecraft.client.renderer.texture.SpriteLoader$Preparations
+extends java.lang.Record
+ {
+    public int width;
+    public int height;
+    public int mipLevel;
+    public net.minecraft.client.renderer.texture.TextureAtlasSprite missing;
+    public java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.texture.TextureAtlasSprite> regions;
+    public java.util.concurrent.CompletableFuture<java.lang.Void> readyForUpload;
+
+    public net.minecraft.client.renderer.texture.SpriteLoader$Preparations(int $$0, int $$1, int $$2, net.minecraft.client.renderer.texture.TextureAtlasSprite $$3, java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.texture.TextureAtlasSprite> $$4, java.util.concurrent.CompletableFuture<java.lang.Void> $$5) {
+        this.width = $$0;
+        this.height = $$1;
+        this.mipLevel = $$2;
+        this.missing = $$3;
+        this.regions = $$4;
+        this.readyForUpload = $$5;
+    }
+
+    public java.util.concurrent.CompletableFuture<net.minecraft.client.renderer.texture.SpriteLoader$Preparations> waitForUpload() {
+        return this.readyForUpload.thenApply($$0 -> this);
+    }
+
+    public java.lang.String toString() {
+        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.client.renderer.texture.SpriteLoader$Preparations.class, "width;height;mipLevel;missing;regions;readyForUpload", "width", "height", "mipLevel", "missing", "regions", "readyForUpload"}, this);
+    }
+
+    public int hashCode() {
+        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.client.renderer.texture.SpriteLoader$Preparations.class, "width;height;mipLevel;missing;regions;readyForUpload", "width", "height", "mipLevel", "missing", "regions", "readyForUpload"}, this);
+    }
+
+    public boolean equals(java.lang.Object $$0) {
+        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.client.renderer.texture.SpriteLoader$Preparations.class, "width;height;mipLevel;missing;regions;readyForUpload", "width", "height", "mipLevel", "missing", "regions", "readyForUpload"}, this, $$0);
+    }
+
+    public int width() {
+        return this.width;
+    }
+
+    public int height() {
+        return this.height;
+    }
+
+    public int mipLevel() {
+        return this.mipLevel;
+    }
+
+    public net.minecraft.client.renderer.texture.TextureAtlasSprite missing() {
+        return this.missing;
+    }
+
+    public java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.texture.TextureAtlasSprite> regions() {
+        return this.regions;
+    }
+
+    public java.util.concurrent.CompletableFuture<java.lang.Void> readyForUpload() {
+        return this.readyForUpload;
+    }
+}
+