--- net/minecraft/client/renderer/texture/TextureAtlasSprite.java
+++ net/minecraft/client/renderer/texture/TextureAtlasSprite.java
@@ -4,16 +4,9 @@
 package net.minecraft.client.renderer.texture;
 
 public class net.minecraft.client.renderer.texture.TextureAtlasSprite
-implements java.lang.AutoCloseable
  {
-    public static org.slf4j.Logger LOGGER;
-    public net.minecraft.client.renderer.texture.TextureAtlas atlas;
-    public net.minecraft.resources.ResourceLocation name;
-    public int width;
-    public int height;
-    public com.mojang.blaze3d.platform.NativeImage[] mainImage;
-    @javax.annotation.Nullable
-    public net.minecraft.client.renderer.texture.TextureAtlasSprite$AnimatedTexture animatedTexture;
+    public net.minecraft.resources.ResourceLocation atlasLocation;
+    public net.minecraft.client.renderer.texture.SpriteContents contents;
     public int x;
     public int y;
     public float u0;
@@ -21,103 +14,17 @@
     public float v0;
     public float v1;
 
-    public net.minecraft.client.renderer.texture.TextureAtlasSprite(net.minecraft.client.renderer.texture.TextureAtlas atlas, net.minecraft.client.renderer.texture.TextureAtlasSprite$Info info, int n, int n2, int n3, int x, int y, com.mojang.blaze3d.platform.NativeImage nativeImage) {
-        this.atlas = atlas;
-        this.width = info.width;
-        this.height = info.height;
-        this.name = info.name;
-        this.x = x;
-        this.y = y;
-        this.u0 = (float)x / (float)n2;
-        this.u1 = (float)(x + this.width) / (float)n2;
-        this.v0 = (float)y / (float)n3;
-        this.v1 = (float)(y + this.height) / (float)n3;
-        this.animatedTexture = this.createTicker(info, nativeImage.getWidth(), nativeImage.getHeight(), n);
-        try {
-            try {
-                this.mainImage = net.minecraft.client.renderer.texture.MipmapGenerator.generateMipLevels((com.mojang.blaze3d.platform.NativeImage)nativeImage, (int)n);
-            }
-            catch (java.lang.Throwable throwable) {
-                net.minecraft.CrashReport crashReport = net.minecraft.CrashReport.forThrowable((java.lang.Throwable)throwable, (java.lang.String)"Generating mipmaps for frame");
-                net.minecraft.CrashReportCategory crashReportCategory = crashReport.addCategory("Frame being iterated");
-                crashReportCategory.setDetail("First frame", () -> {
-                    java.lang.StringBuilder $$1 = new java.lang.StringBuilder();
-                    if ($$1.length() > 0) {
-                        $$1.append(", ");
-                    }
-                    $$1.append(nativeImage.getWidth()).append("x").append(nativeImage.getHeight());
-                    return $$1.toString();
-                });
-                throw new net.minecraft.ReportedException(crashReport);
-            }
-        }
-        catch (java.lang.Throwable throwable) {
-            net.minecraft.CrashReport crashReport = net.minecraft.CrashReport.forThrowable((java.lang.Throwable)throwable, (java.lang.String)"Applying mipmap");
-            net.minecraft.CrashReportCategory crashReportCategory = crashReport.addCategory("Sprite being mipmapped");
-            crashReportCategory.setDetail("Sprite name", () -> ((net.minecraft.resources.ResourceLocation)this.name).toString());
-            crashReportCategory.setDetail("Sprite size", () -> this.width + " x " + this.height);
-            crashReportCategory.setDetail("Sprite frames", () -> this.getFrameCount() + " frames");
-            crashReportCategory.setDetail("Mipmap levels", (java.lang.Object)n);
-            throw new net.minecraft.ReportedException(crashReport);
-        }
+    public net.minecraft.client.renderer.texture.TextureAtlasSprite(net.minecraft.resources.ResourceLocation $$0, net.minecraft.client.renderer.texture.SpriteContents $$1, int $$2, int $$3, int $$4, int $$5) {
+        this.atlasLocation = $$0;
+        this.contents = $$1;
+        this.x = $$4;
+        this.y = $$5;
+        this.u0 = (float)$$4 / (float)$$2;
+        this.u1 = (float)($$4 + $$1.width()) / (float)$$2;
+        this.v0 = (float)$$5 / (float)$$3;
+        this.v1 = (float)($$5 + $$1.height()) / (float)$$3;
     }
 
-    public int getFrameCount() {
-        return this.animatedTexture != null ? this.animatedTexture.frames.size() : 1;
-    }
-
-    @javax.annotation.Nullable
-    public net.minecraft.client.renderer.texture.TextureAtlasSprite$AnimatedTexture createTicker(net.minecraft.client.renderer.texture.TextureAtlasSprite$Info $$0, int $$1, int $$2, int $$3) {
-        net.minecraft.client.resources.metadata.animation.AnimationMetadataSection $$4 = $$0.metadata;
-        int $$5 = $$1 / $$4.getFrameWidth($$0.width);
-        int $$6 = $$2 / $$4.getFrameHeight($$0.height);
-        int $$7 = $$5 * $$6;
-        java.util.ArrayList $$8 = com.google.common.collect.Lists.newArrayList();
-        $$4.forEachFrame((arg_0, arg_1) -> net.minecraft.client.renderer.texture.TextureAtlasSprite.lambda$createTicker$3((java.util.List)$$8, arg_0, arg_1));
-        if ($$8.isEmpty()) {
-            for (int $$9 = 0; $$9 < $$7; ++$$9) {
-                $$8.add((java.lang.Object)new net.minecraft.client.renderer.texture.TextureAtlasSprite$FrameInfo($$9, $$4.getDefaultFrameTime()));
-            }
-        } else {
-            int $$10 = 0;
-            it.unimi.dsi.fastutil.ints.IntOpenHashSet $$11 = new it.unimi.dsi.fastutil.ints.IntOpenHashSet();
-            java.util.Iterator $$12 = $$8.iterator();
-            while ($$12.hasNext()) {
-                net.minecraft.client.renderer.texture.TextureAtlasSprite$FrameInfo $$13 = (net.minecraft.client.renderer.texture.TextureAtlasSprite$FrameInfo)$$12.next();
-                boolean $$14 = true;
-                if ($$13.time <= 0) {
-                    LOGGER.warn("Invalid frame duration on sprite {} frame {}: {}", new java.lang.Object[]{this.name, $$10, $$13.time});
-                    $$14 = false;
-                }
-                if ($$13.index < 0 || $$13.index >= $$7) {
-                    LOGGER.warn("Invalid frame index on sprite {} frame {}: {}", new java.lang.Object[]{this.name, $$10, $$13.index});
-                    $$14 = false;
-                }
-                if ($$14) {
-                    $$11.add($$13.index);
-                } else {
-                    $$12.remove();
-                }
-                ++$$10;
-            }
-            int[] $$15 = java.util.stream.IntStream.range((int)0, (int)$$7).filter(arg_0 -> net.minecraft.client.renderer.texture.TextureAtlasSprite.lambda$createTicker$4((it.unimi.dsi.fastutil.ints.IntSet)$$11, arg_0)).toArray();
-            if ($$15.length > 0) {
-                LOGGER.warn("Unused frames in sprite {}: {}", (java.lang.Object)this.name, (java.lang.Object)java.util.Arrays.toString((int[])$$15));
-            }
-        }
-        if ($$8.size() <= 1) {
-            return null;
-        }
-        net.minecraft.client.renderer.texture.TextureAtlasSprite$InterpolationData $$16 = $$4.isInterpolatedFrames() ? new net.minecraft.client.renderer.texture.TextureAtlasSprite$InterpolationData(this, $$0, $$3) : null;
-        return new net.minecraft.client.renderer.texture.TextureAtlasSprite$AnimatedTexture(this, (java.util.List)com.google.common.collect.ImmutableList.copyOf((java.util.Collection)$$8), $$5, $$16);
-    }
-
-    public void upload(int xOffset, int yOffset, com.mojang.blaze3d.platform.NativeImage[] frames) {
-        for (int i = 0; i < this.mainImage.length; ++i) {
-            frames[i].upload(i, this.x >> i, this.y >> i, xOffset >> i, yOffset >> i, this.width >> i, this.height >> i, this.mainImage.length > 1, false);
-        }
-    }
-
     public int getX() {
         return this.x;
     }
@@ -126,14 +33,6 @@
         return this.y;
     }
 
-    public int getWidth() {
-        return this.width;
-    }
-
-    public int getHeight() {
-        return this.height;
-    }
-
     public float getU0() {
         return this.u0;
     }
@@ -142,11 +41,24 @@
         return this.u1;
     }
 
-    public float getU(double u) {
-        float f = this.u1 - this.u0;
-        return this.u0 + f * (float)u / 16.0f;
+    public net.minecraft.client.renderer.texture.SpriteContents contents() {
+        return this.contents;
     }
 
+    @javax.annotation.Nullable
+    public net.minecraft.client.renderer.texture.TextureAtlasSprite$Ticker createTicker() {
+        net.minecraft.client.renderer.texture.SpriteTicker $$0 = this.contents.createTicker();
+        if ($$0 != null) {
+            return new /* Unavailable Anonymous Inner Class!! */;
+        }
+        return null;
+    }
+
+    public float getU(double $$0) {
+        float $$1 = this.u1 - this.u0;
+        return this.u0 + $$1 * (float)$$0 / 16.0f;
+    }
+
     public float getUOffset(float $$0) {
         float $$1 = this.u1 - this.u0;
         return ($$0 - this.u0) / $$1 * 16.0f;
@@ -160,9 +72,9 @@
         return this.v1;
     }
 
-    public float getV(double v) {
-        float f = this.v1 - this.v0;
-        return this.v0 + f * (float)v / 16.0f;
+    public float getV(double $$0) {
+        float $$1 = this.v1 - this.v0;
+        return this.v0 + $$1 * (float)$$0 / 16.0f;
     }
 
     public float getVOffset(float $$0) {
@@ -170,53 +82,21 @@
         return ($$0 - this.v0) / $$1 * 16.0f;
     }
 
-    public net.minecraft.resources.ResourceLocation getName() {
-        return this.name;
+    public net.minecraft.resources.ResourceLocation atlasLocation() {
+        return this.atlasLocation;
     }
 
-    public net.minecraft.client.renderer.texture.TextureAtlas atlas() {
-        return this.atlas;
-    }
-
-    public java.util.stream.IntStream getUniqueFrames() {
-        return this.animatedTexture != null ? this.animatedTexture.getUniqueFrames() : java.util.stream.IntStream.of((int)1);
-    }
-
-    public void close() {
-        for (com.mojang.blaze3d.platform.NativeImage $$0 : this.mainImage) {
-            if ($$0 == null) continue;
-            $$0.close();
-        }
-        if (this.animatedTexture != null) {
-            this.animatedTexture.close();
-        }
-    }
-
     public java.lang.String toString() {
-        return "TextureAtlasSprite{name='" + this.name + "', frameCount=" + this.getFrameCount() + ", x=" + this.x + ", y=" + this.y + ", height=" + this.height + ", width=" + this.width + ", u0=" + this.u0 + ", u1=" + this.u1 + ", v0=" + this.v0 + ", v1=" + this.v1 + "}";
+        return "TextureAtlasSprite{contents='" + this.contents + "', u0=" + this.u0 + ", u1=" + this.u1 + ", v0=" + this.v0 + ", v1=" + this.v1 + "}";
     }
 
-    public boolean isTransparent(int frameIndex, int pixelX, int pixelY) {
-        int n = pixelX;
-        int n2 = pixelY;
-        if (this.animatedTexture != null) {
-            n += this.animatedTexture.getFrameX(frameIndex) * this.width;
-            n2 += this.animatedTexture.getFrameY(frameIndex) * this.height;
-        }
-        return (this.mainImage[0].getPixelRGBA(n, n2) >> 24 & 0xFF) == 0;
-    }
-
     public void uploadFirstFrame() {
-        if (this.animatedTexture != null) {
-            this.animatedTexture.uploadFirstFrame();
-        } else {
-            this.upload(0, 0, this.mainImage);
-        }
+        this.contents.uploadFirstFrame(this.x, this.y);
     }
 
     public float atlasSize() {
-        float $$0 = (float)this.width / (this.u1 - this.u0);
-        float $$1 = (float)this.height / (this.v1 - this.v0);
+        float $$0 = (float)this.contents.width() / (this.u1 - this.u0);
+        float $$1 = (float)this.contents.height() / (this.v1 - this.v0);
         return java.lang.Math.max((float)$$1, (float)$$0);
     }
 
@@ -224,25 +104,8 @@
         return 4.0f / this.atlasSize();
     }
 
-    @javax.annotation.Nullable
-    public net.minecraft.client.renderer.texture.Tickable getAnimationTicker() {
-        return this.animatedTexture;
+    public com.mojang.blaze3d.vertex.VertexConsumer wrap(com.mojang.blaze3d.vertex.VertexConsumer $$0) {
+        return new net.minecraft.client.renderer.SpriteCoordinateExpander($$0, this);
     }
-
-    public com.mojang.blaze3d.vertex.VertexConsumer wrap(com.mojang.blaze3d.vertex.VertexConsumer buffer) {
-        return new net.minecraft.client.renderer.SpriteCoordinateExpander(buffer, this);
-    }
-
-    public static /* synthetic */ boolean lambda$createTicker$4(it.unimi.dsi.fastutil.ints.IntSet $$0, int $$1) {
-        return !$$0.contains($$1);
-    }
-
-    public static /* synthetic */ void lambda$createTicker$3(java.util.List $$0, int $$1, int $$2) {
-        $$0.add((java.lang.Object)new net.minecraft.client.renderer.texture.TextureAtlasSprite$FrameInfo($$1, $$2));
-    }
-
-    static {
-        LOGGER = com.mojang.logging.LogUtils.getLogger();
-    }
 }
 