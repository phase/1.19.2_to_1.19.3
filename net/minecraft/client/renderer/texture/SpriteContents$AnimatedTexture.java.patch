--- net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture.java
+++ net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture.java
@@ -1,0 +1,46 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.client.renderer.texture;
+
+public class net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture
+ {
+    public java.util.List<net.minecraft.client.renderer.texture.SpriteContents$FrameInfo> frames;
+    public int frameRowSize;
+    public boolean interpolateFrames;
+    public /* synthetic */ net.minecraft.client.renderer.texture.SpriteContents this$0;
+
+    public net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture(net.minecraft.client.renderer.texture.SpriteContents spriteContents, java.util.List<net.minecraft.client.renderer.texture.SpriteContents$FrameInfo> $$0, int $$1, boolean $$2) {
+        this.this$0 = spriteContents;
+        this.frames = $$0;
+        this.frameRowSize = $$1;
+        this.interpolateFrames = $$2;
+    }
+
+    public int getFrameX(int $$0) {
+        return $$0 % this.frameRowSize;
+    }
+
+    public int getFrameY(int $$0) {
+        return $$0 / this.frameRowSize;
+    }
+
+    public void uploadFrame(int $$0, int $$1, int $$2) {
+        int $$3 = this.getFrameX($$2) * this.this$0.width;
+        int $$4 = this.getFrameY($$2) * this.this$0.height;
+        this.this$0.upload($$0, $$1, $$3, $$4, this.this$0.byMipLevel);
+    }
+
+    public net.minecraft.client.renderer.texture.SpriteTicker createTicker() {
+        return new net.minecraft.client.renderer.texture.SpriteContents$Ticker(this.this$0, this, this.interpolateFrames ? new net.minecraft.client.renderer.texture.SpriteContents$InterpolationData(this.this$0) : null);
+    }
+
+    public void uploadFirstFrame(int $$0, int $$1) {
+        this.uploadFrame($$0, $$1, ((net.minecraft.client.renderer.texture.SpriteContents$FrameInfo)this.frames.get((int)0)).index);
+    }
+
+    public java.util.stream.IntStream getUniqueFrames() {
+        return this.frames.stream().mapToInt($$0 -> $$0.index).distinct();
+    }
+}
+