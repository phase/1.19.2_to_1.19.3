--- net/minecraft/client/renderer/blockentity/HangingSignRenderer$HangingSignModel.java
+++ net/minecraft/client/renderer/blockentity/HangingSignRenderer$HangingSignModel.java
@@ -1,0 +1,38 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.client.renderer.blockentity;
+
+public class net.minecraft.client.renderer.blockentity.HangingSignRenderer$HangingSignModel
+extends net.minecraft.client.model.Model
+ {
+    public net.minecraft.client.model.geom.ModelPart root;
+    public net.minecraft.client.model.geom.ModelPart plank;
+    public net.minecraft.client.model.geom.ModelPart vChains;
+    public net.minecraft.client.model.geom.ModelPart normalChains;
+
+    public net.minecraft.client.renderer.blockentity.HangingSignRenderer$HangingSignModel(net.minecraft.client.model.geom.ModelPart $$0) {
+        super(net.minecraft.client.renderer.RenderType::entityCutoutNoCull);
+        this.root = $$0;
+        this.plank = $$0.getChild("plank");
+        this.normalChains = $$0.getChild("normalChains");
+        this.vChains = $$0.getChild("vChains");
+    }
+
+    public void evaluateVisibleParts(net.minecraft.world.level.block.state.BlockState $$0) {
+        boolean $$1;
+        this.plank.visible = $$1 = !($$0.getBlock() instanceof net.minecraft.world.level.block.CeilingHangingSignBlock);
+        this.vChains.visible = false;
+        this.normalChains.visible = true;
+        if (!$$1) {
+            boolean $$2 = (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.ATTACHED);
+            this.normalChains.visible = !$$2;
+            this.vChains.visible = $$2;
+        }
+    }
+
+    public void renderToBuffer(com.mojang.blaze3d.vertex.PoseStack $$0, com.mojang.blaze3d.vertex.VertexConsumer $$1, int $$2, int $$3, float $$4, float $$5, float $$6, float $$7) {
+        this.root.render($$0, $$1, $$2, $$3, $$4, $$5, $$6, $$7);
+    }
+}
+