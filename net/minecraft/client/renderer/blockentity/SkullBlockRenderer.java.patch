--- net/minecraft/client/renderer/blockentity/SkullBlockRenderer.java
+++ net/minecraft/client/renderer/blockentity/SkullBlockRenderer.java
@@ -24,16 +24,17 @@
         this.modelByType = net.minecraft.client.renderer.blockentity.SkullBlockRenderer.createSkullRenderers((net.minecraft.client.model.geom.EntityModelSet)$$0.getModelSet());
     }
 
-    public void render(net.minecraft.world.level.block.entity.SkullBlockEntity blockEntity, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, int combinedOverlay) {
-        float f = blockEntity.getMouthAnimation(partialTicks);
-        net.minecraft.world.level.block.state.BlockState blockState = blockEntity.getBlockState();
-        boolean bl = blockState.getBlock() instanceof net.minecraft.world.level.block.WallSkullBlock;
-        net.minecraft.core.Direction direction = bl ? (net.minecraft.core.Direction)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.WallSkullBlock.FACING) : null;
-        float f2 = 22.5f * (float)(bl ? (2 + direction.get2DDataValue()) * 4 : (java.lang.Integer)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.SkullBlock.ROTATION));
-        net.minecraft.world.level.block.SkullBlock$Type type = ((net.minecraft.world.level.block.AbstractSkullBlock)blockState.getBlock()).getType();
-        net.minecraft.client.model.SkullModelBase skullModelBase = (net.minecraft.client.model.SkullModelBase)this.modelByType.get((java.lang.Object)type);
-        net.minecraft.client.renderer.RenderType renderType = net.minecraft.client.renderer.blockentity.SkullBlockRenderer.getRenderType((net.minecraft.world.level.block.SkullBlock$Type)type, (com.mojang.authlib.GameProfile)blockEntity.getOwnerProfile());
-        net.minecraft.client.renderer.blockentity.SkullBlockRenderer.renderSkull((net.minecraft.core.Direction)direction, (float)f2, (float)f, (com.mojang.blaze3d.vertex.PoseStack)matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, (int)combinedLight, (net.minecraft.client.model.SkullModelBase)skullModelBase, (net.minecraft.client.renderer.RenderType)renderType);
+    public void render(net.minecraft.world.level.block.entity.SkullBlockEntity $$0, float $$1, com.mojang.blaze3d.vertex.PoseStack $$2, net.minecraft.client.renderer.MultiBufferSource $$3, int $$4, int $$5) {
+        float $$6 = $$0.getMouthAnimation($$1);
+        net.minecraft.world.level.block.state.BlockState $$7 = $$0.getBlockState();
+        boolean $$8 = $$7.getBlock() instanceof net.minecraft.world.level.block.WallSkullBlock;
+        net.minecraft.core.Direction $$9 = $$8 ? (net.minecraft.core.Direction)$$7.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.WallSkullBlock.FACING) : null;
+        int $$10 = $$8 ? net.minecraft.world.level.block.state.properties.RotationSegment.convertToSegment((net.minecraft.core.Direction)$$9) : (java.lang.Integer)$$7.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.SkullBlock.ROTATION);
+        float $$11 = net.minecraft.world.level.block.state.properties.RotationSegment.convertToDegrees((int)$$10);
+        net.minecraft.world.level.block.SkullBlock$Type $$12 = ((net.minecraft.world.level.block.AbstractSkullBlock)$$7.getBlock()).getType();
+        net.minecraft.client.model.SkullModelBase $$13 = (net.minecraft.client.model.SkullModelBase)this.modelByType.get((java.lang.Object)$$12);
+        net.minecraft.client.renderer.RenderType $$14 = net.minecraft.client.renderer.blockentity.SkullBlockRenderer.getRenderType((net.minecraft.world.level.block.SkullBlock$Type)$$12, (com.mojang.authlib.GameProfile)$$0.getOwnerProfile());
+        net.minecraft.client.renderer.blockentity.SkullBlockRenderer.renderSkull((net.minecraft.core.Direction)$$9, (float)$$11, (float)$$6, (com.mojang.blaze3d.vertex.PoseStack)$$2, (net.minecraft.client.renderer.MultiBufferSource)$$3, (int)$$4, (net.minecraft.client.model.SkullModelBase)$$13, (net.minecraft.client.renderer.RenderType)$$14);
     }
 
     public static void renderSkull(@javax.annotation.Nullable net.minecraft.core.Direction $$0, float $$1, float $$2, com.mojang.blaze3d.vertex.PoseStack $$3, net.minecraft.client.renderer.MultiBufferSource $$4, int $$5, net.minecraft.client.model.SkullModelBase $$6, net.minecraft.client.renderer.RenderType $$7) {
@@ -51,17 +52,17 @@
         $$3.popPose();
     }
 
-    public static net.minecraft.client.renderer.RenderType getRenderType(net.minecraft.world.level.block.SkullBlock$Type skullType, @javax.annotation.Nullable com.mojang.authlib.GameProfile gameProfile) {
-        net.minecraft.resources.ResourceLocation resourceLocation = (net.minecraft.resources.ResourceLocation)SKIN_BY_TYPE.get((java.lang.Object)skullType);
-        if (skullType != net.minecraft.world.level.block.SkullBlock$Types.PLAYER || gameProfile == null) {
-            return net.minecraft.client.renderer.RenderType.entityCutoutNoCullZOffset((net.minecraft.resources.ResourceLocation)resourceLocation);
+    public static net.minecraft.client.renderer.RenderType getRenderType(net.minecraft.world.level.block.SkullBlock$Type $$0, @javax.annotation.Nullable com.mojang.authlib.GameProfile $$1) {
+        net.minecraft.resources.ResourceLocation $$2 = (net.minecraft.resources.ResourceLocation)SKIN_BY_TYPE.get((java.lang.Object)$$0);
+        if ($$0 != net.minecraft.world.level.block.SkullBlock$Types.PLAYER || $$1 == null) {
+            return net.minecraft.client.renderer.RenderType.entityCutoutNoCullZOffset((net.minecraft.resources.ResourceLocation)$$2);
         }
-        net.minecraft.client.Minecraft minecraft = net.minecraft.client.Minecraft.getInstance();
-        java.util.Map map = minecraft.getSkinManager().getInsecureSkinInformation(gameProfile);
-        if (map.containsKey((java.lang.Object)com.mojang.authlib.minecraft.MinecraftProfileTexture$Type.SKIN)) {
-            return net.minecraft.client.renderer.RenderType.entityTranslucent((net.minecraft.resources.ResourceLocation)minecraft.getSkinManager().registerTexture((com.mojang.authlib.minecraft.MinecraftProfileTexture)map.get((java.lang.Object)com.mojang.authlib.minecraft.MinecraftProfileTexture$Type.SKIN), com.mojang.authlib.minecraft.MinecraftProfileTexture$Type.SKIN));
+        net.minecraft.client.Minecraft $$3 = net.minecraft.client.Minecraft.getInstance();
+        java.util.Map $$4 = $$3.getSkinManager().getInsecureSkinInformation($$1);
+        if ($$4.containsKey((java.lang.Object)com.mojang.authlib.minecraft.MinecraftProfileTexture$Type.SKIN)) {
+            return net.minecraft.client.renderer.RenderType.entityTranslucent((net.minecraft.resources.ResourceLocation)$$3.getSkinManager().registerTexture((com.mojang.authlib.minecraft.MinecraftProfileTexture)$$4.get((java.lang.Object)com.mojang.authlib.minecraft.MinecraftProfileTexture$Type.SKIN), com.mojang.authlib.minecraft.MinecraftProfileTexture$Type.SKIN));
         }
-        return net.minecraft.client.renderer.RenderType.entityCutoutNoCull((net.minecraft.resources.ResourceLocation)net.minecraft.client.resources.DefaultPlayerSkin.getDefaultSkin((java.util.UUID)net.minecraft.core.UUIDUtil.getOrCreatePlayerUUID((com.mojang.authlib.GameProfile)gameProfile)));
+        return net.minecraft.client.renderer.RenderType.entityCutoutNoCull((net.minecraft.resources.ResourceLocation)net.minecraft.client.resources.DefaultPlayerSkin.getDefaultSkin((java.util.UUID)net.minecraft.core.UUIDUtil.getOrCreatePlayerUUID((com.mojang.authlib.GameProfile)$$1)));
     }
 
     public static /* synthetic */ void lambda$static$0(java.util.HashMap $$0) {