--- net/minecraft/client/renderer/blockentity/PistonHeadRenderer.java
+++ net/minecraft/client/renderer/blockentity/PistonHeadRenderer.java
@@ -12,36 +12,36 @@
         this.blockRenderer = $$0.getBlockRenderDispatcher();
     }
 
-    public void render(net.minecraft.world.level.block.piston.PistonMovingBlockEntity blockEntity, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, int combinedOverlay) {
-        net.minecraft.world.level.Level level = blockEntity.getLevel();
-        if (level == null) {
+    public void render(net.minecraft.world.level.block.piston.PistonMovingBlockEntity $$0, float $$1, com.mojang.blaze3d.vertex.PoseStack $$2, net.minecraft.client.renderer.MultiBufferSource $$3, int $$4, int $$5) {
+        net.minecraft.world.level.Level $$6 = $$0.getLevel();
+        if ($$6 == null) {
             return;
         }
-        net.minecraft.core.BlockPos blockPos = blockEntity.getBlockPos().relative(blockEntity.getMovementDirection().getOpposite());
-        net.minecraft.world.level.block.state.BlockState blockState = blockEntity.getMovedState();
-        if (blockState.isAir()) {
+        net.minecraft.core.BlockPos $$7 = $$0.getBlockPos().relative($$0.getMovementDirection().getOpposite());
+        net.minecraft.world.level.block.state.BlockState $$8 = $$0.getMovedState();
+        if ($$8.isAir()) {
             return;
         }
         net.minecraft.client.renderer.block.ModelBlockRenderer.enableCaching();
-        matrixStack.pushPose();
-        matrixStack.translate((double)blockEntity.getXOff(partialTicks), (double)blockEntity.getYOff(partialTicks), (double)blockEntity.getZOff(partialTicks));
-        if (blockState.is(net.minecraft.world.level.block.Blocks.PISTON_HEAD) && blockEntity.getProgress(partialTicks) <= 4.0f) {
-            blockState = (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.SHORT, (java.lang.Comparable)java.lang.Boolean.valueOf((blockEntity.getProgress(partialTicks) <= 0.5f ? 1 : 0) != 0));
-            this.renderBlock(blockPos, blockState, matrixStack, buffer, level, false, combinedOverlay);
-        } else if (blockEntity.isSourcePiston() && !blockEntity.isExtending()) {
-            net.minecraft.world.level.block.state.properties.PistonType pistonType = blockState.is(net.minecraft.world.level.block.Blocks.STICKY_PISTON) ? net.minecraft.world.level.block.state.properties.PistonType.STICKY : net.minecraft.world.level.block.state.properties.PistonType.DEFAULT;
-            net.minecraft.world.level.block.state.BlockState blockState2 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)net.minecraft.world.level.block.Blocks.PISTON_HEAD.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.TYPE, (java.lang.Comparable)pistonType)).setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.FACING, (java.lang.Comparable)((net.minecraft.core.Direction)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonBaseBlock.FACING)));
-            blockState2 = (net.minecraft.world.level.block.state.BlockState)blockState2.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.SHORT, (java.lang.Comparable)java.lang.Boolean.valueOf((blockEntity.getProgress(partialTicks) >= 0.5f ? 1 : 0) != 0));
-            this.renderBlock(blockPos, blockState2, matrixStack, buffer, level, false, combinedOverlay);
-            net.minecraft.core.BlockPos blockPos2 = blockPos.relative(blockEntity.getMovementDirection());
-            matrixStack.popPose();
-            matrixStack.pushPose();
-            blockState = (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonBaseBlock.EXTENDED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
-            this.renderBlock(blockPos2, blockState, matrixStack, buffer, level, true, combinedOverlay);
+        $$2.pushPose();
+        $$2.translate((double)$$0.getXOff($$1), (double)$$0.getYOff($$1), (double)$$0.getZOff($$1));
+        if ($$8.is(net.minecraft.world.level.block.Blocks.PISTON_HEAD) && $$0.getProgress($$1) <= 4.0f) {
+            $$8 = (net.minecraft.world.level.block.state.BlockState)$$8.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.SHORT, (java.lang.Comparable)java.lang.Boolean.valueOf(($$0.getProgress($$1) <= 0.5f ? 1 : 0) != 0));
+            this.renderBlock($$7, $$8, $$2, $$3, $$6, false, $$5);
+        } else if ($$0.isSourcePiston() && !$$0.isExtending()) {
+            net.minecraft.world.level.block.state.properties.PistonType $$9 = $$8.is(net.minecraft.world.level.block.Blocks.STICKY_PISTON) ? net.minecraft.world.level.block.state.properties.PistonType.STICKY : net.minecraft.world.level.block.state.properties.PistonType.DEFAULT;
+            net.minecraft.world.level.block.state.BlockState $$10 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)net.minecraft.world.level.block.Blocks.PISTON_HEAD.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.TYPE, (java.lang.Comparable)$$9)).setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.FACING, (java.lang.Comparable)((net.minecraft.core.Direction)$$8.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonBaseBlock.FACING)));
+            $$10 = (net.minecraft.world.level.block.state.BlockState)$$10.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonHeadBlock.SHORT, (java.lang.Comparable)java.lang.Boolean.valueOf(($$0.getProgress($$1) >= 0.5f ? 1 : 0) != 0));
+            this.renderBlock($$7, $$10, $$2, $$3, $$6, false, $$5);
+            net.minecraft.core.BlockPos $$11 = $$7.relative($$0.getMovementDirection());
+            $$2.popPose();
+            $$2.pushPose();
+            $$8 = (net.minecraft.world.level.block.state.BlockState)$$8.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.piston.PistonBaseBlock.EXTENDED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
+            this.renderBlock($$11, $$8, $$2, $$3, $$6, true, $$5);
         } else {
-            this.renderBlock(blockPos, blockState, matrixStack, buffer, level, false, combinedOverlay);
+            this.renderBlock($$7, $$8, $$2, $$3, $$6, false, $$5);
         }
-        matrixStack.popPose();
+        $$2.popPose();
         net.minecraft.client.renderer.block.ModelBlockRenderer.clearCache();
     }
 