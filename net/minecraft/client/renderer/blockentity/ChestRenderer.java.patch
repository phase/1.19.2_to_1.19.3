--- net/minecraft/client/renderer/blockentity/ChestRenderer.java
+++ net/minecraft/client/renderer/blockentity/ChestRenderer.java
@@ -44,7 +44,7 @@
         net.minecraft.client.model.geom.builders.PartDefinition $$1 = $$0.getRoot();
         $$1.addOrReplaceChild("bottom", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 19).addBox(1.0f, 0.0f, 1.0f, 14.0f, 10.0f, 14.0f), net.minecraft.client.model.geom.PartPose.ZERO);
         $$1.addOrReplaceChild("lid", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(1.0f, 0.0f, 0.0f, 14.0f, 5.0f, 14.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)9.0f, (float)1.0f));
-        $$1.addOrReplaceChild("lock", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(7.0f, -1.0f, 15.0f, 2.0f, 4.0f, 1.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)8.0f, (float)0.0f));
+        $$1.addOrReplaceChild("lock", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(7.0f, -2.0f, 14.0f, 2.0f, 4.0f, 1.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)9.0f, (float)1.0f));
         return net.minecraft.client.model.geom.builders.LayerDefinition.create((net.minecraft.client.model.geom.builders.MeshDefinition)$$0, (int)64, (int)64);
     }
 
@@ -53,7 +53,7 @@
         net.minecraft.client.model.geom.builders.PartDefinition $$1 = $$0.getRoot();
         $$1.addOrReplaceChild("bottom", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 19).addBox(1.0f, 0.0f, 1.0f, 15.0f, 10.0f, 14.0f), net.minecraft.client.model.geom.PartPose.ZERO);
         $$1.addOrReplaceChild("lid", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(1.0f, 0.0f, 0.0f, 15.0f, 5.0f, 14.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)9.0f, (float)1.0f));
-        $$1.addOrReplaceChild("lock", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(15.0f, -1.0f, 15.0f, 1.0f, 4.0f, 1.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)8.0f, (float)0.0f));
+        $$1.addOrReplaceChild("lock", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(15.0f, -2.0f, 14.0f, 1.0f, 4.0f, 1.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)9.0f, (float)1.0f));
         return net.minecraft.client.model.geom.builders.LayerDefinition.create((net.minecraft.client.model.geom.builders.MeshDefinition)$$0, (int)64, (int)64);
     }
 
@@ -62,50 +62,55 @@
         net.minecraft.client.model.geom.builders.PartDefinition $$1 = $$0.getRoot();
         $$1.addOrReplaceChild("bottom", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 19).addBox(0.0f, 0.0f, 1.0f, 15.0f, 10.0f, 14.0f), net.minecraft.client.model.geom.PartPose.ZERO);
         $$1.addOrReplaceChild("lid", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(0.0f, 0.0f, 0.0f, 15.0f, 5.0f, 14.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)9.0f, (float)1.0f));
-        $$1.addOrReplaceChild("lock", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(0.0f, -1.0f, 15.0f, 1.0f, 4.0f, 1.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)8.0f, (float)0.0f));
+        $$1.addOrReplaceChild("lock", net.minecraft.client.model.geom.builders.CubeListBuilder.create().texOffs(0, 0).addBox(0.0f, -2.0f, 14.0f, 1.0f, 4.0f, 1.0f), net.minecraft.client.model.geom.PartPose.offset((float)0.0f, (float)9.0f, (float)1.0f));
         return net.minecraft.client.model.geom.builders.LayerDefinition.create((net.minecraft.client.model.geom.builders.MeshDefinition)$$0, (int)64, (int)64);
     }
 
-    public void render(T blockEntity, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, int combinedOverlay) {
-        net.minecraft.world.level.Level level = blockEntity.getLevel();
-        boolean bl = level != null;
-        net.minecraft.world.level.block.state.BlockState blockState = bl ? blockEntity.getBlockState() : (net.minecraft.world.level.block.state.BlockState)net.minecraft.world.level.block.Blocks.CHEST.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.FACING, (java.lang.Comparable)net.minecraft.core.Direction.SOUTH);
-        net.minecraft.world.level.block.state.properties.ChestType chestType = blockState.hasProperty((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.TYPE) ? (net.minecraft.world.level.block.state.properties.ChestType)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.TYPE) : net.minecraft.world.level.block.state.properties.ChestType.SINGLE;
-        net.minecraft.world.level.block.Block block = blockState.getBlock();
-        if (!(block instanceof net.minecraft.world.level.block.AbstractChestBlock)) {
+    public void render(T $$0, float $$1, com.mojang.blaze3d.vertex.PoseStack $$2, net.minecraft.client.renderer.MultiBufferSource $$3, int $$4, int $$5) {
+        net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult $$15;
+        net.minecraft.world.level.Level $$6 = $$0.getLevel();
+        boolean $$7 = $$6 != null;
+        net.minecraft.world.level.block.state.BlockState $$8 = $$7 ? $$0.getBlockState() : (net.minecraft.world.level.block.state.BlockState)net.minecraft.world.level.block.Blocks.CHEST.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.FACING, (java.lang.Comparable)net.minecraft.core.Direction.SOUTH);
+        net.minecraft.world.level.block.state.properties.ChestType $$9 = $$8.hasProperty((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.TYPE) ? (net.minecraft.world.level.block.state.properties.ChestType)$$8.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.TYPE) : net.minecraft.world.level.block.state.properties.ChestType.SINGLE;
+        net.minecraft.world.level.block.Block $$10 = $$8.getBlock();
+        if (!($$10 instanceof net.minecraft.world.level.block.AbstractChestBlock)) {
             return;
         }
-        net.minecraft.world.level.block.AbstractChestBlock abstractChestBlock = (net.minecraft.world.level.block.AbstractChestBlock)block;
-        boolean bl2 = chestType != net.minecraft.world.level.block.state.properties.ChestType.SINGLE;
-        matrixStack.pushPose();
-        float f = ((net.minecraft.core.Direction)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.FACING)).toYRot();
-        matrixStack.translate(0.5, 0.5, 0.5);
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(-f));
-        matrixStack.translate(-0.5, -0.5, -0.5);
-        net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult neighborCombineResult = bl ? abstractChestBlock.combine(blockState, level, blockEntity.getBlockPos(), true) : net.minecraft.world.level.block.DoubleBlockCombiner$Combiner::acceptNone;
-        float f2 = ((it.unimi.dsi.fastutil.floats.Float2FloatFunction)neighborCombineResult.apply(net.minecraft.world.level.block.ChestBlock.opennessCombiner((net.minecraft.world.level.block.entity.LidBlockEntity)((net.minecraft.world.level.block.entity.LidBlockEntity)blockEntity)))).get(partialTicks);
-        f2 = 1.0f - f2;
-        f2 = 1.0f - f2 * f2 * f2;
-        int n = ((it.unimi.dsi.fastutil.ints.Int2IntFunction)neighborCombineResult.apply((net.minecraft.world.level.block.DoubleBlockCombiner$Combiner)new net.minecraft.client.renderer.blockentity.BrightnessCombiner())).applyAsInt(combinedLight);
-        net.minecraft.client.resources.model.Material material = net.minecraft.client.renderer.Sheets.chooseMaterial(blockEntity, (net.minecraft.world.level.block.state.properties.ChestType)chestType, (boolean)this.xmasTextures);
-        com.mojang.blaze3d.vertex.VertexConsumer vertexConsumer = material.buffer(buffer, net.minecraft.client.renderer.RenderType::entityCutout);
-        if (bl2) {
-            if (chestType == net.minecraft.world.level.block.state.properties.ChestType.LEFT) {
-                this.render(matrixStack, vertexConsumer, this.doubleLeftLid, this.doubleLeftLock, this.doubleLeftBottom, f2, n, combinedOverlay);
+        net.minecraft.world.level.block.AbstractChestBlock $$11 = (net.minecraft.world.level.block.AbstractChestBlock)$$10;
+        boolean $$12 = $$9 != net.minecraft.world.level.block.state.properties.ChestType.SINGLE;
+        $$2.pushPose();
+        float $$13 = ((net.minecraft.core.Direction)$$8.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ChestBlock.FACING)).toYRot();
+        $$2.translate(0.5, 0.5, 0.5);
+        $$2.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(-$$13));
+        $$2.translate(-0.5, -0.5, -0.5);
+        if ($$7) {
+            net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult $$14 = $$11.combine($$8, $$6, $$0.getBlockPos(), true);
+        } else {
+            $$15 = net.minecraft.world.level.block.DoubleBlockCombiner$Combiner::acceptNone;
+        }
+        float $$16 = ((it.unimi.dsi.fastutil.floats.Float2FloatFunction)$$15.apply(net.minecraft.world.level.block.ChestBlock.opennessCombiner((net.minecraft.world.level.block.entity.LidBlockEntity)((net.minecraft.world.level.block.entity.LidBlockEntity)$$0)))).get($$1);
+        $$16 = 1.0f - $$16;
+        $$16 = 1.0f - $$16 * $$16 * $$16;
+        int $$17 = ((it.unimi.dsi.fastutil.ints.Int2IntFunction)$$15.apply((net.minecraft.world.level.block.DoubleBlockCombiner$Combiner)new net.minecraft.client.renderer.blockentity.BrightnessCombiner())).applyAsInt($$4);
+        net.minecraft.client.resources.model.Material $$18 = net.minecraft.client.renderer.Sheets.chooseMaterial($$0, (net.minecraft.world.level.block.state.properties.ChestType)$$9, (boolean)this.xmasTextures);
+        com.mojang.blaze3d.vertex.VertexConsumer $$19 = $$18.buffer($$3, net.minecraft.client.renderer.RenderType::entityCutout);
+        if ($$12) {
+            if ($$9 == net.minecraft.world.level.block.state.properties.ChestType.LEFT) {
+                this.render($$2, $$19, this.doubleLeftLid, this.doubleLeftLock, this.doubleLeftBottom, $$16, $$17, $$5);
             } else {
-                this.render(matrixStack, vertexConsumer, this.doubleRightLid, this.doubleRightLock, this.doubleRightBottom, f2, n, combinedOverlay);
+                this.render($$2, $$19, this.doubleRightLid, this.doubleRightLock, this.doubleRightBottom, $$16, $$17, $$5);
             }
         } else {
-            this.render(matrixStack, vertexConsumer, this.lid, this.lock, this.bottom, f2, n, combinedOverlay);
+            this.render($$2, $$19, this.lid, this.lock, this.bottom, $$16, $$17, $$5);
         }
-        matrixStack.popPose();
+        $$2.popPose();
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, com.mojang.blaze3d.vertex.VertexConsumer buffer, net.minecraft.client.model.geom.ModelPart chestLid, net.minecraft.client.model.geom.ModelPart chestLatch, net.minecraft.client.model.geom.ModelPart chestBottom, float lidAngle, int combinedLight, int combinedOverlay) {
-        chestLatch.xRot = chestLid.xRot = -(lidAngle * 1.5707964f);
-        chestLid.render(matrixStack, buffer, combinedLight, combinedOverlay);
-        chestLatch.render(matrixStack, buffer, combinedLight, combinedOverlay);
-        chestBottom.render(matrixStack, buffer, combinedLight, combinedOverlay);
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, com.mojang.blaze3d.vertex.VertexConsumer $$1, net.minecraft.client.model.geom.ModelPart $$2, net.minecraft.client.model.geom.ModelPart $$3, net.minecraft.client.model.geom.ModelPart $$4, float $$5, int $$6, int $$7) {
+        $$3.xRot = $$2.xRot = -($$5 * 1.5707964f);
+        $$2.render($$0, $$1, $$6, $$7);
+        $$3.render($$0, $$1, $$6, $$7);
+        $$4.render($$0, $$1, $$6, $$7);
     }
 }
 