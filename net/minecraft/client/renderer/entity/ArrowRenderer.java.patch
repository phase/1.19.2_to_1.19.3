--- net/minecraft/client/renderer/entity/ArrowRenderer.java
+++ net/minecraft/client/renderer/entity/ArrowRenderer.java
@@ -10,53 +10,53 @@
         super($$0);
     }
 
-    public void render(T entity, float entityYaw, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight) {
-        matrixStack.pushPose();
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(net.minecraft.util.Mth.lerp((float)partialTicks, (float)((net.minecraft.world.entity.projectile.AbstractArrow)entity).yRotO, (float)entity.getYRot()) - 90.0f));
-        matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(net.minecraft.util.Mth.lerp((float)partialTicks, (float)((net.minecraft.world.entity.projectile.AbstractArrow)entity).xRotO, (float)entity.getXRot())));
-        boolean bl = false;
-        float f = 0.0f;
-        float f2 = 0.5f;
-        float f3 = 0.0f;
-        float f4 = 0.15625f;
-        float f5 = 0.0f;
-        float f6 = 0.15625f;
-        float f7 = 0.15625f;
-        float f8 = 0.3125f;
-        float f9 = 0.05625f;
-        float f10 = (float)((net.minecraft.world.entity.projectile.AbstractArrow)entity).shakeTime - partialTicks;
-        if (f10 > 0.0f) {
-            float f11 = -net.minecraft.util.Mth.sin((float)(f10 * 3.0f)) * f10;
-            matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(f11));
+    public void render(T $$0, float $$1, float $$2, com.mojang.blaze3d.vertex.PoseStack $$3, net.minecraft.client.renderer.MultiBufferSource $$4, int $$5) {
+        $$3.pushPose();
+        $$3.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(net.minecraft.util.Mth.lerp((float)$$2, (float)((net.minecraft.world.entity.projectile.AbstractArrow)$$0).yRotO, (float)$$0.getYRot()) - 90.0f));
+        $$3.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(net.minecraft.util.Mth.lerp((float)$$2, (float)((net.minecraft.world.entity.projectile.AbstractArrow)$$0).xRotO, (float)$$0.getXRot())));
+        boolean $$6 = false;
+        float $$7 = 0.0f;
+        float $$8 = 0.5f;
+        float $$9 = 0.0f;
+        float $$10 = 0.15625f;
+        float $$11 = 0.0f;
+        float $$12 = 0.15625f;
+        float $$13 = 0.15625f;
+        float $$14 = 0.3125f;
+        float $$15 = 0.05625f;
+        float $$16 = (float)((net.minecraft.world.entity.projectile.AbstractArrow)$$0).shakeTime - $$2;
+        if ($$16 > 0.0f) {
+            float $$17 = -net.minecraft.util.Mth.sin((float)($$16 * 3.0f)) * $$16;
+            $$3.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees($$17));
         }
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(45.0f));
-        matrixStack.scale(0.05625f, 0.05625f, 0.05625f);
-        matrixStack.translate(-4.0, 0.0, 0.0);
-        com.mojang.blaze3d.vertex.VertexConsumer vertexConsumer = buffer.getBuffer(net.minecraft.client.renderer.RenderType.entityCutout((net.minecraft.resources.ResourceLocation)this.getTextureLocation(entity)));
-        com.mojang.blaze3d.vertex.PoseStack$Pose pose = matrixStack.last();
-        com.mojang.math.Matrix4f matrix4f = pose.pose();
-        com.mojang.math.Matrix3f matrix3f = pose.normal();
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, -2, -2, 0.0f, 0.15625f, -1, 0, 0, packedLight);
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, -2, 2, 0.15625f, 0.15625f, -1, 0, 0, packedLight);
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, 2, 2, 0.15625f, 0.3125f, -1, 0, 0, packedLight);
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, 2, -2, 0.0f, 0.3125f, -1, 0, 0, packedLight);
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, 2, -2, 0.0f, 0.15625f, 1, 0, 0, packedLight);
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, 2, 2, 0.15625f, 0.15625f, 1, 0, 0, packedLight);
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, -2, 2, 0.15625f, 0.3125f, 1, 0, 0, packedLight);
-        this.vertex(matrix4f, matrix3f, vertexConsumer, -7, -2, -2, 0.0f, 0.3125f, 1, 0, 0, packedLight);
-        for (int i = 0; i < 4; ++i) {
-            matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(90.0f));
-            this.vertex(matrix4f, matrix3f, vertexConsumer, -8, -2, 0, 0.0f, 0.0f, 0, 1, 0, packedLight);
-            this.vertex(matrix4f, matrix3f, vertexConsumer, 8, -2, 0, 0.5f, 0.0f, 0, 1, 0, packedLight);
-            this.vertex(matrix4f, matrix3f, vertexConsumer, 8, 2, 0, 0.5f, 0.15625f, 0, 1, 0, packedLight);
-            this.vertex(matrix4f, matrix3f, vertexConsumer, -8, 2, 0, 0.0f, 0.15625f, 0, 1, 0, packedLight);
+        $$3.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(45.0f));
+        $$3.scale(0.05625f, 0.05625f, 0.05625f);
+        $$3.translate(-4.0, 0.0, 0.0);
+        com.mojang.blaze3d.vertex.VertexConsumer $$18 = $$4.getBuffer(net.minecraft.client.renderer.RenderType.entityCutout((net.minecraft.resources.ResourceLocation)this.getTextureLocation($$0)));
+        com.mojang.blaze3d.vertex.PoseStack$Pose $$19 = $$3.last();
+        com.mojang.math.Matrix4f $$20 = $$19.pose();
+        com.mojang.math.Matrix3f $$21 = $$19.normal();
+        this.vertex($$20, $$21, $$18, -7, -2, -2, 0.0f, 0.15625f, -1, 0, 0, $$5);
+        this.vertex($$20, $$21, $$18, -7, -2, 2, 0.15625f, 0.15625f, -1, 0, 0, $$5);
+        this.vertex($$20, $$21, $$18, -7, 2, 2, 0.15625f, 0.3125f, -1, 0, 0, $$5);
+        this.vertex($$20, $$21, $$18, -7, 2, -2, 0.0f, 0.3125f, -1, 0, 0, $$5);
+        this.vertex($$20, $$21, $$18, -7, 2, -2, 0.0f, 0.15625f, 1, 0, 0, $$5);
+        this.vertex($$20, $$21, $$18, -7, 2, 2, 0.15625f, 0.15625f, 1, 0, 0, $$5);
+        this.vertex($$20, $$21, $$18, -7, -2, 2, 0.15625f, 0.3125f, 1, 0, 0, $$5);
+        this.vertex($$20, $$21, $$18, -7, -2, -2, 0.0f, 0.3125f, 1, 0, 0, $$5);
+        for (int $$22 = 0; $$22 < 4; ++$$22) {
+            $$3.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(90.0f));
+            this.vertex($$20, $$21, $$18, -8, -2, 0, 0.0f, 0.0f, 0, 1, 0, $$5);
+            this.vertex($$20, $$21, $$18, 8, -2, 0, 0.5f, 0.0f, 0, 1, 0, $$5);
+            this.vertex($$20, $$21, $$18, 8, 2, 0, 0.5f, 0.15625f, 0, 1, 0, $$5);
+            this.vertex($$20, $$21, $$18, -8, 2, 0, 0.0f, 0.15625f, 0, 1, 0, $$5);
         }
-        matrixStack.popPose();
-        super.render(entity, entityYaw, partialTicks, matrixStack, buffer, packedLight);
+        $$3.popPose();
+        super.render($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public void vertex(com.mojang.math.Matrix4f matrix, com.mojang.math.Matrix3f normals, com.mojang.blaze3d.vertex.VertexConsumer vertexBuilder, int offsetX, int offsetY, int offsetZ, float textureX, float textureY, int normalX, int n, int n2, int packedLight) {
-        vertexBuilder.vertex(matrix, (float)offsetX, (float)offsetY, (float)offsetZ).color(255, 255, 255, 255).uv(textureX, textureY).overlayCoords(net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY).uv2(packedLight).normal(normals, (float)normalX, (float)n2, (float)n).endVertex();
+    public void vertex(com.mojang.math.Matrix4f $$0, com.mojang.math.Matrix3f $$1, com.mojang.blaze3d.vertex.VertexConsumer $$2, int $$3, int $$4, int $$5, float $$6, float $$7, int $$8, int $$9, int $$10, int $$11) {
+        $$2.vertex($$0, (float)$$3, (float)$$4, (float)$$5).color(255, 255, 255, 255).uv($$6, $$7).overlayCoords(net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY).uv2($$11).normal($$1, (float)$$8, (float)$$10, (float)$$9).endVertex();
     }
 }
 