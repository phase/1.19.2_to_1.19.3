--- net/minecraft/client/renderer/entity/ItemFrameRenderer.java
+++ net/minecraft/client/renderer/entity/ItemFrameRenderer.java
@@ -28,54 +28,53 @@
         return super.getBlockLightLevel($$0, $$1);
     }
 
-    public void render(T entity, float entityYaw, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight) {
-        net.minecraft.client.resources.model.ModelManager modelManager;
-        super.render(entity, entityYaw, partialTicks, matrixStack, buffer, packedLight);
-        matrixStack.pushPose();
-        net.minecraft.core.Direction direction = entity.getDirection();
-        net.minecraft.world.phys.Vec3 vec3 = this.getRenderOffset(entity, partialTicks);
-        matrixStack.translate(-vec3.x(), -vec3.y(), -vec3.z());
-        double d = 0.46875;
-        matrixStack.translate((double)direction.getStepX() * 0.46875, (double)direction.getStepY() * 0.46875, (double)direction.getStepZ() * 0.46875);
-        matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(entity.getXRot()));
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(180.0f - entity.getYRot()));
-        boolean bl = entity.isInvisible();
-        net.minecraft.world.item.ItemStack itemStack = entity.getItem();
-        if (!bl) {
-            modelManager = this.blockRenderer.getBlockModelShaper().getModelManager();
-            net.minecraft.client.resources.model.ModelResourceLocation modelResourceLocation = this.getFrameModelResourceLoc(entity, itemStack);
-            matrixStack.pushPose();
-            matrixStack.translate(-0.5, -0.5, -0.5);
-            this.blockRenderer.getModelRenderer().renderModel(matrixStack.last(), buffer.getBuffer(net.minecraft.client.renderer.Sheets.solidBlockSheet()), null, modelManager.getModel(modelResourceLocation), 1.0f, 1.0f, 1.0f, packedLight, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY);
-            matrixStack.popPose();
+    public void render(T $$0, float $$1, float $$2, com.mojang.blaze3d.vertex.PoseStack $$3, net.minecraft.client.renderer.MultiBufferSource $$4, int $$5) {
+        super.render($$0, $$1, $$2, $$3, $$4, $$5);
+        $$3.pushPose();
+        net.minecraft.core.Direction $$6 = $$0.getDirection();
+        net.minecraft.world.phys.Vec3 $$7 = this.getRenderOffset($$0, $$2);
+        $$3.translate(-$$7.x(), -$$7.y(), -$$7.z());
+        double $$8 = 0.46875;
+        $$3.translate((double)$$6.getStepX() * 0.46875, (double)$$6.getStepY() * 0.46875, (double)$$6.getStepZ() * 0.46875);
+        $$3.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$0.getXRot()));
+        $$3.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(180.0f - $$0.getYRot()));
+        boolean $$9 = $$0.isInvisible();
+        net.minecraft.world.item.ItemStack $$10 = $$0.getItem();
+        if (!$$9) {
+            net.minecraft.client.resources.model.ModelManager $$11 = this.blockRenderer.getBlockModelShaper().getModelManager();
+            net.minecraft.client.resources.model.ModelResourceLocation $$12 = this.getFrameModelResourceLoc($$0, $$10);
+            $$3.pushPose();
+            $$3.translate(-0.5, -0.5, -0.5);
+            this.blockRenderer.getModelRenderer().renderModel($$3.last(), $$4.getBuffer(net.minecraft.client.renderer.Sheets.solidBlockSheet()), null, $$11.getModel($$12), 1.0f, 1.0f, 1.0f, $$5, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY);
+            $$3.popPose();
         }
-        if (!itemStack.isEmpty()) {
-            modelManager = entity.getFramedMapId();
-            if (bl) {
-                matrixStack.translate(0.0, 0.0, 0.5);
+        if (!$$10.isEmpty()) {
+            java.util.OptionalInt $$13 = $$0.getFramedMapId();
+            if ($$9) {
+                $$3.translate(0.0, 0.0, 0.5);
             } else {
-                matrixStack.translate(0.0, 0.0, 0.4375);
+                $$3.translate(0.0, 0.0, 0.4375);
             }
-            int n = modelManager.isPresent() ? entity.getRotation() % 4 * 2 : entity.getRotation();
-            matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)n * 360.0f / 8.0f));
-            if (modelManager.isPresent()) {
-                matrixStack.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(180.0f));
-                float f = 0.0078125f;
-                matrixStack.scale(0.0078125f, 0.0078125f, 0.0078125f);
-                matrixStack.translate(-64.0, -64.0, 0.0);
-                net.minecraft.world.level.saveddata.maps.MapItemSavedData mapItemSavedData = net.minecraft.world.item.MapItem.getSavedData((java.lang.Integer)modelManager.getAsInt(), (net.minecraft.world.level.Level)((net.minecraft.world.entity.decoration.ItemFrame)entity).level);
-                matrixStack.translate(0.0, 0.0, -1.0);
-                if (mapItemSavedData != null) {
-                    int n2 = this.getLightVal(entity, 15728850, packedLight);
-                    net.minecraft.client.Minecraft.getInstance().gameRenderer.getMapRenderer().render(matrixStack, buffer, modelManager.getAsInt(), mapItemSavedData, true, n2);
+            int $$14 = $$13.isPresent() ? $$0.getRotation() % 4 * 2 : $$0.getRotation();
+            $$3.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees((float)$$14 * 360.0f / 8.0f));
+            if ($$13.isPresent()) {
+                $$3.mulPose(com.mojang.math.Vector3f.ZP.rotationDegrees(180.0f));
+                float $$15 = 0.0078125f;
+                $$3.scale(0.0078125f, 0.0078125f, 0.0078125f);
+                $$3.translate(-64.0, -64.0, 0.0);
+                net.minecraft.world.level.saveddata.maps.MapItemSavedData $$16 = net.minecraft.world.item.MapItem.getSavedData((java.lang.Integer)$$13.getAsInt(), (net.minecraft.world.level.Level)((net.minecraft.world.entity.decoration.ItemFrame)$$0).level);
+                $$3.translate(0.0, 0.0, -1.0);
+                if ($$16 != null) {
+                    int $$17 = this.getLightVal($$0, 15728850, $$5);
+                    net.minecraft.client.Minecraft.getInstance().gameRenderer.getMapRenderer().render($$3, $$4, $$13.getAsInt(), $$16, true, $$17);
                 }
             } else {
-                int n3 = this.getLightVal(entity, 0xF000F0, packedLight);
-                matrixStack.scale(0.5f, 0.5f, 0.5f);
-                this.itemRenderer.renderStatic(itemStack, net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIXED, n3, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY, matrixStack, buffer, entity.getId());
+                int $$18 = this.getLightVal($$0, 0xF000F0, $$5);
+                $$3.scale(0.5f, 0.5f, 0.5f);
+                this.itemRenderer.renderStatic($$10, net.minecraft.client.renderer.block.model.ItemTransforms$TransformType.FIXED, $$18, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY, $$3, $$4, $$0.getId());
             }
         }
-        matrixStack.popPose();
+        $$3.popPose();
     }
 
     public int getLightVal(T $$0, int $$1, int $$2) {
@@ -91,32 +90,32 @@
         return $$2 ? GLOW_FRAME_LOCATION : FRAME_LOCATION;
     }
 
-    public net.minecraft.world.phys.Vec3 getRenderOffset(T entity, float partialTicks) {
-        return new net.minecraft.world.phys.Vec3((double)((float)entity.getDirection().getStepX() * 0.3f), -0.25, (double)((float)entity.getDirection().getStepZ() * 0.3f));
+    public net.minecraft.world.phys.Vec3 getRenderOffset(T $$0, float $$1) {
+        return new net.minecraft.world.phys.Vec3((double)((float)$$0.getDirection().getStepX() * 0.3f), -0.25, (double)((float)$$0.getDirection().getStepZ() * 0.3f));
     }
 
-    public net.minecraft.resources.ResourceLocation getTextureLocation(T entity) {
+    public net.minecraft.resources.ResourceLocation getTextureLocation(T $$0) {
         return net.minecraft.client.renderer.texture.TextureAtlas.LOCATION_BLOCKS;
     }
 
-    public boolean shouldShowName(T entity) {
-        if (!net.minecraft.client.Minecraft.renderNames() || entity.getItem().isEmpty() || !entity.getItem().hasCustomHoverName() || this.entityRenderDispatcher.crosshairPickEntity != entity) {
+    public boolean shouldShowName(T $$0) {
+        if (!net.minecraft.client.Minecraft.renderNames() || $$0.getItem().isEmpty() || !$$0.getItem().hasCustomHoverName() || this.entityRenderDispatcher.crosshairPickEntity != $$0) {
             return false;
         }
-        double d = this.entityRenderDispatcher.distanceToSqr(entity);
-        float f = entity.isDiscrete() ? 32.0f : 64.0f;
-        return d < (double)(f * f);
+        double $$1 = this.entityRenderDispatcher.distanceToSqr($$0);
+        float $$2 = $$0.isDiscrete() ? 32.0f : 64.0f;
+        return $$1 < (double)($$2 * $$2);
     }
 
-    public void renderNameTag(T entity, net.minecraft.network.chat.Component displayName, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight) {
-        super.renderNameTag(entity, entity.getItem().getHoverName(), matrixStack, buffer, packedLight);
+    public void renderNameTag(T $$0, net.minecraft.network.chat.Component $$1, com.mojang.blaze3d.vertex.PoseStack $$2, net.minecraft.client.renderer.MultiBufferSource $$3, int $$4) {
+        super.renderNameTag($$0, $$0.getItem().getHoverName(), $$2, $$3, $$4);
     }
 
     static {
-        FRAME_LOCATION = new net.minecraft.client.resources.model.ModelResourceLocation("item_frame", "map=false");
-        MAP_FRAME_LOCATION = new net.minecraft.client.resources.model.ModelResourceLocation("item_frame", "map=true");
-        GLOW_FRAME_LOCATION = new net.minecraft.client.resources.model.ModelResourceLocation("glow_item_frame", "map=false");
-        GLOW_MAP_FRAME_LOCATION = new net.minecraft.client.resources.model.ModelResourceLocation("glow_item_frame", "map=true");
+        FRAME_LOCATION = net.minecraft.client.resources.model.ModelResourceLocation.vanilla((java.lang.String)"item_frame", (java.lang.String)"map=false");
+        MAP_FRAME_LOCATION = net.minecraft.client.resources.model.ModelResourceLocation.vanilla((java.lang.String)"item_frame", (java.lang.String)"map=true");
+        GLOW_FRAME_LOCATION = net.minecraft.client.resources.model.ModelResourceLocation.vanilla((java.lang.String)"glow_item_frame", (java.lang.String)"map=false");
+        GLOW_MAP_FRAME_LOCATION = net.minecraft.client.resources.model.ModelResourceLocation.vanilla((java.lang.String)"glow_item_frame", (java.lang.String)"map=true");
     }
 }
 