--- net/minecraft/client/renderer/entity/LightningBoltRenderer.java
+++ net/minecraft/client/renderer/entity/LightningBoltRenderer.java
@@ -10,59 +10,59 @@
         super($$0);
     }
 
-    public void render(net.minecraft.world.entity.LightningBolt entity, float entityYaw, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight) {
-        float[] fArray = new float[8];
-        float[] fArray2 = new float[8];
-        float f = 0.0f;
-        float f2 = 0.0f;
-        net.minecraft.util.RandomSource randomSource = net.minecraft.util.RandomSource.create((long)entity.seed);
-        for (int i = 7; i >= 0; --i) {
-            fArray[i] = f;
-            fArray2[i] = f2;
-            f += (float)(randomSource.nextInt(11) - 5);
-            f2 += (float)(randomSource.nextInt(11) - 5);
+    public void render(net.minecraft.world.entity.LightningBolt $$0, float $$1, float $$2, com.mojang.blaze3d.vertex.PoseStack $$3, net.minecraft.client.renderer.MultiBufferSource $$4, int $$5) {
+        float[] $$6 = new float[8];
+        float[] $$7 = new float[8];
+        float $$8 = 0.0f;
+        float $$9 = 0.0f;
+        net.minecraft.util.RandomSource $$10 = net.minecraft.util.RandomSource.create((long)$$0.seed);
+        for (int $$11 = 7; $$11 >= 0; --$$11) {
+            $$6[$$11] = $$8;
+            $$7[$$11] = $$9;
+            $$8 += (float)($$10.nextInt(11) - 5);
+            $$9 += (float)($$10.nextInt(11) - 5);
         }
-        randomSource = buffer.getBuffer(net.minecraft.client.renderer.RenderType.lightning());
-        com.mojang.math.Matrix4f matrix4f = matrixStack.last().pose();
-        for (int i = 0; i < 4; ++i) {
-            net.minecraft.util.RandomSource randomSource2 = net.minecraft.util.RandomSource.create((long)entity.seed);
-            for (int j = 0; j < 3; ++j) {
-                int n = 7;
-                int n2 = 0;
-                if (j > 0) {
-                    n = 7 - j;
+        com.mojang.blaze3d.vertex.VertexConsumer $$12 = $$4.getBuffer(net.minecraft.client.renderer.RenderType.lightning());
+        com.mojang.math.Matrix4f $$13 = $$3.last().pose();
+        for (int $$14 = 0; $$14 < 4; ++$$14) {
+            net.minecraft.util.RandomSource $$15 = net.minecraft.util.RandomSource.create((long)$$0.seed);
+            for (int $$16 = 0; $$16 < 3; ++$$16) {
+                int $$17 = 7;
+                int $$18 = 0;
+                if ($$16 > 0) {
+                    $$17 = 7 - $$16;
                 }
-                if (j > 0) {
-                    n2 = n - 2;
+                if ($$16 > 0) {
+                    $$18 = $$17 - 2;
                 }
-                float f3 = fArray[n] - f;
-                float f4 = fArray2[n] - f2;
-                for (int k = n; k >= n2; --k) {
-                    float f5 = f3;
-                    float f6 = f4;
-                    if (j == 0) {
-                        f3 += (float)(randomSource2.nextInt(11) - 5);
-                        f4 += (float)(randomSource2.nextInt(11) - 5);
+                float $$19 = $$6[$$17] - $$8;
+                float $$20 = $$7[$$17] - $$9;
+                for (int $$21 = $$17; $$21 >= $$18; --$$21) {
+                    float $$22 = $$19;
+                    float $$23 = $$20;
+                    if ($$16 == 0) {
+                        $$19 += (float)($$15.nextInt(11) - 5);
+                        $$20 += (float)($$15.nextInt(11) - 5);
                     } else {
-                        f3 += (float)(randomSource2.nextInt(31) - 15);
-                        f4 += (float)(randomSource2.nextInt(31) - 15);
+                        $$19 += (float)($$15.nextInt(31) - 15);
+                        $$20 += (float)($$15.nextInt(31) - 15);
                     }
-                    float f7 = 0.5f;
-                    float f8 = 0.45f;
-                    float f9 = 0.45f;
-                    float f10 = 0.5f;
-                    float f11 = 0.1f + (float)i * 0.2f;
-                    if (j == 0) {
-                        f11 *= (float)k * 0.1f + 1.0f;
+                    float $$24 = 0.5f;
+                    float $$25 = 0.45f;
+                    float $$26 = 0.45f;
+                    float $$27 = 0.5f;
+                    float $$28 = 0.1f + (float)$$14 * 0.2f;
+                    if ($$16 == 0) {
+                        $$28 *= (float)$$21 * 0.1f + 1.0f;
                     }
-                    float f12 = 0.1f + (float)i * 0.2f;
-                    if (j == 0) {
-                        f12 *= ((float)k - 1.0f) * 0.1f + 1.0f;
+                    float $$29 = 0.1f + (float)$$14 * 0.2f;
+                    if ($$16 == 0) {
+                        $$29 *= ((float)$$21 - 1.0f) * 0.1f + 1.0f;
                     }
-                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)matrix4f, (com.mojang.blaze3d.vertex.VertexConsumer)randomSource, (float)f3, (float)f4, (int)k, (float)f5, (float)f6, (float)0.45f, (float)0.45f, (float)0.5f, (float)f11, (float)f12, (boolean)false, (boolean)false, (boolean)true, (boolean)false);
-                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)matrix4f, (com.mojang.blaze3d.vertex.VertexConsumer)randomSource, (float)f3, (float)f4, (int)k, (float)f5, (float)f6, (float)0.45f, (float)0.45f, (float)0.5f, (float)f11, (float)f12, (boolean)true, (boolean)false, (boolean)true, (boolean)true);
-                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)matrix4f, (com.mojang.blaze3d.vertex.VertexConsumer)randomSource, (float)f3, (float)f4, (int)k, (float)f5, (float)f6, (float)0.45f, (float)0.45f, (float)0.5f, (float)f11, (float)f12, (boolean)true, (boolean)true, (boolean)false, (boolean)true);
-                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)matrix4f, (com.mojang.blaze3d.vertex.VertexConsumer)randomSource, (float)f3, (float)f4, (int)k, (float)f5, (float)f6, (float)0.45f, (float)0.45f, (float)0.5f, (float)f11, (float)f12, (boolean)false, (boolean)true, (boolean)false, (boolean)false);
+                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)$$19, (float)$$20, (int)$$21, (float)$$22, (float)$$23, (float)0.45f, (float)0.45f, (float)0.5f, (float)$$28, (float)$$29, (boolean)false, (boolean)false, (boolean)true, (boolean)false);
+                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)$$19, (float)$$20, (int)$$21, (float)$$22, (float)$$23, (float)0.45f, (float)0.45f, (float)0.5f, (float)$$28, (float)$$29, (boolean)true, (boolean)false, (boolean)true, (boolean)true);
+                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)$$19, (float)$$20, (int)$$21, (float)$$22, (float)$$23, (float)0.45f, (float)0.45f, (float)0.5f, (float)$$28, (float)$$29, (boolean)true, (boolean)true, (boolean)false, (boolean)true);
+                    net.minecraft.client.renderer.entity.LightningBoltRenderer.quad((com.mojang.math.Matrix4f)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)$$19, (float)$$20, (int)$$21, (float)$$22, (float)$$23, (float)0.45f, (float)0.45f, (float)0.5f, (float)$$28, (float)$$29, (boolean)false, (boolean)true, (boolean)false, (boolean)false);
                 }
             }
         }
@@ -75,7 +75,7 @@
         $$1.vertex($$0, $$2 + ($$14 ? $$11 : -$$11), (float)($$4 * 16), $$3 + ($$15 ? $$11 : -$$11)).color($$7, $$8, $$9, 0.3f).endVertex();
     }
 
-    public net.minecraft.resources.ResourceLocation getTextureLocation(net.minecraft.world.entity.LightningBolt entity) {
+    public net.minecraft.resources.ResourceLocation getTextureLocation(net.minecraft.world.entity.LightningBolt $$0) {
         return net.minecraft.client.renderer.texture.TextureAtlas.LOCATION_BLOCKS;
     }
 }