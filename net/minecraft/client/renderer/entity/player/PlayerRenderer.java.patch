--- net/minecraft/client/renderer/entity/player/PlayerRenderer.java
+++ net/minecraft/client/renderer/entity/player/PlayerRenderer.java
@@ -20,44 +20,44 @@
         this.addLayer((net.minecraft.client.renderer.entity.layers.RenderLayer)new net.minecraft.client.renderer.entity.layers.BeeStingerLayer((net.minecraft.client.renderer.entity.LivingEntityRenderer)this));
     }
 
-    public void render(net.minecraft.client.player.AbstractClientPlayer entity, float entityYaw, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight) {
-        this.setModelProperties(entity);
-        super.render((net.minecraft.world.entity.LivingEntity)entity, entityYaw, partialTicks, matrixStack, buffer, packedLight);
+    public void render(net.minecraft.client.player.AbstractClientPlayer $$0, float $$1, float $$2, com.mojang.blaze3d.vertex.PoseStack $$3, net.minecraft.client.renderer.MultiBufferSource $$4, int $$5) {
+        this.setModelProperties($$0);
+        super.render((net.minecraft.world.entity.LivingEntity)$$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public net.minecraft.world.phys.Vec3 getRenderOffset(net.minecraft.client.player.AbstractClientPlayer entity, float partialTicks) {
-        if (entity.isCrouching()) {
+    public net.minecraft.world.phys.Vec3 getRenderOffset(net.minecraft.client.player.AbstractClientPlayer $$0, float $$1) {
+        if ($$0.isCrouching()) {
             return new net.minecraft.world.phys.Vec3(0.0, -0.125, 0.0);
         }
-        return super.getRenderOffset((net.minecraft.world.entity.Entity)entity, partialTicks);
+        return super.getRenderOffset((net.minecraft.world.entity.Entity)$$0, $$1);
     }
 
-    public void setModelProperties(net.minecraft.client.player.AbstractClientPlayer clientPlayer) {
-        net.minecraft.client.model.PlayerModel playerModel = (net.minecraft.client.model.PlayerModel)this.getModel();
-        if (clientPlayer.isSpectator()) {
-            playerModel.setAllVisible(false);
-            playerModel.head.visible = true;
-            playerModel.hat.visible = true;
+    public void setModelProperties(net.minecraft.client.player.AbstractClientPlayer $$0) {
+        net.minecraft.client.model.PlayerModel $$1 = (net.minecraft.client.model.PlayerModel)this.getModel();
+        if ($$0.isSpectator()) {
+            $$1.setAllVisible(false);
+            $$1.head.visible = true;
+            $$1.hat.visible = true;
         } else {
-            playerModel.setAllVisible(true);
-            playerModel.hat.visible = clientPlayer.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.HAT);
-            playerModel.jacket.visible = clientPlayer.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.JACKET);
-            playerModel.leftPants.visible = clientPlayer.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.LEFT_PANTS_LEG);
-            playerModel.rightPants.visible = clientPlayer.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.RIGHT_PANTS_LEG);
-            playerModel.leftSleeve.visible = clientPlayer.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.LEFT_SLEEVE);
-            playerModel.rightSleeve.visible = clientPlayer.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.RIGHT_SLEEVE);
-            playerModel.crouching = clientPlayer.isCrouching();
-            net.minecraft.client.model.HumanoidModel$ArmPose armPose = net.minecraft.client.renderer.entity.player.PlayerRenderer.getArmPose((net.minecraft.client.player.AbstractClientPlayer)clientPlayer, (net.minecraft.world.InteractionHand)net.minecraft.world.InteractionHand.MAIN_HAND);
-            net.minecraft.client.model.HumanoidModel$ArmPose armPose2 = net.minecraft.client.renderer.entity.player.PlayerRenderer.getArmPose((net.minecraft.client.player.AbstractClientPlayer)clientPlayer, (net.minecraft.world.InteractionHand)net.minecraft.world.InteractionHand.OFF_HAND);
-            if (armPose.isTwoHanded()) {
-                net.minecraft.client.model.HumanoidModel$ArmPose armPose3 = armPose2 = clientPlayer.getOffhandItem().isEmpty() ? net.minecraft.client.model.HumanoidModel$ArmPose.EMPTY : net.minecraft.client.model.HumanoidModel$ArmPose.ITEM;
+            $$1.setAllVisible(true);
+            $$1.hat.visible = $$0.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.HAT);
+            $$1.jacket.visible = $$0.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.JACKET);
+            $$1.leftPants.visible = $$0.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.LEFT_PANTS_LEG);
+            $$1.rightPants.visible = $$0.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.RIGHT_PANTS_LEG);
+            $$1.leftSleeve.visible = $$0.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.LEFT_SLEEVE);
+            $$1.rightSleeve.visible = $$0.isModelPartShown(net.minecraft.world.entity.player.PlayerModelPart.RIGHT_SLEEVE);
+            $$1.crouching = $$0.isCrouching();
+            net.minecraft.client.model.HumanoidModel$ArmPose $$2 = net.minecraft.client.renderer.entity.player.PlayerRenderer.getArmPose((net.minecraft.client.player.AbstractClientPlayer)$$0, (net.minecraft.world.InteractionHand)net.minecraft.world.InteractionHand.MAIN_HAND);
+            net.minecraft.client.model.HumanoidModel$ArmPose $$3 = net.minecraft.client.renderer.entity.player.PlayerRenderer.getArmPose((net.minecraft.client.player.AbstractClientPlayer)$$0, (net.minecraft.world.InteractionHand)net.minecraft.world.InteractionHand.OFF_HAND);
+            if ($$2.isTwoHanded()) {
+                net.minecraft.client.model.HumanoidModel$ArmPose armPose = $$3 = $$0.getOffhandItem().isEmpty() ? net.minecraft.client.model.HumanoidModel$ArmPose.EMPTY : net.minecraft.client.model.HumanoidModel$ArmPose.ITEM;
             }
-            if (clientPlayer.getMainArm() == net.minecraft.world.entity.HumanoidArm.RIGHT) {
-                playerModel.rightArmPose = armPose;
-                playerModel.leftArmPose = armPose2;
+            if ($$0.getMainArm() == net.minecraft.world.entity.HumanoidArm.RIGHT) {
+                $$1.rightArmPose = $$2;
+                $$1.leftArmPose = $$3;
             } else {
-                playerModel.rightArmPose = armPose2;
-                playerModel.leftArmPose = armPose;
+                $$1.rightArmPose = $$3;
+                $$1.leftArmPose = $$2;
             }
         }
     }
@@ -93,79 +93,79 @@
         return net.minecraft.client.model.HumanoidModel$ArmPose.ITEM;
     }
 
-    public net.minecraft.resources.ResourceLocation getTextureLocation(net.minecraft.client.player.AbstractClientPlayer entity) {
-        return entity.getSkinTextureLocation();
+    public net.minecraft.resources.ResourceLocation getTextureLocation(net.minecraft.client.player.AbstractClientPlayer $$0) {
+        return $$0.getSkinTextureLocation();
     }
 
-    public void scale(net.minecraft.client.player.AbstractClientPlayer livingEntity, com.mojang.blaze3d.vertex.PoseStack matrixStack, float partialTickTime) {
-        float f = 0.9375f;
-        matrixStack.scale(0.9375f, 0.9375f, 0.9375f);
+    public void scale(net.minecraft.client.player.AbstractClientPlayer $$0, com.mojang.blaze3d.vertex.PoseStack $$1, float $$2) {
+        float $$3 = 0.9375f;
+        $$1.scale(0.9375f, 0.9375f, 0.9375f);
     }
 
-    public void renderNameTag(net.minecraft.client.player.AbstractClientPlayer entity, net.minecraft.network.chat.Component displayName, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight) {
-        net.minecraft.world.scores.Scoreboard scoreboard;
-        net.minecraft.world.scores.Objective objective;
-        double d = this.entityRenderDispatcher.distanceToSqr((net.minecraft.world.entity.Entity)entity);
-        matrixStack.pushPose();
-        if (d < 100.0 && (objective = (scoreboard = entity.getScoreboard()).getDisplayObjective(2)) != null) {
-            net.minecraft.world.scores.Score score = scoreboard.getOrCreatePlayerScore(entity.getScoreboardName(), objective);
-            super.renderNameTag((net.minecraft.world.entity.Entity)entity, (net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)java.lang.Integer.toString((int)score.getScore())).append(" ").append(objective.getDisplayName()), matrixStack, buffer, packedLight);
+    public void renderNameTag(net.minecraft.client.player.AbstractClientPlayer $$0, net.minecraft.network.chat.Component $$1, com.mojang.blaze3d.vertex.PoseStack $$2, net.minecraft.client.renderer.MultiBufferSource $$3, int $$4) {
+        net.minecraft.world.scores.Scoreboard $$6;
+        net.minecraft.world.scores.Objective $$7;
+        double $$5 = this.entityRenderDispatcher.distanceToSqr((net.minecraft.world.entity.Entity)$$0);
+        $$2.pushPose();
+        if ($$5 < 100.0 && ($$7 = ($$6 = $$0.getScoreboard()).getDisplayObjective(2)) != null) {
+            net.minecraft.world.scores.Score $$8 = $$6.getOrCreatePlayerScore($$0.getScoreboardName(), $$7);
+            super.renderNameTag((net.minecraft.world.entity.Entity)$$0, (net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)java.lang.Integer.toString((int)$$8.getScore())).append(" ").append($$7.getDisplayName()), $$2, $$3, $$4);
             java.util.Objects.requireNonNull((java.lang.Object)this.getFont());
-            matrixStack.translate(0.0, (double)(9.0f * 1.15f * 0.025f), 0.0);
+            $$2.translate(0.0, (double)(9.0f * 1.15f * 0.025f), 0.0);
         }
-        super.renderNameTag((net.minecraft.world.entity.Entity)entity, displayName, matrixStack, buffer, packedLight);
-        matrixStack.popPose();
+        super.renderNameTag((net.minecraft.world.entity.Entity)$$0, $$1, $$2, $$3, $$4);
+        $$2.popPose();
     }
 
-    public void renderRightHand(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, net.minecraft.client.player.AbstractClientPlayer player) {
-        this.renderHand(matrixStack, buffer, combinedLight, player, ((net.minecraft.client.model.PlayerModel)this.model).rightArm, ((net.minecraft.client.model.PlayerModel)this.model).rightSleeve);
+    public void renderRightHand(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, net.minecraft.client.player.AbstractClientPlayer $$3) {
+        this.renderHand($$0, $$1, $$2, $$3, ((net.minecraft.client.model.PlayerModel)this.model).rightArm, ((net.minecraft.client.model.PlayerModel)this.model).rightSleeve);
     }
 
-    public void renderLeftHand(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, net.minecraft.client.player.AbstractClientPlayer player) {
-        this.renderHand(matrixStack, buffer, combinedLight, player, ((net.minecraft.client.model.PlayerModel)this.model).leftArm, ((net.minecraft.client.model.PlayerModel)this.model).leftSleeve);
+    public void renderLeftHand(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, net.minecraft.client.player.AbstractClientPlayer $$3) {
+        this.renderHand($$0, $$1, $$2, $$3, ((net.minecraft.client.model.PlayerModel)this.model).leftArm, ((net.minecraft.client.model.PlayerModel)this.model).leftSleeve);
     }
 
-    public void renderHand(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int combinedLight, net.minecraft.client.player.AbstractClientPlayer player, net.minecraft.client.model.geom.ModelPart rendererArm, net.minecraft.client.model.geom.ModelPart rendererArmwear) {
-        net.minecraft.client.model.PlayerModel playerModel = (net.minecraft.client.model.PlayerModel)this.getModel();
-        this.setModelProperties(player);
-        playerModel.attackTime = 0.0f;
-        playerModel.crouching = false;
-        playerModel.swimAmount = 0.0f;
-        playerModel.setupAnim((net.minecraft.world.entity.LivingEntity)player, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f);
-        rendererArm.xRot = 0.0f;
-        rendererArm.render(matrixStack, buffer.getBuffer(net.minecraft.client.renderer.RenderType.entitySolid((net.minecraft.resources.ResourceLocation)player.getSkinTextureLocation())), combinedLight, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY);
-        rendererArmwear.xRot = 0.0f;
-        rendererArmwear.render(matrixStack, buffer.getBuffer(net.minecraft.client.renderer.RenderType.entityTranslucent((net.minecraft.resources.ResourceLocation)player.getSkinTextureLocation())), combinedLight, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY);
+    public void renderHand(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, net.minecraft.client.player.AbstractClientPlayer $$3, net.minecraft.client.model.geom.ModelPart $$4, net.minecraft.client.model.geom.ModelPart $$5) {
+        net.minecraft.client.model.PlayerModel $$6 = (net.minecraft.client.model.PlayerModel)this.getModel();
+        this.setModelProperties($$3);
+        $$6.attackTime = 0.0f;
+        $$6.crouching = false;
+        $$6.swimAmount = 0.0f;
+        $$6.setupAnim((net.minecraft.world.entity.LivingEntity)$$3, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f);
+        $$4.xRot = 0.0f;
+        $$4.render($$0, $$1.getBuffer(net.minecraft.client.renderer.RenderType.entitySolid((net.minecraft.resources.ResourceLocation)$$3.getSkinTextureLocation())), $$2, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY);
+        $$5.xRot = 0.0f;
+        $$5.render($$0, $$1.getBuffer(net.minecraft.client.renderer.RenderType.entityTranslucent((net.minecraft.resources.ResourceLocation)$$3.getSkinTextureLocation())), $$2, net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY);
     }
 
-    public void setupRotations(net.minecraft.client.player.AbstractClientPlayer entityLiving, com.mojang.blaze3d.vertex.PoseStack matrixStack, float ageInTicks, float rotationYaw, float partialTicks) {
-        float f = entityLiving.getSwimAmount(partialTicks);
-        if (entityLiving.isFallFlying()) {
-            super.setupRotations((net.minecraft.world.entity.LivingEntity)entityLiving, matrixStack, ageInTicks, rotationYaw, partialTicks);
-            float f2 = (float)entityLiving.getFallFlyingTicks() + partialTicks;
-            float f3 = net.minecraft.util.Mth.clamp((float)(f2 * f2 / 100.0f), (float)0.0f, (float)1.0f);
-            if (!entityLiving.isAutoSpinAttack()) {
-                matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(f3 * (-90.0f - entityLiving.getXRot())));
+    public void setupRotations(net.minecraft.client.player.AbstractClientPlayer $$0, com.mojang.blaze3d.vertex.PoseStack $$1, float $$2, float $$3, float $$4) {
+        float $$5 = $$0.getSwimAmount($$4);
+        if ($$0.isFallFlying()) {
+            super.setupRotations((net.minecraft.world.entity.LivingEntity)$$0, $$1, $$2, $$3, $$4);
+            float $$6 = (float)$$0.getFallFlyingTicks() + $$4;
+            float $$7 = net.minecraft.util.Mth.clamp((float)($$6 * $$6 / 100.0f), (float)0.0f, (float)1.0f);
+            if (!$$0.isAutoSpinAttack()) {
+                $$1.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$7 * (-90.0f - $$0.getXRot())));
             }
-            net.minecraft.world.phys.Vec3 vec3 = entityLiving.getViewVector(partialTicks);
-            net.minecraft.world.phys.Vec3 vec32 = entityLiving.getDeltaMovement();
-            double d = vec32.horizontalDistanceSqr();
-            double d2 = vec3.horizontalDistanceSqr();
-            if (d > 0.0 && d2 > 0.0) {
-                double d3 = (vec32.x * vec3.x + vec32.z * vec3.z) / java.lang.Math.sqrt((double)(d * d2));
-                double d4 = vec32.x * vec3.z - vec32.z * vec3.x;
-                matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotation((float)(java.lang.Math.signum((double)d4) * java.lang.Math.acos((double)d3))));
+            net.minecraft.world.phys.Vec3 $$8 = $$0.getViewVector($$4);
+            net.minecraft.world.phys.Vec3 $$9 = $$0.getDeltaMovement();
+            double $$10 = $$9.horizontalDistanceSqr();
+            double $$11 = $$8.horizontalDistanceSqr();
+            if ($$10 > 0.0 && $$11 > 0.0) {
+                double $$12 = ($$9.x * $$8.x + $$9.z * $$8.z) / java.lang.Math.sqrt((double)($$10 * $$11));
+                double $$13 = $$9.x * $$8.z - $$9.z * $$8.x;
+                $$1.mulPose(com.mojang.math.Vector3f.YP.rotation((float)(java.lang.Math.signum((double)$$13) * java.lang.Math.acos((double)$$12))));
             }
-        } else if (f > 0.0f) {
-            super.setupRotations((net.minecraft.world.entity.LivingEntity)entityLiving, matrixStack, ageInTicks, rotationYaw, partialTicks);
-            float f4 = entityLiving.isInWater() ? -90.0f - entityLiving.getXRot() : -90.0f;
-            float f5 = net.minecraft.util.Mth.lerp((float)f, (float)0.0f, (float)f4);
-            matrixStack.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees(f5));
-            if (entityLiving.isVisuallySwimming()) {
-                matrixStack.translate(0.0, -1.0, (double)0.3f);
+        } else if ($$5 > 0.0f) {
+            super.setupRotations((net.minecraft.world.entity.LivingEntity)$$0, $$1, $$2, $$3, $$4);
+            float $$14 = $$0.isInWater() ? -90.0f - $$0.getXRot() : -90.0f;
+            float $$15 = net.minecraft.util.Mth.lerp((float)$$5, (float)0.0f, (float)$$14);
+            $$1.mulPose(com.mojang.math.Vector3f.XP.rotationDegrees($$15));
+            if ($$0.isVisuallySwimming()) {
+                $$1.translate(0.0, -1.0, (double)0.3f);
             }
         } else {
-            super.setupRotations((net.minecraft.world.entity.LivingEntity)entityLiving, matrixStack, ageInTicks, rotationYaw, partialTicks);
+            super.setupRotations((net.minecraft.world.entity.LivingEntity)$$0, $$1, $$2, $$3, $$4);
         }
     }
 }