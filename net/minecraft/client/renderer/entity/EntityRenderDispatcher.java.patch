--- net/minecraft/client/renderer/entity/EntityRenderDispatcher.java
+++ net/minecraft/client/renderer/entity/EntityRenderDispatcher.java
@@ -23,8 +23,8 @@
     public boolean shouldRenderShadow;
     public boolean renderHitBoxes;
 
-    public <E extends net.minecraft.world.entity.Entity> int getPackedLightCoords(E entity, float partialTicks) {
-        return this.getRenderer(entity).getPackedLightCoords(entity, partialTicks);
+    public <E extends net.minecraft.world.entity.Entity> int getPackedLightCoords(E $$0, float $$1) {
+        return this.getRenderer($$0).getPackedLightCoords($$0, $$1);
     }
 
     public net.minecraft.client.renderer.entity.EntityRenderDispatcher(net.minecraft.client.Minecraft $$0, net.minecraft.client.renderer.texture.TextureManager $$1, net.minecraft.client.renderer.entity.ItemRenderer $$2, net.minecraft.client.renderer.block.BlockRenderDispatcher $$3, net.minecraft.client.gui.Font $$4, net.minecraft.client.Options $$5, net.minecraft.client.model.geom.EntityModelSet $$6) {
@@ -40,235 +40,235 @@
         this.entityModels = $$6;
     }
 
-    public <T extends net.minecraft.world.entity.Entity> net.minecraft.client.renderer.entity.EntityRenderer<? super T> getRenderer(T entity) {
-        if (entity instanceof net.minecraft.client.player.AbstractClientPlayer) {
-            java.lang.String string = ((net.minecraft.client.player.AbstractClientPlayer)entity).getModelName();
-            net.minecraft.client.renderer.entity.EntityRenderer entityRenderer = (net.minecraft.client.renderer.entity.EntityRenderer)this.playerRenderers.get((java.lang.Object)string);
-            if (entityRenderer != null) {
-                return entityRenderer;
+    public <T extends net.minecraft.world.entity.Entity> net.minecraft.client.renderer.entity.EntityRenderer<? super T> getRenderer(T $$0) {
+        if ($$0 instanceof net.minecraft.client.player.AbstractClientPlayer) {
+            java.lang.String $$1 = ((net.minecraft.client.player.AbstractClientPlayer)$$0).getModelName();
+            net.minecraft.client.renderer.entity.EntityRenderer $$2 = (net.minecraft.client.renderer.entity.EntityRenderer)this.playerRenderers.get((java.lang.Object)$$1);
+            if ($$2 != null) {
+                return $$2;
             }
             return (net.minecraft.client.renderer.entity.EntityRenderer)this.playerRenderers.get((java.lang.Object)"default");
         }
-        return (net.minecraft.client.renderer.entity.EntityRenderer)this.renderers.get((java.lang.Object)entity.getType());
+        return (net.minecraft.client.renderer.entity.EntityRenderer)this.renderers.get((java.lang.Object)$$0.getType());
     }
 
-    public void prepare(net.minecraft.world.level.Level level, net.minecraft.client.Camera activeRenderInfo, net.minecraft.world.entity.Entity entity) {
-        this.level = level;
-        this.camera = activeRenderInfo;
-        this.cameraOrientation = activeRenderInfo.rotation();
-        this.crosshairPickEntity = entity;
+    public void prepare(net.minecraft.world.level.Level $$0, net.minecraft.client.Camera $$1, net.minecraft.world.entity.Entity $$2) {
+        this.level = $$0;
+        this.camera = $$1;
+        this.cameraOrientation = $$1.rotation();
+        this.crosshairPickEntity = $$2;
     }
 
-    public void overrideCameraOrientation(com.mojang.math.Quaternion quaternion) {
-        this.cameraOrientation = quaternion;
+    public void overrideCameraOrientation(com.mojang.math.Quaternion $$0) {
+        this.cameraOrientation = $$0;
     }
 
-    public void setRenderShadow(boolean renderShadow) {
-        this.shouldRenderShadow = renderShadow;
+    public void setRenderShadow(boolean $$0) {
+        this.shouldRenderShadow = $$0;
     }
 
-    public void setRenderHitBoxes(boolean debugBoundingBox) {
-        this.renderHitBoxes = debugBoundingBox;
+    public void setRenderHitBoxes(boolean $$0) {
+        this.renderHitBoxes = $$0;
     }
 
     public boolean shouldRenderHitBoxes() {
         return this.renderHitBoxes;
     }
 
-    public <E extends net.minecraft.world.entity.Entity> boolean shouldRender(E entity, net.minecraft.client.renderer.culling.Frustum frustum, double camX, double camY, double camZ) {
-        net.minecraft.client.renderer.entity.EntityRenderer entityRenderer = this.getRenderer(entity);
-        return entityRenderer.shouldRender(entity, frustum, camX, camY, camZ);
+    public <E extends net.minecraft.world.entity.Entity> boolean shouldRender(E $$0, net.minecraft.client.renderer.culling.Frustum $$1, double $$2, double $$3, double $$4) {
+        net.minecraft.client.renderer.entity.EntityRenderer $$5 = this.getRenderer($$0);
+        return $$5.shouldRender($$0, $$1, $$2, $$3, $$4);
     }
 
-    public <E extends net.minecraft.world.entity.Entity> void render(E entity, double x, double y, double z, float rotationYaw, float partialTicks, com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight) {
-        net.minecraft.client.renderer.entity.EntityRenderer entityRenderer = this.getRenderer(entity);
+    public <E extends net.minecraft.world.entity.Entity> void render(E $$0, double $$1, double $$2, double $$3, float $$4, float $$5, com.mojang.blaze3d.vertex.PoseStack $$6, net.minecraft.client.renderer.MultiBufferSource $$7, int $$8) {
+        net.minecraft.client.renderer.entity.EntityRenderer $$9 = this.getRenderer($$0);
         try {
-            double d;
-            float f;
-            net.minecraft.world.phys.Vec3 vec3 = entityRenderer.getRenderOffset(entity, partialTicks);
-            double d2 = x + vec3.x();
-            double d3 = y + vec3.y();
-            double d4 = z + vec3.z();
-            matrixStack.pushPose();
-            matrixStack.translate(d2, d3, d4);
-            entityRenderer.render(entity, rotationYaw, partialTicks, matrixStack, buffer, packedLight);
-            if (entity.displayFireAnimation()) {
-                this.renderFlame(matrixStack, buffer, entity);
+            double $$14;
+            float $$15;
+            net.minecraft.world.phys.Vec3 $$10 = $$9.getRenderOffset($$0, $$5);
+            double $$11 = $$1 + $$10.x();
+            double $$12 = $$2 + $$10.y();
+            double $$13 = $$3 + $$10.z();
+            $$6.pushPose();
+            $$6.translate($$11, $$12, $$13);
+            $$9.render($$0, $$4, $$5, $$6, $$7, $$8);
+            if ($$0.displayFireAnimation()) {
+                this.renderFlame($$6, $$7, $$0);
             }
-            matrixStack.translate(-vec3.x(), -vec3.y(), -vec3.z());
-            if (((java.lang.Boolean)this.options.entityShadows().get()).booleanValue() && this.shouldRenderShadow && entityRenderer.shadowRadius > 0.0f && !entity.isInvisible() && (f = (float)((1.0 - (d = this.distanceToSqr(entity.getX(), entity.getY(), entity.getZ())) / 256.0) * (double)entityRenderer.shadowStrength)) > 0.0f) {
-                net.minecraft.client.renderer.entity.EntityRenderDispatcher.renderShadow((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, entity, (float)f, (float)partialTicks, (net.minecraft.world.level.LevelReader)this.level, (float)entityRenderer.shadowRadius);
+            $$6.translate(-$$10.x(), -$$10.y(), -$$10.z());
+            if (((java.lang.Boolean)this.options.entityShadows().get()).booleanValue() && this.shouldRenderShadow && $$9.shadowRadius > 0.0f && !$$0.isInvisible() && ($$15 = (float)((1.0 - ($$14 = this.distanceToSqr($$0.getX(), $$0.getY(), $$0.getZ())) / 256.0) * (double)$$9.shadowStrength)) > 0.0f) {
+                net.minecraft.client.renderer.entity.EntityRenderDispatcher.renderShadow((com.mojang.blaze3d.vertex.PoseStack)$$6, (net.minecraft.client.renderer.MultiBufferSource)$$7, $$0, (float)$$15, (float)$$5, (net.minecraft.world.level.LevelReader)this.level, (float)$$9.shadowRadius);
             }
-            if (this.renderHitBoxes && !entity.isInvisible() && !net.minecraft.client.Minecraft.getInstance().showOnlyReducedInfo()) {
-                net.minecraft.client.renderer.entity.EntityRenderDispatcher.renderHitbox((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (com.mojang.blaze3d.vertex.VertexConsumer)buffer.getBuffer(net.minecraft.client.renderer.RenderType.lines()), entity, (float)partialTicks);
+            if (this.renderHitBoxes && !$$0.isInvisible() && !net.minecraft.client.Minecraft.getInstance().showOnlyReducedInfo()) {
+                net.minecraft.client.renderer.entity.EntityRenderDispatcher.renderHitbox((com.mojang.blaze3d.vertex.PoseStack)$$6, (com.mojang.blaze3d.vertex.VertexConsumer)$$7.getBuffer(net.minecraft.client.renderer.RenderType.lines()), $$0, (float)$$5);
             }
-            matrixStack.popPose();
+            $$6.popPose();
         }
-        catch (java.lang.Throwable throwable) {
-            net.minecraft.CrashReport crashReport = net.minecraft.CrashReport.forThrowable((java.lang.Throwable)throwable, (java.lang.String)"Rendering entity in world");
-            net.minecraft.CrashReportCategory crashReportCategory = crashReport.addCategory("Entity being rendered");
-            entity.fillCrashReportCategory(crashReportCategory);
-            net.minecraft.CrashReportCategory crashReportCategory2 = crashReport.addCategory("Renderer details");
-            crashReportCategory2.setDetail("Assigned renderer", (java.lang.Object)entityRenderer);
-            crashReportCategory2.setDetail("Location", (java.lang.Object)net.minecraft.CrashReportCategory.formatLocation((net.minecraft.world.level.LevelHeightAccessor)this.level, (double)x, (double)y, (double)z));
-            crashReportCategory2.setDetail("Rotation", (java.lang.Object)java.lang.Float.valueOf((float)rotationYaw));
-            crashReportCategory2.setDetail("Delta", (java.lang.Object)java.lang.Float.valueOf((float)partialTicks));
-            throw new net.minecraft.ReportedException(crashReport);
+        catch (java.lang.Throwable $$16) {
+            net.minecraft.CrashReport $$17 = net.minecraft.CrashReport.forThrowable((java.lang.Throwable)$$16, (java.lang.String)"Rendering entity in world");
+            net.minecraft.CrashReportCategory $$18 = $$17.addCategory("Entity being rendered");
+            $$0.fillCrashReportCategory($$18);
+            net.minecraft.CrashReportCategory $$19 = $$17.addCategory("Renderer details");
+            $$19.setDetail("Assigned renderer", (java.lang.Object)$$9);
+            $$19.setDetail("Location", (java.lang.Object)net.minecraft.CrashReportCategory.formatLocation((net.minecraft.world.level.LevelHeightAccessor)this.level, (double)$$1, (double)$$2, (double)$$3));
+            $$19.setDetail("Rotation", (java.lang.Object)java.lang.Float.valueOf((float)$$4));
+            $$19.setDetail("Delta", (java.lang.Object)java.lang.Float.valueOf((float)$$5));
+            throw new net.minecraft.ReportedException($$17);
         }
     }
 
-    public static void renderHitbox(com.mojang.blaze3d.vertex.PoseStack poseStack, com.mojang.blaze3d.vertex.VertexConsumer matrixStack, net.minecraft.world.entity.Entity buffer, float entity) {
-        net.minecraft.world.phys.AABB partialTicks = buffer.getBoundingBox().move(-buffer.getX(), -buffer.getY(), -buffer.getZ());
-        net.minecraft.client.renderer.LevelRenderer.renderLineBox((com.mojang.blaze3d.vertex.PoseStack)poseStack, (com.mojang.blaze3d.vertex.VertexConsumer)matrixStack, (net.minecraft.world.phys.AABB)partialTicks, (float)1.0f, (float)1.0f, (float)1.0f, (float)1.0f);
-        if (buffer instanceof net.minecraft.world.entity.boss.enderdragon.EnderDragon) {
-            double d = -net.minecraft.util.Mth.lerp((double)entity, (double)buffer.xOld, (double)buffer.getX());
-            double d2 = -net.minecraft.util.Mth.lerp((double)entity, (double)buffer.yOld, (double)buffer.getY());
-            double d3 = -net.minecraft.util.Mth.lerp((double)entity, (double)buffer.zOld, (double)buffer.getZ());
-            for (net.minecraft.world.entity.boss.EnderDragonPart enderDragonPart : ((net.minecraft.world.entity.boss.enderdragon.EnderDragon)buffer).getSubEntities()) {
-                poseStack.pushPose();
-                double d4 = d + net.minecraft.util.Mth.lerp((double)entity, (double)enderDragonPart.xOld, (double)enderDragonPart.getX());
-                double d5 = d2 + net.minecraft.util.Mth.lerp((double)entity, (double)enderDragonPart.yOld, (double)enderDragonPart.getY());
-                double d6 = d3 + net.minecraft.util.Mth.lerp((double)entity, (double)enderDragonPart.zOld, (double)enderDragonPart.getZ());
-                poseStack.translate(d4, d5, d6);
-                net.minecraft.client.renderer.LevelRenderer.renderLineBox((com.mojang.blaze3d.vertex.PoseStack)poseStack, (com.mojang.blaze3d.vertex.VertexConsumer)matrixStack, (net.minecraft.world.phys.AABB)enderDragonPart.getBoundingBox().move(-enderDragonPart.getX(), -enderDragonPart.getY(), -enderDragonPart.getZ()), (float)0.25f, (float)1.0f, (float)0.0f, (float)1.0f);
-                poseStack.popPose();
+    public static void renderHitbox(com.mojang.blaze3d.vertex.PoseStack $$0, com.mojang.blaze3d.vertex.VertexConsumer $$1, net.minecraft.world.entity.Entity $$2, float $$3) {
+        net.minecraft.world.phys.AABB $$4 = $$2.getBoundingBox().move(-$$2.getX(), -$$2.getY(), -$$2.getZ());
+        net.minecraft.client.renderer.LevelRenderer.renderLineBox((com.mojang.blaze3d.vertex.PoseStack)$$0, (com.mojang.blaze3d.vertex.VertexConsumer)$$1, (net.minecraft.world.phys.AABB)$$4, (float)1.0f, (float)1.0f, (float)1.0f, (float)1.0f);
+        if ($$2 instanceof net.minecraft.world.entity.boss.enderdragon.EnderDragon) {
+            double $$5 = -net.minecraft.util.Mth.lerp((double)$$3, (double)$$2.xOld, (double)$$2.getX());
+            double $$6 = -net.minecraft.util.Mth.lerp((double)$$3, (double)$$2.yOld, (double)$$2.getY());
+            double $$7 = -net.minecraft.util.Mth.lerp((double)$$3, (double)$$2.zOld, (double)$$2.getZ());
+            for (net.minecraft.world.entity.boss.EnderDragonPart $$8 : ((net.minecraft.world.entity.boss.enderdragon.EnderDragon)$$2).getSubEntities()) {
+                $$0.pushPose();
+                double $$9 = $$5 + net.minecraft.util.Mth.lerp((double)$$3, (double)$$8.xOld, (double)$$8.getX());
+                double $$10 = $$6 + net.minecraft.util.Mth.lerp((double)$$3, (double)$$8.yOld, (double)$$8.getY());
+                double $$11 = $$7 + net.minecraft.util.Mth.lerp((double)$$3, (double)$$8.zOld, (double)$$8.getZ());
+                $$0.translate($$9, $$10, $$11);
+                net.minecraft.client.renderer.LevelRenderer.renderLineBox((com.mojang.blaze3d.vertex.PoseStack)$$0, (com.mojang.blaze3d.vertex.VertexConsumer)$$1, (net.minecraft.world.phys.AABB)$$8.getBoundingBox().move(-$$8.getX(), -$$8.getY(), -$$8.getZ()), (float)0.25f, (float)1.0f, (float)0.0f, (float)1.0f);
+                $$0.popPose();
             }
         }
-        if (buffer instanceof net.minecraft.world.entity.LivingEntity) {
-            float f = 0.01f;
-            net.minecraft.client.renderer.LevelRenderer.renderLineBox((com.mojang.blaze3d.vertex.PoseStack)poseStack, (com.mojang.blaze3d.vertex.VertexConsumer)matrixStack, (double)partialTicks.minX, (double)(buffer.getEyeHeight() - 0.01f), (double)partialTicks.minZ, (double)partialTicks.maxX, (double)(buffer.getEyeHeight() + 0.01f), (double)partialTicks.maxZ, (float)1.0f, (float)0.0f, (float)0.0f, (float)1.0f);
+        if ($$2 instanceof net.minecraft.world.entity.LivingEntity) {
+            float $$12 = 0.01f;
+            net.minecraft.client.renderer.LevelRenderer.renderLineBox((com.mojang.blaze3d.vertex.PoseStack)$$0, (com.mojang.blaze3d.vertex.VertexConsumer)$$1, (double)$$4.minX, (double)($$2.getEyeHeight() - 0.01f), (double)$$4.minZ, (double)$$4.maxX, (double)($$2.getEyeHeight() + 0.01f), (double)$$4.maxZ, (float)1.0f, (float)0.0f, (float)0.0f, (float)1.0f);
         }
-        net.minecraft.world.phys.Vec3 vec3 = buffer.getViewVector(entity);
-        com.mojang.math.Matrix4f matrix4f = poseStack.last().pose();
-        com.mojang.math.Matrix3f matrix3f = poseStack.last().normal();
-        matrixStack.vertex(matrix4f, 0.0f, buffer.getEyeHeight(), 0.0f).color(0, 0, 255, 255).normal(matrix3f, (float)vec3.x, (float)vec3.y, (float)vec3.z).endVertex();
-        matrixStack.vertex(matrix4f, (float)(vec3.x * 2.0), (float)((double)buffer.getEyeHeight() + vec3.y * 2.0), (float)(vec3.z * 2.0)).color(0, 0, 255, 255).normal(matrix3f, (float)vec3.x, (float)vec3.y, (float)vec3.z).endVertex();
+        net.minecraft.world.phys.Vec3 $$13 = $$2.getViewVector($$3);
+        com.mojang.math.Matrix4f $$14 = $$0.last().pose();
+        com.mojang.math.Matrix3f $$15 = $$0.last().normal();
+        $$1.vertex($$14, 0.0f, $$2.getEyeHeight(), 0.0f).color(0, 0, 255, 255).normal($$15, (float)$$13.x, (float)$$13.y, (float)$$13.z).endVertex();
+        $$1.vertex($$14, (float)($$13.x * 2.0), (float)((double)$$2.getEyeHeight() + $$13.y * 2.0), (float)($$13.z * 2.0)).color(0, 0, 255, 255).normal($$15, (float)$$13.x, (float)$$13.y, (float)$$13.z).endVertex();
     }
 
-    public void renderFlame(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, net.minecraft.world.entity.Entity entity) {
-        net.minecraft.client.renderer.texture.TextureAtlasSprite textureAtlasSprite = net.minecraft.client.resources.model.ModelBakery.FIRE_0.sprite();
-        net.minecraft.client.renderer.texture.TextureAtlasSprite textureAtlasSprite2 = net.minecraft.client.resources.model.ModelBakery.FIRE_1.sprite();
-        matrixStack.pushPose();
-        float f = entity.getBbWidth() * 1.4f;
-        matrixStack.scale(f, f, f);
-        float f2 = 0.5f;
-        float f3 = 0.0f;
-        float f4 = entity.getBbHeight() / f;
-        float f5 = 0.0f;
-        matrixStack.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(-this.camera.getYRot()));
-        matrixStack.translate(0.0, 0.0, (double)(-0.3f + (float)((int)f4) * 0.02f));
-        float f6 = 0.0f;
-        int n = 0;
-        com.mojang.blaze3d.vertex.VertexConsumer vertexConsumer = buffer.getBuffer(net.minecraft.client.renderer.Sheets.cutoutBlockSheet());
-        com.mojang.blaze3d.vertex.PoseStack$Pose pose = matrixStack.last();
-        while (f4 > 0.0f) {
-            net.minecraft.client.renderer.texture.TextureAtlasSprite textureAtlasSprite3 = n % 2 == 0 ? textureAtlasSprite : textureAtlasSprite2;
-            float f7 = textureAtlasSprite3.getU0();
-            float f8 = textureAtlasSprite3.getV0();
-            float f9 = textureAtlasSprite3.getU1();
-            float f10 = textureAtlasSprite3.getV1();
-            if (n / 2 % 2 == 0) {
-                float f11 = f9;
-                f9 = f7;
-                f7 = f11;
+    public void renderFlame(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, net.minecraft.world.entity.Entity $$2) {
+        net.minecraft.client.renderer.texture.TextureAtlasSprite $$3 = net.minecraft.client.resources.model.ModelBakery.FIRE_0.sprite();
+        net.minecraft.client.renderer.texture.TextureAtlasSprite $$4 = net.minecraft.client.resources.model.ModelBakery.FIRE_1.sprite();
+        $$0.pushPose();
+        float $$5 = $$2.getBbWidth() * 1.4f;
+        $$0.scale($$5, $$5, $$5);
+        float $$6 = 0.5f;
+        float $$7 = 0.0f;
+        float $$8 = $$2.getBbHeight() / $$5;
+        float $$9 = 0.0f;
+        $$0.mulPose(com.mojang.math.Vector3f.YP.rotationDegrees(-this.camera.getYRot()));
+        $$0.translate(0.0, 0.0, (double)(-0.3f + (float)((int)$$8) * 0.02f));
+        float $$10 = 0.0f;
+        int $$11 = 0;
+        com.mojang.blaze3d.vertex.VertexConsumer $$12 = $$1.getBuffer(net.minecraft.client.renderer.Sheets.cutoutBlockSheet());
+        com.mojang.blaze3d.vertex.PoseStack$Pose $$13 = $$0.last();
+        while ($$8 > 0.0f) {
+            net.minecraft.client.renderer.texture.TextureAtlasSprite $$14 = $$11 % 2 == 0 ? $$3 : $$4;
+            float $$15 = $$14.getU0();
+            float $$16 = $$14.getV0();
+            float $$17 = $$14.getU1();
+            float $$18 = $$14.getV1();
+            if ($$11 / 2 % 2 == 0) {
+                float $$19 = $$17;
+                $$17 = $$15;
+                $$15 = $$19;
             }
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)pose, (com.mojang.blaze3d.vertex.VertexConsumer)vertexConsumer, (float)(f2 - 0.0f), (float)(0.0f - f5), (float)f6, (float)f9, (float)f10);
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)pose, (com.mojang.blaze3d.vertex.VertexConsumer)vertexConsumer, (float)(-f2 - 0.0f), (float)(0.0f - f5), (float)f6, (float)f7, (float)f10);
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)pose, (com.mojang.blaze3d.vertex.VertexConsumer)vertexConsumer, (float)(-f2 - 0.0f), (float)(1.4f - f5), (float)f6, (float)f7, (float)f8);
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)pose, (com.mojang.blaze3d.vertex.VertexConsumer)vertexConsumer, (float)(f2 - 0.0f), (float)(1.4f - f5), (float)f6, (float)f9, (float)f8);
-            f4 -= 0.45f;
-            f5 -= 0.45f;
-            f2 *= 0.9f;
-            f6 += 0.03f;
-            ++n;
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)($$6 - 0.0f), (float)(0.0f - $$9), (float)$$10, (float)$$17, (float)$$18);
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)(-$$6 - 0.0f), (float)(0.0f - $$9), (float)$$10, (float)$$15, (float)$$18);
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)(-$$6 - 0.0f), (float)(1.4f - $$9), (float)$$10, (float)$$15, (float)$$16);
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.fireVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$13, (com.mojang.blaze3d.vertex.VertexConsumer)$$12, (float)($$6 - 0.0f), (float)(1.4f - $$9), (float)$$10, (float)$$17, (float)$$16);
+            $$8 -= 0.45f;
+            $$9 -= 0.45f;
+            $$6 *= 0.9f;
+            $$10 += 0.03f;
+            ++$$11;
         }
-        matrixStack.popPose();
+        $$0.popPose();
     }
 
-    public static void fireVertex(com.mojang.blaze3d.vertex.PoseStack$Pose matrixEntry, com.mojang.blaze3d.vertex.VertexConsumer buffer, float x, float y, float z, float texU, float texV) {
-        buffer.vertex(matrixEntry.pose(), x, y, z).color(255, 255, 255, 255).uv(texU, texV).overlayCoords(0, 10).uv2(240).normal(matrixEntry.normal(), 0.0f, 1.0f, 0.0f).endVertex();
+    public static void fireVertex(com.mojang.blaze3d.vertex.PoseStack$Pose $$0, com.mojang.blaze3d.vertex.VertexConsumer $$1, float $$2, float $$3, float $$4, float $$5, float $$6) {
+        $$1.vertex($$0.pose(), $$2, $$3, $$4).color(255, 255, 255, 255).uv($$5, $$6).overlayCoords(0, 10).uv2(240).normal($$0.normal(), 0.0f, 1.0f, 0.0f).endVertex();
     }
 
-    public static void renderShadow(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, net.minecraft.world.entity.Entity entity, float weight, float partialTicks, net.minecraft.world.level.LevelReader level, float size) {
-        net.minecraft.world.entity.Mob mob;
-        float f = size;
-        if (entity instanceof net.minecraft.world.entity.Mob && (mob = (net.minecraft.world.entity.Mob)entity).isBaby()) {
-            f *= 0.5f;
+    public static void renderShadow(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, net.minecraft.world.entity.Entity $$2, float $$3, float $$4, net.minecraft.world.level.LevelReader $$5, float $$6) {
+        net.minecraft.world.entity.Mob $$8;
+        float $$7 = $$6;
+        if ($$2 instanceof net.minecraft.world.entity.Mob && ($$8 = (net.minecraft.world.entity.Mob)$$2).isBaby()) {
+            $$7 *= 0.5f;
         }
-        double d = net.minecraft.util.Mth.lerp((double)partialTicks, (double)entity.xOld, (double)entity.getX());
-        double d2 = net.minecraft.util.Mth.lerp((double)partialTicks, (double)entity.yOld, (double)entity.getY());
-        double d3 = net.minecraft.util.Mth.lerp((double)partialTicks, (double)entity.zOld, (double)entity.getZ());
-        int n = net.minecraft.util.Mth.floor((double)(d - (double)f));
-        int n2 = net.minecraft.util.Mth.floor((double)(d + (double)f));
-        int n3 = net.minecraft.util.Mth.floor((double)(d2 - (double)f));
-        int n4 = net.minecraft.util.Mth.floor((double)d2);
-        int n5 = net.minecraft.util.Mth.floor((double)(d3 - (double)f));
-        int n6 = net.minecraft.util.Mth.floor((double)(d3 + (double)f));
-        com.mojang.blaze3d.vertex.PoseStack$Pose pose = matrixStack.last();
-        com.mojang.blaze3d.vertex.VertexConsumer vertexConsumer = buffer.getBuffer(SHADOW_RENDER_TYPE);
-        for (net.minecraft.core.BlockPos blockPos : net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos(n, n3, n5), (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos(n2, n4, n6))) {
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.renderBlockShadow((com.mojang.blaze3d.vertex.PoseStack$Pose)pose, (com.mojang.blaze3d.vertex.VertexConsumer)vertexConsumer, (net.minecraft.world.level.LevelReader)level, (net.minecraft.core.BlockPos)blockPos, (double)d, (double)d2, (double)d3, (float)f, (float)weight);
+        double $$9 = net.minecraft.util.Mth.lerp((double)$$4, (double)$$2.xOld, (double)$$2.getX());
+        double $$10 = net.minecraft.util.Mth.lerp((double)$$4, (double)$$2.yOld, (double)$$2.getY());
+        double $$11 = net.minecraft.util.Mth.lerp((double)$$4, (double)$$2.zOld, (double)$$2.getZ());
+        int $$12 = net.minecraft.util.Mth.floor((double)($$9 - (double)$$7));
+        int $$13 = net.minecraft.util.Mth.floor((double)($$9 + (double)$$7));
+        int $$14 = net.minecraft.util.Mth.floor((double)($$10 - (double)$$7));
+        int $$15 = net.minecraft.util.Mth.floor((double)$$10);
+        int $$16 = net.minecraft.util.Mth.floor((double)($$11 - (double)$$7));
+        int $$17 = net.minecraft.util.Mth.floor((double)($$11 + (double)$$7));
+        com.mojang.blaze3d.vertex.PoseStack$Pose $$18 = $$0.last();
+        com.mojang.blaze3d.vertex.VertexConsumer $$19 = $$1.getBuffer(SHADOW_RENDER_TYPE);
+        for (net.minecraft.core.BlockPos $$20 : net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos($$12, $$14, $$16), (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos($$13, $$15, $$17))) {
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.renderBlockShadow((com.mojang.blaze3d.vertex.PoseStack$Pose)$$18, (com.mojang.blaze3d.vertex.VertexConsumer)$$19, (net.minecraft.world.level.LevelReader)$$5, (net.minecraft.core.BlockPos)$$20, (double)$$9, (double)$$10, (double)$$11, (float)$$7, (float)$$3);
         }
     }
 
-    public static void renderBlockShadow(com.mojang.blaze3d.vertex.PoseStack$Pose matrixEntry, com.mojang.blaze3d.vertex.VertexConsumer buffer, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos blockPos, double x, double y, double z, float size, float weight) {
-        net.minecraft.core.BlockPos blockPos2 = blockPos.below();
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos2);
-        if (blockState.getRenderShape() == net.minecraft.world.level.block.RenderShape.INVISIBLE || level.getMaxLocalRawBrightness(blockPos) <= 3) {
+    public static void renderBlockShadow(com.mojang.blaze3d.vertex.PoseStack$Pose $$0, com.mojang.blaze3d.vertex.VertexConsumer $$1, net.minecraft.world.level.LevelReader $$2, net.minecraft.core.BlockPos $$3, double $$4, double $$5, double $$6, float $$7, float $$8) {
+        net.minecraft.core.BlockPos $$9 = $$3.below();
+        net.minecraft.world.level.block.state.BlockState $$10 = $$2.getBlockState($$9);
+        if ($$10.getRenderShape() == net.minecraft.world.level.block.RenderShape.INVISIBLE || $$2.getMaxLocalRawBrightness($$3) <= 3) {
             return;
         }
-        if (!blockState.isCollisionShapeFullBlock((net.minecraft.world.level.BlockGetter)level, blockPos2)) {
+        if (!$$10.isCollisionShapeFullBlock((net.minecraft.world.level.BlockGetter)$$2, $$9)) {
             return;
         }
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape = blockState.getShape((net.minecraft.world.level.BlockGetter)level, blockPos.below());
-        if (voxelShape.isEmpty()) {
+        net.minecraft.world.phys.shapes.VoxelShape $$11 = $$10.getShape((net.minecraft.world.level.BlockGetter)$$2, $$3.below());
+        if ($$11.isEmpty()) {
             return;
         }
-        float f = net.minecraft.client.renderer.LightTexture.getBrightness((net.minecraft.world.level.dimension.DimensionType)level.dimensionType(), (int)level.getMaxLocalRawBrightness(blockPos));
-        float f2 = (float)(((double)weight - (y - (double)blockPos.getY()) / 2.0) * 0.5 * (double)f);
-        if (f2 >= 0.0f) {
-            if (f2 > 1.0f) {
-                f2 = 1.0f;
+        float $$12 = net.minecraft.client.renderer.LightTexture.getBrightness((net.minecraft.world.level.dimension.DimensionType)$$2.dimensionType(), (int)$$2.getMaxLocalRawBrightness($$3));
+        float $$13 = (float)(((double)$$8 - ($$5 - (double)$$3.getY()) / 2.0) * 0.5 * (double)$$12);
+        if ($$13 >= 0.0f) {
+            if ($$13 > 1.0f) {
+                $$13 = 1.0f;
             }
-            net.minecraft.world.phys.AABB aABB = voxelShape.bounds();
-            double d = (double)blockPos.getX() + aABB.minX;
-            double d2 = (double)blockPos.getX() + aABB.maxX;
-            double d3 = (double)blockPos.getY() + aABB.minY;
-            double d4 = (double)blockPos.getZ() + aABB.minZ;
-            double d5 = (double)blockPos.getZ() + aABB.maxZ;
-            float f3 = (float)(d - x);
-            float f4 = (float)(d2 - x);
-            float f5 = (float)(d3 - y);
-            float f6 = (float)(d4 - z);
-            float f7 = (float)(d5 - z);
-            float f8 = -f3 / 2.0f / size + 0.5f;
-            float f9 = -f4 / 2.0f / size + 0.5f;
-            float f10 = -f6 / 2.0f / size + 0.5f;
-            float f11 = -f7 / 2.0f / size + 0.5f;
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)matrixEntry, (com.mojang.blaze3d.vertex.VertexConsumer)buffer, (float)f2, (float)f3, (float)f5, (float)f6, (float)f8, (float)f10);
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)matrixEntry, (com.mojang.blaze3d.vertex.VertexConsumer)buffer, (float)f2, (float)f3, (float)f5, (float)f7, (float)f8, (float)f11);
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)matrixEntry, (com.mojang.blaze3d.vertex.VertexConsumer)buffer, (float)f2, (float)f4, (float)f5, (float)f7, (float)f9, (float)f11);
-            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)matrixEntry, (com.mojang.blaze3d.vertex.VertexConsumer)buffer, (float)f2, (float)f4, (float)f5, (float)f6, (float)f9, (float)f10);
+            net.minecraft.world.phys.AABB $$14 = $$11.bounds();
+            double $$15 = (double)$$3.getX() + $$14.minX;
+            double $$16 = (double)$$3.getX() + $$14.maxX;
+            double $$17 = (double)$$3.getY() + $$14.minY;
+            double $$18 = (double)$$3.getZ() + $$14.minZ;
+            double $$19 = (double)$$3.getZ() + $$14.maxZ;
+            float $$20 = (float)($$15 - $$4);
+            float $$21 = (float)($$16 - $$4);
+            float $$22 = (float)($$17 - $$5);
+            float $$23 = (float)($$18 - $$6);
+            float $$24 = (float)($$19 - $$6);
+            float $$25 = -$$20 / 2.0f / $$7 + 0.5f;
+            float $$26 = -$$21 / 2.0f / $$7 + 0.5f;
+            float $$27 = -$$23 / 2.0f / $$7 + 0.5f;
+            float $$28 = -$$24 / 2.0f / $$7 + 0.5f;
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$0, (com.mojang.blaze3d.vertex.VertexConsumer)$$1, (float)$$13, (float)$$20, (float)$$22, (float)$$23, (float)$$25, (float)$$27);
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$0, (com.mojang.blaze3d.vertex.VertexConsumer)$$1, (float)$$13, (float)$$20, (float)$$22, (float)$$24, (float)$$25, (float)$$28);
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$0, (com.mojang.blaze3d.vertex.VertexConsumer)$$1, (float)$$13, (float)$$21, (float)$$22, (float)$$24, (float)$$26, (float)$$28);
+            net.minecraft.client.renderer.entity.EntityRenderDispatcher.shadowVertex((com.mojang.blaze3d.vertex.PoseStack$Pose)$$0, (com.mojang.blaze3d.vertex.VertexConsumer)$$1, (float)$$13, (float)$$21, (float)$$22, (float)$$23, (float)$$26, (float)$$27);
         }
     }
 
-    public static void shadowVertex(com.mojang.blaze3d.vertex.PoseStack$Pose matrixEntry, com.mojang.blaze3d.vertex.VertexConsumer buffer, float alpha, float x, float y, float z, float texU, float texV) {
-        buffer.vertex(matrixEntry.pose(), x, y, z).color(1.0f, 1.0f, 1.0f, alpha).uv(texU, texV).overlayCoords(net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY).uv2(0xF000F0).normal(matrixEntry.normal(), 0.0f, 1.0f, 0.0f).endVertex();
+    public static void shadowVertex(com.mojang.blaze3d.vertex.PoseStack$Pose $$0, com.mojang.blaze3d.vertex.VertexConsumer $$1, float $$2, float $$3, float $$4, float $$5, float $$6, float $$7) {
+        $$1.vertex($$0.pose(), $$3, $$4, $$5).color(1.0f, 1.0f, 1.0f, $$2).uv($$6, $$7).overlayCoords(net.minecraft.client.renderer.texture.OverlayTexture.NO_OVERLAY).uv2(0xF000F0).normal($$0.normal(), 0.0f, 1.0f, 0.0f).endVertex();
     }
 
-    public void setLevel(@javax.annotation.Nullable net.minecraft.world.level.Level level) {
-        this.level = level;
-        if (level == null) {
+    public void setLevel(@javax.annotation.Nullable net.minecraft.world.level.Level $$0) {
+        this.level = $$0;
+        if ($$0 == null) {
             this.camera = null;
         }
     }
 
-    public double distanceToSqr(net.minecraft.world.entity.Entity entity) {
-        return this.camera.getPosition().distanceToSqr(entity.position());
+    public double distanceToSqr(net.minecraft.world.entity.Entity $$0) {
+        return this.camera.getPosition().distanceToSqr($$0.position());
     }
 
-    public double distanceToSqr(double x, double y, double z) {
-        return this.camera.getPosition().distanceToSqr(x, y, z);
+    public double distanceToSqr(double $$0, double $$1, double $$2) {
+        return this.camera.getPosition().distanceToSqr($$0, $$1, $$2);
     }
 
     public com.mojang.math.Quaternion cameraOrientation() {