--- net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer.java
+++ net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer.java
@@ -20,32 +20,32 @@
         this.path = $$2;
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, net.minecraft.client.renderer.MultiBufferSource buffer, int packedLight, T livingEntity, float limbSwing, float limbSwingAmount, float partialTicks, float ageInTicks, float netHeadYaw, float headPitch) {
-        if (livingEntity.isInvisible()) {
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.renderer.MultiBufferSource $$1, int $$2, T $$3, float $$4, float $$5, float $$6, float $$7, float $$8, float $$9) {
+        if ($$3.isInvisible()) {
             return;
         }
-        net.minecraft.world.entity.npc.VillagerData villagerData = ((net.minecraft.world.entity.npc.VillagerDataHolder)livingEntity).getVillagerData();
-        net.minecraft.world.entity.npc.VillagerType villagerType = villagerData.getType();
-        net.minecraft.world.entity.npc.VillagerProfession villagerProfession = villagerData.getProfession();
-        net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat hat = this.getHatData(this.typeHatCache, "type", net.minecraft.core.Registry.VILLAGER_TYPE, (java.lang.Object)villagerType);
-        net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat hat2 = this.getHatData(this.professionHatCache, "profession", net.minecraft.core.Registry.VILLAGER_PROFESSION, (java.lang.Object)villagerProfession);
-        net.minecraft.client.model.EntityModel entityModel = this.getParentModel();
-        ((net.minecraft.client.model.VillagerHeadModel)entityModel).hatVisible(hat2 == net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat.NONE || hat2 == net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat.PARTIAL && hat != net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat.FULL);
-        net.minecraft.resources.ResourceLocation resourceLocation = this.getResourceLocation("type", net.minecraft.core.Registry.VILLAGER_TYPE.getKey((java.lang.Object)villagerType));
-        net.minecraft.client.renderer.entity.layers.VillagerProfessionLayer.renderColoredCutoutModel((net.minecraft.client.model.EntityModel)entityModel, (net.minecraft.resources.ResourceLocation)resourceLocation, (com.mojang.blaze3d.vertex.PoseStack)matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, (int)packedLight, livingEntity, (float)1.0f, (float)1.0f, (float)1.0f);
-        ((net.minecraft.client.model.VillagerHeadModel)entityModel).hatVisible(true);
-        if (villagerProfession != net.minecraft.world.entity.npc.VillagerProfession.NONE && !livingEntity.isBaby()) {
-            net.minecraft.resources.ResourceLocation resourceLocation2 = this.getResourceLocation("profession", net.minecraft.core.Registry.VILLAGER_PROFESSION.getKey((java.lang.Object)villagerProfession));
-            net.minecraft.client.renderer.entity.layers.VillagerProfessionLayer.renderColoredCutoutModel((net.minecraft.client.model.EntityModel)entityModel, (net.minecraft.resources.ResourceLocation)resourceLocation2, (com.mojang.blaze3d.vertex.PoseStack)matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, (int)packedLight, livingEntity, (float)1.0f, (float)1.0f, (float)1.0f);
-            if (villagerProfession != net.minecraft.world.entity.npc.VillagerProfession.NITWIT) {
-                net.minecraft.resources.ResourceLocation resourceLocation3 = this.getResourceLocation("profession_level", (net.minecraft.resources.ResourceLocation)LEVEL_LOCATIONS.get(net.minecraft.util.Mth.clamp((int)villagerData.getLevel(), (int)1, (int)LEVEL_LOCATIONS.size())));
-                net.minecraft.client.renderer.entity.layers.VillagerProfessionLayer.renderColoredCutoutModel((net.minecraft.client.model.EntityModel)entityModel, (net.minecraft.resources.ResourceLocation)resourceLocation3, (com.mojang.blaze3d.vertex.PoseStack)matrixStack, (net.minecraft.client.renderer.MultiBufferSource)buffer, (int)packedLight, livingEntity, (float)1.0f, (float)1.0f, (float)1.0f);
+        net.minecraft.world.entity.npc.VillagerData $$10 = ((net.minecraft.world.entity.npc.VillagerDataHolder)$$3).getVillagerData();
+        net.minecraft.world.entity.npc.VillagerType $$11 = $$10.getType();
+        net.minecraft.world.entity.npc.VillagerProfession $$12 = $$10.getProfession();
+        net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat $$13 = this.getHatData(this.typeHatCache, "type", net.minecraft.core.Registry.VILLAGER_TYPE, (java.lang.Object)$$11);
+        net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat $$14 = this.getHatData(this.professionHatCache, "profession", net.minecraft.core.Registry.VILLAGER_PROFESSION, (java.lang.Object)$$12);
+        net.minecraft.client.model.EntityModel $$15 = this.getParentModel();
+        ((net.minecraft.client.model.VillagerHeadModel)$$15).hatVisible($$14 == net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat.NONE || $$14 == net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat.PARTIAL && $$13 != net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat.FULL);
+        net.minecraft.resources.ResourceLocation $$16 = this.getResourceLocation("type", net.minecraft.core.Registry.VILLAGER_TYPE.getKey((java.lang.Object)$$11));
+        net.minecraft.client.renderer.entity.layers.VillagerProfessionLayer.renderColoredCutoutModel((net.minecraft.client.model.EntityModel)$$15, (net.minecraft.resources.ResourceLocation)$$16, (com.mojang.blaze3d.vertex.PoseStack)$$0, (net.minecraft.client.renderer.MultiBufferSource)$$1, (int)$$2, $$3, (float)1.0f, (float)1.0f, (float)1.0f);
+        ((net.minecraft.client.model.VillagerHeadModel)$$15).hatVisible(true);
+        if ($$12 != net.minecraft.world.entity.npc.VillagerProfession.NONE && !$$3.isBaby()) {
+            net.minecraft.resources.ResourceLocation $$17 = this.getResourceLocation("profession", net.minecraft.core.Registry.VILLAGER_PROFESSION.getKey((java.lang.Object)$$12));
+            net.minecraft.client.renderer.entity.layers.VillagerProfessionLayer.renderColoredCutoutModel((net.minecraft.client.model.EntityModel)$$15, (net.minecraft.resources.ResourceLocation)$$17, (com.mojang.blaze3d.vertex.PoseStack)$$0, (net.minecraft.client.renderer.MultiBufferSource)$$1, (int)$$2, $$3, (float)1.0f, (float)1.0f, (float)1.0f);
+            if ($$12 != net.minecraft.world.entity.npc.VillagerProfession.NITWIT) {
+                net.minecraft.resources.ResourceLocation $$18 = this.getResourceLocation("profession_level", (net.minecraft.resources.ResourceLocation)LEVEL_LOCATIONS.get(net.minecraft.util.Mth.clamp((int)$$10.getLevel(), (int)1, (int)LEVEL_LOCATIONS.size())));
+                net.minecraft.client.renderer.entity.layers.VillagerProfessionLayer.renderColoredCutoutModel((net.minecraft.client.model.EntityModel)$$15, (net.minecraft.resources.ResourceLocation)$$18, (com.mojang.blaze3d.vertex.PoseStack)$$0, (net.minecraft.client.renderer.MultiBufferSource)$$1, (int)$$2, $$3, (float)1.0f, (float)1.0f, (float)1.0f);
             }
         }
     }
 
-    public net.minecraft.resources.ResourceLocation getResourceLocation(java.lang.String $$0, net.minecraft.resources.ResourceLocation $$1) {
-        return new net.minecraft.resources.ResourceLocation($$1.getNamespace(), "textures/entity/" + this.path + "/" + $$0 + "/" + $$1.getPath() + ".png");
+    public net.minecraft.resources.ResourceLocation getResourceLocation(java.lang.String $$0, net.minecraft.resources.ResourceLocation $$12) {
+        return $$12.withPath($$1 -> "textures/entity/" + this.path + "/" + $$0 + "/" + $$1 + ".png");
     }
 
     public <K> net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat getHatData(it.unimi.dsi.fastutil.objects.Object2ObjectMap<K, net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection$Hat> $$0, java.lang.String $$1, net.minecraft.core.DefaultedRegistry<K> $$2, K $$32) {