--- net/minecraft/client/gui/GuiComponent.java
+++ net/minecraft/client/gui/GuiComponent.java
@@ -13,22 +13,22 @@
     public net.minecraft.client.gui.GuiComponent() {
     }
 
-    public void hLine(com.mojang.blaze3d.vertex.PoseStack poseStack, int minX, int maxX, int y, int color) {
-        if (maxX < minX) {
-            int n = minX;
-            minX = maxX;
-            maxX = n;
+    public void hLine(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4) {
+        if ($$2 < $$1) {
+            int $$5 = $$1;
+            $$1 = $$2;
+            $$2 = $$5;
         }
-        net.minecraft.client.gui.GuiComponent.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)minX, (int)y, (int)(maxX + 1), (int)(y + 1), (int)color);
+        net.minecraft.client.gui.GuiComponent.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$1, (int)$$3, (int)($$2 + 1), (int)($$3 + 1), (int)$$4);
     }
 
-    public void vLine(com.mojang.blaze3d.vertex.PoseStack poseStack, int x, int minY, int maxY, int color) {
-        if (maxY < minY) {
-            int n = minY;
-            minY = maxY;
-            maxY = n;
+    public void vLine(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4) {
+        if ($$3 < $$2) {
+            int $$5 = $$2;
+            $$2 = $$3;
+            $$3 = $$5;
         }
-        net.minecraft.client.gui.GuiComponent.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)x, (int)(minY + 1), (int)(x + 1), (int)maxY, (int)color);
+        net.minecraft.client.gui.GuiComponent.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$1, (int)($$2 + 1), (int)($$1 + 1), (int)$$3, (int)$$4);
     }
 
     public static void enableScissor(int $$0, int $$1, int $$2, int $$3) {
@@ -46,43 +46,42 @@
         com.mojang.blaze3d.systems.RenderSystem.disableScissor();
     }
 
-    public static void fill(com.mojang.blaze3d.vertex.PoseStack poseStack, int minX, int minY, int maxX, int maxY, int color) {
-        net.minecraft.client.gui.GuiComponent.innerFill((com.mojang.math.Matrix4f)poseStack.last().pose(), (int)minX, (int)minY, (int)maxX, (int)maxY, (int)color);
+    public static void fill(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, int $$5) {
+        net.minecraft.client.gui.GuiComponent.innerFill((com.mojang.math.Matrix4f)$$0.last().pose(), (int)$$1, (int)$$2, (int)$$3, (int)$$4, (int)$$5);
     }
 
-    public static void innerFill(com.mojang.math.Matrix4f matrix, int minX, int minY, int maxX, int maxY, int color) {
-        int n;
-        if (minX < maxX) {
-            n = minX;
-            minX = maxX;
-            maxX = n;
+    public static void innerFill(com.mojang.math.Matrix4f $$0, int $$1, int $$2, int $$3, int $$4, int $$5) {
+        if ($$1 < $$3) {
+            int $$6 = $$1;
+            $$1 = $$3;
+            $$3 = $$6;
         }
-        if (minY < maxY) {
-            n = minY;
-            minY = maxY;
-            maxY = n;
+        if ($$2 < $$4) {
+            int $$7 = $$2;
+            $$2 = $$4;
+            $$4 = $$7;
         }
-        float f = (float)(color >> 24 & 0xFF) / 255.0f;
-        float f2 = (float)(color >> 16 & 0xFF) / 255.0f;
-        float f3 = (float)(color >> 8 & 0xFF) / 255.0f;
-        float f4 = (float)(color & 0xFF) / 255.0f;
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder();
+        float $$8 = (float)($$5 >> 24 & 0xFF) / 255.0f;
+        float $$9 = (float)($$5 >> 16 & 0xFF) / 255.0f;
+        float $$10 = (float)($$5 >> 8 & 0xFF) / 255.0f;
+        float $$11 = (float)($$5 & 0xFF) / 255.0f;
+        com.mojang.blaze3d.vertex.BufferBuilder $$12 = com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder();
         com.mojang.blaze3d.systems.RenderSystem.enableBlend();
         com.mojang.blaze3d.systems.RenderSystem.disableTexture();
         com.mojang.blaze3d.systems.RenderSystem.defaultBlendFunc();
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionColorShader);
-        bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-        bufferBuilder.vertex(matrix, (float)minX, (float)maxY, 0.0f).color(f2, f3, f4, f).endVertex();
-        bufferBuilder.vertex(matrix, (float)maxX, (float)maxY, 0.0f).color(f2, f3, f4, f).endVertex();
-        bufferBuilder.vertex(matrix, (float)maxX, (float)minY, 0.0f).color(f2, f3, f4, f).endVertex();
-        bufferBuilder.vertex(matrix, (float)minX, (float)minY, 0.0f).color(f2, f3, f4, f).endVertex();
-        com.mojang.blaze3d.vertex.BufferUploader.drawWithShader((com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer)bufferBuilder.end());
+        $$12.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+        $$12.vertex($$0, (float)$$1, (float)$$4, 0.0f).color($$9, $$10, $$11, $$8).endVertex();
+        $$12.vertex($$0, (float)$$3, (float)$$4, 0.0f).color($$9, $$10, $$11, $$8).endVertex();
+        $$12.vertex($$0, (float)$$3, (float)$$2, 0.0f).color($$9, $$10, $$11, $$8).endVertex();
+        $$12.vertex($$0, (float)$$1, (float)$$2, 0.0f).color($$9, $$10, $$11, $$8).endVertex();
+        com.mojang.blaze3d.vertex.BufferUploader.drawWithShader((com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer)$$12.end());
         com.mojang.blaze3d.systems.RenderSystem.enableTexture();
         com.mojang.blaze3d.systems.RenderSystem.disableBlend();
     }
 
-    public void fillGradient(com.mojang.blaze3d.vertex.PoseStack poseStack, int x1, int y1, int x2, int y2, int colorFrom, int colorTo) {
-        net.minecraft.client.gui.GuiComponent.fillGradient((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)x1, (int)y1, (int)x2, (int)y2, (int)colorFrom, (int)colorTo, (int)this.blitOffset);
+    public void fillGradient(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, int $$5, int $$6) {
+        net.minecraft.client.gui.GuiComponent.fillGradient((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$1, (int)$$2, (int)$$3, (int)$$4, (int)$$5, (int)$$6, (int)this.blitOffset);
     }
 
     public static void fillGradient(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, int $$5, int $$6, int $$7) {
@@ -99,97 +98,97 @@
         com.mojang.blaze3d.systems.RenderSystem.enableTexture();
     }
 
-    public static void fillGradient(com.mojang.math.Matrix4f matrix, com.mojang.blaze3d.vertex.BufferBuilder builder, int x1, int y1, int x2, int y2, int blitOffset, int colorA, int colorB) {
-        float f = (float)(colorA >> 24 & 0xFF) / 255.0f;
-        float f2 = (float)(colorA >> 16 & 0xFF) / 255.0f;
-        float f3 = (float)(colorA >> 8 & 0xFF) / 255.0f;
-        float f4 = (float)(colorA & 0xFF) / 255.0f;
-        float f5 = (float)(colorB >> 24 & 0xFF) / 255.0f;
-        float f6 = (float)(colorB >> 16 & 0xFF) / 255.0f;
-        float f7 = (float)(colorB >> 8 & 0xFF) / 255.0f;
-        float f8 = (float)(colorB & 0xFF) / 255.0f;
-        builder.vertex(matrix, (float)x2, (float)y1, (float)blitOffset).color(f2, f3, f4, f).endVertex();
-        builder.vertex(matrix, (float)x1, (float)y1, (float)blitOffset).color(f2, f3, f4, f).endVertex();
-        builder.vertex(matrix, (float)x1, (float)y2, (float)blitOffset).color(f6, f7, f8, f5).endVertex();
-        builder.vertex(matrix, (float)x2, (float)y2, (float)blitOffset).color(f6, f7, f8, f5).endVertex();
+    public static void fillGradient(com.mojang.math.Matrix4f $$0, com.mojang.blaze3d.vertex.BufferBuilder $$1, int $$2, int $$3, int $$4, int $$5, int $$6, int $$7, int $$8) {
+        float $$9 = (float)($$7 >> 24 & 0xFF) / 255.0f;
+        float $$10 = (float)($$7 >> 16 & 0xFF) / 255.0f;
+        float $$11 = (float)($$7 >> 8 & 0xFF) / 255.0f;
+        float $$12 = (float)($$7 & 0xFF) / 255.0f;
+        float $$13 = (float)($$8 >> 24 & 0xFF) / 255.0f;
+        float $$14 = (float)($$8 >> 16 & 0xFF) / 255.0f;
+        float $$15 = (float)($$8 >> 8 & 0xFF) / 255.0f;
+        float $$16 = (float)($$8 & 0xFF) / 255.0f;
+        $$1.vertex($$0, (float)$$4, (float)$$3, (float)$$6).color($$10, $$11, $$12, $$9).endVertex();
+        $$1.vertex($$0, (float)$$2, (float)$$3, (float)$$6).color($$10, $$11, $$12, $$9).endVertex();
+        $$1.vertex($$0, (float)$$2, (float)$$5, (float)$$6).color($$14, $$15, $$16, $$13).endVertex();
+        $$1.vertex($$0, (float)$$4, (float)$$5, (float)$$6).color($$14, $$15, $$16, $$13).endVertex();
     }
 
-    public static void drawCenteredString(com.mojang.blaze3d.vertex.PoseStack poseStack, net.minecraft.client.gui.Font font, java.lang.String text, int x, int y, int color) {
-        font.drawShadow(poseStack, text, (float)(x - font.width(text) / 2), (float)y, color);
+    public static void drawCenteredString(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.gui.Font $$1, java.lang.String $$2, int $$3, int $$4, int $$5) {
+        $$1.drawShadow($$0, $$2, (float)($$3 - $$1.width($$2) / 2), (float)$$4, $$5);
     }
 
-    public static void drawCenteredString(com.mojang.blaze3d.vertex.PoseStack poseStack, net.minecraft.client.gui.Font font, net.minecraft.network.chat.Component text, int x, int y, int color) {
-        net.minecraft.util.FormattedCharSequence formattedCharSequence = text.getVisualOrderText();
-        font.drawShadow(poseStack, formattedCharSequence, (float)(x - font.width(formattedCharSequence) / 2), (float)y, color);
+    public static void drawCenteredString(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.gui.Font $$1, net.minecraft.network.chat.Component $$2, int $$3, int $$4, int $$5) {
+        net.minecraft.util.FormattedCharSequence $$6 = $$2.getVisualOrderText();
+        $$1.drawShadow($$0, $$6, (float)($$3 - $$1.width($$6) / 2), (float)$$4, $$5);
     }
 
     public static void drawCenteredString(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.gui.Font $$1, net.minecraft.util.FormattedCharSequence $$2, int $$3, int $$4, int $$5) {
         $$1.drawShadow($$0, $$2, (float)($$3 - $$1.width($$2) / 2), (float)$$4, $$5);
     }
 
-    public static void drawString(com.mojang.blaze3d.vertex.PoseStack poseStack, net.minecraft.client.gui.Font font, java.lang.String text, int x, int y, int color) {
-        font.drawShadow(poseStack, text, (float)x, (float)y, color);
+    public static void drawString(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.gui.Font $$1, java.lang.String $$2, int $$3, int $$4, int $$5) {
+        $$1.drawShadow($$0, $$2, (float)$$3, (float)$$4, $$5);
     }
 
     public static void drawString(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.gui.Font $$1, net.minecraft.util.FormattedCharSequence $$2, int $$3, int $$4, int $$5) {
         $$1.drawShadow($$0, $$2, (float)$$3, (float)$$4, $$5);
     }
 
-    public static void drawString(com.mojang.blaze3d.vertex.PoseStack poseStack, net.minecraft.client.gui.Font font, net.minecraft.network.chat.Component text, int x, int y, int color) {
-        font.drawShadow(poseStack, text, (float)x, (float)y, color);
+    public static void drawString(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.client.gui.Font $$1, net.minecraft.network.chat.Component $$2, int $$3, int $$4, int $$5) {
+        $$1.drawShadow($$0, $$2, (float)$$3, (float)$$4, $$5);
     }
 
-    public void blitOutlineBlack(int width, int height, java.util.function.BiConsumer<java.lang.Integer, java.lang.Integer> boxXYConsumer) {
+    public void blitOutlineBlack(int $$0, int $$1, java.util.function.BiConsumer<java.lang.Integer, java.lang.Integer> $$2) {
         com.mojang.blaze3d.systems.RenderSystem.blendFuncSeparate((com.mojang.blaze3d.platform.GlStateManager$SourceFactor)com.mojang.blaze3d.platform.GlStateManager$SourceFactor.ZERO, (com.mojang.blaze3d.platform.GlStateManager$DestFactor)com.mojang.blaze3d.platform.GlStateManager$DestFactor.ONE_MINUS_SRC_ALPHA, (com.mojang.blaze3d.platform.GlStateManager$SourceFactor)com.mojang.blaze3d.platform.GlStateManager$SourceFactor.SRC_ALPHA, (com.mojang.blaze3d.platform.GlStateManager$DestFactor)com.mojang.blaze3d.platform.GlStateManager$DestFactor.ONE_MINUS_SRC_ALPHA);
-        boxXYConsumer.accept((java.lang.Object)(width + 1), (java.lang.Object)height);
-        boxXYConsumer.accept((java.lang.Object)(width - 1), (java.lang.Object)height);
-        boxXYConsumer.accept((java.lang.Object)width, (java.lang.Object)(height + 1));
-        boxXYConsumer.accept((java.lang.Object)width, (java.lang.Object)(height - 1));
+        $$2.accept((java.lang.Object)($$0 + 1), (java.lang.Object)$$1);
+        $$2.accept((java.lang.Object)($$0 - 1), (java.lang.Object)$$1);
+        $$2.accept((java.lang.Object)$$0, (java.lang.Object)($$1 + 1));
+        $$2.accept((java.lang.Object)$$0, (java.lang.Object)($$1 - 1));
         com.mojang.blaze3d.systems.RenderSystem.blendFunc((com.mojang.blaze3d.platform.GlStateManager$SourceFactor)com.mojang.blaze3d.platform.GlStateManager$SourceFactor.SRC_ALPHA, (com.mojang.blaze3d.platform.GlStateManager$DestFactor)com.mojang.blaze3d.platform.GlStateManager$DestFactor.ONE_MINUS_SRC_ALPHA);
-        boxXYConsumer.accept((java.lang.Object)width, (java.lang.Object)height);
+        $$2.accept((java.lang.Object)$$0, (java.lang.Object)$$1);
     }
 
-    public static void blit(com.mojang.blaze3d.vertex.PoseStack matrixStack, int x, int y, int blitOffset, int width, int height, net.minecraft.client.renderer.texture.TextureAtlasSprite sprite) {
-        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.math.Matrix4f)matrixStack.last().pose(), (int)x, (int)(x + width), (int)y, (int)(y + height), (int)blitOffset, (float)sprite.getU0(), (float)sprite.getU1(), (float)sprite.getV0(), (float)sprite.getV1());
+    public static void blit(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, int $$5, net.minecraft.client.renderer.texture.TextureAtlasSprite $$6) {
+        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.math.Matrix4f)$$0.last().pose(), (int)$$1, (int)($$1 + $$4), (int)$$2, (int)($$2 + $$5), (int)$$3, (float)$$6.getU0(), (float)$$6.getU1(), (float)$$6.getV0(), (float)$$6.getV1());
     }
 
-    public void blit(com.mojang.blaze3d.vertex.PoseStack matrixStack, int x, int y, int uOffset, int vOffset, int uWidth, int vHeight) {
-        net.minecraft.client.gui.GuiComponent.blit((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (int)x, (int)y, (int)this.blitOffset, (float)uOffset, (float)vOffset, (int)uWidth, (int)vHeight, (int)256, (int)256);
+    public void blit(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, int $$5, int $$6) {
+        net.minecraft.client.gui.GuiComponent.blit((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$1, (int)$$2, (int)this.blitOffset, (float)$$3, (float)$$4, (int)$$5, (int)$$6, (int)256, (int)256);
     }
 
-    public static void blit(com.mojang.blaze3d.vertex.PoseStack matrixStack, int x, int y, int blitOffset, float uOffset, float vOffset, int uWidth, int vHeight, int textureHeight, int textureWidth) {
-        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (int)x, (int)(x + uWidth), (int)y, (int)(y + vHeight), (int)blitOffset, (int)uWidth, (int)vHeight, (float)uOffset, (float)vOffset, (int)textureHeight, (int)textureWidth);
+    public static void blit(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, float $$4, float $$5, int $$6, int $$7, int $$8, int $$9) {
+        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$1, (int)($$1 + $$6), (int)$$2, (int)($$2 + $$7), (int)$$3, (int)$$6, (int)$$7, (float)$$4, (float)$$5, (int)$$8, (int)$$9);
     }
 
-    public static void blit(com.mojang.blaze3d.vertex.PoseStack matrixStack, int x, int y, int width, int height, float uOffset, float vOffset, int uWidth, int vHeight, int textureWidth, int textureHeight) {
-        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (int)x, (int)(x + width), (int)y, (int)(y + height), (int)0, (int)uWidth, (int)vHeight, (float)uOffset, (float)vOffset, (int)textureWidth, (int)textureHeight);
+    public static void blit(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, float $$5, float $$6, int $$7, int $$8, int $$9, int $$10) {
+        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$1, (int)($$1 + $$3), (int)$$2, (int)($$2 + $$4), (int)0, (int)$$7, (int)$$8, (float)$$5, (float)$$6, (int)$$9, (int)$$10);
     }
 
-    public static void blit(com.mojang.blaze3d.vertex.PoseStack matrixStack, int x, int y, float uOffset, float vOffset, int width, int height, int textureWidth, int textureHeight) {
-        net.minecraft.client.gui.GuiComponent.blit((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (int)x, (int)y, (int)width, (int)height, (float)uOffset, (float)vOffset, (int)width, (int)height, (int)textureWidth, (int)textureHeight);
+    public static void blit(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, float $$3, float $$4, int $$5, int $$6, int $$7, int $$8) {
+        net.minecraft.client.gui.GuiComponent.blit((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$1, (int)$$2, (int)$$5, (int)$$6, (float)$$3, (float)$$4, (int)$$5, (int)$$6, (int)$$7, (int)$$8);
     }
 
-    public static void innerBlit(com.mojang.blaze3d.vertex.PoseStack matrixStack, int x1, int x2, int y1, int y2, int blitOffset, int uWidth, int vHeight, float uOffset, float vOffset, int textureWidth, int textureHeight) {
-        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.math.Matrix4f)matrixStack.last().pose(), (int)x1, (int)x2, (int)y1, (int)y2, (int)blitOffset, (float)((uOffset + 0.0f) / (float)textureWidth), (float)((uOffset + (float)uWidth) / (float)textureWidth), (float)((vOffset + 0.0f) / (float)textureHeight), (float)((vOffset + (float)vHeight) / (float)textureHeight));
+    public static void innerBlit(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, int $$5, int $$6, int $$7, float $$8, float $$9, int $$10, int $$11) {
+        net.minecraft.client.gui.GuiComponent.innerBlit((com.mojang.math.Matrix4f)$$0.last().pose(), (int)$$1, (int)$$2, (int)$$3, (int)$$4, (int)$$5, (float)(($$8 + 0.0f) / (float)$$10), (float)(($$8 + (float)$$6) / (float)$$10), (float)(($$9 + 0.0f) / (float)$$11), (float)(($$9 + (float)$$7) / (float)$$11));
     }
 
-    public static void innerBlit(com.mojang.math.Matrix4f matrix, int x1, int x2, int y1, int y2, int blitOffset, float minU, float maxU, float minV, float maxV) {
+    public static void innerBlit(com.mojang.math.Matrix4f $$0, int $$1, int $$2, int $$3, int $$4, int $$5, float $$6, float $$7, float $$8, float $$9) {
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionTexShader);
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder();
-        bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX);
-        bufferBuilder.vertex(matrix, (float)x1, (float)y2, (float)blitOffset).uv(minU, maxV).endVertex();
-        bufferBuilder.vertex(matrix, (float)x2, (float)y2, (float)blitOffset).uv(maxU, maxV).endVertex();
-        bufferBuilder.vertex(matrix, (float)x2, (float)y1, (float)blitOffset).uv(maxU, minV).endVertex();
-        bufferBuilder.vertex(matrix, (float)x1, (float)y1, (float)blitOffset).uv(minU, minV).endVertex();
-        com.mojang.blaze3d.vertex.BufferUploader.drawWithShader((com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer)bufferBuilder.end());
+        com.mojang.blaze3d.vertex.BufferBuilder $$10 = com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder();
+        $$10.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX);
+        $$10.vertex($$0, (float)$$1, (float)$$4, (float)$$5).uv($$6, $$9).endVertex();
+        $$10.vertex($$0, (float)$$2, (float)$$4, (float)$$5).uv($$7, $$9).endVertex();
+        $$10.vertex($$0, (float)$$2, (float)$$3, (float)$$5).uv($$7, $$8).endVertex();
+        $$10.vertex($$0, (float)$$1, (float)$$3, (float)$$5).uv($$6, $$8).endVertex();
+        com.mojang.blaze3d.vertex.BufferUploader.drawWithShader((com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer)$$10.end());
     }
 
     public int getBlitOffset() {
         return this.blitOffset;
     }
 
-    public void setBlitOffset(int value) {
-        this.blitOffset = value;
+    public void setBlitOffset(int $$0) {
+        this.blitOffset = $$0;
     }
 
     static {