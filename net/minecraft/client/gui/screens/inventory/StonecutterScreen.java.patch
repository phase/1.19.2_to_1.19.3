--- net/minecraft/client/gui/screens/inventory/StonecutterScreen.java
+++ net/minecraft/client/gui/screens/inventory/StonecutterScreen.java
@@ -21,120 +21,120 @@
     public int startIndex;
     public boolean displayRecipes;
 
-    public net.minecraft.client.gui.screens.inventory.StonecutterScreen(net.minecraft.world.inventory.StonecutterMenu stonecutterMenu, net.minecraft.world.entity.player.Inventory playerInventory, net.minecraft.network.chat.Component title) {
-        super((net.minecraft.world.inventory.AbstractContainerMenu)stonecutterMenu, playerInventory, title);
-        stonecutterMenu.registerUpdateListener(() -> this.containerChanged());
+    public net.minecraft.client.gui.screens.inventory.StonecutterScreen(net.minecraft.world.inventory.StonecutterMenu $$0, net.minecraft.world.entity.player.Inventory $$1, net.minecraft.network.chat.Component $$2) {
+        super((net.minecraft.world.inventory.AbstractContainerMenu)$$0, $$1, $$2);
+        $$0.registerUpdateListener(() -> this.containerChanged());
         --this.titleLabelY;
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, int mouseX, int mouseY, float partialTicks) {
-        super.render(matrixStack, mouseX, mouseY, partialTicks);
-        this.renderTooltip(matrixStack, mouseX, mouseY);
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, float $$3) {
+        super.render($$0, $$1, $$2, $$3);
+        this.renderTooltip($$0, $$1, $$2);
     }
 
-    public void renderBg(com.mojang.blaze3d.vertex.PoseStack matrixStack, float partialTicks, int x, int y) {
-        this.renderBackground(matrixStack);
+    public void renderBg(com.mojang.blaze3d.vertex.PoseStack $$0, float $$1, int $$2, int $$3) {
+        this.renderBackground($$0);
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionTexShader);
         com.mojang.blaze3d.systems.RenderSystem.setShaderColor((float)1.0f, (float)1.0f, (float)1.0f, (float)1.0f);
         com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)BG_LOCATION);
-        int n = this.leftPos;
-        int n2 = this.topPos;
-        this.blit(matrixStack, n, n2, 0, 0, this.imageWidth, this.imageHeight);
-        int n3 = (int)(41.0f * this.scrollOffs);
-        this.blit(matrixStack, n + 119, n2 + 15 + n3, 176 + (this.isScrollBarActive() ? 0 : 12), 0, 12, 15);
-        int n4 = this.leftPos + 52;
-        int n5 = this.topPos + 14;
-        int n6 = this.startIndex + 12;
-        this.renderButtons(matrixStack, x, y, n4, n5, n6);
-        this.renderRecipes(n4, n5, n6);
+        int $$4 = this.leftPos;
+        int $$5 = this.topPos;
+        this.blit($$0, $$4, $$5, 0, 0, this.imageWidth, this.imageHeight);
+        int $$6 = (int)(41.0f * this.scrollOffs);
+        this.blit($$0, $$4 + 119, $$5 + 15 + $$6, 176 + (this.isScrollBarActive() ? 0 : 12), 0, 12, 15);
+        int $$7 = this.leftPos + 52;
+        int $$8 = this.topPos + 14;
+        int $$9 = this.startIndex + 12;
+        this.renderButtons($$0, $$2, $$3, $$7, $$8, $$9);
+        this.renderRecipes($$7, $$8, $$9);
     }
 
-    public void renderTooltip(com.mojang.blaze3d.vertex.PoseStack matrixStack, int x, int y) {
-        super.renderTooltip(matrixStack, x, y);
+    public void renderTooltip(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2) {
+        super.renderTooltip($$0, $$1, $$2);
         if (this.displayRecipes) {
-            int n = this.leftPos + 52;
-            int n2 = this.topPos + 14;
-            int n3 = this.startIndex + 12;
-            java.util.List list = ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getRecipes();
-            for (int i = this.startIndex; i < n3 && i < ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getNumRecipes(); ++i) {
-                int n4 = i - this.startIndex;
-                int n5 = n + n4 % 4 * 16;
-                int n6 = n2 + n4 / 4 * 18 + 2;
-                if (x < n5 || x >= n5 + 16 || y < n6 || y >= n6 + 18) continue;
-                this.renderTooltip(matrixStack, ((net.minecraft.world.item.crafting.StonecutterRecipe)list.get(i)).getResultItem(), x, y);
+            int $$3 = this.leftPos + 52;
+            int $$4 = this.topPos + 14;
+            int $$5 = this.startIndex + 12;
+            java.util.List $$6 = ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getRecipes();
+            for (int $$7 = this.startIndex; $$7 < $$5 && $$7 < ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getNumRecipes(); ++$$7) {
+                int $$8 = $$7 - this.startIndex;
+                int $$9 = $$3 + $$8 % 4 * 16;
+                int $$10 = $$4 + $$8 / 4 * 18 + 2;
+                if ($$1 < $$9 || $$1 >= $$9 + 16 || $$2 < $$10 || $$2 >= $$10 + 18) continue;
+                this.renderTooltip($$0, ((net.minecraft.world.item.crafting.StonecutterRecipe)$$6.get($$7)).getResultItem(), $$1, $$2);
             }
         }
     }
 
-    public void renderButtons(com.mojang.blaze3d.vertex.PoseStack poseStack, int mouseX, int mouseY, int x, int y, int lastVisibleElementIndex) {
-        for (int i = this.startIndex; i < lastVisibleElementIndex && i < ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getNumRecipes(); ++i) {
-            int n = i - this.startIndex;
-            int n2 = x + n % 4 * 16;
-            int n3 = n / 4;
-            int n4 = y + n3 * 18 + 2;
-            int n5 = this.imageHeight;
-            if (i == ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getSelectedRecipeIndex()) {
-                n5 += 18;
-            } else if (mouseX >= n2 && mouseY >= n4 && mouseX < n2 + 16 && mouseY < n4 + 18) {
-                n5 += 36;
+    public void renderButtons(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4, int $$5) {
+        for (int $$6 = this.startIndex; $$6 < $$5 && $$6 < ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getNumRecipes(); ++$$6) {
+            int $$7 = $$6 - this.startIndex;
+            int $$8 = $$3 + $$7 % 4 * 16;
+            int $$9 = $$7 / 4;
+            int $$10 = $$4 + $$9 * 18 + 2;
+            int $$11 = this.imageHeight;
+            if ($$6 == ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getSelectedRecipeIndex()) {
+                $$11 += 18;
+            } else if ($$1 >= $$8 && $$2 >= $$10 && $$1 < $$8 + 16 && $$2 < $$10 + 18) {
+                $$11 += 36;
             }
-            this.blit(poseStack, n2, n4 - 1, 0, n5, 16, 18);
+            this.blit($$0, $$8, $$10 - 1, 0, $$11, 16, 18);
         }
     }
 
-    public void renderRecipes(int left, int top, int recipeIndexOffsetMax) {
-        java.util.List list = ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getRecipes();
-        for (int i = this.startIndex; i < recipeIndexOffsetMax && i < ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getNumRecipes(); ++i) {
-            int n = i - this.startIndex;
-            int n2 = left + n % 4 * 16;
-            int n3 = n / 4;
-            int n4 = top + n3 * 18 + 2;
-            this.minecraft.getItemRenderer().renderAndDecorateItem(((net.minecraft.world.item.crafting.StonecutterRecipe)list.get(i)).getResultItem(), n2, n4);
+    public void renderRecipes(int $$0, int $$1, int $$2) {
+        java.util.List $$3 = ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getRecipes();
+        for (int $$4 = this.startIndex; $$4 < $$2 && $$4 < ((net.minecraft.world.inventory.StonecutterMenu)this.menu).getNumRecipes(); ++$$4) {
+            int $$5 = $$4 - this.startIndex;
+            int $$6 = $$0 + $$5 % 4 * 16;
+            int $$7 = $$5 / 4;
+            int $$8 = $$1 + $$7 * 18 + 2;
+            this.minecraft.getItemRenderer().renderAndDecorateItem(((net.minecraft.world.item.crafting.StonecutterRecipe)$$3.get($$4)).getResultItem(), $$6, $$8);
         }
     }
 
-    public boolean mouseClicked(double mouseX, double mouseY, int button) {
+    public boolean mouseClicked(double $$0, double $$1, int $$2) {
         this.scrolling = false;
         if (this.displayRecipes) {
-            int n = this.leftPos + 52;
-            int n2 = this.topPos + 14;
-            int n3 = this.startIndex + 12;
-            for (int i = this.startIndex; i < n3; ++i) {
-                int n4 = i - this.startIndex;
-                double d = mouseX - (double)(n + n4 % 4 * 16);
-                double d2 = mouseY - (double)(n2 + n4 / 4 * 18);
-                if (!(d >= 0.0) || !(d2 >= 0.0) || !(d < 16.0) || !(d2 < 18.0) || !((net.minecraft.world.inventory.StonecutterMenu)this.menu).clickMenuButton((net.minecraft.world.entity.player.Player)this.minecraft.player, i)) continue;
+            int $$3 = this.leftPos + 52;
+            int $$4 = this.topPos + 14;
+            int $$5 = this.startIndex + 12;
+            for (int $$6 = this.startIndex; $$6 < $$5; ++$$6) {
+                int $$7 = $$6 - this.startIndex;
+                double $$8 = $$0 - (double)($$3 + $$7 % 4 * 16);
+                double $$9 = $$1 - (double)($$4 + $$7 / 4 * 18);
+                if (!($$8 >= 0.0) || !($$9 >= 0.0) || !($$8 < 16.0) || !($$9 < 18.0) || !((net.minecraft.world.inventory.StonecutterMenu)this.menu).clickMenuButton((net.minecraft.world.entity.player.Player)this.minecraft.player, $$6)) continue;
                 net.minecraft.client.Minecraft.getInstance().getSoundManager().play((net.minecraft.client.resources.sounds.SoundInstance)net.minecraft.client.resources.sounds.SimpleSoundInstance.forUI((net.minecraft.sounds.SoundEvent)net.minecraft.sounds.SoundEvents.UI_STONECUTTER_SELECT_RECIPE, (float)1.0f));
-                this.minecraft.gameMode.handleInventoryButtonClick(((net.minecraft.world.inventory.StonecutterMenu)this.menu).containerId, i);
+                this.minecraft.gameMode.handleInventoryButtonClick(((net.minecraft.world.inventory.StonecutterMenu)this.menu).containerId, $$6);
                 return true;
             }
-            n = this.leftPos + 119;
-            n2 = this.topPos + 9;
-            if (mouseX >= (double)n && mouseX < (double)(n + 12) && mouseY >= (double)n2 && mouseY < (double)(n2 + 54)) {
+            $$3 = this.leftPos + 119;
+            $$4 = this.topPos + 9;
+            if ($$0 >= (double)$$3 && $$0 < (double)($$3 + 12) && $$1 >= (double)$$4 && $$1 < (double)($$4 + 54)) {
                 this.scrolling = true;
             }
         }
-        return super.mouseClicked(mouseX, mouseY, button);
+        return super.mouseClicked($$0, $$1, $$2);
     }
 
-    public boolean mouseDragged(double mouseX, double mouseY, int button, double dragX, double dragY) {
+    public boolean mouseDragged(double $$0, double $$1, int $$2, double $$3, double $$4) {
         if (this.scrolling && this.isScrollBarActive()) {
-            int n = this.topPos + 14;
-            int n2 = n + 54;
-            this.scrollOffs = ((float)mouseY - (float)n - 7.5f) / ((float)(n2 - n) - 15.0f);
+            int $$5 = this.topPos + 14;
+            int $$6 = $$5 + 54;
+            this.scrollOffs = ((float)$$1 - (float)$$5 - 7.5f) / ((float)($$6 - $$5) - 15.0f);
             this.scrollOffs = net.minecraft.util.Mth.clamp((float)this.scrollOffs, (float)0.0f, (float)1.0f);
             this.startIndex = (int)((double)(this.scrollOffs * (float)this.getOffscreenRows()) + 0.5) * 4;
             return true;
         }
-        return super.mouseDragged(mouseX, mouseY, button, dragX, dragY);
+        return super.mouseDragged($$0, $$1, $$2, $$3, $$4);
     }
 
-    public boolean mouseScrolled(double mouseX, double mouseY, double delta) {
+    public boolean mouseScrolled(double $$0, double $$1, double $$2) {
         if (this.isScrollBarActive()) {
-            int n = this.getOffscreenRows();
-            float f = (float)delta / (float)n;
-            this.scrollOffs = net.minecraft.util.Mth.clamp((float)(this.scrollOffs - f), (float)0.0f, (float)1.0f);
-            this.startIndex = (int)((double)(this.scrollOffs * (float)n) + 0.5) * 4;
+            int $$3 = this.getOffscreenRows();
+            float $$4 = (float)$$2 / (float)$$3;
+            this.scrollOffs = net.minecraft.util.Mth.clamp((float)(this.scrollOffs - $$4), (float)0.0f, (float)1.0f);
+            this.startIndex = (int)((double)(this.scrollOffs * (float)$$3) + 0.5) * 4;
         }
         return true;
     }