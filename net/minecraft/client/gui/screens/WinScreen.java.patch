--- net/minecraft/client/gui/screens/WinScreen.java
+++ net/minecraft/client/gui/screens/WinScreen.java
@@ -27,12 +27,12 @@
     public float scrollSpeed;
     public float unmodifiedScrollSpeed;
 
-    public net.minecraft.client.gui.screens.WinScreen(boolean poem, java.lang.Runnable onFinished) {
+    public net.minecraft.client.gui.screens.WinScreen(boolean $$0, java.lang.Runnable $$1) {
         super(net.minecraft.client.GameNarrator.NO_TITLE);
         this.speedupModifiers = new it.unimi.dsi.fastutil.ints.IntOpenHashSet();
-        this.poem = poem;
-        this.onFinished = onFinished;
-        this.unmodifiedScrollSpeed = !poem ? 0.75f : 0.5f;
+        this.poem = $$0;
+        this.onFinished = $$1;
+        this.unmodifiedScrollSpeed = !$$0 ? 0.75f : 0.5f;
         this.scrollSpeed = this.unmodifiedScrollSpeed;
     }
 
@@ -197,59 +197,57 @@
         $$8.end();
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, int mouseX, int mouseY, float partialTicks) {
-        int n;
-        this.scroll += partialTicks * this.scrollSpeed;
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, int $$12, int $$22, float $$3) {
+        this.scroll += $$3 * this.scrollSpeed;
         this.renderBg();
-        int n2 = this.width / 2 - 137;
-        int n3 = this.height + 50;
-        float f = -this.scroll;
-        matrixStack.pushPose();
-        matrixStack.translate(0.0, (double)f, 0.0);
+        int $$4 = this.width / 2 - 137;
+        int $$5 = this.height + 50;
+        float $$6 = -this.scroll;
+        $$0.pushPose();
+        $$0.translate(0.0, (double)$$6, 0.0);
         com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)LOGO_LOCATION);
         com.mojang.blaze3d.systems.RenderSystem.setShaderColor((float)1.0f, (float)1.0f, (float)1.0f, (float)1.0f);
         com.mojang.blaze3d.systems.RenderSystem.enableBlend();
-        this.blitOutlineBlack(n2, n3, ($$1, $$2) -> {
-            this.blit(matrixStack, $$1 + 0, $$2.intValue(), 0, 0, 155, 44);
-            this.blit(matrixStack, $$1 + 155, $$2.intValue(), 0, 45, 155, 44);
+        this.blitOutlineBlack($$4, $$5, ($$1, $$2) -> {
+            this.blit($$0, $$1 + 0, $$2.intValue(), 0, 0, 155, 44);
+            this.blit($$0, $$1 + 155, $$2.intValue(), 0, 45, 155, 44);
         });
         com.mojang.blaze3d.systems.RenderSystem.disableBlend();
         com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)EDITION_LOCATION);
-        net.minecraft.client.gui.screens.WinScreen.blit((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (int)(n2 + 88), (int)(n3 + 37), (float)0.0f, (float)0.0f, (int)98, (int)14, (int)128, (int)16);
-        int n4 = n3 + 100;
-        for (n = 0;
- n < this.lines.size(); ++n) {
-            float f2;
-            if (n == this.lines.size() - 1 && (f2 = (float)n4 + f - (float)(this.height / 2 - 6)) < 0.0f) {
-                matrixStack.translate(0.0, (double)(-f2), 0.0);
+        net.minecraft.client.gui.screens.WinScreen.blit((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)($$4 + 88), (int)($$5 + 37), (float)0.0f, (float)0.0f, (int)98, (int)14, (int)128, (int)16);
+        int $$7 = $$5 + 100;
+        for (int $$8 = 0; $$8 < this.lines.size(); ++$$8) {
+            float $$9;
+            if ($$8 == this.lines.size() - 1 && ($$9 = (float)$$7 + $$6 - (float)(this.height / 2 - 6)) < 0.0f) {
+                $$0.translate(0.0, (double)(-$$9), 0.0);
             }
-            if ((float)n4 + f + 12.0f + 8.0f > 0.0f && (float)n4 + f < (float)this.height) {
-                net.minecraft.util.FormattedCharSequence formattedCharSequence = (net.minecraft.util.FormattedCharSequence)this.lines.get(n);
-                if (this.centeredLines.contains(n)) {
-                    this.font.drawShadow(matrixStack, formattedCharSequence, (float)(n2 + (274 - this.font.width(formattedCharSequence)) / 2), (float)n4, 0xFFFFFF);
+            if ((float)$$7 + $$6 + 12.0f + 8.0f > 0.0f && (float)$$7 + $$6 < (float)this.height) {
+                net.minecraft.util.FormattedCharSequence $$10 = (net.minecraft.util.FormattedCharSequence)this.lines.get($$8);
+                if (this.centeredLines.contains($$8)) {
+                    this.font.drawShadow($$0, $$10, (float)($$4 + (274 - this.font.width($$10)) / 2), (float)$$7, 0xFFFFFF);
                 } else {
-                    this.font.drawShadow(matrixStack, formattedCharSequence, (float)n2, (float)n4, 0xFFFFFF);
+                    this.font.drawShadow($$0, $$10, (float)$$4, (float)$$7, 0xFFFFFF);
                 }
             }
-            n4 += 12;
+            $$7 += 12;
         }
-        matrixStack.popPose();
+        $$0.popPose();
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionTexColorShader);
         com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)VIGNETTE_LOCATION);
         com.mojang.blaze3d.systems.RenderSystem.enableBlend();
         com.mojang.blaze3d.systems.RenderSystem.blendFunc((com.mojang.blaze3d.platform.GlStateManager$SourceFactor)com.mojang.blaze3d.platform.GlStateManager$SourceFactor.ZERO, (com.mojang.blaze3d.platform.GlStateManager$DestFactor)com.mojang.blaze3d.platform.GlStateManager$DestFactor.ONE_MINUS_SRC_COLOR);
-        n = this.width;
-        int n5 = this.height;
-        com.mojang.blaze3d.vertex.Tesselator tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = tesselator.getBuilder();
-        bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX_COLOR);
-        bufferBuilder.vertex(0.0, (double)n5, (double)this.getBlitOffset()).uv(0.0f, 1.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
-        bufferBuilder.vertex((double)n, (double)n5, (double)this.getBlitOffset()).uv(1.0f, 1.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
-        bufferBuilder.vertex((double)n, 0.0, (double)this.getBlitOffset()).uv(1.0f, 0.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
-        bufferBuilder.vertex(0.0, 0.0, (double)this.getBlitOffset()).uv(0.0f, 0.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
-        tesselator.end();
+        int $$11 = this.width;
+        int $$122 = this.height;
+        com.mojang.blaze3d.vertex.Tesselator $$13 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+        com.mojang.blaze3d.vertex.BufferBuilder $$14 = $$13.getBuilder();
+        $$14.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX_COLOR);
+        $$14.vertex(0.0, (double)$$122, (double)this.getBlitOffset()).uv(0.0f, 1.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
+        $$14.vertex((double)$$11, (double)$$122, (double)this.getBlitOffset()).uv(1.0f, 1.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
+        $$14.vertex((double)$$11, 0.0, (double)this.getBlitOffset()).uv(1.0f, 0.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
+        $$14.vertex(0.0, 0.0, (double)this.getBlitOffset()).uv(0.0f, 0.0f).color(1.0f, 1.0f, 1.0f, 1.0f).endVertex();
+        $$13.end();
         com.mojang.blaze3d.systems.RenderSystem.disableBlend();
-        super.render(matrixStack, mouseX, mouseY, partialTicks);
+        super.render($$0, $$12, $$22, $$3);
     }
 
     static {