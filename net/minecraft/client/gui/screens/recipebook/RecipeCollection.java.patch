--- net/minecraft/client/gui/screens/recipebook/RecipeCollection.java
+++ net/minecraft/client/gui/screens/recipebook/RecipeCollection.java
@@ -34,32 +34,32 @@
         return !this.known.isEmpty();
     }
 
-    public void updateKnownRecipes(net.minecraft.stats.RecipeBook book) {
-        for (net.minecraft.world.item.crafting.Recipe recipe : this.recipes) {
-            if (!book.contains(recipe)) continue;
-            this.known.add((java.lang.Object)recipe);
+    public void updateKnownRecipes(net.minecraft.stats.RecipeBook $$0) {
+        for (net.minecraft.world.item.crafting.Recipe $$1 : this.recipes) {
+            if (!$$0.contains($$1)) continue;
+            this.known.add((java.lang.Object)$$1);
         }
     }
 
-    public void canCraft(net.minecraft.world.entity.player.StackedContents handler, int width, int height, net.minecraft.stats.RecipeBook book) {
-        for (net.minecraft.world.item.crafting.Recipe recipe : this.recipes) {
-            boolean bl;
-            boolean bl2 = bl = recipe.canCraftInDimensions(width, height) && book.contains(recipe);
-            if (bl) {
-                this.fitsDimensions.add((java.lang.Object)recipe);
+    public void canCraft(net.minecraft.world.entity.player.StackedContents $$0, int $$1, int $$2, net.minecraft.stats.RecipeBook $$3) {
+        for (net.minecraft.world.item.crafting.Recipe $$4 : this.recipes) {
+            boolean $$5;
+            boolean bl = $$5 = $$4.canCraftInDimensions($$1, $$2) && $$3.contains($$4);
+            if ($$5) {
+                this.fitsDimensions.add((java.lang.Object)$$4);
             } else {
-                this.fitsDimensions.remove((java.lang.Object)recipe);
+                this.fitsDimensions.remove((java.lang.Object)$$4);
             }
-            if (bl && handler.canCraft(recipe, null)) {
-                this.craftable.add((java.lang.Object)recipe);
+            if ($$5 && $$0.canCraft($$4, null)) {
+                this.craftable.add((java.lang.Object)$$4);
                 continue;
             }
-            this.craftable.remove((java.lang.Object)recipe);
+            this.craftable.remove((java.lang.Object)$$4);
         }
     }
 
-    public boolean isCraftable(net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        return this.craftable.contains(recipe);
+    public boolean isCraftable(net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        return this.craftable.contains($$0);
     }
 
     public boolean hasCraftable() {
@@ -74,23 +74,23 @@
         return this.recipes;
     }
 
-    public java.util.List<net.minecraft.world.item.crafting.Recipe<?>> getRecipes(boolean onlyCraftable) {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        java.util.Set set = onlyCraftable ? this.craftable : this.fitsDimensions;
-        for (net.minecraft.world.item.crafting.Recipe recipe : this.recipes) {
-            if (!set.contains((java.lang.Object)recipe)) continue;
-            arrayList.add((java.lang.Object)recipe);
+    public java.util.List<net.minecraft.world.item.crafting.Recipe<?>> getRecipes(boolean $$0) {
+        java.util.ArrayList $$1 = com.google.common.collect.Lists.newArrayList();
+        java.util.Set $$2 = $$0 ? this.craftable : this.fitsDimensions;
+        for (net.minecraft.world.item.crafting.Recipe $$3 : this.recipes) {
+            if (!$$2.contains((java.lang.Object)$$3)) continue;
+            $$1.add((java.lang.Object)$$3);
         }
-        return arrayList;
+        return $$1;
     }
 
-    public java.util.List<net.minecraft.world.item.crafting.Recipe<?>> getDisplayRecipes(boolean onlyCraftable) {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        for (net.minecraft.world.item.crafting.Recipe recipe : this.recipes) {
-            if (!this.fitsDimensions.contains((java.lang.Object)recipe) || this.craftable.contains((java.lang.Object)recipe) != onlyCraftable) continue;
-            arrayList.add((java.lang.Object)recipe);
+    public java.util.List<net.minecraft.world.item.crafting.Recipe<?>> getDisplayRecipes(boolean $$0) {
+        java.util.ArrayList $$1 = com.google.common.collect.Lists.newArrayList();
+        for (net.minecraft.world.item.crafting.Recipe $$2 : this.recipes) {
+            if (!this.fitsDimensions.contains((java.lang.Object)$$2) || this.craftable.contains((java.lang.Object)$$2) != $$0) continue;
+            $$1.add((java.lang.Object)$$2);
         }
-        return arrayList;
+        return $$1;
     }
 
     public boolean hasSingleResultItem() {