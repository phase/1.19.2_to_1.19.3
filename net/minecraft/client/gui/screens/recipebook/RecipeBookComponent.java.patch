--- net/minecraft/client/gui/screens/recipebook/RecipeBookComponent.java
+++ net/minecraft/client/gui/screens/recipebook/RecipeBookComponent.java
@@ -47,20 +47,19 @@
         this.stackedContents = new net.minecraft.world.entity.player.StackedContents();
     }
 
-    public void init(int width, int height, net.minecraft.client.Minecraft minecraft, boolean widthTooNarrow, net.minecraft.world.inventory.RecipeBookMenu<?> container) {
-        this.minecraft = minecraft;
-        this.width = width;
-        this.height = height;
-        this.menu = container;
-        this.widthTooNarrow = widthTooNarrow;
-        minecraft.player.containerMenu = container;
-        this.book = minecraft.player.getRecipeBook();
-        this.timesInventoryChanged = minecraft.player.getInventory().getTimesChanged();
+    public void init(int $$0, int $$1, net.minecraft.client.Minecraft $$2, boolean $$3, net.minecraft.world.inventory.RecipeBookMenu<?> $$4) {
+        this.minecraft = $$2;
+        this.width = $$0;
+        this.height = $$1;
+        this.menu = $$4;
+        this.widthTooNarrow = $$3;
+        $$2.player.containerMenu = $$4;
+        this.book = $$2.player.getRecipeBook();
+        this.timesInventoryChanged = $$2.player.getInventory().getTimesChanged();
         this.visible = this.isVisibleAccordingToBookData();
         if (this.visible) {
             this.initVisuals();
         }
-        minecraft.keyboardHandler.setSendRepeatsToGui(true);
     }
 
     public void initVisuals() {
@@ -97,7 +96,7 @@
         this.updateTabs();
     }
 
-    public boolean changeFocus(boolean focus) {
+    public boolean changeFocus(boolean $$0) {
         return false;
     }
 
@@ -105,10 +104,6 @@
         this.filterButton.initTextureValues(152, 41, 28, 18, RECIPE_BOOK_LOCATION);
     }
 
-    public void removed() {
-        this.minecraft.keyboardHandler.setSendRepeatsToGui(false);
-    }
-
     public int updateScreenPosition(int $$0, int $$1) {
         int $$3;
         if (this.isVisible() && !this.widthTooNarrow) {
@@ -143,8 +138,8 @@
         this.sendUpdateSettings();
     }
 
-    public void slotClicked(@javax.annotation.Nullable net.minecraft.world.inventory.Slot slot) {
-        if (slot != null && slot.index < this.menu.getSize()) {
+    public void slotClicked(@javax.annotation.Nullable net.minecraft.world.inventory.Slot $$0) {
+        if ($$0 != null && $$0.index < this.menu.getSize()) {
             this.ghostRecipe.clear();
             if (this.isVisible()) {
                 this.updateStackedContents();
@@ -209,29 +204,29 @@
         this.updateCollections(false);
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, int mouseX, int mouseY, float partialTicks) {
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, float $$3) {
         if (!this.isVisible()) {
             return;
         }
-        matrixStack.pushPose();
-        matrixStack.translate(0.0, 0.0, 100.0);
+        $$0.pushPose();
+        $$0.translate(0.0, 0.0, 100.0);
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionTexShader);
         com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)RECIPE_BOOK_LOCATION);
         com.mojang.blaze3d.systems.RenderSystem.setShaderColor((float)1.0f, (float)1.0f, (float)1.0f, (float)1.0f);
-        int n = (this.width - 147) / 2 - this.xOffset;
-        int n2 = (this.height - 166) / 2;
-        this.blit(matrixStack, n, n2, 1, 1, 147, 166);
+        int $$4 = (this.width - 147) / 2 - this.xOffset;
+        int $$5 = (this.height - 166) / 2;
+        this.blit($$0, $$4, $$5, 1, 1, 147, 166);
         if (!this.searchBox.isFocused() && this.searchBox.getValue().isEmpty()) {
-            net.minecraft.client.gui.screens.recipebook.RecipeBookComponent.drawString((com.mojang.blaze3d.vertex.PoseStack)matrixStack, (net.minecraft.client.gui.Font)this.minecraft.font, (net.minecraft.network.chat.Component)SEARCH_HINT, (int)(n + 25), (int)(n2 + 14), (int)-1);
+            net.minecraft.client.gui.screens.recipebook.RecipeBookComponent.drawString((com.mojang.blaze3d.vertex.PoseStack)$$0, (net.minecraft.client.gui.Font)this.minecraft.font, (net.minecraft.network.chat.Component)SEARCH_HINT, (int)($$4 + 25), (int)($$5 + 14), (int)-1);
         } else {
-            this.searchBox.render(matrixStack, mouseX, mouseY, partialTicks);
+            this.searchBox.render($$0, $$1, $$2, $$3);
         }
-        for (net.minecraft.client.gui.screens.recipebook.RecipeBookTabButton recipeBookTabButton : this.tabButtons) {
-            recipeBookTabButton.render(matrixStack, mouseX, mouseY, partialTicks);
+        for (net.minecraft.client.gui.screens.recipebook.RecipeBookTabButton $$6 : this.tabButtons) {
+            $$6.render($$0, $$1, $$2, $$3);
         }
-        this.filterButton.render(matrixStack, mouseX, mouseY, partialTicks);
-        this.recipeBookPage.render(matrixStack, n, n2, mouseX, mouseY, partialTicks);
-        matrixStack.popPose();
+        this.filterButton.render($$0, $$1, $$2, $$3);
+        this.recipeBookPage.render($$0, $$4, $$5, $$1, $$2, $$3);
+        $$0.popPose();
     }
 
     public void renderTooltip(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, int $$3, int $$4) {
@@ -274,42 +269,42 @@
         this.ghostRecipe.render($$0, this.minecraft, $$1, $$2, $$3, $$4);
     }
 
-    public boolean mouseClicked(double mouseX, double mouseY, int button) {
+    public boolean mouseClicked(double $$0, double $$1, int $$2) {
         if (!this.isVisible() || this.minecraft.player.isSpectator()) {
             return false;
         }
-        if (this.recipeBookPage.mouseClicked(mouseX, mouseY, button, (this.width - 147) / 2 - this.xOffset, (this.height - 166) / 2, 147, 166)) {
-            net.minecraft.world.item.crafting.Recipe recipe = this.recipeBookPage.getLastClickedRecipe();
-            net.minecraft.client.gui.screens.recipebook.RecipeCollection recipeCollection = this.recipeBookPage.getLastClickedRecipeCollection();
-            if (recipe != null && recipeCollection != null) {
-                if (!recipeCollection.isCraftable(recipe) && this.ghostRecipe.getRecipe() == recipe) {
+        if (this.recipeBookPage.mouseClicked($$0, $$1, $$2, (this.width - 147) / 2 - this.xOffset, (this.height - 166) / 2, 147, 166)) {
+            net.minecraft.world.item.crafting.Recipe $$3 = this.recipeBookPage.getLastClickedRecipe();
+            net.minecraft.client.gui.screens.recipebook.RecipeCollection $$4 = this.recipeBookPage.getLastClickedRecipeCollection();
+            if ($$3 != null && $$4 != null) {
+                if (!$$4.isCraftable($$3) && this.ghostRecipe.getRecipe() == $$3) {
                     return false;
                 }
                 this.ghostRecipe.clear();
-                this.minecraft.gameMode.handlePlaceRecipe(this.minecraft.player.containerMenu.containerId, recipe, net.minecraft.client.gui.screens.Screen.hasShiftDown());
+                this.minecraft.gameMode.handlePlaceRecipe(this.minecraft.player.containerMenu.containerId, $$3, net.minecraft.client.gui.screens.Screen.hasShiftDown());
                 if (!this.isOffsetNextToMainGUI()) {
                     this.setVisible(false);
                 }
             }
             return true;
         }
-        if (this.searchBox.mouseClicked(mouseX, mouseY, button)) {
+        if (this.searchBox.mouseClicked($$0, $$1, $$2)) {
             return true;
         }
-        if (this.filterButton.mouseClicked(mouseX, mouseY, button)) {
-            boolean bl = this.toggleFiltering();
-            this.filterButton.setStateTriggered(bl);
+        if (this.filterButton.mouseClicked($$0, $$1, $$2)) {
+            boolean $$5 = this.toggleFiltering();
+            this.filterButton.setStateTriggered($$5);
             this.sendUpdateSettings();
             this.updateCollections(false);
             return true;
         }
-        for (net.minecraft.client.gui.screens.recipebook.RecipeBookTabButton recipeBookTabButton : this.tabButtons) {
-            if (!recipeBookTabButton.mouseClicked(mouseX, mouseY, button)) continue;
-            if (this.selectedTab != recipeBookTabButton) {
+        for (net.minecraft.client.gui.screens.recipebook.RecipeBookTabButton $$6 : this.tabButtons) {
+            if (!$$6.mouseClicked($$0, $$1, $$2)) continue;
+            if (this.selectedTab != $$6) {
                 if (this.selectedTab != null) {
                     this.selectedTab.setStateTriggered(false);
                 }
-                this.selectedTab = recipeBookTabButton;
+                this.selectedTab = $$6;
                 this.selectedTab.setStateTriggered(true);
                 this.updateCollections(true);
             }
@@ -334,23 +329,23 @@
         return $$7 && !$$8 && !this.selectedTab.isHoveredOrFocused();
     }
 
-    public boolean keyPressed(int keyCode, int scanCode, int modifiers) {
+    public boolean keyPressed(int $$0, int $$1, int $$2) {
         this.ignoreTextInput = false;
         if (!this.isVisible() || this.minecraft.player.isSpectator()) {
             return false;
         }
-        if (keyCode == 256 && !this.isOffsetNextToMainGUI()) {
+        if ($$0 == 256 && !this.isOffsetNextToMainGUI()) {
             this.setVisible(false);
             return true;
         }
-        if (this.searchBox.keyPressed(keyCode, scanCode, modifiers)) {
+        if (this.searchBox.keyPressed($$0, $$1, $$2)) {
             this.checkSearchStringUpdate();
             return true;
         }
-        if (this.searchBox.isFocused() && this.searchBox.isVisible() && keyCode != 256) {
+        if (this.searchBox.isFocused() && this.searchBox.isVisible() && $$0 != 256) {
             return true;
         }
-        if (this.minecraft.options.keyChat.matches(keyCode, scanCode) && !this.searchBox.isFocused()) {
+        if (this.minecraft.options.keyChat.matches($$0, $$1) && !this.searchBox.isFocused()) {
             this.ignoreTextInput = true;
             this.searchBox.setFocus(true);
             return true;
@@ -358,26 +353,26 @@
         return false;
     }
 
-    public boolean keyReleased(int keyCode, int scanCode, int modifiers) {
+    public boolean keyReleased(int $$0, int $$1, int $$2) {
         this.ignoreTextInput = false;
-        return super.keyReleased(keyCode, scanCode, modifiers);
+        return super.keyReleased($$0, $$1, $$2);
     }
 
-    public boolean charTyped(char codePoint, int modifiers) {
+    public boolean charTyped(char $$0, int $$1) {
         if (this.ignoreTextInput) {
             return false;
         }
         if (!this.isVisible() || this.minecraft.player.isSpectator()) {
             return false;
         }
-        if (this.searchBox.charTyped(codePoint, modifiers)) {
+        if (this.searchBox.charTyped($$0, $$1)) {
             this.checkSearchStringUpdate();
             return true;
         }
-        return super.charTyped(codePoint, modifiers);
+        return super.charTyped($$0, $$1);
     }
 
-    public boolean isMouseOver(double mouseX, double mouseY) {
+    public boolean isMouseOver(double $$0, double $$1) {
         return false;
     }
 
@@ -390,15 +385,15 @@
         }
     }
 
-    public void pirateSpeechForThePeople(java.lang.String text) {
-        if ("excitedze".equals((java.lang.Object)text)) {
-            net.minecraft.client.resources.language.LanguageManager languageManager = this.minecraft.getLanguageManager();
-            net.minecraft.client.resources.language.LanguageInfo languageInfo = languageManager.getLanguage("en_pt");
-            if (languageManager.getSelected().compareTo(languageInfo) == 0) {
+    public void pirateSpeechForThePeople(java.lang.String $$0) {
+        if ("excitedze".equals((java.lang.Object)$$0)) {
+            net.minecraft.client.resources.language.LanguageManager $$1 = this.minecraft.getLanguageManager();
+            net.minecraft.client.resources.language.LanguageInfo $$2 = $$1.getLanguage("en_pt");
+            if ($$1.getSelected().compareTo($$2) == 0) {
                 return;
             }
-            languageManager.setSelected(languageInfo);
-            this.minecraft.options.languageCode = languageInfo.getCode();
+            $$1.setSelected($$2);
+            this.minecraft.options.languageCode = $$2.getCode();
             this.minecraft.reloadResourcePacks();
             this.minecraft.options.save();
         }
@@ -415,9 +410,9 @@
         }
     }
 
-    public void recipesShown(java.util.List<net.minecraft.world.item.crafting.Recipe<?>> recipes) {
-        for (net.minecraft.world.item.crafting.Recipe recipe : recipes) {
-            this.minecraft.player.removeRecipeHighlight(recipe);
+    public void recipesShown(java.util.List<net.minecraft.world.item.crafting.Recipe<?>> $$0) {
+        for (net.minecraft.world.item.crafting.Recipe $$1 : $$0) {
+            this.minecraft.player.removeRecipeHighlight($$1);
         }
     }
 
@@ -428,11 +423,11 @@
         this.placeRecipe(this.menu.getGridWidth(), this.menu.getGridHeight(), this.menu.getResultSlotIndex(), $$0, $$0.getIngredients().iterator(), 0);
     }
 
-    public void addItemToSlot(java.util.Iterator<net.minecraft.world.item.crafting.Ingredient> ingredients, int slot, int maxAmount, int y, int x) {
-        net.minecraft.world.item.crafting.Ingredient ingredient = (net.minecraft.world.item.crafting.Ingredient)ingredients.next();
-        if (!ingredient.isEmpty()) {
-            net.minecraft.world.inventory.Slot slot2 = (net.minecraft.world.inventory.Slot)this.menu.slots.get(slot);
-            this.ghostRecipe.addIngredient(ingredient, slot2.x, slot2.y);
+    public void addItemToSlot(java.util.Iterator<net.minecraft.world.item.crafting.Ingredient> $$0, int $$1, int $$2, int $$3, int $$4) {
+        net.minecraft.world.item.crafting.Ingredient $$5 = (net.minecraft.world.item.crafting.Ingredient)$$0.next();
+        if (!$$5.isEmpty()) {
+            net.minecraft.world.inventory.Slot $$6 = (net.minecraft.world.inventory.Slot)this.menu.slots.get($$1);
+            this.ghostRecipe.addIngredient($$5, $$6.x, $$6.y);
         }
     }
 