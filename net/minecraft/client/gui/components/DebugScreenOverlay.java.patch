--- net/minecraft/client/gui/components/DebugScreenOverlay.java
+++ net/minecraft/client/gui/components/DebugScreenOverlay.java
@@ -26,10 +26,10 @@
     public static int YELLOW = -256;
     public static int GREEN = -16711936;
 
-    public net.minecraft.client.gui.components.DebugScreenOverlay(net.minecraft.client.Minecraft minecraft) {
-        this.minecraft = minecraft;
+    public net.minecraft.client.gui.components.DebugScreenOverlay(net.minecraft.client.Minecraft $$0) {
+        this.minecraft = $$0;
         this.allocationRateCalculator = new net.minecraft.client.gui.components.DebugScreenOverlay$AllocationRateCalculator();
-        this.font = minecraft.font;
+        this.font = $$0.font;
     }
 
     public void clearChunkCache() {
@@ -37,55 +37,55 @@
         this.clientChunk = null;
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack poseStack) {
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0) {
         this.minecraft.getProfiler().push("debug");
-        net.minecraft.world.entity.Entity entity = this.minecraft.getCameraEntity();
-        this.block = entity.pick(20.0, 0.0f, false);
-        this.liquid = entity.pick(20.0, 0.0f, true);
-        this.drawGameInformation(poseStack);
-        this.drawSystemInformation(poseStack);
+        net.minecraft.world.entity.Entity $$1 = this.minecraft.getCameraEntity();
+        this.block = $$1.pick(20.0, 0.0f, false);
+        this.liquid = $$1.pick(20.0, 0.0f, true);
+        this.drawGameInformation($$0);
+        this.drawSystemInformation($$0);
         if (this.minecraft.options.renderFpsChart) {
-            int n = this.minecraft.getWindow().getGuiScaledWidth();
-            this.drawChart(poseStack, this.minecraft.getFrameTimer(), 0, n / 2, true);
-            net.minecraft.client.server.IntegratedServer integratedServer = this.minecraft.getSingleplayerServer();
-            if (integratedServer != null) {
-                this.drawChart(poseStack, integratedServer.getFrameTimer(), n - java.lang.Math.min((int)(n / 2), (int)240), n / 2, false);
+            int $$2 = this.minecraft.getWindow().getGuiScaledWidth();
+            this.drawChart($$0, this.minecraft.getFrameTimer(), 0, $$2 / 2, true);
+            net.minecraft.client.server.IntegratedServer $$3 = this.minecraft.getSingleplayerServer();
+            if ($$3 != null) {
+                this.drawChart($$0, $$3.getFrameTimer(), $$2 - java.lang.Math.min((int)($$2 / 2), (int)240), $$2 / 2, false);
             }
         }
         this.minecraft.getProfiler().pop();
     }
 
-    public void drawGameInformation(com.mojang.blaze3d.vertex.PoseStack poseStack) {
-        java.util.List list = this.getGameInformation();
-        list.add((java.lang.Object)"");
-        boolean bl = this.minecraft.getSingleplayerServer() != null;
-        list.add((java.lang.Object)("Debug: Pie [shift]: " + (this.minecraft.options.renderDebugCharts ? "visible" : "hidden") + (bl ? " FPS + TPS" : " FPS") + " [alt]: " + (this.minecraft.options.renderFpsChart ? "visible" : "hidden")));
-        list.add((java.lang.Object)"For help: press F3 + Q");
-        for (int i = 0; i < list.size(); ++i) {
-            java.lang.String string = (java.lang.String)list.get(i);
-            if (com.google.common.base.Strings.isNullOrEmpty((java.lang.String)string)) continue;
+    public void drawGameInformation(com.mojang.blaze3d.vertex.PoseStack $$0) {
+        java.util.List $$1 = this.getGameInformation();
+        $$1.add((java.lang.Object)"");
+        boolean $$2 = this.minecraft.getSingleplayerServer() != null;
+        $$1.add((java.lang.Object)("Debug: Pie [shift]: " + (this.minecraft.options.renderDebugCharts ? "visible" : "hidden") + ($$2 ? " FPS + TPS" : " FPS") + " [alt]: " + (this.minecraft.options.renderFpsChart ? "visible" : "hidden")));
+        $$1.add((java.lang.Object)"For help: press F3 + Q");
+        for (int $$3 = 0; $$3 < $$1.size(); ++$$3) {
+            java.lang.String $$4 = (java.lang.String)$$1.get($$3);
+            if (com.google.common.base.Strings.isNullOrEmpty((java.lang.String)$$4)) continue;
             java.util.Objects.requireNonNull((java.lang.Object)this.font);
-            int n = 9;
-            int n2 = this.font.width(string);
-            int n3 = 2;
-            int n4 = 2 + n * i;
-            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)1, (int)(n4 - 1), (int)(2 + n2 + 1), (int)(n4 + n - 1), (int)-1873784752);
-            this.font.draw(poseStack, string, 2.0f, (float)n4, 0xE0E0E0);
+            int $$5 = 9;
+            int $$6 = this.font.width($$4);
+            int $$7 = 2;
+            int $$8 = 2 + $$5 * $$3;
+            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)1, (int)($$8 - 1), (int)(2 + $$6 + 1), (int)($$8 + $$5 - 1), (int)-1873784752);
+            this.font.draw($$0, $$4, 2.0f, (float)$$8, 0xE0E0E0);
         }
     }
 
-    public void drawSystemInformation(com.mojang.blaze3d.vertex.PoseStack poseStack) {
-        java.util.List list = this.getSystemInformation();
-        for (int i = 0; i < list.size(); ++i) {
-            java.lang.String string = (java.lang.String)list.get(i);
-            if (com.google.common.base.Strings.isNullOrEmpty((java.lang.String)string)) continue;
+    public void drawSystemInformation(com.mojang.blaze3d.vertex.PoseStack $$0) {
+        java.util.List $$1 = this.getSystemInformation();
+        for (int $$2 = 0; $$2 < $$1.size(); ++$$2) {
+            java.lang.String $$3 = (java.lang.String)$$1.get($$2);
+            if (com.google.common.base.Strings.isNullOrEmpty((java.lang.String)$$3)) continue;
             java.util.Objects.requireNonNull((java.lang.Object)this.font);
-            int n = 9;
-            int n2 = this.font.width(string);
-            int n3 = this.minecraft.getWindow().getGuiScaledWidth() - 2 - n2;
-            int n4 = 2 + n * i;
-            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)(n3 - 1), (int)(n4 - 1), (int)(n3 + n2 + 1), (int)(n4 + n - 1), (int)-1873784752);
-            this.font.draw(poseStack, string, (float)n3, (float)n4, 0xE0E0E0);
+            int $$4 = 9;
+            int $$5 = this.font.width($$3);
+            int $$6 = this.minecraft.getWindow().getGuiScaledWidth() - 2 - $$5;
+            int $$7 = 2 + $$4 * $$2;
+            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)($$6 - 1), (int)($$7 - 1), (int)($$6 + $$5 + 1), (int)($$7 + $$4 - 1), (int)-1873784752);
+            this.font.draw($$0, $$3, (float)$$6, (float)$$7, 0xE0E0E0);
         }
     }
 
@@ -95,9 +95,9 @@
         java.lang.String $$13;
         java.lang.String $$5;
         net.minecraft.client.server.IntegratedServer $$0 = this.minecraft.getSingleplayerServer();
-        net.minecraft.network.Connection $$1 = this.minecraft.getConnection().getConnection();
-        float $$2 = $$1.getAverageSentPackets();
-        float $$3 = $$1.getAverageReceivedPackets();
+        net.minecraft.network.Connection $$12 = this.minecraft.getConnection().getConnection();
+        float $$2 = $$12.getAverageSentPackets();
+        float $$3 = $$12.getAverageReceivedPackets();
         if ($$0 != null) {
             java.lang.String $$4 = java.lang.String.format((java.util.Locale)java.util.Locale.ROOT, (java.lang.String)"Integrated server @ %.0f ms ticks, %.0f tx, %.0f rx", (java.lang.Object[])new java.lang.Object[]{java.lang.Float.valueOf((float)$$0.getAverageTickTime()), java.lang.Float.valueOf((float)$$2), java.lang.Float.valueOf((float)$$3)});
         } else {
@@ -123,7 +123,7 @@
                 break;
             }
             case 4: {
-                java.lang.String $$12 = "Towards positive X";
+                java.lang.String $$122 = "Towards positive X";
                 break;
             }
             default: {
@@ -202,7 +202,7 @@
             if ($$36 != null) {
                 it.unimi.dsi.fastutil.objects.Object2IntMap $$37 = $$36.getMobCategoryCounts();
                 int $$38 = $$36.getSpawnableChunkCount();
-                $$17.add((java.lang.Object)("SC: " + $$38 + ", " + (java.lang.String)java.util.stream.Stream.of((java.lang.Object[])net.minecraft.world.entity.MobCategory.values()).map(mobCategory -> java.lang.Character.toUpperCase((char)mobCategory.getName().charAt(0)) + ": " + $$37.getInt(mobCategory)).collect(java.util.stream.Collectors.joining((java.lang.CharSequence)", "))));
+                $$17.add((java.lang.Object)("SC: " + $$38 + ", " + (java.lang.String)java.util.stream.Stream.of((java.lang.Object[])net.minecraft.world.entity.MobCategory.values()).map($$1 -> java.lang.Character.toUpperCase((char)$$1.getName().charAt(0)) + ": " + $$37.getInt($$1)).collect(java.util.stream.Collectors.joining((java.lang.CharSequence)", "))));
             } else {
                 $$17.add((java.lang.Object)"SC: N/A");
             }
@@ -301,126 +301,123 @@
         return $$4;
     }
 
-    public java.lang.String getPropertyValueString(java.util.Map$Entry<net.minecraft.world.level.block.state.properties.Property<?>, java.lang.Comparable<?>> entry) {
-        net.minecraft.world.level.block.state.properties.Property property = (net.minecraft.world.level.block.state.properties.Property)entry.getKey();
-        java.lang.Comparable comparable = (java.lang.Comparable)entry.getValue();
-        java.lang.String string = net.minecraft.Util.getPropertyName((net.minecraft.world.level.block.state.properties.Property)property, (java.lang.Object)comparable);
-        if (java.lang.Boolean.TRUE.equals((java.lang.Object)comparable)) {
-            string = net.minecraft.ChatFormatting.GREEN + string;
-        } else if (java.lang.Boolean.FALSE.equals((java.lang.Object)comparable)) {
-            string = net.minecraft.ChatFormatting.RED + string;
+    public java.lang.String getPropertyValueString(java.util.Map$Entry<net.minecraft.world.level.block.state.properties.Property<?>, java.lang.Comparable<?>> $$0) {
+        net.minecraft.world.level.block.state.properties.Property $$1 = (net.minecraft.world.level.block.state.properties.Property)$$0.getKey();
+        java.lang.Comparable $$2 = (java.lang.Comparable)$$0.getValue();
+        java.lang.String $$3 = net.minecraft.Util.getPropertyName((net.minecraft.world.level.block.state.properties.Property)$$1, (java.lang.Object)$$2);
+        if (java.lang.Boolean.TRUE.equals((java.lang.Object)$$2)) {
+            $$3 = net.minecraft.ChatFormatting.GREEN + $$3;
+        } else if (java.lang.Boolean.FALSE.equals((java.lang.Object)$$2)) {
+            $$3 = net.minecraft.ChatFormatting.RED + $$3;
         }
-        return property.getName() + ": " + string;
+        return $$1.getName() + ": " + $$3;
     }
 
-    public void drawChart(com.mojang.blaze3d.vertex.PoseStack poseStack, net.minecraft.util.FrameTimer frameTimer, int n, int n2, boolean bl) {
-        int n3;
-        int n4;
+    public void drawChart(com.mojang.blaze3d.vertex.PoseStack $$0, net.minecraft.util.FrameTimer $$1, int $$2, int $$3, boolean $$4) {
         com.mojang.blaze3d.systems.RenderSystem.disableDepthTest();
-        int n5 = frameTimer.getLogStart();
-        int n6 = frameTimer.getLogEnd();
-        long[] lArray = frameTimer.getLog();
-        int n7 = n5;
-        int n8 = n;
-        int n9 = java.lang.Math.max((int)0, (int)(lArray.length - n2));
-        int n10 = lArray.length - n9;
-        n7 = frameTimer.wrapIndex(n7 + n9);
-        long l = 0L;
-        int n11 = java.lang.Integer.MAX_VALUE;
-        int n12 = java.lang.Integer.MIN_VALUE;
-        for (n4 = 0;
- n4 < n10; ++n4) {
-            int n13 = (int)(lArray[frameTimer.wrapIndex(n7 + n4)] / 1000000L);
-            n11 = java.lang.Math.min((int)n11, (int)n13);
-            n12 = java.lang.Math.max((int)n12, (int)n13);
-            l += (long)n13;
+        int $$5 = $$1.getLogStart();
+        int $$6 = $$1.getLogEnd();
+        long[] $$7 = $$1.getLog();
+        int $$8 = $$5;
+        int $$9 = $$2;
+        int $$10 = java.lang.Math.max((int)0, (int)($$7.length - $$3));
+        int $$11 = $$7.length - $$10;
+        $$8 = $$1.wrapIndex($$8 + $$10);
+        long $$12 = 0L;
+        int $$13 = java.lang.Integer.MAX_VALUE;
+        int $$14 = java.lang.Integer.MIN_VALUE;
+        for (int $$15 = 0; $$15 < $$11; ++$$15) {
+            int $$16 = (int)($$7[$$1.wrapIndex($$8 + $$15)] / 1000000L);
+            $$13 = java.lang.Math.min((int)$$13, (int)$$16);
+            $$14 = java.lang.Math.max((int)$$14, (int)$$16);
+            $$12 += (long)$$16;
         }
-        n4 = this.minecraft.getWindow().getGuiScaledHeight();
-        net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)n, (int)(n4 - 60), (int)(n + n10), (int)n4, (int)-1873784752);
+        int $$17 = this.minecraft.getWindow().getGuiScaledHeight();
+        net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)$$2, (int)($$17 - 60), (int)($$2 + $$11), (int)$$17, (int)-1873784752);
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionColorShader);
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder();
+        com.mojang.blaze3d.vertex.BufferBuilder $$18 = com.mojang.blaze3d.vertex.Tesselator.getInstance().getBuilder();
         com.mojang.blaze3d.systems.RenderSystem.enableBlend();
         com.mojang.blaze3d.systems.RenderSystem.disableTexture();
         com.mojang.blaze3d.systems.RenderSystem.defaultBlendFunc();
-        bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-        com.mojang.math.Matrix4f matrix4f = com.mojang.math.Transformation.identity().getMatrix();
-        while (n7 != n6) {
-            n3 = frameTimer.scaleSampleTo(lArray[n7], bl ? 30 : 60, bl ? 60 : 20);
-            int n14 = bl ? 100 : 60;
-            int n15 = this.getSampleColor(net.minecraft.util.Mth.clamp((int)n3, (int)0, (int)n14), 0, n14 / 2, n14);
-            int n16 = n15 >> 24 & 0xFF;
-            int n17 = n15 >> 16 & 0xFF;
-            int n18 = n15 >> 8 & 0xFF;
-            int n19 = n15 & 0xFF;
-            bufferBuilder.vertex(matrix4f, (float)(n8 + 1), (float)n4, 0.0f).color(n17, n18, n19, n16).endVertex();
-            bufferBuilder.vertex(matrix4f, (float)(n8 + 1), (float)(n4 - n3 + 1), 0.0f).color(n17, n18, n19, n16).endVertex();
-            bufferBuilder.vertex(matrix4f, (float)n8, (float)(n4 - n3 + 1), 0.0f).color(n17, n18, n19, n16).endVertex();
-            bufferBuilder.vertex(matrix4f, (float)n8, (float)n4, 0.0f).color(n17, n18, n19, n16).endVertex();
-            ++n8;
-            n7 = frameTimer.wrapIndex(n7 + 1);
+        $$18.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+        com.mojang.math.Matrix4f $$19 = com.mojang.math.Transformation.identity().getMatrix();
+        while ($$8 != $$6) {
+            int $$20 = $$1.scaleSampleTo($$7[$$8], $$4 ? 30 : 60, $$4 ? 60 : 20);
+            int $$21 = $$4 ? 100 : 60;
+            int $$22 = this.getSampleColor(net.minecraft.util.Mth.clamp((int)$$20, (int)0, (int)$$21), 0, $$21 / 2, $$21);
+            int $$23 = $$22 >> 24 & 0xFF;
+            int $$24 = $$22 >> 16 & 0xFF;
+            int $$25 = $$22 >> 8 & 0xFF;
+            int $$26 = $$22 & 0xFF;
+            $$18.vertex($$19, (float)($$9 + 1), (float)$$17, 0.0f).color($$24, $$25, $$26, $$23).endVertex();
+            $$18.vertex($$19, (float)($$9 + 1), (float)($$17 - $$20 + 1), 0.0f).color($$24, $$25, $$26, $$23).endVertex();
+            $$18.vertex($$19, (float)$$9, (float)($$17 - $$20 + 1), 0.0f).color($$24, $$25, $$26, $$23).endVertex();
+            $$18.vertex($$19, (float)$$9, (float)$$17, 0.0f).color($$24, $$25, $$26, $$23).endVertex();
+            ++$$9;
+            $$8 = $$1.wrapIndex($$8 + 1);
         }
-        com.mojang.blaze3d.vertex.BufferUploader.drawWithShader((com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer)bufferBuilder.end());
+        com.mojang.blaze3d.vertex.BufferUploader.drawWithShader((com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer)$$18.end());
         com.mojang.blaze3d.systems.RenderSystem.enableTexture();
         com.mojang.blaze3d.systems.RenderSystem.disableBlend();
-        if (bl) {
-            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)(n + 1), (int)(n4 - 30 + 1), (int)(n + 14), (int)(n4 - 30 + 10), (int)-1873784752);
-            this.font.draw(poseStack, "60 FPS", (float)(n + 2), (float)(n4 - 30 + 2), 0xE0E0E0);
-            this.hLine(poseStack, n, n + n10 - 1, n4 - 30, -1);
-            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)(n + 1), (int)(n4 - 60 + 1), (int)(n + 14), (int)(n4 - 60 + 10), (int)-1873784752);
-            this.font.draw(poseStack, "30 FPS", (float)(n + 2), (float)(n4 - 60 + 2), 0xE0E0E0);
-            this.hLine(poseStack, n, n + n10 - 1, n4 - 60, -1);
+        if ($$4) {
+            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)($$2 + 1), (int)($$17 - 30 + 1), (int)($$2 + 14), (int)($$17 - 30 + 10), (int)-1873784752);
+            this.font.draw($$0, "60 FPS", (float)($$2 + 2), (float)($$17 - 30 + 2), 0xE0E0E0);
+            this.hLine($$0, $$2, $$2 + $$11 - 1, $$17 - 30, -1);
+            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)($$2 + 1), (int)($$17 - 60 + 1), (int)($$2 + 14), (int)($$17 - 60 + 10), (int)-1873784752);
+            this.font.draw($$0, "30 FPS", (float)($$2 + 2), (float)($$17 - 60 + 2), 0xE0E0E0);
+            this.hLine($$0, $$2, $$2 + $$11 - 1, $$17 - 60, -1);
         } else {
-            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)poseStack, (int)(n + 1), (int)(n4 - 60 + 1), (int)(n + 14), (int)(n4 - 60 + 10), (int)-1873784752);
-            this.font.draw(poseStack, "20 TPS", (float)(n + 2), (float)(n4 - 60 + 2), 0xE0E0E0);
-            this.hLine(poseStack, n, n + n10 - 1, n4 - 60, -1);
+            net.minecraft.client.gui.components.DebugScreenOverlay.fill((com.mojang.blaze3d.vertex.PoseStack)$$0, (int)($$2 + 1), (int)($$17 - 60 + 1), (int)($$2 + 14), (int)($$17 - 60 + 10), (int)-1873784752);
+            this.font.draw($$0, "20 TPS", (float)($$2 + 2), (float)($$17 - 60 + 2), 0xE0E0E0);
+            this.hLine($$0, $$2, $$2 + $$11 - 1, $$17 - 60, -1);
         }
-        this.hLine(poseStack, n, n + n10 - 1, n4 - 1, -1);
-        this.vLine(poseStack, n, n4 - 60, n4, -1);
-        this.vLine(poseStack, n + n10 - 1, n4 - 60, n4, -1);
-        n3 = (java.lang.Integer)this.minecraft.options.framerateLimit().get();
-        if (bl && n3 > 0 && n3 <= 250) {
-            this.hLine(poseStack, n, n + n10 - 1, n4 - 1 - (int)(1800.0 / (double)n3), -16711681);
+        this.hLine($$0, $$2, $$2 + $$11 - 1, $$17 - 1, -1);
+        this.vLine($$0, $$2, $$17 - 60, $$17, -1);
+        this.vLine($$0, $$2 + $$11 - 1, $$17 - 60, $$17, -1);
+        int $$27 = (java.lang.Integer)this.minecraft.options.framerateLimit().get();
+        if ($$4 && $$27 > 0 && $$27 <= 250) {
+            this.hLine($$0, $$2, $$2 + $$11 - 1, $$17 - 1 - (int)(1800.0 / (double)$$27), -16711681);
         }
-        java.lang.String string = n11 + " ms min";
-        java.lang.String string2 = l / (long)n10 + " ms avg";
-        java.lang.String string3 = n12 + " ms max";
-        float f = n + 2;
+        java.lang.String $$28 = $$13 + " ms min";
+        java.lang.String $$29 = $$12 / (long)$$11 + " ms avg";
+        java.lang.String $$30 = $$14 + " ms max";
+        float f = $$2 + 2;
         java.util.Objects.requireNonNull((java.lang.Object)this.font);
-        this.font.drawShadow(poseStack, string, f, (float)(n4 - 60 - 9), 0xE0E0E0);
-        float f2 = n + n10 / 2 - this.font.width(string2) / 2;
+        this.font.drawShadow($$0, $$28, f, (float)($$17 - 60 - 9), 0xE0E0E0);
+        float f2 = $$2 + $$11 / 2 - this.font.width($$29) / 2;
         java.util.Objects.requireNonNull((java.lang.Object)this.font);
-        this.font.drawShadow(poseStack, string2, f2, (float)(n4 - 60 - 9), 0xE0E0E0);
-        float f3 = n + n10 - this.font.width(string3);
+        this.font.drawShadow($$0, $$29, f2, (float)($$17 - 60 - 9), 0xE0E0E0);
+        float f3 = $$2 + $$11 - this.font.width($$30);
         java.util.Objects.requireNonNull((java.lang.Object)this.font);
-        this.font.drawShadow(poseStack, string3, f3, (float)(n4 - 60 - 9), 0xE0E0E0);
+        this.font.drawShadow($$0, $$30, f3, (float)($$17 - 60 - 9), 0xE0E0E0);
         com.mojang.blaze3d.systems.RenderSystem.enableDepthTest();
     }
 
-    public int getSampleColor(int height, int heightMin, int heightMid, int heightMax) {
-        if (height < heightMid) {
-            return this.colorLerp(-16711936, -256, (float)height / (float)heightMid);
+    public int getSampleColor(int $$0, int $$1, int $$2, int $$3) {
+        if ($$0 < $$2) {
+            return this.colorLerp(-16711936, -256, (float)$$0 / (float)$$2);
         }
-        return this.colorLerp(-256, -65536, (float)(height - heightMid) / (float)(heightMax - heightMid));
+        return this.colorLerp(-256, -65536, (float)($$0 - $$2) / (float)($$3 - $$2));
     }
 
-    public int colorLerp(int col1, int col2, float factor) {
-        int n = col1 >> 24 & 0xFF;
-        int n2 = col1 >> 16 & 0xFF;
-        int n3 = col1 >> 8 & 0xFF;
-        int n4 = col1 & 0xFF;
-        int n5 = col2 >> 24 & 0xFF;
-        int n6 = col2 >> 16 & 0xFF;
-        int n7 = col2 >> 8 & 0xFF;
-        int n8 = col2 & 0xFF;
-        int n9 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)factor, (float)n, (float)n5)), (int)0, (int)255);
-        int n10 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)factor, (float)n2, (float)n6)), (int)0, (int)255);
-        int n11 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)factor, (float)n3, (float)n7)), (int)0, (int)255);
-        int n12 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)factor, (float)n4, (float)n8)), (int)0, (int)255);
-        return n9 << 24 | n10 << 16 | n11 << 8 | n12;
+    public int colorLerp(int $$0, int $$1, float $$2) {
+        int $$3 = $$0 >> 24 & 0xFF;
+        int $$4 = $$0 >> 16 & 0xFF;
+        int $$5 = $$0 >> 8 & 0xFF;
+        int $$6 = $$0 & 0xFF;
+        int $$7 = $$1 >> 24 & 0xFF;
+        int $$8 = $$1 >> 16 & 0xFF;
+        int $$9 = $$1 >> 8 & 0xFF;
+        int $$10 = $$1 & 0xFF;
+        int $$11 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)$$2, (float)$$3, (float)$$7)), (int)0, (int)255);
+        int $$12 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)$$2, (float)$$4, (float)$$8)), (int)0, (int)255);
+        int $$13 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)$$2, (float)$$5, (float)$$9)), (int)0, (int)255);
+        int $$14 = net.minecraft.util.Mth.clamp((int)((int)net.minecraft.util.Mth.lerp((float)$$2, (float)$$6, (float)$$10)), (int)0, (int)255);
+        return $$11 << 24 | $$12 << 16 | $$13 << 8 | $$14;
     }
 
-    public static long bytesToMegabytes(long bytes) {
-        return bytes / 1024L / 1024L;
+    public static long bytesToMegabytes(long $$0) {
+        return $$0 / 1024L / 1024L;
     }
 
     public static /* synthetic */ void lambda$static$0(java.util.EnumMap $$0) {