--- net/minecraft/client/gui/components/AbstractSelectionList.java
+++ net/minecraft/client/gui/components/AbstractSelectionList.java
@@ -30,30 +30,30 @@
     @javax.annotation.Nullable
     public E hovered;
 
-    public net.minecraft.client.gui.components.AbstractSelectionList(net.minecraft.client.Minecraft minecraft, int width, int height, int y0, int y1, int itemHeight) {
+    public net.minecraft.client.gui.components.AbstractSelectionList(net.minecraft.client.Minecraft $$0, int $$1, int $$2, int $$3, int $$4, int $$5) {
         this.children = new net.minecraft.client.gui.components.AbstractSelectionList$TrackedList(this);
         this.centerListVertically = true;
         this.renderSelection = true;
         this.renderBackground = true;
         this.renderTopAndBottom = true;
-        this.minecraft = minecraft;
-        this.width = width;
-        this.height = height;
-        this.y0 = y0;
-        this.y1 = y1;
-        this.itemHeight = itemHeight;
+        this.minecraft = $$0;
+        this.width = $$1;
+        this.height = $$2;
+        this.y0 = $$3;
+        this.y1 = $$4;
+        this.itemHeight = $$5;
         this.x0 = 0;
-        this.x1 = width;
+        this.x1 = $$1;
     }
 
-    public void setRenderSelection(boolean value) {
-        this.renderSelection = value;
+    public void setRenderSelection(boolean $$0) {
+        this.renderSelection = $$0;
     }
 
-    public void setRenderHeader(boolean value, int height) {
-        this.renderHeader = value;
-        this.headerHeight = height;
-        if (!value) {
+    public void setRenderHeader(boolean $$0, int $$1) {
+        this.renderHeader = $$0;
+        this.headerHeight = $$1;
+        if (!$$0) {
             this.headerHeight = 0;
         }
     }
@@ -67,16 +67,16 @@
         return (E)this.selected;
     }
 
-    public void setSelected(@javax.annotation.Nullable E entry) {
-        this.selected = entry;
+    public void setSelected(@javax.annotation.Nullable E $$0) {
+        this.selected = $$0;
     }
 
-    public void setRenderBackground(boolean renderBackground) {
-        this.renderBackground = renderBackground;
+    public void setRenderBackground(boolean $$0) {
+        this.renderBackground = $$0;
     }
 
-    public void setRenderTopAndBottom(boolean renderTopAndButton) {
-        this.renderTopAndBottom = renderTopAndButton;
+    public void setRenderTopAndBottom(boolean $$0) {
+        this.renderTopAndBottom = $$0;
     }
 
     @javax.annotation.Nullable
@@ -92,17 +92,17 @@
         this.children.clear();
     }
 
-    public void replaceEntries(java.util.Collection<E> entries) {
+    public void replaceEntries(java.util.Collection<E> $$0) {
         this.children.clear();
-        this.children.addAll(entries);
+        this.children.addAll($$0);
     }
 
-    public E getEntry(int index) {
-        return (E)((net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children().get(index));
+    public E getEntry(int $$0) {
+        return (E)((net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children().get($$0));
     }
 
-    public int addEntry(E entry) {
-        this.children.add(entry);
+    public int addEntry(E $$0) {
+        this.children.add($$0);
         return this.children.size() - 1;
     }
 
@@ -123,36 +123,36 @@
         return this.children().size();
     }
 
-    public boolean isSelectedItem(int index) {
-        return java.util.Objects.equals((java.lang.Object)this.getSelected(), (java.lang.Object)this.children().get(index));
+    public boolean isSelectedItem(int $$0) {
+        return java.util.Objects.equals((java.lang.Object)this.getSelected(), (java.lang.Object)this.children().get($$0));
     }
 
     @javax.annotation.Nullable
-    public E getEntryAtPosition(double mouseX, double mouseY) {
-        int n = this.getRowWidth() / 2;
-        int n2 = this.x0 + this.width / 2;
-        int n3 = n2 - n;
-        int n4 = n2 + n;
-        int n5 = net.minecraft.util.Mth.floor((double)(mouseY - (double)this.y0)) - this.headerHeight + (int)this.getScrollAmount() - 4;
-        int n6 = n5 / this.itemHeight;
-        if (mouseX < (double)this.getScrollbarPosition() && mouseX >= (double)n3 && mouseX <= (double)n4 && n6 >= 0 && n5 >= 0 && n6 < this.getItemCount()) {
-            return (E)((net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children().get(n6));
+    public E getEntryAtPosition(double $$0, double $$1) {
+        int $$2 = this.getRowWidth() / 2;
+        int $$3 = this.x0 + this.width / 2;
+        int $$4 = $$3 - $$2;
+        int $$5 = $$3 + $$2;
+        int $$6 = net.minecraft.util.Mth.floor((double)($$1 - (double)this.y0)) - this.headerHeight + (int)this.getScrollAmount() - 4;
+        int $$7 = $$6 / this.itemHeight;
+        if ($$0 < (double)this.getScrollbarPosition() && $$0 >= (double)$$4 && $$0 <= (double)$$5 && $$7 >= 0 && $$6 >= 0 && $$7 < this.getItemCount()) {
+            return (E)((net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children().get($$7));
         }
         return null;
     }
 
-    public void updateSize(int width, int height, int y0, int y1) {
-        this.width = width;
-        this.height = height;
-        this.y0 = y0;
-        this.y1 = y1;
+    public void updateSize(int $$0, int $$1, int $$2, int $$3) {
+        this.width = $$0;
+        this.height = $$1;
+        this.y0 = $$2;
+        this.y1 = $$3;
         this.x0 = 0;
-        this.x1 = width;
+        this.x1 = $$0;
     }
 
-    public void setLeftPos(int left) {
-        this.x0 = left;
-        this.x1 = left + this.width;
+    public void setLeftPos(int $$0) {
+        this.x0 = $$0;
+        this.x1 = $$0 + this.width;
     }
 
     public int getMaxPosition() {
@@ -162,133 +162,131 @@
     public void clickedHeader(int $$0, int $$1) {
     }
 
-    public void renderHeader(com.mojang.blaze3d.vertex.PoseStack poseStack, int x, int y, com.mojang.blaze3d.vertex.Tesselator tessellator) {
+    public void renderHeader(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, com.mojang.blaze3d.vertex.Tesselator $$3) {
     }
 
-    public void renderBackground(com.mojang.blaze3d.vertex.PoseStack poseStack) {
+    public void renderBackground(com.mojang.blaze3d.vertex.PoseStack $$0) {
     }
 
-    public void renderDecorations(com.mojang.blaze3d.vertex.PoseStack poseStack, int mouseX, int mouseY) {
+    public void renderDecorations(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2) {
     }
 
-    public void render(com.mojang.blaze3d.vertex.PoseStack matrixStack, int mouseX, int mouseY, float partialTicks) {
-        int n;
-        int n2;
-        int n3;
-        this.renderBackground(matrixStack);
-        int n4 = this.getScrollbarPosition();
-        int n5 = n4 + 6;
-        com.mojang.blaze3d.vertex.Tesselator tesselator = com.mojang.blaze3d.vertex.Tesselator.getInstance();
-        com.mojang.blaze3d.vertex.BufferBuilder bufferBuilder = tesselator.getBuilder();
+    public void render(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, float $$3) {
+        int $$14;
+        this.renderBackground($$0);
+        int $$4 = this.getScrollbarPosition();
+        int $$5 = $$4 + 6;
+        com.mojang.blaze3d.vertex.Tesselator $$6 = com.mojang.blaze3d.vertex.Tesselator.getInstance();
+        com.mojang.blaze3d.vertex.BufferBuilder $$7 = $$6.getBuilder();
         com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionTexColorShader);
-        net.minecraft.client.gui.components.AbstractSelectionList$Entry entry = this.hovered = this.isMouseOver((double)mouseX, (double)mouseY) ? this.getEntryAtPosition((double)mouseX, (double)mouseY) : null;
+        net.minecraft.client.gui.components.AbstractSelectionList$Entry entry = this.hovered = this.isMouseOver((double)$$1, (double)$$2) ? this.getEntryAtPosition((double)$$1, (double)$$2) : null;
         if (this.renderBackground) {
             com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)net.minecraft.client.gui.GuiComponent.BACKGROUND_LOCATION);
             com.mojang.blaze3d.systems.RenderSystem.setShaderColor((float)1.0f, (float)1.0f, (float)1.0f, (float)1.0f);
-            float f = 32.0f;
-            bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX_COLOR);
-            bufferBuilder.vertex((double)this.x0, (double)this.y1, 0.0).uv((float)this.x0 / 32.0f, (float)(this.y1 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
-            bufferBuilder.vertex((double)this.x1, (double)this.y1, 0.0).uv((float)this.x1 / 32.0f, (float)(this.y1 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
-            bufferBuilder.vertex((double)this.x1, (double)this.y0, 0.0).uv((float)this.x1 / 32.0f, (float)(this.y0 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
-            bufferBuilder.vertex((double)this.x0, (double)this.y0, 0.0).uv((float)this.x0 / 32.0f, (float)(this.y0 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
-            tesselator.end();
+            float $$8 = 32.0f;
+            $$7.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX_COLOR);
+            $$7.vertex((double)this.x0, (double)this.y1, 0.0).uv((float)this.x0 / 32.0f, (float)(this.y1 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
+            $$7.vertex((double)this.x1, (double)this.y1, 0.0).uv((float)this.x1 / 32.0f, (float)(this.y1 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
+            $$7.vertex((double)this.x1, (double)this.y0, 0.0).uv((float)this.x1 / 32.0f, (float)(this.y0 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
+            $$7.vertex((double)this.x0, (double)this.y0, 0.0).uv((float)this.x0 / 32.0f, (float)(this.y0 + (int)this.getScrollAmount()) / 32.0f).color(32, 32, 32, 255).endVertex();
+            $$6.end();
         }
-        int n6 = this.getRowLeft();
-        int n7 = this.y0 + 4 - (int)this.getScrollAmount();
+        int $$9 = this.getRowLeft();
+        int $$10 = this.y0 + 4 - (int)this.getScrollAmount();
         if (this.renderHeader) {
-            this.renderHeader(matrixStack, n6, n7, tesselator);
+            this.renderHeader($$0, $$9, $$10, $$6);
         }
-        this.renderList(matrixStack, mouseX, mouseY, partialTicks);
+        this.renderList($$0, $$1, $$2, $$3);
         if (this.renderTopAndBottom) {
             com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionTexColorShader);
             com.mojang.blaze3d.systems.RenderSystem.setShaderTexture((int)0, (net.minecraft.resources.ResourceLocation)net.minecraft.client.gui.GuiComponent.BACKGROUND_LOCATION);
             com.mojang.blaze3d.systems.RenderSystem.enableDepthTest();
             com.mojang.blaze3d.systems.RenderSystem.depthFunc((int)519);
-            float f = 32.0f;
-            n3 = -100;
-            bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX_COLOR);
-            bufferBuilder.vertex((double)this.x0, (double)this.y0, -100.0).uv(0.0f, (float)this.y0 / 32.0f).color(64, 64, 64, 255).endVertex();
-            bufferBuilder.vertex((double)(this.x0 + this.width), (double)this.y0, -100.0).uv((float)this.width / 32.0f, (float)this.y0 / 32.0f).color(64, 64, 64, 255).endVertex();
-            bufferBuilder.vertex((double)(this.x0 + this.width), 0.0, -100.0).uv((float)this.width / 32.0f, 0.0f).color(64, 64, 64, 255).endVertex();
-            bufferBuilder.vertex((double)this.x0, 0.0, -100.0).uv(0.0f, 0.0f).color(64, 64, 64, 255).endVertex();
-            bufferBuilder.vertex((double)this.x0, (double)this.height, -100.0).uv(0.0f, (float)this.height / 32.0f).color(64, 64, 64, 255).endVertex();
-            bufferBuilder.vertex((double)(this.x0 + this.width), (double)this.height, -100.0).uv((float)this.width / 32.0f, (float)this.height / 32.0f).color(64, 64, 64, 255).endVertex();
-            bufferBuilder.vertex((double)(this.x0 + this.width), (double)this.y1, -100.0).uv((float)this.width / 32.0f, (float)this.y1 / 32.0f).color(64, 64, 64, 255).endVertex();
-            bufferBuilder.vertex((double)this.x0, (double)this.y1, -100.0).uv(0.0f, (float)this.y1 / 32.0f).color(64, 64, 64, 255).endVertex();
-            tesselator.end();
+            float $$11 = 32.0f;
+            int $$12 = -100;
+            $$7.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_TEX_COLOR);
+            $$7.vertex((double)this.x0, (double)this.y0, -100.0).uv(0.0f, (float)this.y0 / 32.0f).color(64, 64, 64, 255).endVertex();
+            $$7.vertex((double)(this.x0 + this.width), (double)this.y0, -100.0).uv((float)this.width / 32.0f, (float)this.y0 / 32.0f).color(64, 64, 64, 255).endVertex();
+            $$7.vertex((double)(this.x0 + this.width), 0.0, -100.0).uv((float)this.width / 32.0f, 0.0f).color(64, 64, 64, 255).endVertex();
+            $$7.vertex((double)this.x0, 0.0, -100.0).uv(0.0f, 0.0f).color(64, 64, 64, 255).endVertex();
+            $$7.vertex((double)this.x0, (double)this.height, -100.0).uv(0.0f, (float)this.height / 32.0f).color(64, 64, 64, 255).endVertex();
+            $$7.vertex((double)(this.x0 + this.width), (double)this.height, -100.0).uv((float)this.width / 32.0f, (float)this.height / 32.0f).color(64, 64, 64, 255).endVertex();
+            $$7.vertex((double)(this.x0 + this.width), (double)this.y1, -100.0).uv((float)this.width / 32.0f, (float)this.y1 / 32.0f).color(64, 64, 64, 255).endVertex();
+            $$7.vertex((double)this.x0, (double)this.y1, -100.0).uv(0.0f, (float)this.y1 / 32.0f).color(64, 64, 64, 255).endVertex();
+            $$6.end();
             com.mojang.blaze3d.systems.RenderSystem.depthFunc((int)515);
             com.mojang.blaze3d.systems.RenderSystem.disableDepthTest();
             com.mojang.blaze3d.systems.RenderSystem.enableBlend();
             com.mojang.blaze3d.systems.RenderSystem.blendFuncSeparate((com.mojang.blaze3d.platform.GlStateManager$SourceFactor)com.mojang.blaze3d.platform.GlStateManager$SourceFactor.SRC_ALPHA, (com.mojang.blaze3d.platform.GlStateManager$DestFactor)com.mojang.blaze3d.platform.GlStateManager$DestFactor.ONE_MINUS_SRC_ALPHA, (com.mojang.blaze3d.platform.GlStateManager$SourceFactor)com.mojang.blaze3d.platform.GlStateManager$SourceFactor.ZERO, (com.mojang.blaze3d.platform.GlStateManager$DestFactor)com.mojang.blaze3d.platform.GlStateManager$DestFactor.ONE);
             com.mojang.blaze3d.systems.RenderSystem.disableTexture();
             com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionColorShader);
-            n2 = 4;
-            bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-            bufferBuilder.vertex((double)this.x0, (double)(this.y0 + 4), 0.0).color(0, 0, 0, 0).endVertex();
-            bufferBuilder.vertex((double)this.x1, (double)(this.y0 + 4), 0.0).color(0, 0, 0, 0).endVertex();
-            bufferBuilder.vertex((double)this.x1, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)this.x0, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)this.x0, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)this.x1, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)this.x1, (double)(this.y1 - 4), 0.0).color(0, 0, 0, 0).endVertex();
-            bufferBuilder.vertex((double)this.x0, (double)(this.y1 - 4), 0.0).color(0, 0, 0, 0).endVertex();
-            tesselator.end();
+            int $$13 = 4;
+            $$7.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+            $$7.vertex((double)this.x0, (double)(this.y0 + 4), 0.0).color(0, 0, 0, 0).endVertex();
+            $$7.vertex((double)this.x1, (double)(this.y0 + 4), 0.0).color(0, 0, 0, 0).endVertex();
+            $$7.vertex((double)this.x1, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)this.x0, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)this.x0, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)this.x1, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)this.x1, (double)(this.y1 - 4), 0.0).color(0, 0, 0, 0).endVertex();
+            $$7.vertex((double)this.x0, (double)(this.y1 - 4), 0.0).color(0, 0, 0, 0).endVertex();
+            $$6.end();
         }
-        if ((n = this.getMaxScroll()) > 0) {
+        if (($$14 = this.getMaxScroll()) > 0) {
             com.mojang.blaze3d.systems.RenderSystem.disableTexture();
             com.mojang.blaze3d.systems.RenderSystem.setShader(net.minecraft.client.renderer.GameRenderer::getPositionColorShader);
-            n3 = (int)((float)((this.y1 - this.y0) * (this.y1 - this.y0)) / (float)this.getMaxPosition());
-            n3 = net.minecraft.util.Mth.clamp((int)n3, (int)32, (int)(this.y1 - this.y0 - 8));
-            n2 = (int)this.getScrollAmount() * (this.y1 - this.y0 - n3) / n + this.y0;
-            if (n2 < this.y0) {
-                n2 = this.y0;
+            int $$15 = (int)((float)((this.y1 - this.y0) * (this.y1 - this.y0)) / (float)this.getMaxPosition());
+            $$15 = net.minecraft.util.Mth.clamp((int)$$15, (int)32, (int)(this.y1 - this.y0 - 8));
+            int $$16 = (int)this.getScrollAmount() * (this.y1 - this.y0 - $$15) / $$14 + this.y0;
+            if ($$16 < this.y0) {
+                $$16 = this.y0;
             }
-            bufferBuilder.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
-            bufferBuilder.vertex((double)n4, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)n5, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)n5, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)n4, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
-            bufferBuilder.vertex((double)n4, (double)(n2 + n3), 0.0).color(128, 128, 128, 255).endVertex();
-            bufferBuilder.vertex((double)n5, (double)(n2 + n3), 0.0).color(128, 128, 128, 255).endVertex();
-            bufferBuilder.vertex((double)n5, (double)n2, 0.0).color(128, 128, 128, 255).endVertex();
-            bufferBuilder.vertex((double)n4, (double)n2, 0.0).color(128, 128, 128, 255).endVertex();
-            bufferBuilder.vertex((double)n4, (double)(n2 + n3 - 1), 0.0).color(192, 192, 192, 255).endVertex();
-            bufferBuilder.vertex((double)(n5 - 1), (double)(n2 + n3 - 1), 0.0).color(192, 192, 192, 255).endVertex();
-            bufferBuilder.vertex((double)(n5 - 1), (double)n2, 0.0).color(192, 192, 192, 255).endVertex();
-            bufferBuilder.vertex((double)n4, (double)n2, 0.0).color(192, 192, 192, 255).endVertex();
-            tesselator.end();
+            $$7.begin(com.mojang.blaze3d.vertex.VertexFormat$Mode.QUADS, com.mojang.blaze3d.vertex.DefaultVertexFormat.POSITION_COLOR);
+            $$7.vertex((double)$$4, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)$$5, (double)this.y1, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)$$5, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)$$4, (double)this.y0, 0.0).color(0, 0, 0, 255).endVertex();
+            $$7.vertex((double)$$4, (double)($$16 + $$15), 0.0).color(128, 128, 128, 255).endVertex();
+            $$7.vertex((double)$$5, (double)($$16 + $$15), 0.0).color(128, 128, 128, 255).endVertex();
+            $$7.vertex((double)$$5, (double)$$16, 0.0).color(128, 128, 128, 255).endVertex();
+            $$7.vertex((double)$$4, (double)$$16, 0.0).color(128, 128, 128, 255).endVertex();
+            $$7.vertex((double)$$4, (double)($$16 + $$15 - 1), 0.0).color(192, 192, 192, 255).endVertex();
+            $$7.vertex((double)($$5 - 1), (double)($$16 + $$15 - 1), 0.0).color(192, 192, 192, 255).endVertex();
+            $$7.vertex((double)($$5 - 1), (double)$$16, 0.0).color(192, 192, 192, 255).endVertex();
+            $$7.vertex((double)$$4, (double)$$16, 0.0).color(192, 192, 192, 255).endVertex();
+            $$6.end();
         }
-        this.renderDecorations(matrixStack, mouseX, mouseY);
+        this.renderDecorations($$0, $$1, $$2);
         com.mojang.blaze3d.systems.RenderSystem.enableTexture();
         com.mojang.blaze3d.systems.RenderSystem.disableBlend();
     }
 
-    public void centerScrollOn(E entry) {
-        this.setScrollAmount((double)(this.children().indexOf(entry) * this.itemHeight + this.itemHeight / 2 - (this.y1 - this.y0) / 2));
+    public void centerScrollOn(E $$0) {
+        this.setScrollAmount((double)(this.children().indexOf($$0) * this.itemHeight + this.itemHeight / 2 - (this.y1 - this.y0) / 2));
     }
 
-    public void ensureVisible(E entry) {
-        int n;
-        int n2 = this.getRowTop(this.children().indexOf(entry));
-        int n3 = n2 - this.y0 - 4 - this.itemHeight;
-        if (n3 < 0) {
-            this.scroll(n3);
+    public void ensureVisible(E $$0) {
+        int $$3;
+        int $$1 = this.getRowTop(this.children().indexOf($$0));
+        int $$2 = $$1 - this.y0 - 4 - this.itemHeight;
+        if ($$2 < 0) {
+            this.scroll($$2);
         }
-        if ((n = this.y1 - n2 - this.itemHeight - this.itemHeight) < 0) {
-            this.scroll(-n);
+        if (($$3 = this.y1 - $$1 - this.itemHeight - this.itemHeight) < 0) {
+            this.scroll(-$$3);
         }
     }
 
-    public void scroll(int scroll) {
-        this.setScrollAmount(this.getScrollAmount() + (double)scroll);
+    public void scroll(int $$0) {
+        this.setScrollAmount(this.getScrollAmount() + (double)$$0);
     }
 
     public double getScrollAmount() {
         return this.scrollAmount;
     }
 
-    public void setScrollAmount(double scroll) {
-        this.scrollAmount = net.minecraft.util.Mth.clamp((double)scroll, (double)0.0, (double)this.getMaxScroll());
+    public void setScrollAmount(double $$0) {
+        this.scrollAmount = net.minecraft.util.Mth.clamp((double)$$0, (double)0.0, (double)this.getMaxScroll());
     }
 
     public int getMaxScroll() {
@@ -299,83 +297,83 @@
         return (int)this.getScrollAmount() - this.height - this.headerHeight;
     }
 
-    public void updateScrollingState(double mouseX, double mouseY, int button) {
-        this.scrolling = button == 0 && mouseX >= (double)this.getScrollbarPosition() && mouseX < (double)(this.getScrollbarPosition() + 6);
+    public void updateScrollingState(double $$0, double $$1, int $$2) {
+        this.scrolling = $$2 == 0 && $$0 >= (double)this.getScrollbarPosition() && $$0 < (double)(this.getScrollbarPosition() + 6);
     }
 
     public int getScrollbarPosition() {
         return this.width / 2 + 124;
     }
 
-    public boolean mouseClicked(double mouseX, double mouseY, int button) {
-        this.updateScrollingState(mouseX, mouseY, button);
-        if (!this.isMouseOver(mouseX, mouseY)) {
+    public boolean mouseClicked(double $$0, double $$1, int $$2) {
+        this.updateScrollingState($$0, $$1, $$2);
+        if (!this.isMouseOver($$0, $$1)) {
             return false;
         }
-        net.minecraft.client.gui.components.AbstractSelectionList$Entry entry = this.getEntryAtPosition(mouseX, mouseY);
-        if (entry != null) {
-            if (entry.mouseClicked(mouseX, mouseY, button)) {
-                this.setFocused((net.minecraft.client.gui.components.events.GuiEventListener)entry);
+        net.minecraft.client.gui.components.AbstractSelectionList$Entry $$3 = this.getEntryAtPosition($$0, $$1);
+        if ($$3 != null) {
+            if ($$3.mouseClicked($$0, $$1, $$2)) {
+                this.setFocused((net.minecraft.client.gui.components.events.GuiEventListener)$$3);
                 this.setDragging(true);
                 return true;
             }
-        } else if (button == 0) {
-            this.clickedHeader((int)(mouseX - (double)(this.x0 + this.width / 2 - this.getRowWidth() / 2)), (int)(mouseY - (double)this.y0) + (int)this.getScrollAmount() - 4);
+        } else if ($$2 == 0) {
+            this.clickedHeader((int)($$0 - (double)(this.x0 + this.width / 2 - this.getRowWidth() / 2)), (int)($$1 - (double)this.y0) + (int)this.getScrollAmount() - 4);
             return true;
         }
         return this.scrolling;
     }
 
-    public boolean mouseReleased(double mouseX, double mouseY, int button) {
+    public boolean mouseReleased(double $$0, double $$1, int $$2) {
         if (this.getFocused() != null) {
-            this.getFocused().mouseReleased(mouseX, mouseY, button);
+            this.getFocused().mouseReleased($$0, $$1, $$2);
         }
         return false;
     }
 
-    public boolean mouseDragged(double mouseX, double mouseY, int button, double dragX, double dragY) {
-        if (super.mouseDragged(mouseX, mouseY, button, dragX, dragY)) {
+    public boolean mouseDragged(double $$0, double $$1, int $$2, double $$3, double $$4) {
+        if (super.mouseDragged($$0, $$1, $$2, $$3, $$4)) {
             return true;
         }
-        if (button != 0 || !this.scrolling) {
+        if ($$2 != 0 || !this.scrolling) {
             return false;
         }
-        if (mouseY < (double)this.y0) {
+        if ($$1 < (double)this.y0) {
             this.setScrollAmount(0.0);
-        } else if (mouseY > (double)this.y1) {
+        } else if ($$1 > (double)this.y1) {
             this.setScrollAmount((double)this.getMaxScroll());
         } else {
-            double d = java.lang.Math.max((int)1, (int)this.getMaxScroll());
-            int n = this.y1 - this.y0;
-            int n2 = net.minecraft.util.Mth.clamp((int)((int)((float)(n * n) / (float)this.getMaxPosition())), (int)32, (int)(n - 8));
-            double d2 = java.lang.Math.max((double)1.0, (double)(d / (double)(n - n2)));
-            this.setScrollAmount(this.getScrollAmount() + dragY * d2);
+            double $$5 = java.lang.Math.max((int)1, (int)this.getMaxScroll());
+            int $$6 = this.y1 - this.y0;
+            int $$7 = net.minecraft.util.Mth.clamp((int)((int)((float)($$6 * $$6) / (float)this.getMaxPosition())), (int)32, (int)($$6 - 8));
+            double $$8 = java.lang.Math.max((double)1.0, (double)($$5 / (double)($$6 - $$7)));
+            this.setScrollAmount(this.getScrollAmount() + $$4 * $$8);
         }
         return true;
     }
 
-    public boolean mouseScrolled(double mouseX, double mouseY, double delta) {
-        this.setScrollAmount(this.getScrollAmount() - delta * (double)this.itemHeight / 2.0);
+    public boolean mouseScrolled(double $$0, double $$1, double $$2) {
+        this.setScrollAmount(this.getScrollAmount() - $$2 * (double)this.itemHeight / 2.0);
         return true;
     }
 
-    public boolean keyPressed(int keyCode, int scanCode, int modifiers) {
-        if (super.keyPressed(keyCode, scanCode, modifiers)) {
+    public boolean keyPressed(int $$0, int $$1, int $$2) {
+        if (super.keyPressed($$0, $$1, $$2)) {
             return true;
         }
-        if (keyCode == 264) {
+        if ($$0 == 264) {
             this.moveSelection(net.minecraft.client.gui.components.AbstractSelectionList$SelectionDirection.DOWN);
             return true;
         }
-        if (keyCode == 265) {
+        if ($$0 == 265) {
             this.moveSelection(net.minecraft.client.gui.components.AbstractSelectionList$SelectionDirection.UP);
             return true;
         }
         return false;
     }
 
-    public void moveSelection(net.minecraft.client.gui.components.AbstractSelectionList$SelectionDirection ordering) {
-        this.moveSelection(ordering, $$0 -> true);
+    public void moveSelection(net.minecraft.client.gui.components.AbstractSelectionList$SelectionDirection $$02) {
+        this.moveSelection($$02, $$0 -> true);
     }
 
     public void refreshSelection() {
@@ -405,8 +403,8 @@
         return false;
     }
 
-    public boolean isMouseOver(double mouseX, double mouseY) {
-        return mouseY >= (double)this.y0 && mouseY <= (double)this.y1 && mouseX >= (double)this.x0 && mouseX <= (double)this.x1;
+    public boolean isMouseOver(double $$0, double $$1) {
+        return $$1 >= (double)this.y0 && $$1 <= (double)this.y1 && $$0 >= (double)this.x0 && $$0 <= (double)this.x1;
     }
 
     public void renderList(com.mojang.blaze3d.vertex.PoseStack $$0, int $$1, int $$2, float $$3) {
@@ -446,12 +444,12 @@
         return this.getRowLeft() + this.getRowWidth();
     }
 
-    public int getRowTop(int index) {
-        return this.y0 + 4 - (int)this.getScrollAmount() + index * this.itemHeight + this.headerHeight;
+    public int getRowTop(int $$0) {
+        return this.y0 + 4 - (int)this.getScrollAmount() + $$0 * this.itemHeight + this.headerHeight;
     }
 
-    public int getRowBottom(int index) {
-        return this.getRowTop(index) + this.itemHeight;
+    public int getRowBottom(int $$0) {
+        return this.getRowTop($$0) + this.itemHeight;
     }
 
     public boolean isFocused() {
@@ -469,20 +467,20 @@
     }
 
     @javax.annotation.Nullable
-    public E remove(int index) {
-        net.minecraft.client.gui.components.AbstractSelectionList$Entry entry = (net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children.get(index);
-        if (this.removeEntry((net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children.get(index))) {
-            return (E)entry;
+    public E remove(int $$0) {
+        net.minecraft.client.gui.components.AbstractSelectionList$Entry $$1 = (net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children.get($$0);
+        if (this.removeEntry((net.minecraft.client.gui.components.AbstractSelectionList$Entry)this.children.get($$0))) {
+            return (E)$$1;
         }
         return null;
     }
 
-    public boolean removeEntry(E entry) {
-        boolean bl = this.children.remove(entry);
-        if (bl && entry == this.getSelected()) {
+    public boolean removeEntry(E $$0) {
+        boolean $$1 = this.children.remove($$0);
+        if ($$1 && $$0 == this.getSelected()) {
             this.setSelected(null);
         }
-        return bl;
+        return $$1;
     }
 
     @javax.annotation.Nullable