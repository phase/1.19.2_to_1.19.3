--- net/minecraft/client/sounds/MusicManager.java
+++ net/minecraft/client/sounds/MusicManager.java
@@ -12,10 +12,10 @@
     public net.minecraft.client.resources.sounds.SoundInstance currentMusic;
     public int nextSongDelay;
 
-    public net.minecraft.client.sounds.MusicManager(net.minecraft.client.Minecraft minecraft) {
+    public net.minecraft.client.sounds.MusicManager(net.minecraft.client.Minecraft $$0) {
         this.random = net.minecraft.util.RandomSource.create();
         this.nextSongDelay = 100;
-        this.minecraft = minecraft;
+        this.minecraft = $$0;
     }
 
     public void tick() {
@@ -36,8 +36,8 @@
         }
     }
 
-    public void startPlaying(net.minecraft.sounds.Music selector) {
-        this.currentMusic = net.minecraft.client.resources.sounds.SimpleSoundInstance.forMusic((net.minecraft.sounds.SoundEvent)selector.getEvent());
+    public void startPlaying(net.minecraft.sounds.Music $$0) {
+        this.currentMusic = net.minecraft.client.resources.sounds.SimpleSoundInstance.forMusic((net.minecraft.sounds.SoundEvent)$$0.getEvent());
         if (this.currentMusic.getSound() != net.minecraft.client.sounds.SoundManager.EMPTY_SOUND) {
             this.minecraft.getSoundManager().play(this.currentMusic);
         }
@@ -52,11 +52,11 @@
         this.nextSongDelay += 100;
     }
 
-    public boolean isPlayingMusic(net.minecraft.sounds.Music selector) {
+    public boolean isPlayingMusic(net.minecraft.sounds.Music $$0) {
         if (this.currentMusic == null) {
             return false;
         }
-        return selector.getEvent().getLocation().equals((java.lang.Object)this.currentMusic.getLocation());
+        return $$0.getEvent().getLocation().equals((java.lang.Object)this.currentMusic.getLocation());
     }
 }
 