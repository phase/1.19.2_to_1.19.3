--- net/minecraft/client/sounds/LoopingAudioStream.java
+++ net/minecraft/client/sounds/LoopingAudioStream.java
@@ -10,26 +10,26 @@
     public net.minecraft.client.sounds.AudioStream stream;
     public java.io.BufferedInputStream bufferedInputStream;
 
-    public net.minecraft.client.sounds.LoopingAudioStream(net.minecraft.client.sounds.LoopingAudioStream$AudioStreamProvider provider, java.io.InputStream input) throws java.io.IOException {
-        this.provider = provider;
-        this.bufferedInputStream = new java.io.BufferedInputStream(input);
+    public net.minecraft.client.sounds.LoopingAudioStream(net.minecraft.client.sounds.LoopingAudioStream$AudioStreamProvider $$0, java.io.InputStream $$1) throws java.io.IOException {
+        this.provider = $$0;
+        this.bufferedInputStream = new java.io.BufferedInputStream($$1);
         this.bufferedInputStream.mark(java.lang.Integer.MAX_VALUE);
-        this.stream = provider.create((java.io.InputStream)new net.minecraft.client.sounds.LoopingAudioStream$NoCloseBuffer((java.io.InputStream)this.bufferedInputStream));
+        this.stream = $$0.create((java.io.InputStream)new net.minecraft.client.sounds.LoopingAudioStream$NoCloseBuffer((java.io.InputStream)this.bufferedInputStream));
     }
 
     public javax.sound.sampled.AudioFormat getFormat() {
         return this.stream.getFormat();
     }
 
-    public java.nio.ByteBuffer read(int size) throws java.io.IOException {
-        java.nio.ByteBuffer byteBuffer = this.stream.read(size);
-        if (!byteBuffer.hasRemaining()) {
+    public java.nio.ByteBuffer read(int $$0) throws java.io.IOException {
+        java.nio.ByteBuffer $$1 = this.stream.read($$0);
+        if (!$$1.hasRemaining()) {
             this.stream.close();
             this.bufferedInputStream.reset();
             this.stream = this.provider.create((java.io.InputStream)new net.minecraft.client.sounds.LoopingAudioStream$NoCloseBuffer((java.io.InputStream)this.bufferedInputStream));
-            byteBuffer = this.stream.read(size);
+            $$1 = this.stream.read($$0);
         }
-        return byteBuffer;
+        return $$1;
     }
 
     public void close() throws java.io.IOException {