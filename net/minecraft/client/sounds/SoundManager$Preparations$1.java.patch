--- net/minecraft/client/sounds/SoundManager$Preparations$1.java
+++ net/minecraft/client/sounds/SoundManager$Preparations$1.java
@@ -30,12 +30,12 @@
         return new net.minecraft.client.resources.sounds.Sound($$2.getLocation().toString(), (net.minecraft.util.valueproviders.SampledFloat)new net.minecraft.util.valueproviders.MultipliedFloats(new net.minecraft.util.valueproviders.SampledFloat[]{$$2.getVolume(), this.val$sound.getVolume()}), (net.minecraft.util.valueproviders.SampledFloat)new net.minecraft.util.valueproviders.MultipliedFloats(new net.minecraft.util.valueproviders.SampledFloat[]{$$2.getPitch(), this.val$sound.getPitch()}), this.val$sound.getWeight(), net.minecraft.client.resources.sounds.Sound$Type.FILE, $$2.shouldStream() || this.val$sound.shouldStream(), $$2.shouldPreload(), $$2.getAttenuationDistance());
     }
 
-    public void preloadIfRequired(net.minecraft.client.sounds.SoundEngine engine) {
-        net.minecraft.client.sounds.WeighedSoundEvents weighedSoundEvents = (net.minecraft.client.sounds.WeighedSoundEvents)this.this$0.registry.get((java.lang.Object)this.val$soundLocation);
-        if (weighedSoundEvents == null) {
+    public void preloadIfRequired(net.minecraft.client.sounds.SoundEngine $$0) {
+        net.minecraft.client.sounds.WeighedSoundEvents $$1 = (net.minecraft.client.sounds.WeighedSoundEvents)this.this$0.registry.get((java.lang.Object)this.val$soundLocation);
+        if ($$1 == null) {
             return;
         }
-        weighedSoundEvents.preloadIfRequired(engine);
+        $$1.preloadIfRequired($$0);
     }
 
     public /* synthetic */ java.lang.Object getSound(net.minecraft.util.RandomSource randomSource) {