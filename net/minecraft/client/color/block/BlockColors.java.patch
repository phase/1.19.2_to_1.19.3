--- net/minecraft/client/color/block/BlockColors.java
+++ net/minecraft/client/color/block/BlockColors.java
@@ -69,38 +69,38 @@
         return $$02;
     }
 
-    public int getColor(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos blockPos) {
-        net.minecraft.client.color.block.BlockColor blockColor = (net.minecraft.client.color.block.BlockColor)this.blockColors.byId(net.minecraft.core.Registry.BLOCK.getId((java.lang.Object)state.getBlock()));
-        if (blockColor != null) {
-            return blockColor.getColor(state, null, null, 0);
+    public int getColor(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.client.color.block.BlockColor $$3 = (net.minecraft.client.color.block.BlockColor)this.blockColors.byId(net.minecraft.core.Registry.BLOCK.getId((java.lang.Object)$$0.getBlock()));
+        if ($$3 != null) {
+            return $$3.getColor($$0, null, null, 0);
         }
-        net.minecraft.world.level.material.MaterialColor materialColor = state.getMapColor((net.minecraft.world.level.BlockGetter)level, blockPos);
-        return materialColor != null ? materialColor.col : -1;
+        net.minecraft.world.level.material.MaterialColor $$4 = $$0.getMapColor((net.minecraft.world.level.BlockGetter)$$1, $$2);
+        return $$4 != null ? $$4.col : -1;
     }
 
-    public int getColor(net.minecraft.world.level.block.state.BlockState blockState, @javax.annotation.Nullable net.minecraft.world.level.BlockAndTintGetter lightReader, @javax.annotation.Nullable net.minecraft.core.BlockPos blockPos, int tintIndex) {
-        net.minecraft.client.color.block.BlockColor blockColor = (net.minecraft.client.color.block.BlockColor)this.blockColors.byId(net.minecraft.core.Registry.BLOCK.getId((java.lang.Object)blockState.getBlock()));
-        return blockColor == null ? -1 : blockColor.getColor(blockState, lightReader, blockPos, tintIndex);
+    public int getColor(net.minecraft.world.level.block.state.BlockState $$0, @javax.annotation.Nullable net.minecraft.world.level.BlockAndTintGetter $$1, @javax.annotation.Nullable net.minecraft.core.BlockPos $$2, int $$3) {
+        net.minecraft.client.color.block.BlockColor $$4 = (net.minecraft.client.color.block.BlockColor)this.blockColors.byId(net.minecraft.core.Registry.BLOCK.getId((java.lang.Object)$$0.getBlock()));
+        return $$4 == null ? -1 : $$4.getColor($$0, $$1, $$2, $$3);
     }
 
-    public void register(net.minecraft.client.color.block.BlockColor blockColor, net.minecraft.world.level.block.Block ... blocks) {
-        for (net.minecraft.world.level.block.Block block : blocks) {
-            this.blockColors.addMapping((java.lang.Object)blockColor, net.minecraft.core.Registry.BLOCK.getId((java.lang.Object)block));
+    public void register(net.minecraft.client.color.block.BlockColor $$0, net.minecraft.world.level.block.Block ... $$1) {
+        for (net.minecraft.world.level.block.Block $$2 : $$1) {
+            this.blockColors.addMapping((java.lang.Object)$$0, net.minecraft.core.Registry.BLOCK.getId((java.lang.Object)$$2));
         }
     }
 
-    public void addColoringStates(java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> properties, net.minecraft.world.level.block.Block ... blocks) {
-        for (net.minecraft.world.level.block.Block block : blocks) {
-            this.coloringStates.put((java.lang.Object)block, properties);
+    public void addColoringStates(java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> $$0, net.minecraft.world.level.block.Block ... $$1) {
+        for (net.minecraft.world.level.block.Block $$2 : $$1) {
+            this.coloringStates.put((java.lang.Object)$$2, $$0);
         }
     }
 
-    public void addColoringState(net.minecraft.world.level.block.state.properties.Property<?> property, net.minecraft.world.level.block.Block ... blocks) {
-        this.addColoringStates((java.util.Set)com.google.common.collect.ImmutableSet.of(property), blocks);
+    public void addColoringState(net.minecraft.world.level.block.state.properties.Property<?> $$0, net.minecraft.world.level.block.Block ... $$1) {
+        this.addColoringStates((java.util.Set)com.google.common.collect.ImmutableSet.of($$0), $$1);
     }
 
-    public java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> getColoringProperties(net.minecraft.world.level.block.Block block) {
-        return (java.util.Set)this.coloringStates.getOrDefault((java.lang.Object)block, (java.lang.Object)com.google.common.collect.ImmutableSet.of());
+    public java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> getColoringProperties(net.minecraft.world.level.block.Block $$0) {
+        return (java.util.Set)this.coloringStates.getOrDefault((java.lang.Object)$$0, (java.lang.Object)com.google.common.collect.ImmutableSet.of());
     }
 }
 