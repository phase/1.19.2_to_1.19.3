--- net/minecraft/client/main/Main.java
+++ net/minecraft/client/main/Main.java
@@ -11,8 +11,8 @@
     }
 
     @net.minecraft.obfuscate.DontObfuscate
-    public static void main(java.lang.String[] args) {
-        net.minecraft.client.main.Main.run((java.lang.String[])args, (boolean)true);
+    public static void main(java.lang.String[] $$0) {
+        net.minecraft.client.main.Main.run((java.lang.String[])$$0, (boolean)true);
     }
 
     /*
@@ -171,27 +171,27 @@
         return $$0.isEmpty() ? java.util.Optional.empty() : java.util.Optional.of((java.lang.Object)$$0);
     }
 
-    public static java.util.OptionalInt ofNullable(@javax.annotation.Nullable java.lang.Integer value) {
-        return value != null ? java.util.OptionalInt.of((int)value) : java.util.OptionalInt.empty();
+    public static java.util.OptionalInt ofNullable(@javax.annotation.Nullable java.lang.Integer $$0) {
+        return $$0 != null ? java.util.OptionalInt.of((int)$$0) : java.util.OptionalInt.empty();
     }
 
     @javax.annotation.Nullable
-    public static <T> T parseArgument(joptsimple.OptionSet set, joptsimple.OptionSpec<T> option) {
+    public static <T> T parseArgument(joptsimple.OptionSet $$0, joptsimple.OptionSpec<T> $$1) {
         try {
-            return (T)set.valueOf(option);
+            return (T)$$0.valueOf($$1);
         }
-        catch (java.lang.Throwable throwable) {
-            joptsimple.ArgumentAcceptingOptionSpec argumentAcceptingOptionSpec;
-            java.util.List list;
-            if (option instanceof joptsimple.ArgumentAcceptingOptionSpec && !(list = (argumentAcceptingOptionSpec = (joptsimple.ArgumentAcceptingOptionSpec)option).defaultValues()).isEmpty()) {
-                return (T)list.get(0);
+        catch (java.lang.Throwable $$2) {
+            joptsimple.ArgumentAcceptingOptionSpec $$3;
+            java.util.List $$4;
+            if ($$1 instanceof joptsimple.ArgumentAcceptingOptionSpec && !($$4 = ($$3 = (joptsimple.ArgumentAcceptingOptionSpec)$$1).defaultValues()).isEmpty()) {
+                return (T)$$4.get(0);
             }
-            throw throwable;
+            throw $$2;
         }
     }
 
-    public static boolean stringHasValue(@javax.annotation.Nullable java.lang.String str) {
-        return str != null && !str.isEmpty();
+    public static boolean stringHasValue(@javax.annotation.Nullable java.lang.String $$0) {
+        return $$0 != null && !$$0.isEmpty();
     }
 
     static {