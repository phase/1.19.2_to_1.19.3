--- net/minecraft/client/resources/language/ClientLanguage.java
+++ net/minecraft/client/resources/language/ClientLanguage.java
@@ -10,29 +10,29 @@
     public java.util.Map<java.lang.String, java.lang.String> storage;
     public boolean defaultRightToLeft;
 
-    public net.minecraft.client.resources.language.ClientLanguage(java.util.Map<java.lang.String, java.lang.String> storage, boolean defaultRightToLeft) {
-        this.storage = storage;
-        this.defaultRightToLeft = defaultRightToLeft;
+    public net.minecraft.client.resources.language.ClientLanguage(java.util.Map<java.lang.String, java.lang.String> $$0, boolean $$1) {
+        this.storage = $$0;
+        this.defaultRightToLeft = $$1;
     }
 
-    public static net.minecraft.client.resources.language.ClientLanguage loadFrom(net.minecraft.server.packs.resources.ResourceManager manager, java.util.List<net.minecraft.client.resources.language.LanguageInfo> languageInfos) {
-        java.util.HashMap hashMap = com.google.common.collect.Maps.newHashMap();
-        boolean bl = false;
-        for (net.minecraft.client.resources.language.LanguageInfo languageInfo : languageInfos) {
-            bl |= languageInfo.isBidirectional();
-            java.lang.String string = languageInfo.getCode();
-            java.lang.String string2 = java.lang.String.format((java.util.Locale)java.util.Locale.ROOT, (java.lang.String)"lang/%s.json", (java.lang.Object[])new java.lang.Object[]{string});
-            for (java.lang.String string3 : manager.getNamespaces()) {
+    public static net.minecraft.client.resources.language.ClientLanguage loadFrom(net.minecraft.server.packs.resources.ResourceManager $$0, java.util.List<net.minecraft.client.resources.language.LanguageInfo> $$1) {
+        java.util.HashMap $$2 = com.google.common.collect.Maps.newHashMap();
+        boolean $$3 = false;
+        for (net.minecraft.client.resources.language.LanguageInfo $$4 : $$1) {
+            $$3 |= $$4.isBidirectional();
+            java.lang.String $$5 = $$4.getCode();
+            java.lang.String $$6 = java.lang.String.format((java.util.Locale)java.util.Locale.ROOT, (java.lang.String)"lang/%s.json", (java.lang.Object[])new java.lang.Object[]{$$5});
+            for (java.lang.String $$7 : $$0.getNamespaces()) {
                 try {
-                    net.minecraft.resources.ResourceLocation resourceLocation = new net.minecraft.resources.ResourceLocation(string3, string2);
-                    net.minecraft.client.resources.language.ClientLanguage.appendFrom((java.lang.String)string, (java.util.List)manager.getResourceStack(resourceLocation), (java.util.Map)hashMap);
+                    net.minecraft.resources.ResourceLocation $$8 = new net.minecraft.resources.ResourceLocation($$7, $$6);
+                    net.minecraft.client.resources.language.ClientLanguage.appendFrom((java.lang.String)$$5, (java.util.List)$$0.getResourceStack($$8), (java.util.Map)$$2);
                 }
-                catch (java.lang.Exception exception) {
-                    LOGGER.warn("Skipped language file: {}:{} ({})", new java.lang.Object[]{string3, string2, exception.toString()});
+                catch (java.lang.Exception $$9) {
+                    LOGGER.warn("Skipped language file: {}:{} ({})", new java.lang.Object[]{$$7, $$6, $$9.toString()});
                 }
             }
         }
-        return new net.minecraft.client.resources.language.ClientLanguage((java.util.Map)com.google.common.collect.ImmutableMap.copyOf((java.util.Map)hashMap), bl);
+        return new net.minecraft.client.resources.language.ClientLanguage((java.util.Map)com.google.common.collect.ImmutableMap.copyOf((java.util.Map)$$2), $$3);
     }
 
     public static void appendFrom(java.lang.String $$0, java.util.List<net.minecraft.server.packs.resources.Resource> $$1, java.util.Map<java.lang.String, java.lang.String> $$2) {
@@ -53,20 +53,20 @@
         }
     }
 
-    public java.lang.String getOrDefault(java.lang.String id) {
-        return (java.lang.String)this.storage.getOrDefault((java.lang.Object)id, (java.lang.Object)id);
+    public java.lang.String getOrDefault(java.lang.String $$0) {
+        return (java.lang.String)this.storage.getOrDefault((java.lang.Object)$$0, (java.lang.Object)$$0);
     }
 
-    public boolean has(java.lang.String id) {
-        return this.storage.containsKey((java.lang.Object)id);
+    public boolean has(java.lang.String $$0) {
+        return this.storage.containsKey((java.lang.Object)$$0);
     }
 
     public boolean isDefaultRightToLeft() {
         return this.defaultRightToLeft;
     }
 
-    public net.minecraft.util.FormattedCharSequence getVisualOrder(net.minecraft.network.chat.FormattedText text) {
-        return net.minecraft.client.resources.language.FormattedBidiReorder.reorder((net.minecraft.network.chat.FormattedText)text, (boolean)this.defaultRightToLeft);
+    public net.minecraft.util.FormattedCharSequence getVisualOrder(net.minecraft.network.chat.FormattedText $$0) {
+        return net.minecraft.client.resources.language.FormattedBidiReorder.reorder((net.minecraft.network.chat.FormattedText)$$0, (boolean)this.defaultRightToLeft);
     }
 
     static {