--- net/minecraft/client/resources/model/ModelBakery$BakedCacheKey.java
+++ net/minecraft/client/resources/model/ModelBakery$BakedCacheKey.java
@@ -1,0 +1,43 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.client.resources.model;
+
+public class net.minecraft.client.resources.model.ModelBakery$BakedCacheKey
+extends java.lang.Record
+ {
+    public net.minecraft.resources.ResourceLocation id;
+    public com.mojang.math.Transformation transformation;
+    public boolean isUvLocked;
+
+    public net.minecraft.client.resources.model.ModelBakery$BakedCacheKey(net.minecraft.resources.ResourceLocation $$0, com.mojang.math.Transformation $$1, boolean $$2) {
+        this.id = $$0;
+        this.transformation = $$1;
+        this.isUvLocked = $$2;
+    }
+
+    public java.lang.String toString() {
+        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.client.resources.model.ModelBakery$BakedCacheKey.class, "id;transformation;isUvLocked", "id", "transformation", "isUvLocked"}, this);
+    }
+
+    public int hashCode() {
+        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.client.resources.model.ModelBakery$BakedCacheKey.class, "id;transformation;isUvLocked", "id", "transformation", "isUvLocked"}, this);
+    }
+
+    public boolean equals(java.lang.Object $$0) {
+        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.client.resources.model.ModelBakery$BakedCacheKey.class, "id;transformation;isUvLocked", "id", "transformation", "isUvLocked"}, this, $$0);
+    }
+
+    public net.minecraft.resources.ResourceLocation id() {
+        return this.id;
+    }
+
+    public com.mojang.math.Transformation transformation() {
+        return this.transformation;
+    }
+
+    public boolean isUvLocked() {
+        return this.isUvLocked;
+    }
+}
+