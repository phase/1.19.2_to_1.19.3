--- net/minecraft/client/resources/model/Material.java
+++ net/minecraft/client/resources/model/Material.java
@@ -5,6 +5,7 @@
 
 public class net.minecraft.client.resources.model.Material
  {
+    public static java.util.Comparator<net.minecraft.client.resources.model.Material> COMPARATOR;
     public net.minecraft.resources.ResourceLocation atlasLocation;
     public net.minecraft.resources.ResourceLocation texture;
     @javax.annotation.Nullable
@@ -27,19 +28,19 @@
         return (net.minecraft.client.renderer.texture.TextureAtlasSprite)net.minecraft.client.Minecraft.getInstance().getTextureAtlas(this.atlasLocation()).apply((java.lang.Object)this.texture());
     }
 
-    public net.minecraft.client.renderer.RenderType renderType(java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.RenderType> renderTypeGetter) {
+    public net.minecraft.client.renderer.RenderType renderType(java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.RenderType> $$0) {
         if (this.renderType == null) {
-            this.renderType = (net.minecraft.client.renderer.RenderType)renderTypeGetter.apply((java.lang.Object)this.atlasLocation);
+            this.renderType = (net.minecraft.client.renderer.RenderType)$$0.apply((java.lang.Object)this.atlasLocation);
         }
         return this.renderType;
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer buffer(net.minecraft.client.renderer.MultiBufferSource buffer, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.RenderType> renderTypeGetter) {
-        return this.sprite().wrap(buffer.getBuffer(this.renderType(renderTypeGetter)));
+    public com.mojang.blaze3d.vertex.VertexConsumer buffer(net.minecraft.client.renderer.MultiBufferSource $$0, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.RenderType> $$1) {
+        return this.sprite().wrap($$0.getBuffer(this.renderType($$1)));
     }
 
-    public com.mojang.blaze3d.vertex.VertexConsumer buffer(net.minecraft.client.renderer.MultiBufferSource buffer, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.RenderType> renderTypeGetter, boolean withGlint) {
-        return this.sprite().wrap(net.minecraft.client.renderer.entity.ItemRenderer.getFoilBufferDirect((net.minecraft.client.renderer.MultiBufferSource)buffer, (net.minecraft.client.renderer.RenderType)this.renderType(renderTypeGetter), (boolean)true, (boolean)withGlint));
+    public com.mojang.blaze3d.vertex.VertexConsumer buffer(net.minecraft.client.renderer.MultiBufferSource $$0, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.client.renderer.RenderType> $$1, boolean $$2) {
+        return this.sprite().wrap(net.minecraft.client.renderer.entity.ItemRenderer.getFoilBufferDirect((net.minecraft.client.renderer.MultiBufferSource)$$0, (net.minecraft.client.renderer.RenderType)this.renderType($$1), (boolean)true, (boolean)$$2));
     }
 
     public boolean equals(java.lang.Object $$0) {
@@ -60,5 +61,9 @@
     public java.lang.String toString() {
         return "Material{atlasLocation=" + this.atlasLocation + ", texture=" + this.texture + "}";
     }
+
+    static {
+        COMPARATOR = java.util.Comparator.comparing(net.minecraft.client.resources.model.Material::atlasLocation).thenComparing(net.minecraft.client.resources.model.Material::texture);
+    }
 }
 