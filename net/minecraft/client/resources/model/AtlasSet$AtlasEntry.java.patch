--- net/minecraft/client/resources/model/AtlasSet$AtlasEntry.java
+++ net/minecraft/client/resources/model/AtlasSet$AtlasEntry.java
@@ -1,0 +1,42 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.client.resources.model;
+
+public class net.minecraft.client.resources.model.AtlasSet$AtlasEntry
+extends java.lang.Record
+implements java.lang.AutoCloseable
+ {
+    public net.minecraft.client.renderer.texture.TextureAtlas atlas;
+    public net.minecraft.client.resources.model.AtlasSet$ResourceLister resourceLister;
+
+    public net.minecraft.client.resources.model.AtlasSet$AtlasEntry(net.minecraft.client.renderer.texture.TextureAtlas $$0, net.minecraft.client.resources.model.AtlasSet$ResourceLister $$1) {
+        this.atlas = $$0;
+        this.resourceLister = $$1;
+    }
+
+    public void close() {
+        this.atlas.clearTextureData();
+    }
+
+    public java.lang.String toString() {
+        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.client.resources.model.AtlasSet$AtlasEntry.class, "atlas;resourceLister", "atlas", "resourceLister"}, this);
+    }
+
+    public int hashCode() {
+        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.client.resources.model.AtlasSet$AtlasEntry.class, "atlas;resourceLister", "atlas", "resourceLister"}, this);
+    }
+
+    public boolean equals(java.lang.Object $$0) {
+        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.client.resources.model.AtlasSet$AtlasEntry.class, "atlas;resourceLister", "atlas", "resourceLister"}, this, $$0);
+    }
+
+    public net.minecraft.client.renderer.texture.TextureAtlas atlas() {
+        return this.atlas;
+    }
+
+    public net.minecraft.client.resources.model.AtlasSet$ResourceLister resourceLister() {
+        return this.resourceLister;
+    }
+}
+