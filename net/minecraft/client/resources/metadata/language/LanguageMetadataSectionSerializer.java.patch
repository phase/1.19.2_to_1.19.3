--- net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer.java
+++ net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer.java
@@ -11,27 +11,27 @@
     public net.minecraft.client.resources.metadata.language.LanguageMetadataSectionSerializer() {
     }
 
-    public net.minecraft.client.resources.metadata.language.LanguageMetadataSection fromJson(com.google.gson.JsonObject json) {
-        java.util.HashSet hashSet = com.google.common.collect.Sets.newHashSet();
-        for (java.util.Map$Entry entry : json.entrySet()) {
-            java.lang.String string = (java.lang.String)entry.getKey();
-            if (string.length() > 16) {
-                throw new com.google.gson.JsonParseException("Invalid language->'" + string + "': language code must not be more than 16 characters long");
+    public net.minecraft.client.resources.metadata.language.LanguageMetadataSection fromJson(com.google.gson.JsonObject $$0) {
+        java.util.HashSet $$1 = com.google.common.collect.Sets.newHashSet();
+        for (java.util.Map$Entry $$2 : $$0.entrySet()) {
+            java.lang.String $$3 = (java.lang.String)$$2.getKey();
+            if ($$3.length() > 16) {
+                throw new com.google.gson.JsonParseException("Invalid language->'" + $$3 + "': language code must not be more than 16 characters long");
             }
-            com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)((com.google.gson.JsonElement)entry.getValue()), (java.lang.String)"language");
-            java.lang.String string2 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObject, (java.lang.String)"region");
-            java.lang.String string3 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObject, (java.lang.String)"name");
-            boolean bl = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)jsonObject, (java.lang.String)"bidirectional", (boolean)false);
-            if (string2.isEmpty()) {
-                throw new com.google.gson.JsonParseException("Invalid language->'" + string + "'->region: empty value");
+            com.google.gson.JsonObject $$4 = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)((com.google.gson.JsonElement)$$2.getValue()), (java.lang.String)"language");
+            java.lang.String $$5 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$4, (java.lang.String)"region");
+            java.lang.String $$6 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$4, (java.lang.String)"name");
+            boolean $$7 = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)$$4, (java.lang.String)"bidirectional", (boolean)false);
+            if ($$5.isEmpty()) {
+                throw new com.google.gson.JsonParseException("Invalid language->'" + $$3 + "'->region: empty value");
             }
-            if (string3.isEmpty()) {
-                throw new com.google.gson.JsonParseException("Invalid language->'" + string + "'->name: empty value");
+            if ($$6.isEmpty()) {
+                throw new com.google.gson.JsonParseException("Invalid language->'" + $$3 + "'->name: empty value");
             }
-            if (hashSet.add((java.lang.Object)new net.minecraft.client.resources.language.LanguageInfo(string, string2, string3, bl))) continue;
-            throw new com.google.gson.JsonParseException("Duplicate language->'" + string + "' defined");
+            if ($$1.add((java.lang.Object)new net.minecraft.client.resources.language.LanguageInfo($$3, $$5, $$6, $$7))) continue;
+            throw new com.google.gson.JsonParseException("Duplicate language->'" + $$3 + "' defined");
         }
-        return new net.minecraft.client.resources.metadata.language.LanguageMetadataSection((java.util.Collection)hashSet);
+        return new net.minecraft.client.resources.metadata.language.LanguageMetadataSection((java.util.Collection)$$1);
     }
 
     public java.lang.String getMetadataSectionName() {