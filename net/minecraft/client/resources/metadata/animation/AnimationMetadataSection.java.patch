--- net/minecraft/client/resources/metadata/animation/AnimationMetadataSection.java
+++ net/minecraft/client/resources/metadata/animation/AnimationMetadataSection.java
@@ -16,50 +16,28 @@
     public int defaultFrameTime;
     public boolean interpolatedFrames;
 
-    public net.minecraft.client.resources.metadata.animation.AnimationMetadataSection(java.util.List<net.minecraft.client.resources.metadata.animation.AnimationFrame> frames, int frameWidth, int frameHeight, int defaultFrameTime, boolean interpolatedFrames) {
-        this.frames = frames;
-        this.frameWidth = frameWidth;
-        this.frameHeight = frameHeight;
-        this.defaultFrameTime = defaultFrameTime;
-        this.interpolatedFrames = interpolatedFrames;
+    public net.minecraft.client.resources.metadata.animation.AnimationMetadataSection(java.util.List<net.minecraft.client.resources.metadata.animation.AnimationFrame> $$0, int $$1, int $$2, int $$3, boolean $$4) {
+        this.frames = $$0;
+        this.frameWidth = $$1;
+        this.frameHeight = $$2;
+        this.defaultFrameTime = $$3;
+        this.interpolatedFrames = $$4;
     }
 
-    public static boolean isDivisionInteger(int valMul, int val) {
-        return valMul / val * val == valMul;
-    }
-
-    public com.mojang.datafixers.util.Pair<java.lang.Integer, java.lang.Integer> getFrameSize(int width, int height) {
-        com.mojang.datafixers.util.Pair pair = this.calculateFrameSize(width, height);
-        int n = (java.lang.Integer)pair.getFirst();
-        int n2 = (java.lang.Integer)pair.getSecond();
-        if (!net.minecraft.client.resources.metadata.animation.AnimationMetadataSection.isDivisionInteger((int)width, (int)n) || !net.minecraft.client.resources.metadata.animation.AnimationMetadataSection.isDivisionInteger((int)height, (int)n2)) {
-            throw new java.lang.IllegalArgumentException(java.lang.String.format((java.util.Locale)java.util.Locale.ROOT, (java.lang.String)"Image size %s,%s is not multiply of frame size %s,%s", (java.lang.Object[])new java.lang.Object[]{width, height, n, n2}));
-        }
-        return pair;
-    }
-
-    public com.mojang.datafixers.util.Pair<java.lang.Integer, java.lang.Integer> calculateFrameSize(int defWidth, int defHeight) {
+    public net.minecraft.client.resources.metadata.animation.FrameSize calculateFrameSize(int $$0, int $$1) {
         if (this.frameWidth != -1) {
             if (this.frameHeight != -1) {
-                return com.mojang.datafixers.util.Pair.of((java.lang.Object)this.frameWidth, (java.lang.Object)this.frameHeight);
+                return new net.minecraft.client.resources.metadata.animation.FrameSize(this.frameWidth, this.frameHeight);
             }
-            return com.mojang.datafixers.util.Pair.of((java.lang.Object)this.frameWidth, (java.lang.Object)defHeight);
+            return new net.minecraft.client.resources.metadata.animation.FrameSize(this.frameWidth, $$1);
         }
         if (this.frameHeight != -1) {
-            return com.mojang.datafixers.util.Pair.of((java.lang.Object)defWidth, (java.lang.Object)this.frameHeight);
+            return new net.minecraft.client.resources.metadata.animation.FrameSize($$0, this.frameHeight);
         }
-        int n = java.lang.Math.min((int)defWidth, (int)defHeight);
-        return com.mojang.datafixers.util.Pair.of((java.lang.Object)n, (java.lang.Object)n);
+        int $$2 = java.lang.Math.min((int)$$0, (int)$$1);
+        return new net.minecraft.client.resources.metadata.animation.FrameSize($$2, $$2);
     }
 
-    public int getFrameHeight(int defHeight) {
-        return this.frameHeight == -1 ? defHeight : this.frameHeight;
-    }
-
-    public int getFrameWidth(int defWidth) {
-        return this.frameWidth == -1 ? defWidth : this.frameWidth;
-    }
-
     public int getDefaultFrameTime() {
         return this.defaultFrameTime;
     }