--- net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer.java
+++ net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer.java
@@ -9,54 +9,52 @@
     public net.minecraft.client.resources.metadata.animation.AnimationMetadataSectionSerializer() {
     }
 
-    public net.minecraft.client.resources.metadata.animation.AnimationMetadataSection fromJson(com.google.gson.JsonObject json) {
-        int n;
-        com.google.common.collect.ImmutableList$Builder builder = com.google.common.collect.ImmutableList.builder();
-        int n2 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)json, (java.lang.String)"frametime", (int)1);
-        if (n2 != 1) {
-            org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)n2, (java.lang.String)"Invalid default frame time");
+    public net.minecraft.client.resources.metadata.animation.AnimationMetadataSection fromJson(com.google.gson.JsonObject $$0) {
+        com.google.common.collect.ImmutableList$Builder $$1 = com.google.common.collect.ImmutableList.builder();
+        int $$2 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"frametime", (int)1);
+        if ($$2 != 1) {
+            org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)$$2, (java.lang.String)"Invalid default frame time");
         }
-        if (json.has("frames")) {
+        if ($$0.has("frames")) {
             try {
-                com.google.gson.JsonArray jsonArray = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)json, (java.lang.String)"frames");
-                for (n = 0;
- n < jsonArray.size(); ++n) {
-                    com.google.gson.JsonElement jsonElement = jsonArray.get(n);
-                    net.minecraft.client.resources.metadata.animation.AnimationFrame animationFrame = this.getFrame(n, jsonElement);
-                    if (animationFrame == null) continue;
-                    builder.add((java.lang.Object)animationFrame);
+                com.google.gson.JsonArray $$3 = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$0, (java.lang.String)"frames");
+                for (int $$4 = 0; $$4 < $$3.size(); ++$$4) {
+                    com.google.gson.JsonElement $$5 = $$3.get($$4);
+                    net.minecraft.client.resources.metadata.animation.AnimationFrame $$6 = this.getFrame($$4, $$5);
+                    if ($$6 == null) continue;
+                    $$1.add((java.lang.Object)$$6);
                 }
             }
-            catch (java.lang.ClassCastException classCastException) {
-                throw new com.google.gson.JsonParseException("Invalid animation->frames: expected array, was " + json.get("frames"), (java.lang.Throwable)classCastException);
+            catch (java.lang.ClassCastException $$7) {
+                throw new com.google.gson.JsonParseException("Invalid animation->frames: expected array, was " + $$0.get("frames"), (java.lang.Throwable)$$7);
             }
         }
-        int n3 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)json, (java.lang.String)"width", (int)-1);
-        n = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)json, (java.lang.String)"height", (int)-1);
-        if (n3 != -1) {
-            org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)n3, (java.lang.String)"Invalid width");
+        int $$8 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"width", (int)-1);
+        int $$9 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"height", (int)-1);
+        if ($$8 != -1) {
+            org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)$$8, (java.lang.String)"Invalid width");
         }
-        if (n != -1) {
-            org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)n, (java.lang.String)"Invalid height");
+        if ($$9 != -1) {
+            org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)$$9, (java.lang.String)"Invalid height");
         }
-        boolean bl = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)json, (java.lang.String)"interpolate", (boolean)false);
-        return new net.minecraft.client.resources.metadata.animation.AnimationMetadataSection((java.util.List)builder.build(), n3, n, n2, bl);
+        boolean $$10 = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)$$0, (java.lang.String)"interpolate", (boolean)false);
+        return new net.minecraft.client.resources.metadata.animation.AnimationMetadataSection((java.util.List)$$1.build(), $$8, $$9, $$2, $$10);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.client.resources.metadata.animation.AnimationFrame getFrame(int frame, com.google.gson.JsonElement element) {
-        if (element.isJsonPrimitive()) {
-            return new net.minecraft.client.resources.metadata.animation.AnimationFrame(net.minecraft.util.GsonHelper.convertToInt((com.google.gson.JsonElement)element, (java.lang.String)("frames[" + frame + "]")));
+    public net.minecraft.client.resources.metadata.animation.AnimationFrame getFrame(int $$0, com.google.gson.JsonElement $$1) {
+        if ($$1.isJsonPrimitive()) {
+            return new net.minecraft.client.resources.metadata.animation.AnimationFrame(net.minecraft.util.GsonHelper.convertToInt((com.google.gson.JsonElement)$$1, (java.lang.String)("frames[" + $$0 + "]")));
         }
-        if (element.isJsonObject()) {
-            com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)element, (java.lang.String)("frames[" + frame + "]"));
-            int n = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)jsonObject, (java.lang.String)"time", (int)-1);
-            if (jsonObject.has("time")) {
-                org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)n, (java.lang.String)"Invalid frame time");
+        if ($$1.isJsonObject()) {
+            com.google.gson.JsonObject $$2 = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$1, (java.lang.String)("frames[" + $$0 + "]"));
+            int $$3 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$2, (java.lang.String)"time", (int)-1);
+            if ($$2.has("time")) {
+                org.apache.commons.lang3.Validate.inclusiveBetween((long)1L, (long)java.lang.Integer.MAX_VALUE, (long)$$3, (java.lang.String)"Invalid frame time");
             }
-            int n2 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)jsonObject, (java.lang.String)"index");
-            org.apache.commons.lang3.Validate.inclusiveBetween((long)0L, (long)java.lang.Integer.MAX_VALUE, (long)n2, (java.lang.String)"Invalid frame index");
-            return new net.minecraft.client.resources.metadata.animation.AnimationFrame(n2, n);
+            int $$4 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$2, (java.lang.String)"index");
+            org.apache.commons.lang3.Validate.inclusiveBetween((long)0L, (long)java.lang.Integer.MAX_VALUE, (long)$$4, (java.lang.String)"Invalid frame index");
+            return new net.minecraft.client.resources.metadata.animation.AnimationFrame($$4, $$3);
         }
         return null;
     }