--- net/minecraft/client/resources/DefaultClientPackResources.java
+++ net/minecraft/client/resources/DefaultClientPackResources.java
@@ -1,58 +1,0 @@
-/*
- * Decompiled with CFR 0.151.
- */
-package net.minecraft.client.resources;
-
-public class net.minecraft.client.resources.DefaultClientPackResources
-extends net.minecraft.server.packs.VanillaPackResources
- {
-    public net.minecraft.client.resources.AssetIndex assetIndex;
-
-    public net.minecraft.client.resources.DefaultClientPackResources(net.minecraft.server.packs.metadata.pack.PackMetadataSection $$0, net.minecraft.client.resources.AssetIndex $$1) {
-        super($$0, new java.lang.String[]{"minecraft", "realms"});
-        this.assetIndex = $$1;
-    }
-
-    @javax.annotation.Nullable
-    public java.io.InputStream getResourceAsStream(net.minecraft.server.packs.PackType type, net.minecraft.resources.ResourceLocation location) {
-        java.io.File file;
-        if (type == net.minecraft.server.packs.PackType.CLIENT_RESOURCES && (file = this.assetIndex.getFile(location)) != null && file.exists()) {
-            try {
-                return new java.io.FileInputStream(file);
-            }
-            catch (java.io.FileNotFoundException fileNotFoundException) {
-                // empty catch block
-            }
-        }
-        return super.getResourceAsStream(type, location);
-    }
-
-    public boolean hasResource(net.minecraft.server.packs.PackType type, net.minecraft.resources.ResourceLocation location) {
-        java.io.File file;
-        if (type == net.minecraft.server.packs.PackType.CLIENT_RESOURCES && (file = this.assetIndex.getFile(location)) != null && file.exists()) {
-            return true;
-        }
-        return super.hasResource(type, location);
-    }
-
-    @javax.annotation.Nullable
-    public java.io.InputStream getResourceAsStream(java.lang.String path) {
-        java.io.File file = this.assetIndex.getRootFile(path);
-        if (file != null && file.exists()) {
-            try {
-                return new java.io.FileInputStream(file);
-            }
-            catch (java.io.FileNotFoundException fileNotFoundException) {
-                // empty catch block
-            }
-        }
-        return super.getResourceAsStream(path);
-    }
-
-    public java.util.Collection<net.minecraft.resources.ResourceLocation> getResources(net.minecraft.server.packs.PackType $$0, java.lang.String $$1, java.lang.String $$2, java.util.function.Predicate<net.minecraft.resources.ResourceLocation> $$3) {
-        java.util.Collection $$4 = super.getResources($$0, $$1, $$2, $$3);
-        $$4.addAll(this.assetIndex.getFiles($$2, $$1, $$3));
-        return $$4;
-    }
-}
-