--- net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer.java
+++ net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer.java
@@ -19,45 +19,45 @@
         return new net.minecraft.client.resources.sounds.SoundEventRegistration($$6, $$4, $$5);
     }
 
-    public java.util.List<net.minecraft.client.resources.sounds.Sound> getSounds(com.google.gson.JsonObject object) {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        if (object.has("sounds")) {
-            com.google.gson.JsonArray jsonArray = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)object, (java.lang.String)"sounds");
-            for (int i = 0; i < jsonArray.size(); ++i) {
-                com.google.gson.JsonElement jsonElement = jsonArray.get(i);
-                if (net.minecraft.util.GsonHelper.isStringValue((com.google.gson.JsonElement)jsonElement)) {
-                    java.lang.String string = net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)jsonElement, (java.lang.String)"sound");
-                    arrayList.add((java.lang.Object)new net.minecraft.client.resources.sounds.Sound(string, (net.minecraft.util.valueproviders.SampledFloat)DEFAULT_FLOAT, (net.minecraft.util.valueproviders.SampledFloat)DEFAULT_FLOAT, 1, net.minecraft.client.resources.sounds.Sound$Type.FILE, false, false, 16));
+    public java.util.List<net.minecraft.client.resources.sounds.Sound> getSounds(com.google.gson.JsonObject $$0) {
+        java.util.ArrayList $$1 = com.google.common.collect.Lists.newArrayList();
+        if ($$0.has("sounds")) {
+            com.google.gson.JsonArray $$2 = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$0, (java.lang.String)"sounds");
+            for (int $$3 = 0; $$3 < $$2.size(); ++$$3) {
+                com.google.gson.JsonElement $$4 = $$2.get($$3);
+                if (net.minecraft.util.GsonHelper.isStringValue((com.google.gson.JsonElement)$$4)) {
+                    java.lang.String $$5 = net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)$$4, (java.lang.String)"sound");
+                    $$1.add((java.lang.Object)new net.minecraft.client.resources.sounds.Sound($$5, (net.minecraft.util.valueproviders.SampledFloat)DEFAULT_FLOAT, (net.minecraft.util.valueproviders.SampledFloat)DEFAULT_FLOAT, 1, net.minecraft.client.resources.sounds.Sound$Type.FILE, false, false, 16));
                     continue;
                 }
-                arrayList.add((java.lang.Object)this.getSound(net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)jsonElement, (java.lang.String)"sound")));
+                $$1.add((java.lang.Object)this.getSound(net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$4, (java.lang.String)"sound")));
             }
         }
-        return arrayList;
+        return $$1;
     }
 
-    public net.minecraft.client.resources.sounds.Sound getSound(com.google.gson.JsonObject object) {
-        java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)object, (java.lang.String)"name");
-        net.minecraft.client.resources.sounds.Sound$Type type = this.getType(object, net.minecraft.client.resources.sounds.Sound$Type.FILE);
-        float f = net.minecraft.util.GsonHelper.getAsFloat((com.google.gson.JsonObject)object, (java.lang.String)"volume", (float)1.0f);
-        org.apache.commons.lang3.Validate.isTrue((f > 0.0f ? 1 : 0) != 0, (java.lang.String)"Invalid volume", (java.lang.Object[])new java.lang.Object[0]);
-        float f2 = net.minecraft.util.GsonHelper.getAsFloat((com.google.gson.JsonObject)object, (java.lang.String)"pitch", (float)1.0f);
-        org.apache.commons.lang3.Validate.isTrue((f2 > 0.0f ? 1 : 0) != 0, (java.lang.String)"Invalid pitch", (java.lang.Object[])new java.lang.Object[0]);
-        int n = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)object, (java.lang.String)"weight", (int)1);
-        org.apache.commons.lang3.Validate.isTrue((n > 0 ? 1 : 0) != 0, (java.lang.String)"Invalid weight", (java.lang.Object[])new java.lang.Object[0]);
-        boolean bl = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)object, (java.lang.String)"preload", (boolean)false);
-        boolean bl2 = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)object, (java.lang.String)"stream", (boolean)false);
-        int n2 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)object, (java.lang.String)"attenuation_distance", (int)16);
-        return new net.minecraft.client.resources.sounds.Sound(string, (net.minecraft.util.valueproviders.SampledFloat)net.minecraft.util.valueproviders.ConstantFloat.of((float)f), (net.minecraft.util.valueproviders.SampledFloat)net.minecraft.util.valueproviders.ConstantFloat.of((float)f2), n, type, bl2, bl, n2);
+    public net.minecraft.client.resources.sounds.Sound getSound(com.google.gson.JsonObject $$0) {
+        java.lang.String $$1 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"name");
+        net.minecraft.client.resources.sounds.Sound$Type $$2 = this.getType($$0, net.minecraft.client.resources.sounds.Sound$Type.FILE);
+        float $$3 = net.minecraft.util.GsonHelper.getAsFloat((com.google.gson.JsonObject)$$0, (java.lang.String)"volume", (float)1.0f);
+        org.apache.commons.lang3.Validate.isTrue(($$3 > 0.0f ? 1 : 0) != 0, (java.lang.String)"Invalid volume", (java.lang.Object[])new java.lang.Object[0]);
+        float $$4 = net.minecraft.util.GsonHelper.getAsFloat((com.google.gson.JsonObject)$$0, (java.lang.String)"pitch", (float)1.0f);
+        org.apache.commons.lang3.Validate.isTrue(($$4 > 0.0f ? 1 : 0) != 0, (java.lang.String)"Invalid pitch", (java.lang.Object[])new java.lang.Object[0]);
+        int $$5 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"weight", (int)1);
+        org.apache.commons.lang3.Validate.isTrue(($$5 > 0 ? 1 : 0) != 0, (java.lang.String)"Invalid weight", (java.lang.Object[])new java.lang.Object[0]);
+        boolean $$6 = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)$$0, (java.lang.String)"preload", (boolean)false);
+        boolean $$7 = net.minecraft.util.GsonHelper.getAsBoolean((com.google.gson.JsonObject)$$0, (java.lang.String)"stream", (boolean)false);
+        int $$8 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$0, (java.lang.String)"attenuation_distance", (int)16);
+        return new net.minecraft.client.resources.sounds.Sound($$1, (net.minecraft.util.valueproviders.SampledFloat)net.minecraft.util.valueproviders.ConstantFloat.of((float)$$3), (net.minecraft.util.valueproviders.SampledFloat)net.minecraft.util.valueproviders.ConstantFloat.of((float)$$4), $$5, $$2, $$7, $$6, $$8);
     }
 
-    public net.minecraft.client.resources.sounds.Sound$Type getType(com.google.gson.JsonObject object, net.minecraft.client.resources.sounds.Sound$Type defaultValue) {
-        net.minecraft.client.resources.sounds.Sound$Type type = defaultValue;
-        if (object.has("type")) {
-            type = net.minecraft.client.resources.sounds.Sound$Type.getByName((java.lang.String)net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)object, (java.lang.String)"type"));
-            org.apache.commons.lang3.Validate.notNull((java.lang.Object)type, (java.lang.String)"Invalid type", (java.lang.Object[])new java.lang.Object[0]);
+    public net.minecraft.client.resources.sounds.Sound$Type getType(com.google.gson.JsonObject $$0, net.minecraft.client.resources.sounds.Sound$Type $$1) {
+        net.minecraft.client.resources.sounds.Sound$Type $$2 = $$1;
+        if ($$0.has("type")) {
+            $$2 = net.minecraft.client.resources.sounds.Sound$Type.getByName((java.lang.String)net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"type"));
+            org.apache.commons.lang3.Validate.notNull((java.lang.Object)$$2, (java.lang.String)"Invalid type", (java.lang.Object[])new java.lang.Object[0]);
         }
-        return type;
+        return $$2;
     }
 
     public /* synthetic */ java.lang.Object deserialize(com.google.gson.JsonElement jsonElement, java.lang.reflect.Type type, com.google.gson.JsonDeserializationContext jsonDeserializationContext) throws com.google.gson.JsonParseException {