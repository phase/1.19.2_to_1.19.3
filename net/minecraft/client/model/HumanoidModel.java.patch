--- net/minecraft/client/model/HumanoidModel.java
+++ net/minecraft/client/model/HumanoidModel.java
@@ -65,37 +65,37 @@
         return com.google.common.collect.ImmutableList.of((java.lang.Object)this.body, (java.lang.Object)this.rightArm, (java.lang.Object)this.leftArm, (java.lang.Object)this.rightLeg, (java.lang.Object)this.leftLeg, (java.lang.Object)this.hat);
     }
 
-    public void prepareMobModel(T entity, float limbSwing, float limbSwingAmount, float partialTick) {
-        this.swimAmount = entity.getSwimAmount(partialTick);
-        super.prepareMobModel(entity, limbSwing, limbSwingAmount, partialTick);
+    public void prepareMobModel(T $$0, float $$1, float $$2, float $$3) {
+        this.swimAmount = $$0.getSwimAmount($$3);
+        super.prepareMobModel($$0, $$1, $$2, $$3);
     }
 
-    public void setupAnim(T entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
-        boolean bl;
-        boolean bl2 = entity.getFallFlyingTicks() > 4;
-        boolean bl3 = entity.isVisuallySwimming();
-        this.head.yRot = netHeadYaw * ((float)java.lang.Math.PI / 180);
-        this.head.xRot = bl2 ? -0.7853982f : (this.swimAmount > 0.0f ? (bl3 ? this.rotlerpRad(this.swimAmount, this.head.xRot, -0.7853982f) : this.rotlerpRad(this.swimAmount, this.head.xRot, headPitch * ((float)java.lang.Math.PI / 180))) : headPitch * ((float)java.lang.Math.PI / 180));
+    public void setupAnim(T $$0, float $$1, float $$2, float $$3, float $$4, float $$5) {
+        boolean $$9;
+        boolean $$6 = $$0.getFallFlyingTicks() > 4;
+        boolean $$7 = $$0.isVisuallySwimming();
+        this.head.yRot = $$4 * ((float)java.lang.Math.PI / 180);
+        this.head.xRot = $$6 ? -0.7853982f : (this.swimAmount > 0.0f ? ($$7 ? this.rotlerpRad(this.swimAmount, this.head.xRot, -0.7853982f) : this.rotlerpRad(this.swimAmount, this.head.xRot, $$5 * ((float)java.lang.Math.PI / 180))) : $$5 * ((float)java.lang.Math.PI / 180));
         this.body.yRot = 0.0f;
         this.rightArm.z = 0.0f;
         this.rightArm.x = -5.0f;
         this.leftArm.z = 0.0f;
         this.leftArm.x = 5.0f;
-        float f = 1.0f;
-        if (bl2) {
-            f = (float)entity.getDeltaMovement().lengthSqr();
-            f /= 0.2f;
-            f *= f * f;
+        float $$8 = 1.0f;
+        if ($$6) {
+            $$8 = (float)$$0.getDeltaMovement().lengthSqr();
+            $$8 /= 0.2f;
+            $$8 *= $$8 * $$8;
         }
-        if (f < 1.0f) {
-            f = 1.0f;
+        if ($$8 < 1.0f) {
+            $$8 = 1.0f;
         }
-        this.rightArm.xRot = net.minecraft.util.Mth.cos((float)(limbSwing * 0.6662f + (float)java.lang.Math.PI)) * 2.0f * limbSwingAmount * 0.5f / f;
-        this.leftArm.xRot = net.minecraft.util.Mth.cos((float)(limbSwing * 0.6662f)) * 2.0f * limbSwingAmount * 0.5f / f;
+        this.rightArm.xRot = net.minecraft.util.Mth.cos((float)($$1 * 0.6662f + (float)java.lang.Math.PI)) * 2.0f * $$2 * 0.5f / $$8;
+        this.leftArm.xRot = net.minecraft.util.Mth.cos((float)($$1 * 0.6662f)) * 2.0f * $$2 * 0.5f / $$8;
         this.rightArm.zRot = 0.0f;
         this.leftArm.zRot = 0.0f;
-        this.rightLeg.xRot = net.minecraft.util.Mth.cos((float)(limbSwing * 0.6662f)) * 1.4f * limbSwingAmount / f;
-        this.leftLeg.xRot = net.minecraft.util.Mth.cos((float)(limbSwing * 0.6662f + (float)java.lang.Math.PI)) * 1.4f * limbSwingAmount / f;
+        this.rightLeg.xRot = net.minecraft.util.Mth.cos((float)($$1 * 0.6662f)) * 1.4f * $$2 / $$8;
+        this.leftLeg.xRot = net.minecraft.util.Mth.cos((float)($$1 * 0.6662f + (float)java.lang.Math.PI)) * 1.4f * $$2 / $$8;
         this.rightLeg.yRot = 0.0f;
         this.leftLeg.yRot = 0.0f;
         this.rightLeg.zRot = 0.0f;
@@ -112,25 +112,27 @@
         }
         this.rightArm.yRot = 0.0f;
         this.leftArm.yRot = 0.0f;
-        boolean bl4 = bl = entity.getMainArm() == net.minecraft.world.entity.HumanoidArm.RIGHT;
-        if (entity.isUsingItem()) {
-            boolean bl5 = var11_11 = entity.getUsedItemHand() == net.minecraft.world.InteractionHand.MAIN_HAND;
-            if (var11_11 == bl) {
-                this.poseRightArm(entity);
+        boolean bl = $$9 = $$0.getMainArm() == net.minecraft.world.entity.HumanoidArm.RIGHT;
+        if ($$0.isUsingItem()) {
+            boolean $$10;
+            boolean bl2 = $$10 = $$0.getUsedItemHand() == net.minecraft.world.InteractionHand.MAIN_HAND;
+            if ($$10 == $$9) {
+                this.poseRightArm($$0);
             } else {
-                this.poseLeftArm(entity);
+                this.poseLeftArm($$0);
             }
         } else {
-            boolean bl6 = var11_11 = bl ? this.leftArmPose.isTwoHanded() : this.rightArmPose.isTwoHanded();
-            if (bl != var11_11) {
-                this.poseLeftArm(entity);
-                this.poseRightArm(entity);
+            boolean $$11;
+            boolean bl3 = $$11 = $$9 ? this.leftArmPose.isTwoHanded() : this.rightArmPose.isTwoHanded();
+            if ($$9 != $$11) {
+                this.poseLeftArm($$0);
+                this.poseRightArm($$0);
             } else {
-                this.poseRightArm(entity);
-                this.poseLeftArm(entity);
+                this.poseRightArm($$0);
+                this.poseLeftArm($$0);
             }
         }
-        this.setupAttackAnimation(entity, ageInTicks);
+        this.setupAttackAnimation($$0, $$3);
         if (this.crouching) {
             this.body.xRot = 0.5f;
             this.rightArm.xRot += 0.4f;
@@ -155,48 +157,47 @@
             this.rightArm.y = 2.0f;
         }
         if (this.rightArmPose != net.minecraft.client.model.HumanoidModel$ArmPose.SPYGLASS) {
-            net.minecraft.client.model.AnimationUtils.bobModelPart((net.minecraft.client.model.geom.ModelPart)this.rightArm, (float)ageInTicks, (float)1.0f);
+            net.minecraft.client.model.AnimationUtils.bobModelPart((net.minecraft.client.model.geom.ModelPart)this.rightArm, (float)$$3, (float)1.0f);
         }
         if (this.leftArmPose != net.minecraft.client.model.HumanoidModel$ArmPose.SPYGLASS) {
-            net.minecraft.client.model.AnimationUtils.bobModelPart((net.minecraft.client.model.geom.ModelPart)this.leftArm, (float)ageInTicks, (float)-1.0f);
+            net.minecraft.client.model.AnimationUtils.bobModelPart((net.minecraft.client.model.geom.ModelPart)this.leftArm, (float)$$3, (float)-1.0f);
         }
         if (this.swimAmount > 0.0f) {
-            float f2;
-            float f3;
-            float f4 = limbSwing % 26.0f;
-            net.minecraft.world.entity.HumanoidArm humanoidArm = this.getAttackArm(entity);
-            float f5 = humanoidArm == net.minecraft.world.entity.HumanoidArm.RIGHT && this.attackTime > 0.0f ? 0.0f : this.swimAmount;
-            float f6 = f3 = humanoidArm == net.minecraft.world.entity.HumanoidArm.LEFT && this.attackTime > 0.0f ? 0.0f : this.swimAmount;
-            if (!entity.isUsingItem()) {
-                if (f4 < 14.0f) {
-                    this.leftArm.xRot = this.rotlerpRad(f3, this.leftArm.xRot, 0.0f);
-                    this.rightArm.xRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.xRot, (float)0.0f);
-                    this.leftArm.yRot = this.rotlerpRad(f3, this.leftArm.yRot, (float)java.lang.Math.PI);
-                    this.rightArm.yRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.yRot, (float)((float)java.lang.Math.PI));
-                    this.leftArm.zRot = this.rotlerpRad(f3, this.leftArm.zRot, (float)java.lang.Math.PI + 1.8707964f * this.quadraticArmUpdate(f4) / this.quadraticArmUpdate(14.0f));
-                    this.rightArm.zRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.zRot, (float)((float)java.lang.Math.PI - 1.8707964f * this.quadraticArmUpdate(f4) / this.quadraticArmUpdate(14.0f)));
-                } else if (f4 >= 14.0f && f4 < 22.0f) {
-                    f2 = (f4 - 14.0f) / 8.0f;
-                    this.leftArm.xRot = this.rotlerpRad(f3, this.leftArm.xRot, 1.5707964f * f2);
-                    this.rightArm.xRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.xRot, (float)(1.5707964f * f2));
-                    this.leftArm.yRot = this.rotlerpRad(f3, this.leftArm.yRot, (float)java.lang.Math.PI);
-                    this.rightArm.yRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.yRot, (float)((float)java.lang.Math.PI));
-                    this.leftArm.zRot = this.rotlerpRad(f3, this.leftArm.zRot, 5.012389f - 1.8707964f * f2);
-                    this.rightArm.zRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.zRot, (float)(1.2707963f + 1.8707964f * f2));
-                } else if (f4 >= 22.0f && f4 < 26.0f) {
-                    f2 = (f4 - 22.0f) / 4.0f;
-                    this.leftArm.xRot = this.rotlerpRad(f3, this.leftArm.xRot, 1.5707964f - 1.5707964f * f2);
-                    this.rightArm.xRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.xRot, (float)(1.5707964f - 1.5707964f * f2));
-                    this.leftArm.yRot = this.rotlerpRad(f3, this.leftArm.yRot, (float)java.lang.Math.PI);
-                    this.rightArm.yRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.yRot, (float)((float)java.lang.Math.PI));
-                    this.leftArm.zRot = this.rotlerpRad(f3, this.leftArm.zRot, (float)java.lang.Math.PI);
-                    this.rightArm.zRot = net.minecraft.util.Mth.lerp((float)f5, (float)this.rightArm.zRot, (float)((float)java.lang.Math.PI));
+            float $$15;
+            float $$12 = $$1 % 26.0f;
+            net.minecraft.world.entity.HumanoidArm $$13 = this.getAttackArm($$0);
+            float $$14 = $$13 == net.minecraft.world.entity.HumanoidArm.RIGHT && this.attackTime > 0.0f ? 0.0f : this.swimAmount;
+            float f = $$15 = $$13 == net.minecraft.world.entity.HumanoidArm.LEFT && this.attackTime > 0.0f ? 0.0f : this.swimAmount;
+            if (!$$0.isUsingItem()) {
+                if ($$12 < 14.0f) {
+                    this.leftArm.xRot = this.rotlerpRad($$15, this.leftArm.xRot, 0.0f);
+                    this.rightArm.xRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.xRot, (float)0.0f);
+                    this.leftArm.yRot = this.rotlerpRad($$15, this.leftArm.yRot, (float)java.lang.Math.PI);
+                    this.rightArm.yRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.yRot, (float)((float)java.lang.Math.PI));
+                    this.leftArm.zRot = this.rotlerpRad($$15, this.leftArm.zRot, (float)java.lang.Math.PI + 1.8707964f * this.quadraticArmUpdate($$12) / this.quadraticArmUpdate(14.0f));
+                    this.rightArm.zRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.zRot, (float)((float)java.lang.Math.PI - 1.8707964f * this.quadraticArmUpdate($$12) / this.quadraticArmUpdate(14.0f)));
+                } else if ($$12 >= 14.0f && $$12 < 22.0f) {
+                    float $$16 = ($$12 - 14.0f) / 8.0f;
+                    this.leftArm.xRot = this.rotlerpRad($$15, this.leftArm.xRot, 1.5707964f * $$16);
+                    this.rightArm.xRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.xRot, (float)(1.5707964f * $$16));
+                    this.leftArm.yRot = this.rotlerpRad($$15, this.leftArm.yRot, (float)java.lang.Math.PI);
+                    this.rightArm.yRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.yRot, (float)((float)java.lang.Math.PI));
+                    this.leftArm.zRot = this.rotlerpRad($$15, this.leftArm.zRot, 5.012389f - 1.8707964f * $$16);
+                    this.rightArm.zRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.zRot, (float)(1.2707963f + 1.8707964f * $$16));
+                } else if ($$12 >= 22.0f && $$12 < 26.0f) {
+                    float $$17 = ($$12 - 22.0f) / 4.0f;
+                    this.leftArm.xRot = this.rotlerpRad($$15, this.leftArm.xRot, 1.5707964f - 1.5707964f * $$17);
+                    this.rightArm.xRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.xRot, (float)(1.5707964f - 1.5707964f * $$17));
+                    this.leftArm.yRot = this.rotlerpRad($$15, this.leftArm.yRot, (float)java.lang.Math.PI);
+                    this.rightArm.yRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.yRot, (float)((float)java.lang.Math.PI));
+                    this.leftArm.zRot = this.rotlerpRad($$15, this.leftArm.zRot, (float)java.lang.Math.PI);
+                    this.rightArm.zRot = net.minecraft.util.Mth.lerp((float)$$14, (float)this.rightArm.zRot, (float)((float)java.lang.Math.PI));
                 }
             }
-            f2 = 0.3f;
-            float f7 = 0.33333334f;
-            this.leftLeg.xRot = net.minecraft.util.Mth.lerp((float)this.swimAmount, (float)this.leftLeg.xRot, (float)(0.3f * net.minecraft.util.Mth.cos((float)(limbSwing * 0.33333334f + (float)java.lang.Math.PI))));
-            this.rightLeg.xRot = net.minecraft.util.Mth.lerp((float)this.swimAmount, (float)this.rightLeg.xRot, (float)(0.3f * net.minecraft.util.Mth.cos((float)(limbSwing * 0.33333334f))));
+            float $$18 = 0.3f;
+            float $$19 = 0.33333334f;
+            this.leftLeg.xRot = net.minecraft.util.Mth.lerp((float)this.swimAmount, (float)this.leftLeg.xRot, (float)(0.3f * net.minecraft.util.Mth.cos((float)($$1 * 0.33333334f + (float)java.lang.Math.PI))));
+            this.rightLeg.xRot = net.minecraft.util.Mth.lerp((float)this.swimAmount, (float)this.rightLeg.xRot, (float)(0.3f * net.minecraft.util.Mth.cos((float)($$1 * 0.33333334f))));
         }
         this.hat.copyFrom(this.head);
     }
@@ -326,51 +327,51 @@
         $$3.zRot += net.minecraft.util.Mth.sin((float)(this.attackTime * (float)java.lang.Math.PI)) * -0.4f;
     }
 
-    public float rotlerpRad(float angle, float maxAngle, float mul) {
-        float f = (mul - maxAngle) % ((float)java.lang.Math.PI * 2);
-        if (f < (float)(-java.lang.Math.PI)) {
-            f += (float)java.lang.Math.PI * 2;
+    public float rotlerpRad(float $$0, float $$1, float $$2) {
+        float $$3 = ($$2 - $$1) % ((float)java.lang.Math.PI * 2);
+        if ($$3 < (float)(-java.lang.Math.PI)) {
+            $$3 += (float)java.lang.Math.PI * 2;
         }
-        if (f >= (float)java.lang.Math.PI) {
-            f -= (float)java.lang.Math.PI * 2;
+        if ($$3 >= (float)java.lang.Math.PI) {
+            $$3 -= (float)java.lang.Math.PI * 2;
         }
-        return maxAngle + angle * f;
+        return $$1 + $$0 * $$3;
     }
 
-    public float quadraticArmUpdate(float limbSwing) {
-        return -65.0f * limbSwing + limbSwing * limbSwing;
+    public float quadraticArmUpdate(float $$0) {
+        return -65.0f * $$0 + $$0 * $$0;
     }
 
-    public void copyPropertiesTo(net.minecraft.client.model.HumanoidModel<T> model) {
-        super.copyPropertiesTo(model);
-        model.leftArmPose = this.leftArmPose;
-        model.rightArmPose = this.rightArmPose;
-        model.crouching = this.crouching;
-        model.head.copyFrom(this.head);
-        model.hat.copyFrom(this.hat);
-        model.body.copyFrom(this.body);
-        model.rightArm.copyFrom(this.rightArm);
-        model.leftArm.copyFrom(this.leftArm);
-        model.rightLeg.copyFrom(this.rightLeg);
-        model.leftLeg.copyFrom(this.leftLeg);
+    public void copyPropertiesTo(net.minecraft.client.model.HumanoidModel<T> $$0) {
+        super.copyPropertiesTo($$0);
+        $$0.leftArmPose = this.leftArmPose;
+        $$0.rightArmPose = this.rightArmPose;
+        $$0.crouching = this.crouching;
+        $$0.head.copyFrom(this.head);
+        $$0.hat.copyFrom(this.hat);
+        $$0.body.copyFrom(this.body);
+        $$0.rightArm.copyFrom(this.rightArm);
+        $$0.leftArm.copyFrom(this.leftArm);
+        $$0.rightLeg.copyFrom(this.rightLeg);
+        $$0.leftLeg.copyFrom(this.leftLeg);
     }
 
-    public void setAllVisible(boolean visible) {
-        this.head.visible = visible;
-        this.hat.visible = visible;
-        this.body.visible = visible;
-        this.rightArm.visible = visible;
-        this.leftArm.visible = visible;
-        this.rightLeg.visible = visible;
-        this.leftLeg.visible = visible;
+    public void setAllVisible(boolean $$0) {
+        this.head.visible = $$0;
+        this.hat.visible = $$0;
+        this.body.visible = $$0;
+        this.rightArm.visible = $$0;
+        this.leftArm.visible = $$0;
+        this.rightLeg.visible = $$0;
+        this.leftLeg.visible = $$0;
     }
 
-    public void translateToHand(net.minecraft.world.entity.HumanoidArm side, com.mojang.blaze3d.vertex.PoseStack matrixStack) {
-        this.getArm(side).translateAndRotate(matrixStack);
+    public void translateToHand(net.minecraft.world.entity.HumanoidArm $$0, com.mojang.blaze3d.vertex.PoseStack $$1) {
+        this.getArm($$0).translateAndRotate($$1);
     }
 
-    public net.minecraft.client.model.geom.ModelPart getArm(net.minecraft.world.entity.HumanoidArm side) {
-        if (side == net.minecraft.world.entity.HumanoidArm.LEFT) {
+    public net.minecraft.client.model.geom.ModelPart getArm(net.minecraft.world.entity.HumanoidArm $$0) {
+        if ($$0 == net.minecraft.world.entity.HumanoidArm.LEFT) {
             return this.leftArm;
         }
         return this.rightArm;
@@ -380,9 +381,9 @@
         return this.head;
     }
 
-    public net.minecraft.world.entity.HumanoidArm getAttackArm(T entity) {
-        net.minecraft.world.entity.HumanoidArm humanoidArm = entity.getMainArm();
-        return ((net.minecraft.world.entity.LivingEntity)entity).swingingArm == net.minecraft.world.InteractionHand.MAIN_HAND ? humanoidArm : humanoidArm.getOpposite();
+    public net.minecraft.world.entity.HumanoidArm getAttackArm(T $$0) {
+        net.minecraft.world.entity.HumanoidArm $$1 = $$0.getMainArm();
+        return ((net.minecraft.world.entity.LivingEntity)$$0).swingingArm == net.minecraft.world.InteractionHand.MAIN_HAND ? $$1 : $$1.getOpposite();
     }
 }
 