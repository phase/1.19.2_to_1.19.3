--- net/minecraft/client/model/RabbitModel.java
+++ net/minecraft/client/model/RabbitModel.java
@@ -58,39 +58,39 @@
         return net.minecraft.client.model.geom.builders.LayerDefinition.create((net.minecraft.client.model.geom.builders.MeshDefinition)$$0, (int)64, (int)32);
     }
 
-    public void renderToBuffer(com.mojang.blaze3d.vertex.PoseStack matrixStack, com.mojang.blaze3d.vertex.VertexConsumer buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha) {
+    public void renderToBuffer(com.mojang.blaze3d.vertex.PoseStack $$0, com.mojang.blaze3d.vertex.VertexConsumer $$1, int $$2, int $$3, float $$4, float $$5, float $$6, float $$7) {
         if (this.young) {
-            float f = 1.5f;
-            matrixStack.pushPose();
-            matrixStack.scale(0.56666666f, 0.56666666f, 0.56666666f);
-            matrixStack.translate(0.0, 1.375, 0.125);
-            com.google.common.collect.ImmutableList.of((java.lang.Object)this.head, (java.lang.Object)this.leftEar, (java.lang.Object)this.rightEar, (java.lang.Object)this.nose).forEach($$8 -> $$8.render(matrixStack, buffer, packedLight, packedOverlay, red, green, blue, alpha));
-            matrixStack.popPose();
-            matrixStack.pushPose();
-            matrixStack.scale(0.4f, 0.4f, 0.4f);
-            matrixStack.translate(0.0, 2.25, 0.0);
-            com.google.common.collect.ImmutableList.of((java.lang.Object)this.leftRearFoot, (java.lang.Object)this.rightRearFoot, (java.lang.Object)this.leftHaunch, (java.lang.Object)this.rightHaunch, (java.lang.Object)this.body, (java.lang.Object)this.leftFrontLeg, (java.lang.Object)this.rightFrontLeg, (java.lang.Object)this.tail).forEach($$8 -> $$8.render(matrixStack, buffer, packedLight, packedOverlay, red, green, blue, alpha));
-            matrixStack.popPose();
+            float $$82 = 1.5f;
+            $$0.pushPose();
+            $$0.scale(0.56666666f, 0.56666666f, 0.56666666f);
+            $$0.translate(0.0, 1.375, 0.125);
+            com.google.common.collect.ImmutableList.of((java.lang.Object)this.head, (java.lang.Object)this.leftEar, (java.lang.Object)this.rightEar, (java.lang.Object)this.nose).forEach($$8 -> $$8.render($$0, $$1, $$2, $$3, $$4, $$5, $$6, $$7));
+            $$0.popPose();
+            $$0.pushPose();
+            $$0.scale(0.4f, 0.4f, 0.4f);
+            $$0.translate(0.0, 2.25, 0.0);
+            com.google.common.collect.ImmutableList.of((java.lang.Object)this.leftRearFoot, (java.lang.Object)this.rightRearFoot, (java.lang.Object)this.leftHaunch, (java.lang.Object)this.rightHaunch, (java.lang.Object)this.body, (java.lang.Object)this.leftFrontLeg, (java.lang.Object)this.rightFrontLeg, (java.lang.Object)this.tail).forEach($$8 -> $$8.render($$0, $$1, $$2, $$3, $$4, $$5, $$6, $$7));
+            $$0.popPose();
         } else {
-            matrixStack.pushPose();
-            matrixStack.scale(0.6f, 0.6f, 0.6f);
-            matrixStack.translate(0.0, 1.0, 0.0);
-            com.google.common.collect.ImmutableList.of((java.lang.Object)this.leftRearFoot, (java.lang.Object)this.rightRearFoot, (java.lang.Object)this.leftHaunch, (java.lang.Object)this.rightHaunch, (java.lang.Object)this.body, (java.lang.Object)this.leftFrontLeg, (java.lang.Object)this.rightFrontLeg, (java.lang.Object)this.head, (java.lang.Object)this.rightEar, (java.lang.Object)this.leftEar, (java.lang.Object)this.tail, (java.lang.Object)this.nose, (java.lang.Object[])new net.minecraft.client.model.geom.ModelPart[0]).forEach($$8 -> $$8.render(matrixStack, buffer, packedLight, packedOverlay, red, green, blue, alpha));
-            matrixStack.popPose();
+            $$0.pushPose();
+            $$0.scale(0.6f, 0.6f, 0.6f);
+            $$0.translate(0.0, 1.0, 0.0);
+            com.google.common.collect.ImmutableList.of((java.lang.Object)this.leftRearFoot, (java.lang.Object)this.rightRearFoot, (java.lang.Object)this.leftHaunch, (java.lang.Object)this.rightHaunch, (java.lang.Object)this.body, (java.lang.Object)this.leftFrontLeg, (java.lang.Object)this.rightFrontLeg, (java.lang.Object)this.head, (java.lang.Object)this.rightEar, (java.lang.Object)this.leftEar, (java.lang.Object)this.tail, (java.lang.Object)this.nose, (java.lang.Object[])new net.minecraft.client.model.geom.ModelPart[0]).forEach($$8 -> $$8.render($$0, $$1, $$2, $$3, $$4, $$5, $$6, $$7));
+            $$0.popPose();
         }
     }
 
-    public void setupAnim(T entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
-        float f = ageInTicks - (float)((net.minecraft.world.entity.animal.Rabbit)entity).tickCount;
-        this.nose.xRot = headPitch * ((float)java.lang.Math.PI / 180);
-        this.head.xRot = headPitch * ((float)java.lang.Math.PI / 180);
-        this.rightEar.xRot = headPitch * ((float)java.lang.Math.PI / 180);
-        this.leftEar.xRot = headPitch * ((float)java.lang.Math.PI / 180);
-        this.nose.yRot = netHeadYaw * ((float)java.lang.Math.PI / 180);
-        this.head.yRot = netHeadYaw * ((float)java.lang.Math.PI / 180);
+    public void setupAnim(T $$0, float $$1, float $$2, float $$3, float $$4, float $$5) {
+        float $$6 = $$3 - (float)((net.minecraft.world.entity.animal.Rabbit)$$0).tickCount;
+        this.nose.xRot = $$5 * ((float)java.lang.Math.PI / 180);
+        this.head.xRot = $$5 * ((float)java.lang.Math.PI / 180);
+        this.rightEar.xRot = $$5 * ((float)java.lang.Math.PI / 180);
+        this.leftEar.xRot = $$5 * ((float)java.lang.Math.PI / 180);
+        this.nose.yRot = $$4 * ((float)java.lang.Math.PI / 180);
+        this.head.yRot = $$4 * ((float)java.lang.Math.PI / 180);
         this.rightEar.yRot = this.nose.yRot - 0.2617994f;
         this.leftEar.yRot = this.nose.yRot + 0.2617994f;
-        this.jumpRotation = net.minecraft.util.Mth.sin((float)(entity.getJumpCompletion(f) * (float)java.lang.Math.PI));
+        this.jumpRotation = net.minecraft.util.Mth.sin((float)($$0.getJumpCompletion($$6) * (float)java.lang.Math.PI));
         this.leftHaunch.xRot = (this.jumpRotation * 50.0f - 21.0f) * ((float)java.lang.Math.PI / 180);
         this.rightHaunch.xRot = (this.jumpRotation * 50.0f - 21.0f) * ((float)java.lang.Math.PI / 180);
         this.leftRearFoot.xRot = this.jumpRotation * 50.0f * ((float)java.lang.Math.PI / 180);
@@ -99,9 +99,9 @@
         this.rightFrontLeg.xRot = (this.jumpRotation * -40.0f - 11.0f) * ((float)java.lang.Math.PI / 180);
     }
 
-    public void prepareMobModel(T entity, float limbSwing, float limbSwingAmount, float partialTick) {
-        super.prepareMobModel(entity, limbSwing, limbSwingAmount, partialTick);
-        this.jumpRotation = net.minecraft.util.Mth.sin((float)(entity.getJumpCompletion(partialTick) * (float)java.lang.Math.PI));
+    public void prepareMobModel(T $$0, float $$1, float $$2, float $$3) {
+        super.prepareMobModel($$0, $$1, $$2, $$3);
+        this.jumpRotation = net.minecraft.util.Mth.sin((float)($$0.getJumpCompletion($$3) * (float)java.lang.Math.PI));
     }
 }
 