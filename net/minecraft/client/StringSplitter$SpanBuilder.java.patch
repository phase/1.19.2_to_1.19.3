--- net/minecraft/client/StringSplitter$SpanBuilder.java
+++ net/minecraft/client/StringSplitter$SpanBuilder.java
@@ -1,53 +1,0 @@
-/*
- * Decompiled with CFR 0.151.
- */
-package net.minecraft.client;
-
-public class net.minecraft.client.StringSplitter$SpanBuilder
-implements net.minecraft.util.FormattedCharSink
- {
-    public java.util.function.Predicate<net.minecraft.network.chat.Style> predicate;
-    public float cursor;
-    public com.google.common.collect.ImmutableList$Builder<net.minecraft.client.StringSplitter$Span> spans;
-    public float spanStart;
-    public boolean buildingSpan;
-    public /* synthetic */ net.minecraft.client.StringSplitter this$0;
-
-    public net.minecraft.client.StringSplitter$SpanBuilder(net.minecraft.client.StringSplitter stringSplitter, java.util.function.Predicate<net.minecraft.network.chat.Style> $$0) {
-        this.this$0 = stringSplitter;
-        this.spans = com.google.common.collect.ImmutableList.builder();
-        this.predicate = $$0;
-    }
-
-    public boolean accept(int $$0, net.minecraft.network.chat.Style $$1, int $$2) {
-        boolean $$3 = this.predicate.test((java.lang.Object)$$1);
-        if (this.buildingSpan != $$3) {
-            if ($$3) {
-                this.startSpan();
-            } else {
-                this.endSpan();
-            }
-        }
-        this.cursor += this.this$0.widthProvider.getWidth($$2, $$1);
-        return true;
-    }
-
-    public void startSpan() {
-        this.buildingSpan = true;
-        this.spanStart = this.cursor;
-    }
-
-    public void endSpan() {
-        float $$0 = this.cursor;
-        this.spans.add((java.lang.Object)new net.minecraft.client.StringSplitter$Span(this.spanStart, $$0));
-        this.buildingSpan = false;
-    }
-
-    public java.util.List<net.minecraft.client.StringSplitter$Span> build() {
-        if (this.buildingSpan) {
-            this.endSpan();
-        }
-        return this.spans.build();
-    }
-}
-