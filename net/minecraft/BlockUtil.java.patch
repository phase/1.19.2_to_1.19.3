--- net/minecraft/BlockUtil.java
+++ net/minecraft/BlockUtil.java
@@ -8,93 +8,86 @@
     public net.minecraft.BlockUtil() {
     }
 
-    public static net.minecraft.BlockUtil$FoundRectangle getLargestRectangleAround(net.minecraft.core.BlockPos centerPos, net.minecraft.core.Direction$Axis axis1, int max1, net.minecraft.core.Direction$Axis axis2, int max2, java.util.function.Predicate<net.minecraft.core.BlockPos> posPredicate) {
-        net.minecraft.BlockUtil$IntBounds intBounds;
-        int n;
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = centerPos.mutable();
-        net.minecraft.core.Direction direction = net.minecraft.core.Direction.get((net.minecraft.core.Direction$AxisDirection)net.minecraft.core.Direction$AxisDirection.NEGATIVE, (net.minecraft.core.Direction$Axis)axis1);
-        net.minecraft.core.Direction direction2 = direction.getOpposite();
-        net.minecraft.core.Direction direction3 = net.minecraft.core.Direction.get((net.minecraft.core.Direction$AxisDirection)net.minecraft.core.Direction$AxisDirection.NEGATIVE, (net.minecraft.core.Direction$Axis)axis2);
-        net.minecraft.core.Direction direction4 = direction3.getOpposite();
-        int n2 = net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos), (net.minecraft.core.Direction)direction, (int)max1);
-        int n3 = net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos), (net.minecraft.core.Direction)direction2, (int)max1);
-        int n4 = n2;
-        net.minecraft.BlockUtil$IntBounds[] intBoundsArray = new net.minecraft.BlockUtil$IntBounds[n4 + 1 + n3];
-        intBoundsArray[n4] = new net.minecraft.BlockUtil$IntBounds(net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos), (net.minecraft.core.Direction)direction3, (int)max2), net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos), (net.minecraft.core.Direction)direction4, (int)max2));
-        int n5 = intBoundsArray[n4].min;
-        for (n = 1;
- n <= n2; ++n) {
-            intBounds = intBoundsArray[n4 - (n - 1)];
-            intBoundsArray[n4 - n] = new net.minecraft.BlockUtil$IntBounds(net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos).move(direction, n), (net.minecraft.core.Direction)direction3, (int)intBounds.min), net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos).move(direction, n), (net.minecraft.core.Direction)direction4, (int)intBounds.max));
+    public static net.minecraft.BlockUtil$FoundRectangle getLargestRectangleAround(net.minecraft.core.BlockPos $$0, net.minecraft.core.Direction$Axis $$1, int $$2, net.minecraft.core.Direction$Axis $$3, int $$4, java.util.function.Predicate<net.minecraft.core.BlockPos> $$5) {
+        net.minecraft.core.BlockPos$MutableBlockPos $$6 = $$0.mutable();
+        net.minecraft.core.Direction $$7 = net.minecraft.core.Direction.get((net.minecraft.core.Direction$AxisDirection)net.minecraft.core.Direction$AxisDirection.NEGATIVE, (net.minecraft.core.Direction$Axis)$$1);
+        net.minecraft.core.Direction $$8 = $$7.getOpposite();
+        net.minecraft.core.Direction $$9 = net.minecraft.core.Direction.get((net.minecraft.core.Direction$AxisDirection)net.minecraft.core.Direction$AxisDirection.NEGATIVE, (net.minecraft.core.Direction$Axis)$$3);
+        net.minecraft.core.Direction $$10 = $$9.getOpposite();
+        int $$11 = net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0), (net.minecraft.core.Direction)$$7, (int)$$2);
+        int $$12 = net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0), (net.minecraft.core.Direction)$$8, (int)$$2);
+        int $$13 = $$11;
+        net.minecraft.BlockUtil$IntBounds[] $$14 = new net.minecraft.BlockUtil$IntBounds[$$13 + 1 + $$12];
+        $$14[$$13] = new net.minecraft.BlockUtil$IntBounds(net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0), (net.minecraft.core.Direction)$$9, (int)$$4), net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0), (net.minecraft.core.Direction)$$10, (int)$$4));
+        int $$15 = $$14[$$13].min;
+        for (int $$16 = 1; $$16 <= $$11; ++$$16) {
+            net.minecraft.BlockUtil$IntBounds $$17 = $$14[$$13 - ($$16 - 1)];
+            $$14[$$13 - $$16] = new net.minecraft.BlockUtil$IntBounds(net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0).move($$7, $$16), (net.minecraft.core.Direction)$$9, (int)$$17.min), net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0).move($$7, $$16), (net.minecraft.core.Direction)$$10, (int)$$17.max));
         }
-        for (n = 1;
- n <= n3; ++n) {
-            intBounds = intBoundsArray[n4 + n - 1];
-            intBoundsArray[n4 + n] = new net.minecraft.BlockUtil$IntBounds(net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos).move(direction2, n), (net.minecraft.core.Direction)direction3, (int)intBounds.min), net.minecraft.BlockUtil.getLimit(posPredicate, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set((net.minecraft.core.Vec3i)centerPos).move(direction2, n), (net.minecraft.core.Direction)direction4, (int)intBounds.max));
+        for (int $$18 = 1; $$18 <= $$12; ++$$18) {
+            net.minecraft.BlockUtil$IntBounds $$19 = $$14[$$13 + $$18 - 1];
+            $$14[$$13 + $$18] = new net.minecraft.BlockUtil$IntBounds(net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0).move($$8, $$18), (net.minecraft.core.Direction)$$9, (int)$$19.min), net.minecraft.BlockUtil.getLimit($$5, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.set((net.minecraft.core.Vec3i)$$0).move($$8, $$18), (net.minecraft.core.Direction)$$10, (int)$$19.max));
         }
-        n = 0;
-        int n6 = 0;
-        int n7 = 0;
-        int n8 = 0;
-        int[] nArray = new int[intBoundsArray.length];
-        for (int i = n5; i >= 0; --i) {
-            int n9;
-            int n10;
-            net.minecraft.BlockUtil$IntBounds intBounds2;
-            for (int j = 0; j < intBoundsArray.length; ++j) {
-                intBounds2 = intBoundsArray[j];
-                n10 = n5 - intBounds2.min;
-                n9 = n5 + intBounds2.max;
-                nArray[j] = i >= n10 && i <= n9 ? n9 + 1 - i : 0;
+        int $$20 = 0;
+        int $$21 = 0;
+        int $$22 = 0;
+        int $$23 = 0;
+        int[] $$24 = new int[$$14.length];
+        for (int $$25 = $$15; $$25 >= 0; --$$25) {
+            for (int $$26 = 0; $$26 < $$14.length; ++$$26) {
+                net.minecraft.BlockUtil$IntBounds $$27 = $$14[$$26];
+                int $$28 = $$15 - $$27.min;
+                int $$29 = $$15 + $$27.max;
+                $$24[$$26] = $$25 >= $$28 && $$25 <= $$29 ? $$29 + 1 - $$25 : 0;
             }
-            com.mojang.datafixers.util.Pair pair = net.minecraft.BlockUtil.getMaxRectangleLocation((int[])nArray);
-            intBounds2 = (net.minecraft.BlockUtil$IntBounds)pair.getFirst();
-            n10 = 1 + intBounds2.max - intBounds2.min;
-            n9 = (java.lang.Integer)pair.getSecond();
-            if (n10 * n9 <= n7 * n8) continue;
-            n = intBounds2.min;
-            n6 = i;
-            n7 = n10;
-            n8 = n9;
+            com.mojang.datafixers.util.Pair $$30 = net.minecraft.BlockUtil.getMaxRectangleLocation((int[])$$24);
+            net.minecraft.BlockUtil$IntBounds $$31 = (net.minecraft.BlockUtil$IntBounds)$$30.getFirst();
+            int $$32 = 1 + $$31.max - $$31.min;
+            int $$33 = (java.lang.Integer)$$30.getSecond();
+            if ($$32 * $$33 <= $$22 * $$23) continue;
+            $$20 = $$31.min;
+            $$21 = $$25;
+            $$22 = $$32;
+            $$23 = $$33;
         }
-        return new net.minecraft.BlockUtil$FoundRectangle(centerPos.relative(axis1, n - n4).relative(axis2, n6 - n5), n7, n8);
+        return new net.minecraft.BlockUtil$FoundRectangle($$0.relative($$1, $$20 - $$13).relative($$3, $$21 - $$15), $$22, $$23);
     }
 
-    public static int getLimit(java.util.function.Predicate<net.minecraft.core.BlockPos> posPredicate, net.minecraft.core.BlockPos$MutableBlockPos centerPos, net.minecraft.core.Direction direction, int max) {
-        int n;
-        for (n = 0;
- n < max && posPredicate.test((java.lang.Object)centerPos.move(direction)); ++n) {
+    public static int getLimit(java.util.function.Predicate<net.minecraft.core.BlockPos> $$0, net.minecraft.core.BlockPos$MutableBlockPos $$1, net.minecraft.core.Direction $$2, int $$3) {
+        int $$4;
+        for ($$4 = 0;
+ $$4 < $$3 && $$0.test((java.lang.Object)$$1.move($$2)); ++$$4) {
         }
-        return n;
+        return $$4;
     }
 
     @com.google.common.annotations.VisibleForTesting
-    public static com.mojang.datafixers.util.Pair<net.minecraft.BlockUtil$IntBounds, java.lang.Integer> getMaxRectangleLocation(int[] heights) {
-        int n = 0;
-        int n2 = 0;
-        int n3 = 0;
-        it.unimi.dsi.fastutil.ints.IntArrayList intArrayList = new it.unimi.dsi.fastutil.ints.IntArrayList();
-        intArrayList.push(0);
-        for (int i = 1; i <= heights.length; ++i) {
-            int n4;
-            int n5 = n4 = i == heights.length ? 0 : heights[i];
-            while (!intArrayList.isEmpty()) {
-                int n6 = heights[intArrayList.topInt()];
-                if (n4 >= n6) {
-                    intArrayList.push(i);
+    public static com.mojang.datafixers.util.Pair<net.minecraft.BlockUtil$IntBounds, java.lang.Integer> getMaxRectangleLocation(int[] $$0) {
+        int $$1 = 0;
+        int $$2 = 0;
+        int $$3 = 0;
+        it.unimi.dsi.fastutil.ints.IntArrayList $$4 = new it.unimi.dsi.fastutil.ints.IntArrayList();
+        $$4.push(0);
+        for (int $$5 = 1; $$5 <= $$0.length; ++$$5) {
+            int $$6;
+            int n = $$6 = $$5 == $$0.length ? 0 : $$0[$$5];
+            while (!$$4.isEmpty()) {
+                int $$7 = $$0[$$4.topInt()];
+                if ($$6 >= $$7) {
+                    $$4.push($$5);
                     break;
                 }
-                intArrayList.popInt();
-                int n7 = intArrayList.isEmpty() ? 0 : intArrayList.topInt() + 1;
-                if (n6 * (i - n7) <= n3 * (n2 - n)) continue;
-                n2 = i;
-                n = n7;
-                n3 = n6;
+                $$4.popInt();
+                int $$8 = $$4.isEmpty() ? 0 : $$4.topInt() + 1;
+                if ($$7 * ($$5 - $$8) <= $$3 * ($$2 - $$1)) continue;
+                $$2 = $$5;
+                $$1 = $$8;
+                $$3 = $$7;
             }
-            if (!intArrayList.isEmpty()) continue;
-            intArrayList.push(i);
+            if (!$$4.isEmpty()) continue;
+            $$4.push($$5);
         }
-        return new com.mojang.datafixers.util.Pair((java.lang.Object)new net.minecraft.BlockUtil$IntBounds(n, n2 - 1), (java.lang.Object)n3);
+        return new com.mojang.datafixers.util.Pair((java.lang.Object)new net.minecraft.BlockUtil$IntBounds($$1, $$2 - 1), (java.lang.Object)$$3);
     }
 
     public static java.util.Optional<net.minecraft.core.BlockPos> getTopConnectedBlock(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.Block $$2, net.minecraft.core.Direction $$3, net.minecraft.world.level.block.Block $$4) {