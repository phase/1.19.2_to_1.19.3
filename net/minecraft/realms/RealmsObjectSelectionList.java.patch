--- net/minecraft/realms/RealmsObjectSelectionList.java
+++ net/minecraft/realms/RealmsObjectSelectionList.java
@@ -6,20 +6,20 @@
 public abstract class net.minecraft.realms.RealmsObjectSelectionList<E extends net.minecraft.client.gui.components.ObjectSelectionList$Entry<E>>
 extends net.minecraft.client.gui.components.ObjectSelectionList<E>
  {
-    public net.minecraft.realms.RealmsObjectSelectionList(int width, int height, int y0, int y1, int itemHeight) {
-        super(net.minecraft.client.Minecraft.getInstance(), width, height, y0, y1, itemHeight);
+    public net.minecraft.realms.RealmsObjectSelectionList(int $$0, int $$1, int $$2, int $$3, int $$4) {
+        super(net.minecraft.client.Minecraft.getInstance(), $$0, $$1, $$2, $$3, $$4);
     }
 
-    public void setSelectedItem(int index) {
-        if (index == -1) {
+    public void setSelectedItem(int $$0) {
+        if ($$0 == -1) {
             this.setSelected(null);
         } else if (super.getItemCount() != 0) {
-            this.setSelected((net.minecraft.client.gui.components.AbstractSelectionList$Entry)((net.minecraft.client.gui.components.ObjectSelectionList$Entry)this.getEntry(index)));
+            this.setSelected((net.minecraft.client.gui.components.AbstractSelectionList$Entry)((net.minecraft.client.gui.components.ObjectSelectionList$Entry)this.getEntry($$0)));
         }
     }
 
-    public void selectItem(int index) {
-        this.setSelectedItem(index);
+    public void selectItem(int $$0) {
+        this.setSelectedItem($$0);
     }
 
     public void itemClicked(int $$0, int $$1, double $$2, double $$3, int $$4) {
@@ -37,24 +37,24 @@
         return (int)((double)this.width * 0.6);
     }
 
-    public void replaceEntries(java.util.Collection<E> entries) {
-        super.replaceEntries(entries);
+    public void replaceEntries(java.util.Collection<E> $$0) {
+        super.replaceEntries($$0);
     }
 
     public int getItemCount() {
         return super.getItemCount();
     }
 
-    public int getRowTop(int index) {
-        return super.getRowTop(index);
+    public int getRowTop(int $$0) {
+        return super.getRowTop($$0);
     }
 
     public int getRowLeft() {
         return super.getRowLeft();
     }
 
-    public int addEntry(E entry) {
-        return super.addEntry(entry);
+    public int addEntry(E $$0) {
+        return super.addEntry($$0);
     }
 
     public void clear() {