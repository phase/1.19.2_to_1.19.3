--- net/minecraft/ChatFormatting.java
+++ net/minecraft/ChatFormatting.java
@@ -50,26 +50,26 @@
         return (net.minecraft.ChatFormatting)java.lang.Enum.valueOf(net.minecraft.ChatFormatting.class, (java.lang.String)$$0);
     }
 
-    public static java.lang.String cleanName(java.lang.String string) {
-        return string.toLowerCase(java.util.Locale.ROOT).replaceAll("[^a-z]", "");
+    public static java.lang.String cleanName(java.lang.String $$0) {
+        return $$0.toLowerCase(java.util.Locale.ROOT).replaceAll("[^a-z]", "");
     }
 
-    public net.minecraft.ChatFormatting(java.lang.String name, char code, int id, java.lang.Integer color) {
-        this(string, n, name, code, false, id, color);
+    public net.minecraft.ChatFormatting(java.lang.String $$0, char $$1, int $$2, java.lang.Integer $$3) {
+        this(string, n, $$0, $$1, false, $$2, $$3);
     }
 
-    public net.minecraft.ChatFormatting(java.lang.String name, char code, boolean isFormat) {
-        this(string, n, name, code, isFormat, -1, null);
+    public net.minecraft.ChatFormatting(java.lang.String $$0, char $$1, boolean $$2) {
+        this(string, n, $$0, $$1, $$2, -1, null);
     }
 
-    public net.minecraft.ChatFormatting(@javax.annotation.Nullable java.lang.String name, char code, boolean isFormat, int id, java.lang.Integer color) {
+    public net.minecraft.ChatFormatting(@javax.annotation.Nullable java.lang.String $$0, char $$1, boolean $$2, int $$3, java.lang.Integer $$4) {
         super(string, n);
-        this.name = name;
-        this.code = code;
-        this.isFormat = isFormat;
-        this.id = id;
-        this.color = color;
-        this.toString = "ยง" + code;
+        this.name = $$0;
+        this.code = $$1;
+        this.isFormat = $$2;
+        this.id = $$3;
+        this.color = $$4;
+        this.toString = "ยง" + $$1;
     }
 
     public char getChar() {
@@ -102,59 +102,59 @@
     }
 
     @javax.annotation.Nullable
-    public static java.lang.String stripFormatting(@javax.annotation.Nullable java.lang.String text) {
-        return text == null ? null : STRIP_FORMATTING_PATTERN.matcher((java.lang.CharSequence)text).replaceAll("");
+    public static java.lang.String stripFormatting(@javax.annotation.Nullable java.lang.String $$0) {
+        return $$0 == null ? null : STRIP_FORMATTING_PATTERN.matcher((java.lang.CharSequence)$$0).replaceAll("");
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.ChatFormatting getByName(@javax.annotation.Nullable java.lang.String friendlyName) {
-        if (friendlyName == null) {
+    public static net.minecraft.ChatFormatting getByName(@javax.annotation.Nullable java.lang.String $$0) {
+        if ($$0 == null) {
             return null;
         }
-        return (net.minecraft.ChatFormatting)FORMATTING_BY_NAME.get((java.lang.Object)net.minecraft.ChatFormatting.cleanName((java.lang.String)friendlyName));
+        return (net.minecraft.ChatFormatting)FORMATTING_BY_NAME.get((java.lang.Object)net.minecraft.ChatFormatting.cleanName((java.lang.String)$$0));
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.ChatFormatting getById(int index) {
-        if (index < 0) {
+    public static net.minecraft.ChatFormatting getById(int $$0) {
+        if ($$0 < 0) {
             return RESET;
         }
-        for (net.minecraft.ChatFormatting chatFormatting : net.minecraft.ChatFormatting.values()) {
-            if (chatFormatting.getId() != index) continue;
-            return chatFormatting;
+        for (net.minecraft.ChatFormatting $$1 : net.minecraft.ChatFormatting.values()) {
+            if ($$1.getId() != $$0) continue;
+            return $$1;
         }
         return null;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.ChatFormatting getByCode(char formattingCode) {
-        char c = java.lang.Character.toString((char)formattingCode).toLowerCase(java.util.Locale.ROOT).charAt(0);
-        for (net.minecraft.ChatFormatting chatFormatting : net.minecraft.ChatFormatting.values()) {
-            if (chatFormatting.code != c) continue;
-            return chatFormatting;
+    public static net.minecraft.ChatFormatting getByCode(char $$0) {
+        char $$1 = java.lang.Character.toString((char)$$0).toLowerCase(java.util.Locale.ROOT).charAt(0);
+        for (net.minecraft.ChatFormatting $$2 : net.minecraft.ChatFormatting.values()) {
+            if ($$2.code != $$1) continue;
+            return $$2;
         }
         return null;
     }
 
-    public static java.util.Collection<java.lang.String> getNames(boolean getColor, boolean getFancyStyling) {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        for (net.minecraft.ChatFormatting chatFormatting : net.minecraft.ChatFormatting.values()) {
-            if (chatFormatting.isColor() && !getColor || chatFormatting.isFormat() && !getFancyStyling) continue;
-            arrayList.add((java.lang.Object)chatFormatting.getName());
+    public static java.util.Collection<java.lang.String> getNames(boolean $$0, boolean $$1) {
+        java.util.ArrayList $$2 = com.google.common.collect.Lists.newArrayList();
+        for (net.minecraft.ChatFormatting $$3 : net.minecraft.ChatFormatting.values()) {
+            if ($$3.isColor() && !$$0 || $$3.isFormat() && !$$1) continue;
+            $$2.add((java.lang.Object)$$3.getName());
         }
-        return arrayList;
+        return $$2;
     }
 
     public java.lang.String getSerializedName() {
         return this.getName();
     }
 
-    public static /* synthetic */ net.minecraft.ChatFormatting lambda$static$1(net.minecraft.ChatFormatting chatFormatter) {
-        return chatFormatter;
+    public static /* synthetic */ net.minecraft.ChatFormatting lambda$static$1(net.minecraft.ChatFormatting $$0) {
+        return $$0;
     }
 
-    public static /* synthetic */ java.lang.String lambda$static$0(net.minecraft.ChatFormatting formatting) {
-        return net.minecraft.ChatFormatting.cleanName((java.lang.String)formatting.name);
+    public static /* synthetic */ java.lang.String lambda$static$0(net.minecraft.ChatFormatting $$0) {
+        return net.minecraft.ChatFormatting.cleanName((java.lang.String)$$0.name);
     }
 
     public static /* synthetic */ net.minecraft.ChatFormatting[] $values() {
@@ -186,7 +186,7 @@
         RESET = new net.minecraft.ChatFormatting("RESET", 21, "RESET", 'r', -1, null);
         $VALUES = net.minecraft.ChatFormatting.$values();
         CODEC = net.minecraft.util.StringRepresentable.fromEnum(net.minecraft.ChatFormatting::values);
-        FORMATTING_BY_NAME = (java.util.Map)java.util.Arrays.stream((java.lang.Object[])net.minecraft.ChatFormatting.values()).collect(java.util.stream.Collectors.toMap(formatting -> net.minecraft.ChatFormatting.cleanName((java.lang.String)formatting.name), chatFormatter -> chatFormatter));
+        FORMATTING_BY_NAME = (java.util.Map)java.util.Arrays.stream((java.lang.Object[])net.minecraft.ChatFormatting.values()).collect(java.util.stream.Collectors.toMap($$0 -> net.minecraft.ChatFormatting.cleanName((java.lang.String)$$0.name), $$0 -> $$0));
         STRIP_FORMATTING_PATTERN = java.util.regex.Pattern.compile((java.lang.String)"(?i)ยง[0-9A-FK-OR]");
     }
 }