--- net/minecraft/stats/RecipeBookSettings.java
+++ net/minecraft/stats/RecipeBookSettings.java
@@ -8,68 +8,68 @@
     public static java.util.Map<net.minecraft.world.inventory.RecipeBookType, com.mojang.datafixers.util.Pair<java.lang.String, java.lang.String>> TAG_FIELDS;
     public java.util.Map<net.minecraft.world.inventory.RecipeBookType, net.minecraft.stats.RecipeBookSettings$TypeSettings> states;
 
-    public net.minecraft.stats.RecipeBookSettings(java.util.Map<net.minecraft.world.inventory.RecipeBookType, net.minecraft.stats.RecipeBookSettings$TypeSettings> states) {
-        this.states = states;
+    public net.minecraft.stats.RecipeBookSettings(java.util.Map<net.minecraft.world.inventory.RecipeBookType, net.minecraft.stats.RecipeBookSettings$TypeSettings> $$0) {
+        this.states = $$0;
     }
 
     public net.minecraft.stats.RecipeBookSettings() {
-        this((java.util.Map)net.minecraft.Util.make((java.lang.Object)com.google.common.collect.Maps.newEnumMap(net.minecraft.world.inventory.RecipeBookType.class), type -> {
-            for (net.minecraft.world.inventory.RecipeBookType recipeBookType : net.minecraft.world.inventory.RecipeBookType.values()) {
-                type.put((java.lang.Enum)recipeBookType, (java.lang.Object)new net.minecraft.stats.RecipeBookSettings$TypeSettings(false, false));
+        this((java.util.Map)net.minecraft.Util.make((java.lang.Object)com.google.common.collect.Maps.newEnumMap(net.minecraft.world.inventory.RecipeBookType.class), $$0 -> {
+            for (net.minecraft.world.inventory.RecipeBookType $$1 : net.minecraft.world.inventory.RecipeBookType.values()) {
+                $$0.put((java.lang.Enum)$$1, (java.lang.Object)new net.minecraft.stats.RecipeBookSettings$TypeSettings(false, false));
             }
         }));
     }
 
-    public boolean isOpen(net.minecraft.world.inventory.RecipeBookType type) {
-        return ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)type)).open;
+    public boolean isOpen(net.minecraft.world.inventory.RecipeBookType $$0) {
+        return ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)$$0)).open;
     }
 
-    public void setOpen(net.minecraft.world.inventory.RecipeBookType type, boolean isVisible) {
-        ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)type)).open = isVisible;
+    public void setOpen(net.minecraft.world.inventory.RecipeBookType $$0, boolean $$1) {
+        ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)$$0)).open = $$1;
     }
 
-    public boolean isFiltering(net.minecraft.world.inventory.RecipeBookType type) {
-        return ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)type)).filtering;
+    public boolean isFiltering(net.minecraft.world.inventory.RecipeBookType $$0) {
+        return ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)$$0)).filtering;
     }
 
-    public void setFiltering(net.minecraft.world.inventory.RecipeBookType type, boolean shouldFilterCraftable) {
-        ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)type)).filtering = shouldFilterCraftable;
+    public void setFiltering(net.minecraft.world.inventory.RecipeBookType $$0, boolean $$1) {
+        ((net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)$$0)).filtering = $$1;
     }
 
-    public static net.minecraft.stats.RecipeBookSettings read(net.minecraft.network.FriendlyByteBuf buffer) {
-        java.util.EnumMap enumMap = com.google.common.collect.Maps.newEnumMap(net.minecraft.world.inventory.RecipeBookType.class);
-        for (net.minecraft.world.inventory.RecipeBookType recipeBookType : net.minecraft.world.inventory.RecipeBookType.values()) {
-            boolean bl = buffer.readBoolean();
-            boolean bl2 = buffer.readBoolean();
-            enumMap.put((java.lang.Object)recipeBookType, (java.lang.Object)new net.minecraft.stats.RecipeBookSettings$TypeSettings(bl, bl2));
+    public static net.minecraft.stats.RecipeBookSettings read(net.minecraft.network.FriendlyByteBuf $$0) {
+        java.util.EnumMap $$1 = com.google.common.collect.Maps.newEnumMap(net.minecraft.world.inventory.RecipeBookType.class);
+        for (net.minecraft.world.inventory.RecipeBookType $$2 : net.minecraft.world.inventory.RecipeBookType.values()) {
+            boolean $$3 = $$0.readBoolean();
+            boolean $$4 = $$0.readBoolean();
+            $$1.put((java.lang.Object)$$2, (java.lang.Object)new net.minecraft.stats.RecipeBookSettings$TypeSettings($$3, $$4));
         }
-        return new net.minecraft.stats.RecipeBookSettings((java.util.Map)enumMap);
+        return new net.minecraft.stats.RecipeBookSettings((java.util.Map)$$1);
     }
 
-    public void write(net.minecraft.network.FriendlyByteBuf buffer) {
-        for (net.minecraft.world.inventory.RecipeBookType recipeBookType : net.minecraft.world.inventory.RecipeBookType.values()) {
-            net.minecraft.stats.RecipeBookSettings$TypeSettings typeSettings = (net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)recipeBookType);
-            if (typeSettings == null) {
-                buffer.writeBoolean(false);
-                buffer.writeBoolean(false);
+    public void write(net.minecraft.network.FriendlyByteBuf $$0) {
+        for (net.minecraft.world.inventory.RecipeBookType $$1 : net.minecraft.world.inventory.RecipeBookType.values()) {
+            net.minecraft.stats.RecipeBookSettings$TypeSettings $$2 = (net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get((java.lang.Object)$$1);
+            if ($$2 == null) {
+                $$0.writeBoolean(false);
+                $$0.writeBoolean(false);
                 continue;
             }
-            buffer.writeBoolean(typeSettings.open);
-            buffer.writeBoolean(typeSettings.filtering);
+            $$0.writeBoolean($$2.open);
+            $$0.writeBoolean($$2.filtering);
         }
     }
 
-    public static net.minecraft.stats.RecipeBookSettings read(net.minecraft.nbt.CompoundTag tag) {
-        java.util.EnumMap enumMap = com.google.common.collect.Maps.newEnumMap(net.minecraft.world.inventory.RecipeBookType.class);
-        TAG_FIELDS.forEach((arg_0, arg_1) -> net.minecraft.stats.RecipeBookSettings.lambda$read$1(tag, (java.util.Map)enumMap, arg_0, arg_1));
-        return new net.minecraft.stats.RecipeBookSettings((java.util.Map)enumMap);
+    public static net.minecraft.stats.RecipeBookSettings read(net.minecraft.nbt.CompoundTag $$0) {
+        java.util.EnumMap $$1 = com.google.common.collect.Maps.newEnumMap(net.minecraft.world.inventory.RecipeBookType.class);
+        TAG_FIELDS.forEach((arg_0, arg_1) -> net.minecraft.stats.RecipeBookSettings.lambda$read$1($$0, (java.util.Map)$$1, arg_0, arg_1));
+        return new net.minecraft.stats.RecipeBookSettings((java.util.Map)$$1);
     }
 
-    public void write(net.minecraft.nbt.CompoundTag tag) {
+    public void write(net.minecraft.nbt.CompoundTag $$0) {
         TAG_FIELDS.forEach(($$1, $$2) -> {
             net.minecraft.stats.RecipeBookSettings$TypeSettings $$3 = (net.minecraft.stats.RecipeBookSettings$TypeSettings)this.states.get($$1);
-            tag.putBoolean((java.lang.String)$$2.getFirst(), $$3.open);
-            tag.putBoolean((java.lang.String)$$2.getSecond(), $$3.filtering);
+            $$0.putBoolean((java.lang.String)$$2.getFirst(), $$3.open);
+            $$0.putBoolean((java.lang.String)$$2.getSecond(), $$3.filtering);
         });
     }
 