--- net/minecraft/stats/RecipeBook.java
+++ net/minecraft/stats/RecipeBook.java
@@ -15,91 +15,91 @@
         this.bookSettings = new net.minecraft.stats.RecipeBookSettings();
     }
 
-    public void copyOverData(net.minecraft.stats.RecipeBook that) {
+    public void copyOverData(net.minecraft.stats.RecipeBook $$0) {
         this.known.clear();
         this.highlight.clear();
-        this.bookSettings.replaceFrom(that.bookSettings);
-        this.known.addAll((java.util.Collection)that.known);
-        this.highlight.addAll((java.util.Collection)that.highlight);
+        this.bookSettings.replaceFrom($$0.bookSettings);
+        this.known.addAll((java.util.Collection)$$0.known);
+        this.highlight.addAll((java.util.Collection)$$0.highlight);
     }
 
-    public void add(net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        if (!recipe.isSpecial()) {
-            this.add(recipe.getId());
+    public void add(net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        if (!$$0.isSpecial()) {
+            this.add($$0.getId());
         }
     }
 
-    public void add(net.minecraft.resources.ResourceLocation resourceLocation) {
-        this.known.add((java.lang.Object)resourceLocation);
+    public void add(net.minecraft.resources.ResourceLocation $$0) {
+        this.known.add((java.lang.Object)$$0);
     }
 
-    public boolean contains(@javax.annotation.Nullable net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        if (recipe == null) {
+    public boolean contains(@javax.annotation.Nullable net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        if ($$0 == null) {
             return false;
         }
-        return this.known.contains((java.lang.Object)recipe.getId());
+        return this.known.contains((java.lang.Object)$$0.getId());
     }
 
-    public boolean contains(net.minecraft.resources.ResourceLocation id) {
-        return this.known.contains((java.lang.Object)id);
+    public boolean contains(net.minecraft.resources.ResourceLocation $$0) {
+        return this.known.contains((java.lang.Object)$$0);
     }
 
-    public void remove(net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        this.remove(recipe.getId());
+    public void remove(net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        this.remove($$0.getId());
     }
 
-    public void remove(net.minecraft.resources.ResourceLocation resourceLocation) {
-        this.known.remove((java.lang.Object)resourceLocation);
-        this.highlight.remove((java.lang.Object)resourceLocation);
+    public void remove(net.minecraft.resources.ResourceLocation $$0) {
+        this.known.remove((java.lang.Object)$$0);
+        this.highlight.remove((java.lang.Object)$$0);
     }
 
-    public boolean willHighlight(net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        return this.highlight.contains((java.lang.Object)recipe.getId());
+    public boolean willHighlight(net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        return this.highlight.contains((java.lang.Object)$$0.getId());
     }
 
-    public void removeHighlight(net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        this.highlight.remove((java.lang.Object)recipe.getId());
+    public void removeHighlight(net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        this.highlight.remove((java.lang.Object)$$0.getId());
     }
 
-    public void addHighlight(net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        this.addHighlight(recipe.getId());
+    public void addHighlight(net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        this.addHighlight($$0.getId());
     }
 
-    public void addHighlight(net.minecraft.resources.ResourceLocation resourceLocation) {
-        this.highlight.add((java.lang.Object)resourceLocation);
+    public void addHighlight(net.minecraft.resources.ResourceLocation $$0) {
+        this.highlight.add((java.lang.Object)$$0);
     }
 
-    public boolean isOpen(net.minecraft.world.inventory.RecipeBookType type) {
-        return this.bookSettings.isOpen(type);
+    public boolean isOpen(net.minecraft.world.inventory.RecipeBookType $$0) {
+        return this.bookSettings.isOpen($$0);
     }
 
-    public void setOpen(net.minecraft.world.inventory.RecipeBookType type, boolean isVisible) {
-        this.bookSettings.setOpen(type, isVisible);
+    public void setOpen(net.minecraft.world.inventory.RecipeBookType $$0, boolean $$1) {
+        this.bookSettings.setOpen($$0, $$1);
     }
 
-    public boolean isFiltering(net.minecraft.world.inventory.RecipeBookMenu<?> menu) {
-        return this.isFiltering(menu.getRecipeBookType());
+    public boolean isFiltering(net.minecraft.world.inventory.RecipeBookMenu<?> $$0) {
+        return this.isFiltering($$0.getRecipeBookType());
     }
 
-    public boolean isFiltering(net.minecraft.world.inventory.RecipeBookType type) {
-        return this.bookSettings.isFiltering(type);
+    public boolean isFiltering(net.minecraft.world.inventory.RecipeBookType $$0) {
+        return this.bookSettings.isFiltering($$0);
     }
 
-    public void setFiltering(net.minecraft.world.inventory.RecipeBookType type, boolean shouldFilterCraftable) {
-        this.bookSettings.setFiltering(type, shouldFilterCraftable);
+    public void setFiltering(net.minecraft.world.inventory.RecipeBookType $$0, boolean $$1) {
+        this.bookSettings.setFiltering($$0, $$1);
     }
 
-    public void setBookSettings(net.minecraft.stats.RecipeBookSettings bookSettings) {
-        this.bookSettings.replaceFrom(bookSettings);
+    public void setBookSettings(net.minecraft.stats.RecipeBookSettings $$0) {
+        this.bookSettings.replaceFrom($$0);
     }
 
     public net.minecraft.stats.RecipeBookSettings getBookSettings() {
         return this.bookSettings.copy();
     }
 
-    public void setBookSetting(net.minecraft.world.inventory.RecipeBookType type, boolean isVisible, boolean shouldFilterCraftable) {
-        this.bookSettings.setOpen(type, isVisible);
-        this.bookSettings.setFiltering(type, shouldFilterCraftable);
+    public void setBookSetting(net.minecraft.world.inventory.RecipeBookType $$0, boolean $$1, boolean $$2) {
+        this.bookSettings.setOpen($$0, $$1);
+        this.bookSettings.setFiltering($$0, $$2);
     }
 }
 