--- net/minecraft/server/packs/linkfs/LinkFileSystem$Builder.java
+++ net/minecraft/server/packs/linkfs/LinkFileSystem$Builder.java
@@ -1,0 +1,35 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.server.packs.linkfs;
+
+public class net.minecraft.server.packs.linkfs.LinkFileSystem$Builder
+ {
+    public net.minecraft.server.packs.linkfs.LinkFileSystem$DirectoryEntry root;
+
+    public net.minecraft.server.packs.linkfs.LinkFileSystem$Builder() {
+        this.root = new net.minecraft.server.packs.linkfs.LinkFileSystem$DirectoryEntry();
+    }
+
+    public net.minecraft.server.packs.linkfs.LinkFileSystem$Builder put(java.util.List<java.lang.String> $$02, java.lang.String $$1, java.nio.file.Path $$2) {
+        net.minecraft.server.packs.linkfs.LinkFileSystem$DirectoryEntry $$3 = this.root;
+        for (java.lang.String $$4 : $$02) {
+            $$3 = (net.minecraft.server.packs.linkfs.LinkFileSystem$DirectoryEntry)$$3.children.computeIfAbsent((java.lang.Object)$$4, $$0 -> new net.minecraft.server.packs.linkfs.LinkFileSystem$DirectoryEntry());
+        }
+        $$3.files.put((java.lang.Object)$$1, (java.lang.Object)$$2);
+        return this;
+    }
+
+    public net.minecraft.server.packs.linkfs.LinkFileSystem$Builder put(java.util.List<java.lang.String> $$0, java.nio.file.Path $$1) {
+        if ($$0.isEmpty()) {
+            throw new java.lang.IllegalArgumentException("Path can't be empty");
+        }
+        int $$2 = $$0.size() - 1;
+        return this.put($$0.subList(0, $$2), (java.lang.String)$$0.get($$2), $$1);
+    }
+
+    public java.nio.file.FileSystem build(java.lang.String $$0) {
+        return new net.minecraft.server.packs.linkfs.LinkFileSystem($$0, this.root);
+    }
+}
+