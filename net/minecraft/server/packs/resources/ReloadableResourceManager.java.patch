--- net/minecraft/server/packs/resources/ReloadableResourceManager.java
+++ net/minecraft/server/packs/resources/ReloadableResourceManager.java
@@ -22,12 +22,12 @@
         this.resources.close();
     }
 
-    public void registerReloadListener(net.minecraft.server.packs.resources.PreparableReloadListener listener) {
-        this.listeners.add((java.lang.Object)listener);
+    public void registerReloadListener(net.minecraft.server.packs.resources.PreparableReloadListener $$0) {
+        this.listeners.add((java.lang.Object)$$0);
     }
 
     public net.minecraft.server.packs.resources.ReloadInstance createReload(java.util.concurrent.Executor $$0, java.util.concurrent.Executor $$1, java.util.concurrent.CompletableFuture<net.minecraft.util.Unit> $$2, java.util.List<net.minecraft.server.packs.PackResources> $$3) {
-        LOGGER.info("Reloading ResourceManager: {}", com.mojang.logging.LogUtils.defer(() -> $$3.stream().map(net.minecraft.server.packs.PackResources::getName).collect(java.util.stream.Collectors.joining((java.lang.CharSequence)", "))));
+        LOGGER.info("Reloading ResourceManager: {}", com.mojang.logging.LogUtils.defer(() -> $$3.stream().map(net.minecraft.server.packs.PackResources::packId).collect(java.util.stream.Collectors.joining((java.lang.CharSequence)", "))));
         this.resources.close();
         this.resources = new net.minecraft.server.packs.resources.MultiPackResourceManager(this.type, $$3);
         return net.minecraft.server.packs.resources.SimpleReloadInstance.create((net.minecraft.server.packs.resources.ResourceManager)this.resources, (java.util.List)this.listeners, (java.util.concurrent.Executor)$$0, (java.util.concurrent.Executor)$$1, $$2, (boolean)LOGGER.isDebugEnabled());