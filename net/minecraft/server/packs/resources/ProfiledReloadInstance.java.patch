--- net/minecraft/server/packs/resources/ProfiledReloadInstance.java
+++ net/minecraft/server/packs/resources/ProfiledReloadInstance.java
@@ -36,14 +36,14 @@
 
     public java.util.List<net.minecraft.server.packs.resources.ProfiledReloadInstance$State> finish(java.util.List<net.minecraft.server.packs.resources.ProfiledReloadInstance$State> $$0) {
         this.total.stop();
-        int $$1 = 0;
+        long $$1 = 0L;
         LOGGER.info("Resource reload finished after {} ms", (java.lang.Object)this.total.elapsed(java.util.concurrent.TimeUnit.MILLISECONDS));
         for (net.minecraft.server.packs.resources.ProfiledReloadInstance$State $$2 : $$0) {
             net.minecraft.util.profiling.ProfileResults $$3 = $$2.preparationResult;
             net.minecraft.util.profiling.ProfileResults $$4 = $$2.reloadResult;
-            int $$5 = (int)((double)$$2.preparationNanos.get() / 1000000.0);
-            int $$6 = (int)((double)$$2.reloadNanos.get() / 1000000.0);
-            int $$7 = $$5 + $$6;
+            long $$5 = java.util.concurrent.TimeUnit.NANOSECONDS.toMillis($$2.preparationNanos.get());
+            long $$6 = java.util.concurrent.TimeUnit.NANOSECONDS.toMillis($$2.reloadNanos.get());
+            long $$7 = $$5 + $$6;
             java.lang.String $$8 = $$2.name;
             LOGGER.info("{} took approximately {} ms ({} ms preparing, {} ms applying)", new java.lang.Object[]{$$8, $$7, $$5, $$6});
             $$1 += $$6;