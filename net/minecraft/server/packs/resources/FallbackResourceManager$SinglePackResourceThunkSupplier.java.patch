--- net/minecraft/server/packs/resources/FallbackResourceManager$SinglePackResourceThunkSupplier.java
+++ net/minecraft/server/packs/resources/FallbackResourceManager$SinglePackResourceThunkSupplier.java
@@ -1,43 +1,0 @@
-/*
- * Decompiled with CFR 0.151.
- */
-package net.minecraft.server.packs.resources;
-
-public class net.minecraft.server.packs.resources.FallbackResourceManager$SinglePackResourceThunkSupplier
- {
-    public net.minecraft.resources.ResourceLocation location;
-    public net.minecraft.resources.ResourceLocation metadataLocation;
-    public net.minecraft.server.packs.PackResources source;
-    public boolean shouldGetMeta;
-    public /* synthetic */ net.minecraft.server.packs.resources.FallbackResourceManager this$0;
-
-    public net.minecraft.server.packs.resources.FallbackResourceManager$SinglePackResourceThunkSupplier(net.minecraft.server.packs.resources.FallbackResourceManager fallbackResourceManager, net.minecraft.resources.ResourceLocation $$0, net.minecraft.resources.ResourceLocation $$1, net.minecraft.server.packs.PackResources $$2) {
-        this.this$0 = fallbackResourceManager;
-        this.shouldGetMeta = true;
-        this.source = $$2;
-        this.location = $$0;
-        this.metadataLocation = $$1;
-    }
-
-    public void ignoreMeta() {
-        this.shouldGetMeta = false;
-    }
-
-    public net.minecraft.server.packs.resources.Resource create() {
-        java.lang.String $$0 = this.source.getName();
-        if (this.shouldGetMeta) {
-            return new net.minecraft.server.packs.resources.Resource($$0, this.this$0.createResourceGetter(this.location, this.source), () -> {
-                if (this.source.hasResource(this.this$0.type, this.metadataLocation)) {
-                    try (java.io.InputStream $$0 = this.source.getResource(this.this$0.type, this.metadataLocation);
-){
-                        net.minecraft.server.packs.resources.ResourceMetadata resourceMetadata = net.minecraft.server.packs.resources.ResourceMetadata.fromJsonStream((java.io.InputStream)$$0);
-                        return resourceMetadata;
-                    }
-                }
-                return net.minecraft.server.packs.resources.ResourceMetadata.EMPTY;
-            });
-        }
-        return new net.minecraft.server.packs.resources.Resource($$0, this.this$0.createResourceGetter(this.location, this.source));
-    }
-}
-