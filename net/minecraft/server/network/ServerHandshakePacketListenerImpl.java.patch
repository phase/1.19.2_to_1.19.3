--- net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -15,14 +15,19 @@
         this.connection = $$1;
     }
 
-    public void handleIntention(net.minecraft.network.protocol.handshake.ClientIntentionPacket packet) {
-        switch (net.minecraft.server.network.ServerHandshakePacketListenerImpl$1.$SwitchMap$net$minecraft$network$ConnectionProtocol[packet.getIntention().ordinal()]) {
+    public void handleIntention(net.minecraft.network.protocol.handshake.ClientIntentionPacket $$0) {
+        switch (net.minecraft.server.network.ServerHandshakePacketListenerImpl$1.$SwitchMap$net$minecraft$network$ConnectionProtocol[$$0.getIntention().ordinal()]) {
             case 1: {
                 this.connection.setProtocol(net.minecraft.network.ConnectionProtocol.LOGIN);
-                if (packet.getProtocolVersion() != net.minecraft.SharedConstants.getCurrentVersion().getProtocolVersion()) {
-                    net.minecraft.network.chat.MutableComponent mutableComponent = packet.getProtocolVersion() < 754 ? net.minecraft.network.chat.Component.translatable((java.lang.String)"multiplayer.disconnect.outdated_client", (java.lang.Object[])new java.lang.Object[]{net.minecraft.SharedConstants.getCurrentVersion().getName()}) : net.minecraft.network.chat.Component.translatable((java.lang.String)"multiplayer.disconnect.incompatible", (java.lang.Object[])new java.lang.Object[]{net.minecraft.SharedConstants.getCurrentVersion().getName()});
-                    this.connection.send((net.minecraft.network.protocol.Packet)new net.minecraft.network.protocol.login.ClientboundLoginDisconnectPacket((net.minecraft.network.chat.Component)mutableComponent));
-                    this.connection.disconnect((net.minecraft.network.chat.Component)mutableComponent);
+                if ($$0.getProtocolVersion() != net.minecraft.SharedConstants.getCurrentVersion().getProtocolVersion()) {
+                    net.minecraft.network.chat.MutableComponent $$2;
+                    if ($$0.getProtocolVersion() < 754) {
+                        net.minecraft.network.chat.MutableComponent $$1 = net.minecraft.network.chat.Component.translatable((java.lang.String)"multiplayer.disconnect.outdated_client", (java.lang.Object[])new java.lang.Object[]{net.minecraft.SharedConstants.getCurrentVersion().getName()});
+                    } else {
+                        $$2 = net.minecraft.network.chat.Component.translatable((java.lang.String)"multiplayer.disconnect.incompatible", (java.lang.Object[])new java.lang.Object[]{net.minecraft.SharedConstants.getCurrentVersion().getName()});
+                    }
+                    this.connection.send((net.minecraft.network.protocol.Packet)new net.minecraft.network.protocol.login.ClientboundLoginDisconnectPacket((net.minecraft.network.chat.Component)$$2));
+                    this.connection.disconnect((net.minecraft.network.chat.Component)$$2);
                     break;
                 }
                 this.connection.setListener((net.minecraft.network.PacketListener)new net.minecraft.server.network.ServerLoginPacketListenerImpl(this.server, this.connection));
@@ -38,12 +43,12 @@
                 break;
             }
             default: {
-                throw new java.lang.UnsupportedOperationException("Invalid intention " + packet.getIntention());
+                throw new java.lang.UnsupportedOperationException("Invalid intention " + $$0.getIntention());
             }
         }
     }
 
-    public void onDisconnect(net.minecraft.network.chat.Component reason) {
+    public void onDisconnect(net.minecraft.network.chat.Component $$0) {
     }
 
     public net.minecraft.network.Connection getConnection() {