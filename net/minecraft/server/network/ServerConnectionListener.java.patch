--- net/minecraft/server/network/ServerConnectionListener.java
+++ net/minecraft/server/network/ServerConnectionListener.java
@@ -23,21 +23,21 @@
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
-    public void startTcpServerListener(@javax.annotation.Nullable java.net.InetAddress address, int port) throws java.io.IOException {
+    public void startTcpServerListener(@javax.annotation.Nullable java.net.InetAddress $$0, int $$1) throws java.io.IOException {
         java.util.List list = this.channels;
         synchronized (list) {
-            net.minecraft.util.LazyLoadedValue lazyLoadedValue;
-            java.lang.Class<io.netty.channel.socket.nio.NioServerSocketChannel> clazz;
+            net.minecraft.util.LazyLoadedValue $$5;
+            java.lang.Class<io.netty.channel.socket.nio.NioServerSocketChannel> $$4;
             if (io.netty.channel.epoll.Epoll.isAvailable() && this.server.isEpollEnabled()) {
-                clazz = io.netty.channel.epoll.EpollServerSocketChannel.class;
-                lazyLoadedValue = SERVER_EPOLL_EVENT_GROUP;
+                java.lang.Class<io.netty.channel.epoll.EpollServerSocketChannel> $$2 = io.netty.channel.epoll.EpollServerSocketChannel.class;
+                net.minecraft.util.LazyLoadedValue $$3 = SERVER_EPOLL_EVENT_GROUP;
                 LOGGER.info("Using epoll channel type");
             } else {
-                clazz = io.netty.channel.socket.nio.NioServerSocketChannel.class;
-                lazyLoadedValue = SERVER_EVENT_GROUP;
+                $$4 = io.netty.channel.socket.nio.NioServerSocketChannel.class;
+                $$5 = SERVER_EVENT_GROUP;
                 LOGGER.info("Using default channel type");
             }
-            this.channels.add((java.lang.Object)((io.netty.bootstrap.ServerBootstrap)((io.netty.bootstrap.ServerBootstrap)new io.netty.bootstrap.ServerBootstrap().channel(clazz)).childHandler((io.netty.channel.ChannelHandler)new /* Unavailable Anonymous Inner Class!! */).group((io.netty.channel.EventLoopGroup)lazyLoadedValue.get()).localAddress(address, port)).bind().syncUninterruptibly());
+            this.channels.add((java.lang.Object)((io.netty.bootstrap.ServerBootstrap)((io.netty.bootstrap.ServerBootstrap)new io.netty.bootstrap.ServerBootstrap().channel($$4)).childHandler((io.netty.channel.ChannelHandler)new /* Unavailable Anonymous Inner Class!! */).group((io.netty.channel.EventLoopGroup)$$5.get()).localAddress($$0, $$1)).bind().syncUninterruptibly());
         }
     }
 