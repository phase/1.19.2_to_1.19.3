--- net/minecraft/server/network/LegacyQueryHandler.java
+++ net/minecraft/server/network/LegacyQueryHandler.java
@@ -81,19 +81,19 @@
         }
     }
 
-    public void sendFlushAndClose(io.netty.channel.ChannelHandlerContext ctx, io.netty.buffer.ByteBuf data) {
-        ctx.pipeline().firstContext().writeAndFlush((java.lang.Object)data).addListener((io.netty.util.concurrent.GenericFutureListener)io.netty.channel.ChannelFutureListener.CLOSE);
+    public void sendFlushAndClose(io.netty.channel.ChannelHandlerContext $$0, io.netty.buffer.ByteBuf $$1) {
+        $$0.pipeline().firstContext().writeAndFlush((java.lang.Object)$$1).addListener((io.netty.util.concurrent.GenericFutureListener)io.netty.channel.ChannelFutureListener.CLOSE);
     }
 
-    public io.netty.buffer.ByteBuf createReply(java.lang.String string) {
-        io.netty.buffer.ByteBuf byteBuf = io.netty.buffer.Unpooled.buffer();
-        byteBuf.writeByte(255);
-        char[] cArray = string.toCharArray();
-        byteBuf.writeShort(cArray.length);
-        for (char c : cArray) {
-            byteBuf.writeChar((int)c);
+    public io.netty.buffer.ByteBuf createReply(java.lang.String $$0) {
+        io.netty.buffer.ByteBuf $$1 = io.netty.buffer.Unpooled.buffer();
+        $$1.writeByte(255);
+        char[] $$2 = $$0.toCharArray();
+        $$1.writeShort($$2.length);
+        for (char $$3 : $$2) {
+            $$1.writeChar((int)$$3);
         }
-        return byteBuf;
+        return $$1;
     }
 
     static {