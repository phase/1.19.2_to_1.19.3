--- net/minecraft/server/level/DistanceManager$PlayerTicketTracker.java
+++ net/minecraft/server/level/DistanceManager$PlayerTicketTracker.java
@@ -20,17 +20,17 @@
         this.queueLevels.defaultReturnValue($$0 + 2);
     }
 
-    public void onLevelChange(long chunkPos, int oldLevel, int newLevel) {
-        this.toUpdate.add(chunkPos);
+    public void onLevelChange(long $$0, int $$1, int $$2) {
+        this.toUpdate.add($$0);
     }
 
-    public void updateViewDistance(int viewDistance) {
-        for (it.unimi.dsi.fastutil.longs.Long2ByteMap$Entry entry : this.chunks.long2ByteEntrySet()) {
-            byte by = entry.getByteValue();
-            long l = entry.getLongKey();
-            this.onLevelChange(l, (int)by, this.haveTicketFor((int)by), by <= viewDistance - 2);
+    public void updateViewDistance(int $$0) {
+        for (it.unimi.dsi.fastutil.longs.Long2ByteMap$Entry $$1 : this.chunks.long2ByteEntrySet()) {
+            byte $$2 = $$1.getByteValue();
+            long $$3 = $$1.getLongKey();
+            this.onLevelChange($$3, (int)$$2, this.haveTicketFor((int)$$2), $$2 <= $$0 - 2);
         }
-        this.viewDistance = viewDistance;
+        this.viewDistance = $$0;
     }
 
     public void onLevelChange(long $$0, int $$1, boolean $$2, boolean $$3) {