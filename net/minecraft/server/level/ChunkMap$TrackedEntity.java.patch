--- net/minecraft/server/level/ChunkMap$TrackedEntity.java
+++ net/minecraft/server/level/ChunkMap$TrackedEntity.java
@@ -51,28 +51,28 @@
         }
     }
 
-    public void removePlayer(net.minecraft.server.level.ServerPlayer player) {
-        if (this.seenBy.remove((java.lang.Object)player.connection)) {
-            this.serverEntity.removePairing(player);
+    public void removePlayer(net.minecraft.server.level.ServerPlayer $$0) {
+        if (this.seenBy.remove((java.lang.Object)$$0.connection)) {
+            this.serverEntity.removePairing($$0);
         }
     }
 
-    public void updatePlayer(net.minecraft.server.level.ServerPlayer player) {
-        boolean bl;
-        if (player == this.entity) {
+    public void updatePlayer(net.minecraft.server.level.ServerPlayer $$0) {
+        boolean $$5;
+        if ($$0 == this.entity) {
             return;
         }
-        net.minecraft.world.phys.Vec3 vec3 = player.position().subtract(this.entity.position());
-        double d = vec3.x * vec3.x + vec3.z * vec3.z;
-        double d2 = java.lang.Math.min((int)this.getEffectiveRange(), (int)((this.this$0.viewDistance - 1) * 16));
-        double d3 = d2 * d2;
-        boolean bl2 = bl = d <= d3 && this.entity.broadcastToPlayer(player);
-        if (bl) {
-            if (this.seenBy.add((java.lang.Object)player.connection)) {
-                this.serverEntity.addPairing(player);
+        net.minecraft.world.phys.Vec3 $$1 = $$0.position().subtract(this.entity.position());
+        double $$3 = $$1.x * $$1.x + $$1.z * $$1.z;
+        double $$2 = java.lang.Math.min((int)this.getEffectiveRange(), (int)((this.this$0.viewDistance - 1) * 16));
+        double $$4 = $$2 * $$2;
+        boolean bl = $$5 = $$3 <= $$4 && this.entity.broadcastToPlayer($$0);
+        if ($$5) {
+            if (this.seenBy.add((java.lang.Object)$$0.connection)) {
+                this.serverEntity.addPairing($$0);
             }
-        } else if (this.seenBy.remove((java.lang.Object)player.connection)) {
-            this.serverEntity.removePairing(player);
+        } else if (this.seenBy.remove((java.lang.Object)$$0.connection)) {
+            this.serverEntity.removePairing($$0);
         }
     }
 
@@ -90,9 +90,9 @@
         return this.scaledRange($$0);
     }
 
-    public void updatePlayers(java.util.List<net.minecraft.server.level.ServerPlayer> playersList) {
-        for (net.minecraft.server.level.ServerPlayer serverPlayer : playersList) {
-            this.updatePlayer(serverPlayer);
+    public void updatePlayers(java.util.List<net.minecraft.server.level.ServerPlayer> $$0) {
+        for (net.minecraft.server.level.ServerPlayer $$1 : $$0) {
+            this.updatePlayer($$1);
         }
     }
 }