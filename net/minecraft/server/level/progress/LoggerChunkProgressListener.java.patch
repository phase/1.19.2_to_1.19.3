--- net/minecraft/server/level/progress/LoggerChunkProgressListener.java
+++ net/minecraft/server/level/progress/LoggerChunkProgressListener.java
@@ -18,18 +18,18 @@
         this.maxCount = $$1 * $$1;
     }
 
-    public void updateSpawnPos(net.minecraft.world.level.ChunkPos center) {
+    public void updateSpawnPos(net.minecraft.world.level.ChunkPos $$0) {
         this.startTime = this.nextTickTime = net.minecraft.Util.getMillis();
     }
 
-    public void onStatusChange(net.minecraft.world.level.ChunkPos chunkPosition, @javax.annotation.Nullable net.minecraft.world.level.chunk.ChunkStatus newStatus) {
-        if (newStatus == net.minecraft.world.level.chunk.ChunkStatus.FULL) {
+    public void onStatusChange(net.minecraft.world.level.ChunkPos $$0, @javax.annotation.Nullable net.minecraft.world.level.chunk.ChunkStatus $$1) {
+        if ($$1 == net.minecraft.world.level.chunk.ChunkStatus.FULL) {
             ++this.count;
         }
-        int n = this.getProgress();
+        int $$2 = this.getProgress();
         if (net.minecraft.Util.getMillis() > this.nextTickTime) {
             this.nextTickTime += 500L;
-            LOGGER.info(net.minecraft.network.chat.Component.translatable((java.lang.String)"menu.preparingSpawn", (java.lang.Object[])new java.lang.Object[]{net.minecraft.util.Mth.clamp((int)n, (int)0, (int)100)}).getString());
+            LOGGER.info(net.minecraft.network.chat.Component.translatable((java.lang.String)"menu.preparingSpawn", (java.lang.Object[])new java.lang.Object[]{net.minecraft.util.Mth.clamp((int)$$2, (int)0, (int)100)}).getString());
         }
     }
 