--- net/minecraft/server/level/ThreadedLevelLightEngine.java
+++ net/minecraft/server/level/ThreadedLevelLightEngine.java
@@ -55,16 +55,16 @@
         }, () -> "updateChunkStatus " + $$0 + " true"));
     }
 
-    public void updateSectionStatus(net.minecraft.core.SectionPos pos, boolean isEmpty) {
-        this.addTask(pos.x(), pos.z(), () -> 0, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType.PRE_UPDATE, net.minecraft.Util.name(() -> super.updateSectionStatus(pos, isEmpty), () -> "updateSectionStatus " + pos + " " + isEmpty));
+    public void updateSectionStatus(net.minecraft.core.SectionPos $$0, boolean $$1) {
+        this.addTask($$0.x(), $$0.z(), () -> 0, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType.PRE_UPDATE, net.minecraft.Util.name(() -> super.updateSectionStatus($$0, $$1), () -> "updateSectionStatus " + $$0 + " " + $$1));
     }
 
     public void enableLightSources(net.minecraft.world.level.ChunkPos $$0, boolean $$1) {
         this.addTask($$0.x, $$0.z, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType.PRE_UPDATE, net.minecraft.Util.name(() -> super.enableLightSources($$0, $$1), () -> "enableLight " + $$0 + " " + $$1));
     }
 
-    public void queueSectionData(net.minecraft.world.level.LightLayer type, net.minecraft.core.SectionPos pos, @javax.annotation.Nullable net.minecraft.world.level.chunk.DataLayer array, boolean bl) {
-        this.addTask(pos.x(), pos.z(), () -> 0, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType.PRE_UPDATE, net.minecraft.Util.name(() -> super.queueSectionData(type, pos, array, bl), () -> "queueData " + pos));
+    public void queueSectionData(net.minecraft.world.level.LightLayer $$0, net.minecraft.core.SectionPos $$1, @javax.annotation.Nullable net.minecraft.world.level.chunk.DataLayer $$2, boolean $$3) {
+        this.addTask($$1.x(), $$1.z(), () -> 0, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType.PRE_UPDATE, net.minecraft.Util.name(() -> super.queueSectionData($$0, $$1, $$2, $$3), () -> "queueData " + $$1));
     }
 
     public void addTask(int $$0, int $$1, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType $$2, java.lang.Runnable $$3) {
@@ -80,8 +80,8 @@
         }, (long)net.minecraft.world.level.ChunkPos.asLong((int)$$0, (int)$$1), (java.util.function.IntSupplier)$$2));
     }
 
-    public void retainData(net.minecraft.world.level.ChunkPos pos, boolean retain) {
-        this.addTask(pos.x, pos.z, () -> 0, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType.PRE_UPDATE, net.minecraft.Util.name(() -> super.retainData(pos, retain), () -> "retainData " + pos));
+    public void retainData(net.minecraft.world.level.ChunkPos $$0, boolean $$1) {
+        this.addTask($$0.x, $$0.z, () -> 0, net.minecraft.server.level.ThreadedLevelLightEngine$TaskType.PRE_UPDATE, net.minecraft.Util.name(() -> super.retainData($$0, $$1), () -> "retainData " + $$0));
     }
 
     public java.util.concurrent.CompletableFuture<net.minecraft.world.level.chunk.ChunkAccess> retainData(net.minecraft.world.level.chunk.ChunkAccess $$0) {