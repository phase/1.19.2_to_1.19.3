--- net/minecraft/server/commands/WhitelistCommand.java
+++ net/minecraft/server/commands/WhitelistCommand.java
@@ -13,82 +13,82 @@
     public net.minecraft.server.commands.WhitelistCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"whitelist").requires($$0 -> $$0.hasPermission(3))).then(net.minecraft.commands.Commands.literal((java.lang.String)"on").executes($$0 -> net.minecraft.server.commands.WhitelistCommand.enableWhitelist((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"off").executes($$0 -> net.minecraft.server.commands.WhitelistCommand.disableWhitelist((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"list").executes($$0 -> net.minecraft.server.commands.WhitelistCommand.showList((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.GameProfileArgument.gameProfile()).suggests(($$02, $$12) -> {
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$03) {
+        $$03.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"whitelist").requires($$0 -> $$0.hasPermission(3))).then(net.minecraft.commands.Commands.literal((java.lang.String)"on").executes($$0 -> net.minecraft.server.commands.WhitelistCommand.enableWhitelist((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"off").executes($$0 -> net.minecraft.server.commands.WhitelistCommand.disableWhitelist((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"list").executes($$0 -> net.minecraft.server.commands.WhitelistCommand.showList((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.GameProfileArgument.gameProfile()).suggests(($$02, $$12) -> {
             net.minecraft.server.players.PlayerList $$2 = ((net.minecraft.commands.CommandSourceStack)$$02.getSource()).getServer().getPlayerList();
             return net.minecraft.commands.SharedSuggestionProvider.suggest((java.util.stream.Stream)$$2.getPlayers().stream().filter($$1 -> !$$2.getWhiteList().isWhiteListed($$1.getGameProfile())).map($$0 -> $$0.getGameProfile().getName()), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$12);
         }).executes($$0 -> net.minecraft.server.commands.WhitelistCommand.addPlayers((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.GameProfileArgument.getGameProfiles((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"remove").then(net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.GameProfileArgument.gameProfile()).suggests(($$0, $$1) -> net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.String[])((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getServer().getPlayerList().getWhiteListNames(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1)).executes($$0 -> net.minecraft.server.commands.WhitelistCommand.removePlayers((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.GameProfileArgument.getGameProfiles((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"reload").executes($$0 -> net.minecraft.server.commands.WhitelistCommand.reload((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource())))));
     }
 
-    public static int reload(net.minecraft.commands.CommandSourceStack source) {
-        source.getServer().getPlayerList().reloadWhiteList();
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.reloaded"), true);
-        source.getServer().kickUnlistedPlayers(source);
+    public static int reload(net.minecraft.commands.CommandSourceStack $$0) {
+        $$0.getServer().getPlayerList().reloadWhiteList();
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.reloaded"), true);
+        $$0.getServer().kickUnlistedPlayers($$0);
         return 1;
     }
 
-    public static int addPlayers(net.minecraft.commands.CommandSourceStack source, java.util.Collection<com.mojang.authlib.GameProfile> players) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.server.players.UserWhiteList userWhiteList = source.getServer().getPlayerList().getWhiteList();
-        int n = 0;
-        for (com.mojang.authlib.GameProfile gameProfile : players) {
-            if (userWhiteList.isWhiteListed(gameProfile)) continue;
-            net.minecraft.server.players.UserWhiteListEntry userWhiteListEntry = new net.minecraft.server.players.UserWhiteListEntry(gameProfile);
-            userWhiteList.add((net.minecraft.server.players.StoredUserEntry)userWhiteListEntry);
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.add.success", (java.lang.Object[])new java.lang.Object[]{net.minecraft.network.chat.ComponentUtils.getDisplayName((com.mojang.authlib.GameProfile)gameProfile)}), true);
-            ++n;
+    public static int addPlayers(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<com.mojang.authlib.GameProfile> $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.server.players.UserWhiteList $$2 = $$0.getServer().getPlayerList().getWhiteList();
+        int $$3 = 0;
+        for (com.mojang.authlib.GameProfile $$4 : $$1) {
+            if ($$2.isWhiteListed($$4)) continue;
+            net.minecraft.server.players.UserWhiteListEntry $$5 = new net.minecraft.server.players.UserWhiteListEntry($$4);
+            $$2.add((net.minecraft.server.players.StoredUserEntry)$$5);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.add.success", (java.lang.Object[])new java.lang.Object[]{net.minecraft.network.chat.ComponentUtils.getDisplayName((com.mojang.authlib.GameProfile)$$4)}), true);
+            ++$$3;
         }
-        if (n == 0) {
+        if ($$3 == 0) {
             throw ERROR_ALREADY_WHITELISTED.create();
         }
-        return n;
+        return $$3;
     }
 
-    public static int removePlayers(net.minecraft.commands.CommandSourceStack source, java.util.Collection<com.mojang.authlib.GameProfile> players) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.server.players.UserWhiteList userWhiteList = source.getServer().getPlayerList().getWhiteList();
-        int n = 0;
-        for (com.mojang.authlib.GameProfile gameProfile : players) {
-            if (!userWhiteList.isWhiteListed(gameProfile)) continue;
-            net.minecraft.server.players.UserWhiteListEntry userWhiteListEntry = new net.minecraft.server.players.UserWhiteListEntry(gameProfile);
-            userWhiteList.remove((net.minecraft.server.players.StoredUserEntry)userWhiteListEntry);
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.remove.success", (java.lang.Object[])new java.lang.Object[]{net.minecraft.network.chat.ComponentUtils.getDisplayName((com.mojang.authlib.GameProfile)gameProfile)}), true);
-            ++n;
+    public static int removePlayers(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<com.mojang.authlib.GameProfile> $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.server.players.UserWhiteList $$2 = $$0.getServer().getPlayerList().getWhiteList();
+        int $$3 = 0;
+        for (com.mojang.authlib.GameProfile $$4 : $$1) {
+            if (!$$2.isWhiteListed($$4)) continue;
+            net.minecraft.server.players.UserWhiteListEntry $$5 = new net.minecraft.server.players.UserWhiteListEntry($$4);
+            $$2.remove((net.minecraft.server.players.StoredUserEntry)$$5);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.remove.success", (java.lang.Object[])new java.lang.Object[]{net.minecraft.network.chat.ComponentUtils.getDisplayName((com.mojang.authlib.GameProfile)$$4)}), true);
+            ++$$3;
         }
-        if (n == 0) {
+        if ($$3 == 0) {
             throw ERROR_NOT_WHITELISTED.create();
         }
-        source.getServer().kickUnlistedPlayers(source);
-        return n;
+        $$0.getServer().kickUnlistedPlayers($$0);
+        return $$3;
     }
 
-    public static int enableWhitelist(net.minecraft.commands.CommandSourceStack source) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.server.players.PlayerList playerList = source.getServer().getPlayerList();
-        if (playerList.isUsingWhitelist()) {
+    public static int enableWhitelist(net.minecraft.commands.CommandSourceStack $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.server.players.PlayerList $$1 = $$0.getServer().getPlayerList();
+        if ($$1.isUsingWhitelist()) {
             throw ERROR_ALREADY_ENABLED.create();
         }
-        playerList.setUsingWhiteList(true);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.enabled"), true);
-        source.getServer().kickUnlistedPlayers(source);
+        $$1.setUsingWhiteList(true);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.enabled"), true);
+        $$0.getServer().kickUnlistedPlayers($$0);
         return 1;
     }
 
-    public static int disableWhitelist(net.minecraft.commands.CommandSourceStack source) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.server.players.PlayerList playerList = source.getServer().getPlayerList();
-        if (!playerList.isUsingWhitelist()) {
+    public static int disableWhitelist(net.minecraft.commands.CommandSourceStack $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.server.players.PlayerList $$1 = $$0.getServer().getPlayerList();
+        if (!$$1.isUsingWhitelist()) {
             throw ERROR_ALREADY_DISABLED.create();
         }
-        playerList.setUsingWhiteList(false);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.disabled"), true);
+        $$1.setUsingWhiteList(false);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.disabled"), true);
         return 1;
     }
 
-    public static int showList(net.minecraft.commands.CommandSourceStack source) {
-        java.lang.CharSequence[] charSequenceArray = source.getServer().getPlayerList().getWhiteListNames();
-        if (charSequenceArray.length == 0) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.none"), false);
+    public static int showList(net.minecraft.commands.CommandSourceStack $$0) {
+        java.lang.CharSequence[] $$1 = $$0.getServer().getPlayerList().getWhiteListNames();
+        if ($$1.length == 0) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.none"), false);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.list", (java.lang.Object[])new java.lang.Object[]{charSequenceArray.length, java.lang.String.join((java.lang.CharSequence)", ", (java.lang.CharSequence[])charSequenceArray)}), false);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.whitelist.list", (java.lang.Object[])new java.lang.Object[]{$$1.length, java.lang.String.join((java.lang.CharSequence)", ", (java.lang.CharSequence[])$$1)}), false);
         }
-        return charSequenceArray.length;
+        return $$1.length;
     }
 
     static {