--- net/minecraft/server/commands/RecipeCommand.java
+++ net/minecraft/server/commands/RecipeCommand.java
@@ -11,40 +11,40 @@
     public net.minecraft.server.commands.RecipeCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"recipe").requires($$0 -> $$0.hasPermission(2))).then(net.minecraft.commands.Commands.literal((java.lang.String)"give").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(net.minecraft.commands.Commands.argument((java.lang.String)"recipe", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.ALL_RECIPES).executes($$0 -> net.minecraft.server.commands.RecipeCommand.giveRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)java.util.Collections.singleton((java.lang.Object)net.minecraft.commands.arguments.ResourceLocationArgument.getRecipe((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"recipe")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"*").executes($$0 -> net.minecraft.server.commands.RecipeCommand.giveRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getServer().getRecipeManager().getRecipes())))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"take").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(net.minecraft.commands.Commands.argument((java.lang.String)"recipe", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.ALL_RECIPES).executes($$0 -> net.minecraft.server.commands.RecipeCommand.takeRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)java.util.Collections.singleton((java.lang.Object)net.minecraft.commands.arguments.ResourceLocationArgument.getRecipe((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"recipe")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"*").executes($$0 -> net.minecraft.server.commands.RecipeCommand.takeRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getServer().getRecipeManager().getRecipes()))))));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"recipe").requires($$0 -> $$0.hasPermission(2))).then(net.minecraft.commands.Commands.literal((java.lang.String)"give").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(net.minecraft.commands.Commands.argument((java.lang.String)"recipe", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.ALL_RECIPES).executes($$0 -> net.minecraft.server.commands.RecipeCommand.giveRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)java.util.Collections.singleton((java.lang.Object)net.minecraft.commands.arguments.ResourceLocationArgument.getRecipe((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"recipe")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"*").executes($$0 -> net.minecraft.server.commands.RecipeCommand.giveRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getServer().getRecipeManager().getRecipes())))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"take").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(net.minecraft.commands.Commands.argument((java.lang.String)"recipe", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.ALL_RECIPES).executes($$0 -> net.minecraft.server.commands.RecipeCommand.takeRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)java.util.Collections.singleton((java.lang.Object)net.minecraft.commands.arguments.ResourceLocationArgument.getRecipe((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"recipe")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"*").executes($$0 -> net.minecraft.server.commands.RecipeCommand.takeRecipes((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.util.Collection)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getServer().getRecipeManager().getRecipes()))))));
     }
 
-    public static int giveRecipes(net.minecraft.commands.CommandSourceStack source, java.util.Collection<net.minecraft.server.level.ServerPlayer> targets, java.util.Collection<net.minecraft.world.item.crafting.Recipe<?>> recipes) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n = 0;
-        for (net.minecraft.server.level.ServerPlayer serverPlayer : targets) {
-            n += serverPlayer.awardRecipes(recipes);
+    public static int giveRecipes(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<net.minecraft.server.level.ServerPlayer> $$1, java.util.Collection<net.minecraft.world.item.crafting.Recipe<?>> $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        int $$3 = 0;
+        for (net.minecraft.server.level.ServerPlayer $$4 : $$1) {
+            $$3 += $$4.awardRecipes($$2);
         }
-        if (n == 0) {
+        if ($$3 == 0) {
             throw ERROR_GIVE_FAILED.create();
         }
-        if (targets.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.give.success.single", (java.lang.Object[])new java.lang.Object[]{recipes.size(), ((net.minecraft.server.level.ServerPlayer)targets.iterator().next()).getDisplayName()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.give.success.single", (java.lang.Object[])new java.lang.Object[]{$$2.size(), ((net.minecraft.server.level.ServerPlayer)$$1.iterator().next()).getDisplayName()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.give.success.multiple", (java.lang.Object[])new java.lang.Object[]{recipes.size(), targets.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.give.success.multiple", (java.lang.Object[])new java.lang.Object[]{$$2.size(), $$1.size()}), true);
         }
-        return n;
+        return $$3;
     }
 
-    public static int takeRecipes(net.minecraft.commands.CommandSourceStack source, java.util.Collection<net.minecraft.server.level.ServerPlayer> targets, java.util.Collection<net.minecraft.world.item.crafting.Recipe<?>> recipes) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n = 0;
-        for (net.minecraft.server.level.ServerPlayer serverPlayer : targets) {
-            n += serverPlayer.resetRecipes(recipes);
+    public static int takeRecipes(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<net.minecraft.server.level.ServerPlayer> $$1, java.util.Collection<net.minecraft.world.item.crafting.Recipe<?>> $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        int $$3 = 0;
+        for (net.minecraft.server.level.ServerPlayer $$4 : $$1) {
+            $$3 += $$4.resetRecipes($$2);
         }
-        if (n == 0) {
+        if ($$3 == 0) {
             throw ERROR_TAKE_FAILED.create();
         }
-        if (targets.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.take.success.single", (java.lang.Object[])new java.lang.Object[]{recipes.size(), ((net.minecraft.server.level.ServerPlayer)targets.iterator().next()).getDisplayName()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.take.success.single", (java.lang.Object[])new java.lang.Object[]{$$2.size(), ((net.minecraft.server.level.ServerPlayer)$$1.iterator().next()).getDisplayName()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.take.success.multiple", (java.lang.Object[])new java.lang.Object[]{recipes.size(), targets.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.recipe.take.success.multiple", (java.lang.Object[])new java.lang.Object[]{$$2.size(), $$1.size()}), true);
         }
-        return n;
+        return $$3;
     }
 
     static {