--- net/minecraft/server/commands/TagCommand.java
+++ net/minecraft/server/commands/TagCommand.java
@@ -11,70 +11,70 @@
     public net.minecraft.server.commands.TagCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"tag").requires($$0 -> $$0.hasPermission(2))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.entities()).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"name", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.server.commands.TagCommand.addTag((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"name")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"remove").then(net.minecraft.commands.Commands.argument((java.lang.String)"name", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).suggests(($$0, $$1) -> net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)net.minecraft.server.commands.TagCommand.getTags((java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets")), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1)).executes($$0 -> net.minecraft.server.commands.TagCommand.removeTag((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"name")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"list").executes($$0 -> net.minecraft.server.commands.TagCommand.listTags((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"))))));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"tag").requires($$0 -> $$0.hasPermission(2))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.entities()).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"name", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.server.commands.TagCommand.addTag((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"name")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"remove").then(net.minecraft.commands.Commands.argument((java.lang.String)"name", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).suggests(($$0, $$1) -> net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)net.minecraft.server.commands.TagCommand.getTags((java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets")), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1)).executes($$0 -> net.minecraft.server.commands.TagCommand.removeTag((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"name")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"list").executes($$0 -> net.minecraft.server.commands.TagCommand.listTags((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getEntities((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"))))));
     }
 
-    public static java.util.Collection<java.lang.String> getTags(java.util.Collection<? extends net.minecraft.world.entity.Entity> entities) {
-        java.util.HashSet hashSet = com.google.common.collect.Sets.newHashSet();
-        for (net.minecraft.world.entity.Entity entity : entities) {
-            hashSet.addAll((java.util.Collection)entity.getTags());
+    public static java.util.Collection<java.lang.String> getTags(java.util.Collection<? extends net.minecraft.world.entity.Entity> $$0) {
+        java.util.HashSet $$1 = com.google.common.collect.Sets.newHashSet();
+        for (net.minecraft.world.entity.Entity $$2 : $$0) {
+            $$1.addAll((java.util.Collection)$$2.getTags());
         }
-        return hashSet;
+        return $$1;
     }
 
-    public static int addTag(net.minecraft.commands.CommandSourceStack source, java.util.Collection<? extends net.minecraft.world.entity.Entity> entities, java.lang.String tagName) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n = 0;
-        for (net.minecraft.world.entity.Entity entity : entities) {
-            if (!entity.addTag(tagName)) continue;
-            ++n;
+    public static int addTag(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<? extends net.minecraft.world.entity.Entity> $$1, java.lang.String $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        int $$3 = 0;
+        for (net.minecraft.world.entity.Entity $$4 : $$1) {
+            if (!$$4.addTag($$2)) continue;
+            ++$$3;
         }
-        if (n == 0) {
+        if ($$3 == 0) {
             throw ERROR_ADD_FAILED.create();
         }
-        if (entities.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.add.success.single", (java.lang.Object[])new java.lang.Object[]{tagName, ((net.minecraft.world.entity.Entity)entities.iterator().next()).getDisplayName()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.add.success.single", (java.lang.Object[])new java.lang.Object[]{$$2, ((net.minecraft.world.entity.Entity)$$1.iterator().next()).getDisplayName()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.add.success.multiple", (java.lang.Object[])new java.lang.Object[]{tagName, entities.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.add.success.multiple", (java.lang.Object[])new java.lang.Object[]{$$2, $$1.size()}), true);
         }
-        return n;
+        return $$3;
     }
 
-    public static int removeTag(net.minecraft.commands.CommandSourceStack source, java.util.Collection<? extends net.minecraft.world.entity.Entity> entities, java.lang.String tagName) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n = 0;
-        for (net.minecraft.world.entity.Entity entity : entities) {
-            if (!entity.removeTag(tagName)) continue;
-            ++n;
+    public static int removeTag(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<? extends net.minecraft.world.entity.Entity> $$1, java.lang.String $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        int $$3 = 0;
+        for (net.minecraft.world.entity.Entity $$4 : $$1) {
+            if (!$$4.removeTag($$2)) continue;
+            ++$$3;
         }
-        if (n == 0) {
+        if ($$3 == 0) {
             throw ERROR_REMOVE_FAILED.create();
         }
-        if (entities.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.remove.success.single", (java.lang.Object[])new java.lang.Object[]{tagName, ((net.minecraft.world.entity.Entity)entities.iterator().next()).getDisplayName()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.remove.success.single", (java.lang.Object[])new java.lang.Object[]{$$2, ((net.minecraft.world.entity.Entity)$$1.iterator().next()).getDisplayName()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.remove.success.multiple", (java.lang.Object[])new java.lang.Object[]{tagName, entities.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.remove.success.multiple", (java.lang.Object[])new java.lang.Object[]{$$2, $$1.size()}), true);
         }
-        return n;
+        return $$3;
     }
 
-    public static int listTags(net.minecraft.commands.CommandSourceStack source, java.util.Collection<? extends net.minecraft.world.entity.Entity> entities) {
-        java.util.HashSet hashSet = com.google.common.collect.Sets.newHashSet();
-        for (net.minecraft.world.entity.Entity entity : entities) {
-            hashSet.addAll((java.util.Collection)entity.getTags());
+    public static int listTags(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<? extends net.minecraft.world.entity.Entity> $$1) {
+        java.util.HashSet $$2 = com.google.common.collect.Sets.newHashSet();
+        for (net.minecraft.world.entity.Entity $$3 : $$1) {
+            $$2.addAll((java.util.Collection)$$3.getTags());
         }
-        if (entities.size() == 1) {
-            java.util.Iterator iterator = (net.minecraft.world.entity.Entity)entities.iterator().next();
-            if (hashSet.isEmpty()) {
-                source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.single.empty", (java.lang.Object[])new java.lang.Object[]{iterator.getDisplayName()}), false);
+        if ($$1.size() == 1) {
+            net.minecraft.world.entity.Entity $$4 = (net.minecraft.world.entity.Entity)$$1.iterator().next();
+            if ($$2.isEmpty()) {
+                $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.single.empty", (java.lang.Object[])new java.lang.Object[]{$$4.getDisplayName()}), false);
             } else {
-                source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.single.success", (java.lang.Object[])new java.lang.Object[]{iterator.getDisplayName(), hashSet.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)hashSet)}), false);
+                $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.single.success", (java.lang.Object[])new java.lang.Object[]{$$4.getDisplayName(), $$2.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)$$2)}), false);
             }
-        } else if (hashSet.isEmpty()) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.multiple.empty", (java.lang.Object[])new java.lang.Object[]{entities.size()}), false);
+        } else if ($$2.isEmpty()) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.multiple.empty", (java.lang.Object[])new java.lang.Object[]{$$1.size()}), false);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.multiple.success", (java.lang.Object[])new java.lang.Object[]{entities.size(), hashSet.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)hashSet)}), false);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.tag.list.multiple.success", (java.lang.Object[])new java.lang.Object[]{$$1.size(), $$2.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)$$2)}), false);
         }
-        return hashSet.size();
+        return $$2.size();
     }
 
     static {