--- net/minecraft/server/commands/data/DataCommands.java
+++ net/minecraft/server/commands/data/DataCommands.java
@@ -19,10 +19,10 @@
     public net.minecraft.server.commands.data.DataCommands() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        com.mojang.brigadier.builder.LiteralArgumentBuilder literalArgumentBuilder = (com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"data").requires($$0 -> $$0.hasPermission(2));
-        for (net.minecraft.server.commands.data.DataCommands$DataProvider dataProvider : TARGET_PROVIDERS) {
-            ((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)literalArgumentBuilder.then(dataProvider.wrap((com.mojang.brigadier.builder.ArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"merge"), $$12 -> $$12.then(net.minecraft.commands.Commands.argument((java.lang.String)"nbt", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.CompoundTagArgument.compoundTag()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.mergeData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)dataProvider.access($$1), (net.minecraft.nbt.CompoundTag)net.minecraft.commands.arguments.CompoundTagArgument.getCompoundTag((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"nbt"))))))).then(dataProvider.wrap((com.mojang.brigadier.builder.ArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"get"), $$12 -> $$12.executes($$1 -> net.minecraft.server.commands.data.DataCommands.getData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)dataProvider.access($$1))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"path", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.NbtPathArgument.nbtPath()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.getData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)dataProvider.access($$1), (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)net.minecraft.commands.arguments.NbtPathArgument.getPath((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"path")))).then(net.minecraft.commands.Commands.argument((java.lang.String)"scale", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.DoubleArgumentType.doubleArg()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.getNumeric((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)dataProvider.access($$1), (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)net.minecraft.commands.arguments.NbtPathArgument.getPath((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"path"), (double)com.mojang.brigadier.arguments.DoubleArgumentType.getDouble((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"scale")))))))).then(dataProvider.wrap((com.mojang.brigadier.builder.ArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"remove"), $$12 -> $$12.then(net.minecraft.commands.Commands.argument((java.lang.String)"path", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.NbtPathArgument.nbtPath()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.removeData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)dataProvider.access($$1), (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)net.minecraft.commands.arguments.NbtPathArgument.getPath((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"path"))))))).then(net.minecraft.server.commands.data.DataCommands.decorateModification(($$02, $$12) -> $$02.then(net.minecraft.commands.Commands.literal((java.lang.String)"insert").then(net.minecraft.commands.Commands.argument((java.lang.String)"index", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).then($$12.create(($$0, $$1, $$2, $$3) -> {
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$03) {
+        com.mojang.brigadier.builder.LiteralArgumentBuilder $$1 = (com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"data").requires($$0 -> $$0.hasPermission(2));
+        for (net.minecraft.server.commands.data.DataCommands$DataProvider $$2 : TARGET_PROVIDERS) {
+            ((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)$$1.then($$2.wrap((com.mojang.brigadier.builder.ArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"merge"), $$12 -> $$12.then(net.minecraft.commands.Commands.argument((java.lang.String)"nbt", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.CompoundTagArgument.compoundTag()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.mergeData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)$$2.access($$1), (net.minecraft.nbt.CompoundTag)net.minecraft.commands.arguments.CompoundTagArgument.getCompoundTag((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"nbt"))))))).then($$2.wrap((com.mojang.brigadier.builder.ArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"get"), $$12 -> $$12.executes($$1 -> net.minecraft.server.commands.data.DataCommands.getData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)$$2.access($$1))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"path", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.NbtPathArgument.nbtPath()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.getData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)$$2.access($$1), (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)net.minecraft.commands.arguments.NbtPathArgument.getPath((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"path")))).then(net.minecraft.commands.Commands.argument((java.lang.String)"scale", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.DoubleArgumentType.doubleArg()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.getNumeric((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)$$2.access($$1), (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)net.minecraft.commands.arguments.NbtPathArgument.getPath((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"path"), (double)com.mojang.brigadier.arguments.DoubleArgumentType.getDouble((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"scale")))))))).then($$2.wrap((com.mojang.brigadier.builder.ArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"remove"), $$12 -> $$12.then(net.minecraft.commands.Commands.argument((java.lang.String)"path", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.NbtPathArgument.nbtPath()).executes($$1 -> net.minecraft.server.commands.data.DataCommands.removeData((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (net.minecraft.server.commands.data.DataAccessor)$$2.access($$1), (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)net.minecraft.commands.arguments.NbtPathArgument.getPath((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"path"))))))).then(net.minecraft.server.commands.data.DataCommands.decorateModification(($$02, $$12) -> $$02.then(net.minecraft.commands.Commands.literal((java.lang.String)"insert").then(net.minecraft.commands.Commands.argument((java.lang.String)"index", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).then($$12.create(($$0, $$1, $$2, $$3) -> {
                 int $$4 = com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"index");
                 return net.minecraft.server.commands.data.DataCommands.insertAtIndex((int)$$4, (net.minecraft.nbt.CompoundTag)$$1, (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)$$2, (java.util.List)$$3);
             })))).then(net.minecraft.commands.Commands.literal((java.lang.String)"prepend").then($$12.create(($$0, $$1, $$2, $$3) -> net.minecraft.server.commands.data.DataCommands.insertAtIndex((int)0, (net.minecraft.nbt.CompoundTag)$$1, (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)$$2, (java.util.List)$$3)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"append").then($$12.create(($$0, $$1, $$2, $$3) -> net.minecraft.server.commands.data.DataCommands.insertAtIndex((int)-1, (net.minecraft.nbt.CompoundTag)$$1, (net.minecraft.commands.arguments.NbtPathArgument$NbtPath)$$2, (java.util.List)$$3)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"set").then($$12.create(($$0, $$1, $$2, $$3) -> $$2.set((net.minecraft.nbt.Tag)$$1, () -> ((net.minecraft.nbt.Tag)((net.minecraft.nbt.Tag)com.google.common.collect.Iterables.getLast((java.lang.Iterable)$$3))).copy())))).then(net.minecraft.commands.Commands.literal((java.lang.String)"merge").then($$12.create(($$0, $$1, $$2, $$3) -> {
@@ -45,7 +45,7 @@
                 return $$5;
             })))));
         }
-        dispatcher.register(literalArgumentBuilder);
+        $$03.register($$1);
     }
 
     public static int insertAtIndex(int $$0, net.minecraft.nbt.CompoundTag $$1, net.minecraft.commands.arguments.NbtPathArgument$NbtPath $$2, java.util.List<net.minecraft.nbt.Tag> $$3) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
@@ -112,15 +112,15 @@
         return $$7;
     }
 
-    public static int removeData(net.minecraft.commands.CommandSourceStack source, net.minecraft.server.commands.data.DataAccessor accessor, net.minecraft.commands.arguments.NbtPathArgument$NbtPath path) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.nbt.CompoundTag compoundTag = accessor.getData();
-        int n = path.remove((net.minecraft.nbt.Tag)compoundTag);
-        if (n == 0) {
+    public static int removeData(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.server.commands.data.DataAccessor $$1, net.minecraft.commands.arguments.NbtPathArgument$NbtPath $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.nbt.CompoundTag $$3 = $$1.getData();
+        int $$4 = $$2.remove((net.minecraft.nbt.Tag)$$3);
+        if ($$4 == 0) {
             throw ERROR_MERGE_UNCHANGED.create();
         }
-        accessor.setData(compoundTag);
-        source.sendSuccess(accessor.getModifiedSuccess(), true);
-        return n;
+        $$1.setData($$3);
+        $$0.sendSuccess($$1.getModifiedSuccess(), true);
+        return $$4;
     }
 
     public static net.minecraft.nbt.Tag getSingleTag(net.minecraft.commands.arguments.NbtPathArgument$NbtPath $$0, net.minecraft.server.commands.data.DataAccessor $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
@@ -133,47 +133,50 @@
         return $$4;
     }
 
-    public static int getData(net.minecraft.commands.CommandSourceStack source, net.minecraft.server.commands.data.DataAccessor accessor, net.minecraft.commands.arguments.NbtPathArgument$NbtPath path) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n;
-        net.minecraft.nbt.Tag tag = net.minecraft.server.commands.data.DataCommands.getSingleTag((net.minecraft.commands.arguments.NbtPathArgument$NbtPath)path, (net.minecraft.server.commands.data.DataAccessor)accessor);
-        if (tag instanceof net.minecraft.nbt.NumericTag) {
-            n = net.minecraft.util.Mth.floor((double)((net.minecraft.nbt.NumericTag)tag).getAsDouble());
-        } else if (tag instanceof net.minecraft.nbt.CollectionTag) {
-            n = ((net.minecraft.nbt.CollectionTag)tag).size();
-        } else if (tag instanceof net.minecraft.nbt.CompoundTag) {
-            n = ((net.minecraft.nbt.CompoundTag)tag).size();
-        } else if (tag instanceof net.minecraft.nbt.StringTag) {
-            n = tag.getAsString().length();
+    /*
+     * WARNING - void declaration
+     */
+    public static int getData(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.server.commands.data.DataAccessor $$1, net.minecraft.commands.arguments.NbtPathArgument$NbtPath $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        void $$8;
+        net.minecraft.nbt.Tag $$3 = net.minecraft.server.commands.data.DataCommands.getSingleTag((net.minecraft.commands.arguments.NbtPathArgument$NbtPath)$$2, (net.minecraft.server.commands.data.DataAccessor)$$1);
+        if ($$3 instanceof net.minecraft.nbt.NumericTag) {
+            int $$4 = net.minecraft.util.Mth.floor((double)((net.minecraft.nbt.NumericTag)$$3).getAsDouble());
+        } else if ($$3 instanceof net.minecraft.nbt.CollectionTag) {
+            int $$5 = ((net.minecraft.nbt.CollectionTag)$$3).size();
+        } else if ($$3 instanceof net.minecraft.nbt.CompoundTag) {
+            int $$6 = ((net.minecraft.nbt.CompoundTag)$$3).size();
+        } else if ($$3 instanceof net.minecraft.nbt.StringTag) {
+            int $$7 = $$3.getAsString().length();
         } else {
-            throw ERROR_GET_NON_EXISTENT.create((java.lang.Object)path.toString());
+            throw ERROR_GET_NON_EXISTENT.create((java.lang.Object)$$2.toString());
         }
-        source.sendSuccess(accessor.getPrintSuccess(tag), false);
-        return n;
+        $$0.sendSuccess($$1.getPrintSuccess($$3), false);
+        return (int)$$8;
     }
 
-    public static int getNumeric(net.minecraft.commands.CommandSourceStack source, net.minecraft.server.commands.data.DataAccessor accessor, net.minecraft.commands.arguments.NbtPathArgument$NbtPath path, double scale) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.nbt.Tag tag = net.minecraft.server.commands.data.DataCommands.getSingleTag((net.minecraft.commands.arguments.NbtPathArgument$NbtPath)path, (net.minecraft.server.commands.data.DataAccessor)accessor);
-        if (!(tag instanceof net.minecraft.nbt.NumericTag)) {
-            throw ERROR_GET_NOT_NUMBER.create((java.lang.Object)path.toString());
+    public static int getNumeric(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.server.commands.data.DataAccessor $$1, net.minecraft.commands.arguments.NbtPathArgument$NbtPath $$2, double $$3) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.nbt.Tag $$4 = net.minecraft.server.commands.data.DataCommands.getSingleTag((net.minecraft.commands.arguments.NbtPathArgument$NbtPath)$$2, (net.minecraft.server.commands.data.DataAccessor)$$1);
+        if (!($$4 instanceof net.minecraft.nbt.NumericTag)) {
+            throw ERROR_GET_NOT_NUMBER.create((java.lang.Object)$$2.toString());
         }
-        int n = net.minecraft.util.Mth.floor((double)(((net.minecraft.nbt.NumericTag)tag).getAsDouble() * scale));
-        source.sendSuccess(accessor.getPrintSuccess(path, scale, n), false);
-        return n;
+        int $$5 = net.minecraft.util.Mth.floor((double)(((net.minecraft.nbt.NumericTag)$$4).getAsDouble() * $$3));
+        $$0.sendSuccess($$1.getPrintSuccess($$2, $$3, $$5), false);
+        return $$5;
     }
 
-    public static int getData(net.minecraft.commands.CommandSourceStack source, net.minecraft.server.commands.data.DataAccessor accessor) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        source.sendSuccess(accessor.getPrintSuccess((net.minecraft.nbt.Tag)accessor.getData()), false);
+    public static int getData(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.server.commands.data.DataAccessor $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        $$0.sendSuccess($$1.getPrintSuccess((net.minecraft.nbt.Tag)$$1.getData()), false);
         return 1;
     }
 
-    public static int mergeData(net.minecraft.commands.CommandSourceStack source, net.minecraft.server.commands.data.DataAccessor accessor, net.minecraft.nbt.CompoundTag nbt) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.nbt.CompoundTag compoundTag;
-        net.minecraft.nbt.CompoundTag compoundTag2 = accessor.getData();
-        if (compoundTag2.equals((java.lang.Object)(compoundTag = compoundTag2.copy().merge(nbt)))) {
+    public static int mergeData(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.server.commands.data.DataAccessor $$1, net.minecraft.nbt.CompoundTag $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.nbt.CompoundTag $$4;
+        net.minecraft.nbt.CompoundTag $$3 = $$1.getData();
+        if ($$3.equals((java.lang.Object)($$4 = $$3.copy().merge($$2)))) {
             throw ERROR_MERGE_UNCHANGED.create();
         }
-        accessor.setData(compoundTag);
-        source.sendSuccess(accessor.getModifiedSuccess(), true);
+        $$1.setData($$4);
+        $$0.sendSuccess($$1.getModifiedSuccess(), true);
         return 1;
     }
 