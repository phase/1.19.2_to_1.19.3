--- net/minecraft/server/commands/FunctionCommand.java
+++ net/minecraft/server/commands/FunctionCommand.java
@@ -10,21 +10,21 @@
     public net.minecraft.server.commands.FunctionCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"function").requires($$0 -> $$0.hasPermission(2))).then(net.minecraft.commands.Commands.argument((java.lang.String)"name", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.item.FunctionArgument.functions()).suggests(SUGGEST_FUNCTION).executes($$0 -> net.minecraft.server.commands.FunctionCommand.runFunction((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.item.FunctionArgument.getFunctions((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"name")))));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"function").requires($$0 -> $$0.hasPermission(2))).then(net.minecraft.commands.Commands.argument((java.lang.String)"name", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.item.FunctionArgument.functions()).suggests(SUGGEST_FUNCTION).executes($$0 -> net.minecraft.server.commands.FunctionCommand.runFunction((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.item.FunctionArgument.getFunctions((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"name")))));
     }
 
-    public static int runFunction(net.minecraft.commands.CommandSourceStack source, java.util.Collection<net.minecraft.commands.CommandFunction> functions) {
-        int n = 0;
-        for (net.minecraft.commands.CommandFunction commandFunction : functions) {
-            n += source.getServer().getFunctions().execute(commandFunction, source.withSuppressedOutput().withMaximumPermission(2));
+    public static int runFunction(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<net.minecraft.commands.CommandFunction> $$1) {
+        int $$2 = 0;
+        for (net.minecraft.commands.CommandFunction $$3 : $$1) {
+            $$2 += $$0.getServer().getFunctions().execute($$3, $$0.withSuppressedOutput().withMaximumPermission(2));
         }
-        if (functions.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.function.success.single", (java.lang.Object[])new java.lang.Object[]{n, ((net.minecraft.commands.CommandFunction)functions.iterator().next()).getId()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.function.success.single", (java.lang.Object[])new java.lang.Object[]{$$2, ((net.minecraft.commands.CommandFunction)$$1.iterator().next()).getId()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.function.success.multiple", (java.lang.Object[])new java.lang.Object[]{n, functions.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.function.success.multiple", (java.lang.Object[])new java.lang.Object[]{$$2, $$1.size()}), true);
         }
-        return n;
+        return $$2;
     }
 
     public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$0(com.mojang.brigadier.context.CommandContext $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {