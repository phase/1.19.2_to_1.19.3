--- net/minecraft/server/commands/TeamCommand.java
+++ net/minecraft/server/commands/TeamCommand.java
@@ -20,169 +20,169 @@
     public net.minecraft.server.commands.TeamCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"team").requires($$0 -> $$0.hasPermission(2))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"list").executes($$0 -> net.minecraft.server.commands.TeamCommand.listTeams((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource())))).then(net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.listMembers((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.server.commands.TeamCommand.createTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))).then(net.minecraft.commands.Commands.argument((java.lang.String)"displayName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.createTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"displayName"))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"remove").then(net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.deleteTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"empty").then(net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.emptyTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"join").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.joinTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (java.util.Collection)java.util.Collections.singleton((java.lang.Object)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getEntityOrException().getScoreboardName())))).then(net.minecraft.commands.Commands.argument((java.lang.String)"members", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ScoreHolderArgument.scoreHolders()).suggests(net.minecraft.commands.arguments.ScoreHolderArgument.SUGGEST_SCORE_HOLDERS).executes($$0 -> net.minecraft.server.commands.TeamCommand.joinTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (java.util.Collection)net.minecraft.commands.arguments.ScoreHolderArgument.getNamesWithDefaultWildcard((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"members"))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"leave").then(net.minecraft.commands.Commands.argument((java.lang.String)"members", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ScoreHolderArgument.scoreHolders()).suggests(net.minecraft.commands.arguments.ScoreHolderArgument.SUGGEST_SCORE_HOLDERS).executes($$0 -> net.minecraft.server.commands.TeamCommand.leaveTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.ScoreHolderArgument.getNamesWithDefaultWildcard((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"members")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"modify").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).then(net.minecraft.commands.Commands.literal((java.lang.String)"displayName").then(net.minecraft.commands.Commands.argument((java.lang.String)"displayName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setDisplayName((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"displayName")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"color").then(net.minecraft.commands.Commands.argument((java.lang.String)"value", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ColorArgument.color()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setColor((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.ChatFormatting)net.minecraft.commands.arguments.ColorArgument.getColor((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"value")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"friendlyFire").then(net.minecraft.commands.Commands.argument((java.lang.String)"allowed", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.BoolArgumentType.bool()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setFriendlyFire((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"allowed")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"seeFriendlyInvisibles").then(net.minecraft.commands.Commands.argument((java.lang.String)"allowed", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.BoolArgumentType.bool()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setFriendlySight((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"allowed")))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"nametagVisibility").then(net.minecraft.commands.Commands.literal((java.lang.String)"never").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.NEVER)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOtherTeams").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OTHER_TEAMS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOwnTeam").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OWN_TEAM)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"always").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.ALWAYS))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"deathMessageVisibility").then(net.minecraft.commands.Commands.literal((java.lang.String)"never").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.NEVER)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOtherTeams").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OTHER_TEAMS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOwnTeam").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OWN_TEAM)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"always").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.ALWAYS))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"collisionRule").then(net.minecraft.commands.Commands.literal((java.lang.String)"never").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.NEVER)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"pushOwnTeam").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.PUSH_OWN_TEAM)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"pushOtherTeams").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.PUSH_OTHER_TEAMS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"always").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.ALWAYS))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"prefix").then(net.minecraft.commands.Commands.argument((java.lang.String)"prefix", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setPrefix((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"prefix")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"suffix").then(net.minecraft.commands.Commands.argument((java.lang.String)"suffix", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setSuffix((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"suffix"))))))));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"team").requires($$0 -> $$0.hasPermission(2))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"list").executes($$0 -> net.minecraft.server.commands.TeamCommand.listTeams((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource())))).then(net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.listMembers((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.server.commands.TeamCommand.createTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))).then(net.minecraft.commands.Commands.argument((java.lang.String)"displayName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.createTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"displayName"))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"remove").then(net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.deleteTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"empty").then(net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.emptyTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"join").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).executes($$0 -> net.minecraft.server.commands.TeamCommand.joinTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (java.util.Collection)java.util.Collections.singleton((java.lang.Object)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getEntityOrException().getScoreboardName())))).then(net.minecraft.commands.Commands.argument((java.lang.String)"members", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ScoreHolderArgument.scoreHolders()).suggests(net.minecraft.commands.arguments.ScoreHolderArgument.SUGGEST_SCORE_HOLDERS).executes($$0 -> net.minecraft.server.commands.TeamCommand.joinTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (java.util.Collection)net.minecraft.commands.arguments.ScoreHolderArgument.getNamesWithDefaultWildcard((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"members"))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"leave").then(net.minecraft.commands.Commands.argument((java.lang.String)"members", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ScoreHolderArgument.scoreHolders()).suggests(net.minecraft.commands.arguments.ScoreHolderArgument.SUGGEST_SCORE_HOLDERS).executes($$0 -> net.minecraft.server.commands.TeamCommand.leaveTeam((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.ScoreHolderArgument.getNamesWithDefaultWildcard((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"members")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"modify").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"team", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.TeamArgument.team()).then(net.minecraft.commands.Commands.literal((java.lang.String)"displayName").then(net.minecraft.commands.Commands.argument((java.lang.String)"displayName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setDisplayName((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"displayName")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"color").then(net.minecraft.commands.Commands.argument((java.lang.String)"value", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ColorArgument.color()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setColor((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.ChatFormatting)net.minecraft.commands.arguments.ColorArgument.getColor((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"value")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"friendlyFire").then(net.minecraft.commands.Commands.argument((java.lang.String)"allowed", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.BoolArgumentType.bool()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setFriendlyFire((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"allowed")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"seeFriendlyInvisibles").then(net.minecraft.commands.Commands.argument((java.lang.String)"allowed", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.BoolArgumentType.bool()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setFriendlySight((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"allowed")))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"nametagVisibility").then(net.minecraft.commands.Commands.literal((java.lang.String)"never").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.NEVER)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOtherTeams").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OTHER_TEAMS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOwnTeam").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OWN_TEAM)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"always").executes($$0 -> net.minecraft.server.commands.TeamCommand.setNametagVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.ALWAYS))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"deathMessageVisibility").then(net.minecraft.commands.Commands.literal((java.lang.String)"never").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.NEVER)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOtherTeams").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OTHER_TEAMS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"hideForOwnTeam").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.HIDE_FOR_OWN_TEAM)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"always").executes($$0 -> net.minecraft.server.commands.TeamCommand.setDeathMessageVisibility((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$Visibility)net.minecraft.world.scores.Team$Visibility.ALWAYS))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"collisionRule").then(net.minecraft.commands.Commands.literal((java.lang.String)"never").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.NEVER)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"pushOwnTeam").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.PUSH_OWN_TEAM)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"pushOtherTeams").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.PUSH_OTHER_TEAMS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"always").executes($$0 -> net.minecraft.server.commands.TeamCommand.setCollision((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.world.scores.Team$CollisionRule)net.minecraft.world.scores.Team$CollisionRule.ALWAYS))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"prefix").then(net.minecraft.commands.Commands.argument((java.lang.String)"prefix", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setPrefix((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"prefix")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"suffix").then(net.minecraft.commands.Commands.argument((java.lang.String)"suffix", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ComponentArgument.textComponent()).executes($$0 -> net.minecraft.server.commands.TeamCommand.setSuffix((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.PlayerTeam)net.minecraft.commands.arguments.TeamArgument.getTeam((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"team"), (net.minecraft.network.chat.Component)net.minecraft.commands.arguments.ComponentArgument.getComponent((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"suffix"))))))));
     }
 
-    public static int leaveTeam(net.minecraft.commands.CommandSourceStack source, java.util.Collection<java.lang.String> players) {
-        net.minecraft.server.ServerScoreboard serverScoreboard = source.getServer().getScoreboard();
-        for (java.lang.String string : players) {
-            serverScoreboard.removePlayerFromTeam(string);
+    public static int leaveTeam(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<java.lang.String> $$1) {
+        net.minecraft.server.ServerScoreboard $$2 = $$0.getServer().getScoreboard();
+        for (java.lang.String $$3 : $$1) {
+            $$2.removePlayerFromTeam($$3);
         }
-        if (players.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.leave.success.single", (java.lang.Object[])new java.lang.Object[]{players.iterator().next()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.leave.success.single", (java.lang.Object[])new java.lang.Object[]{$$1.iterator().next()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.leave.success.multiple", (java.lang.Object[])new java.lang.Object[]{players.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.leave.success.multiple", (java.lang.Object[])new java.lang.Object[]{$$1.size()}), true);
         }
-        return players.size();
+        return $$1.size();
     }
 
-    public static int joinTeam(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, java.util.Collection<java.lang.String> players) {
-        net.minecraft.server.ServerScoreboard serverScoreboard = source.getServer().getScoreboard();
-        for (java.lang.String string : players) {
-            serverScoreboard.addPlayerToTeam(string, team);
+    public static int joinTeam(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, java.util.Collection<java.lang.String> $$2) {
+        net.minecraft.server.ServerScoreboard $$3 = $$0.getServer().getScoreboard();
+        for (java.lang.String $$4 : $$2) {
+            $$3.addPlayerToTeam($$4, $$1);
         }
-        if (players.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.join.success.single", (java.lang.Object[])new java.lang.Object[]{players.iterator().next(), team.getFormattedDisplayName()}), true);
+        if ($$2.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.join.success.single", (java.lang.Object[])new java.lang.Object[]{$$2.iterator().next(), $$1.getFormattedDisplayName()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.join.success.multiple", (java.lang.Object[])new java.lang.Object[]{players.size(), team.getFormattedDisplayName()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.join.success.multiple", (java.lang.Object[])new java.lang.Object[]{$$2.size(), $$1.getFormattedDisplayName()}), true);
         }
-        return players.size();
+        return $$2.size();
     }
 
-    public static int setNametagVisibility(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, net.minecraft.world.scores.Team$Visibility visibility) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (team.getNameTagVisibility() == visibility) {
+    public static int setNametagVisibility(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, net.minecraft.world.scores.Team$Visibility $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1.getNameTagVisibility() == $$2) {
             throw ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED.create();
         }
-        team.setNameTagVisibility(visibility);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.nametagVisibility.success", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName(), visibility.getDisplayName()}), true);
+        $$1.setNameTagVisibility($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.nametagVisibility.success", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName(), $$2.getDisplayName()}), true);
         return 0;
     }
 
-    public static int setDeathMessageVisibility(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, net.minecraft.world.scores.Team$Visibility visibility) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (team.getDeathMessageVisibility() == visibility) {
+    public static int setDeathMessageVisibility(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, net.minecraft.world.scores.Team$Visibility $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1.getDeathMessageVisibility() == $$2) {
             throw ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED.create();
         }
-        team.setDeathMessageVisibility(visibility);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.deathMessageVisibility.success", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName(), visibility.getDisplayName()}), true);
+        $$1.setDeathMessageVisibility($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.deathMessageVisibility.success", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName(), $$2.getDisplayName()}), true);
         return 0;
     }
 
-    public static int setCollision(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, net.minecraft.world.scores.Team$CollisionRule rule) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (team.getCollisionRule() == rule) {
+    public static int setCollision(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, net.minecraft.world.scores.Team$CollisionRule $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1.getCollisionRule() == $$2) {
             throw ERROR_TEAM_COLLISION_UNCHANGED.create();
         }
-        team.setCollisionRule(rule);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.collisionRule.success", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName(), rule.getDisplayName()}), true);
+        $$1.setCollisionRule($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.collisionRule.success", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName(), $$2.getDisplayName()}), true);
         return 0;
     }
 
-    public static int setFriendlySight(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, boolean value) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (team.canSeeFriendlyInvisibles() == value) {
-            if (value) {
+    public static int setFriendlySight(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1.canSeeFriendlyInvisibles() == $$2) {
+            if ($$2) {
                 throw ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED.create();
             }
             throw ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED.create();
         }
-        team.setSeeFriendlyInvisibles(value);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.team.option.seeFriendlyInvisibles." + (value ? "enabled" : "disabled")), (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName()}), true);
+        $$1.setSeeFriendlyInvisibles($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.team.option.seeFriendlyInvisibles." + ($$2 ? "enabled" : "disabled")), (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName()}), true);
         return 0;
     }
 
-    public static int setFriendlyFire(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, boolean value) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (team.isAllowFriendlyFire() == value) {
-            if (value) {
+    public static int setFriendlyFire(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1.isAllowFriendlyFire() == $$2) {
+            if ($$2) {
                 throw ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED.create();
             }
             throw ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED.create();
         }
-        team.setAllowFriendlyFire(value);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.team.option.friendlyfire." + (value ? "enabled" : "disabled")), (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName()}), true);
+        $$1.setAllowFriendlyFire($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.team.option.friendlyfire." + ($$2 ? "enabled" : "disabled")), (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName()}), true);
         return 0;
     }
 
-    public static int setDisplayName(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, net.minecraft.network.chat.Component value) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (team.getDisplayName().equals((java.lang.Object)value)) {
+    public static int setDisplayName(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, net.minecraft.network.chat.Component $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1.getDisplayName().equals((java.lang.Object)$$2)) {
             throw ERROR_TEAM_ALREADY_NAME.create();
         }
-        team.setDisplayName(value);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.name.success", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName()}), true);
+        $$1.setDisplayName($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.name.success", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName()}), true);
         return 0;
     }
 
-    public static int setColor(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, net.minecraft.ChatFormatting value) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (team.getColor() == value) {
+    public static int setColor(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, net.minecraft.ChatFormatting $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1.getColor() == $$2) {
             throw ERROR_TEAM_ALREADY_COLOR.create();
         }
-        team.setColor(value);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.color.success", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName(), value.getName()}), true);
+        $$1.setColor($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.color.success", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName(), $$2.getName()}), true);
         return 0;
     }
 
-    public static int emptyTeam(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.server.ServerScoreboard serverScoreboard = source.getServer().getScoreboard();
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList((java.lang.Iterable)team.getPlayers());
-        if (arrayList.isEmpty()) {
+    public static int emptyTeam(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.server.ServerScoreboard $$2 = $$0.getServer().getScoreboard();
+        java.util.ArrayList $$3 = com.google.common.collect.Lists.newArrayList((java.lang.Iterable)$$1.getPlayers());
+        if ($$3.isEmpty()) {
             throw ERROR_TEAM_ALREADY_EMPTY.create();
         }
-        for (java.lang.String string : arrayList) {
-            serverScoreboard.removePlayerFromTeam(string, team);
+        for (java.lang.String $$4 : $$3) {
+            $$2.removePlayerFromTeam($$4, $$1);
         }
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.empty.success", (java.lang.Object[])new java.lang.Object[]{arrayList.size(), team.getFormattedDisplayName()}), true);
-        return arrayList.size();
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.empty.success", (java.lang.Object[])new java.lang.Object[]{$$3.size(), $$1.getFormattedDisplayName()}), true);
+        return $$3.size();
     }
 
-    public static int deleteTeam(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team) {
-        net.minecraft.server.ServerScoreboard serverScoreboard = source.getServer().getScoreboard();
-        serverScoreboard.removePlayerTeam(team);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.remove.success", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName()}), true);
-        return serverScoreboard.getPlayerTeams().size();
+    public static int deleteTeam(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1) {
+        net.minecraft.server.ServerScoreboard $$2 = $$0.getServer().getScoreboard();
+        $$2.removePlayerTeam($$1);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.remove.success", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName()}), true);
+        return $$2.getPlayerTeams().size();
     }
 
-    public static int createTeam(net.minecraft.commands.CommandSourceStack source, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return net.minecraft.server.commands.TeamCommand.createTeam((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)name, (net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)name));
+    public static int createTeam(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return net.minecraft.server.commands.TeamCommand.createTeam((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)$$1, (net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)$$1));
     }
 
-    public static int createTeam(net.minecraft.commands.CommandSourceStack source, java.lang.String name, net.minecraft.network.chat.Component displayName) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.server.ServerScoreboard serverScoreboard = source.getServer().getScoreboard();
-        if (serverScoreboard.getPlayerTeam(name) != null) {
+    public static int createTeam(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1, net.minecraft.network.chat.Component $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.server.ServerScoreboard $$3 = $$0.getServer().getScoreboard();
+        if ($$3.getPlayerTeam($$1) != null) {
             throw ERROR_TEAM_ALREADY_EXISTS.create();
         }
-        net.minecraft.world.scores.PlayerTeam playerTeam = serverScoreboard.addPlayerTeam(name);
-        playerTeam.setDisplayName(displayName);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.add.success", (java.lang.Object[])new java.lang.Object[]{playerTeam.getFormattedDisplayName()}), true);
-        return serverScoreboard.getPlayerTeams().size();
+        net.minecraft.world.scores.PlayerTeam $$4 = $$3.addPlayerTeam($$1);
+        $$4.setDisplayName($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.add.success", (java.lang.Object[])new java.lang.Object[]{$$4.getFormattedDisplayName()}), true);
+        return $$3.getPlayerTeams().size();
     }
 
-    public static int listMembers(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team) {
-        java.util.Collection collection = team.getPlayers();
-        if (collection.isEmpty()) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.members.empty", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName()}), false);
+    public static int listMembers(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1) {
+        java.util.Collection $$2 = $$1.getPlayers();
+        if ($$2.isEmpty()) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.members.empty", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName()}), false);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.members.success", (java.lang.Object[])new java.lang.Object[]{team.getFormattedDisplayName(), collection.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)collection)}), false);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.members.success", (java.lang.Object[])new java.lang.Object[]{$$1.getFormattedDisplayName(), $$2.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)$$2)}), false);
         }
-        return collection.size();
+        return $$2.size();
     }
 
-    public static int listTeams(net.minecraft.commands.CommandSourceStack source) {
-        java.util.Collection collection = source.getServer().getScoreboard().getPlayerTeams();
-        if (collection.isEmpty()) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.teams.empty"), false);
+    public static int listTeams(net.minecraft.commands.CommandSourceStack $$0) {
+        java.util.Collection $$1 = $$0.getServer().getScoreboard().getPlayerTeams();
+        if ($$1.isEmpty()) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.teams.empty"), false);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.teams.success", (java.lang.Object[])new java.lang.Object[]{collection.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)collection, net.minecraft.world.scores.PlayerTeam::getFormattedDisplayName)}), false);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.list.teams.success", (java.lang.Object[])new java.lang.Object[]{$$1.size(), net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)$$1, net.minecraft.world.scores.PlayerTeam::getFormattedDisplayName)}), false);
         }
-        return collection.size();
+        return $$1.size();
     }
 
-    public static int setPrefix(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, net.minecraft.network.chat.Component prefix) {
-        team.setPlayerPrefix(prefix);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.prefix.success", (java.lang.Object[])new java.lang.Object[]{prefix}), false);
+    public static int setPrefix(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, net.minecraft.network.chat.Component $$2) {
+        $$1.setPlayerPrefix($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.prefix.success", (java.lang.Object[])new java.lang.Object[]{$$2}), false);
         return 1;
     }
 
-    public static int setSuffix(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.PlayerTeam team, net.minecraft.network.chat.Component suffix) {
-        team.setPlayerSuffix(suffix);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.suffix.success", (java.lang.Object[])new java.lang.Object[]{suffix}), false);
+    public static int setSuffix(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.PlayerTeam $$1, net.minecraft.network.chat.Component $$2) {
+        $$1.setPlayerSuffix($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.team.option.suffix.success", (java.lang.Object[])new java.lang.Object[]{$$2}), false);
         return 1;
     }
 