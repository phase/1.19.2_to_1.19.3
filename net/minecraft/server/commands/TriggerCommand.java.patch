--- net/minecraft/server/commands/TriggerCommand.java
+++ net/minecraft/server/commands/TriggerCommand.java
@@ -11,58 +11,58 @@
     public net.minecraft.server.commands.TriggerCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"trigger").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"objective", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ObjectiveArgument.objective()).suggests(($$0, $$1) -> net.minecraft.server.commands.TriggerCommand.suggestObjectives((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1)).executes($$0 -> net.minecraft.server.commands.TriggerCommand.simpleTrigger((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.Score)net.minecraft.server.commands.TriggerCommand.getScore((net.minecraft.server.level.ServerPlayer)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getPlayerOrException(), (net.minecraft.world.scores.Objective)net.minecraft.commands.arguments.ObjectiveArgument.getObjective((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"objective"))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"value", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.server.commands.TriggerCommand.addValue((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.Score)net.minecraft.server.commands.TriggerCommand.getScore((net.minecraft.server.level.ServerPlayer)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getPlayerOrException(), (net.minecraft.world.scores.Objective)net.minecraft.commands.arguments.ObjectiveArgument.getObjective((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"objective")), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"value")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"set").then(net.minecraft.commands.Commands.argument((java.lang.String)"value", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.server.commands.TriggerCommand.setValue((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.Score)net.minecraft.server.commands.TriggerCommand.getScore((net.minecraft.server.level.ServerPlayer)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getPlayerOrException(), (net.minecraft.world.scores.Objective)net.minecraft.commands.arguments.ObjectiveArgument.getObjective((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"objective")), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"value")))))));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"trigger").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"objective", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ObjectiveArgument.objective()).suggests(($$0, $$1) -> net.minecraft.server.commands.TriggerCommand.suggestObjectives((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1)).executes($$0 -> net.minecraft.server.commands.TriggerCommand.simpleTrigger((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.Score)net.minecraft.server.commands.TriggerCommand.getScore((net.minecraft.server.level.ServerPlayer)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getPlayerOrException(), (net.minecraft.world.scores.Objective)net.minecraft.commands.arguments.ObjectiveArgument.getObjective((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"objective"))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"value", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.server.commands.TriggerCommand.addValue((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.Score)net.minecraft.server.commands.TriggerCommand.getScore((net.minecraft.server.level.ServerPlayer)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getPlayerOrException(), (net.minecraft.world.scores.Objective)net.minecraft.commands.arguments.ObjectiveArgument.getObjective((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"objective")), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"value")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"set").then(net.minecraft.commands.Commands.argument((java.lang.String)"value", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.server.commands.TriggerCommand.setValue((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.world.scores.Score)net.minecraft.server.commands.TriggerCommand.getScore((net.minecraft.server.level.ServerPlayer)((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getPlayerOrException(), (net.minecraft.world.scores.Objective)net.minecraft.commands.arguments.ObjectiveArgument.getObjective((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"objective")), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"value")))))));
     }
 
-    public static java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> suggestObjectives(net.minecraft.commands.CommandSourceStack source, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) {
-        net.minecraft.world.entity.Entity entity = source.getEntity();
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        if (entity != null) {
-            net.minecraft.server.ServerScoreboard serverScoreboard = source.getServer().getScoreboard();
-            java.lang.String string = entity.getScoreboardName();
-            for (net.minecraft.world.scores.Objective objective : serverScoreboard.getObjectives()) {
-                net.minecraft.world.scores.Score score;
-                if (objective.getCriteria() != net.minecraft.world.scores.criteria.ObjectiveCriteria.TRIGGER || !serverScoreboard.hasPlayerScore(string, objective) || (score = serverScoreboard.getOrCreatePlayerScore(string, objective)).isLocked()) continue;
-                arrayList.add((java.lang.Object)objective.getName());
+    public static java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> suggestObjectives(net.minecraft.commands.CommandSourceStack $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) {
+        net.minecraft.world.entity.Entity $$2 = $$0.getEntity();
+        java.util.ArrayList $$3 = com.google.common.collect.Lists.newArrayList();
+        if ($$2 != null) {
+            net.minecraft.server.ServerScoreboard $$4 = $$0.getServer().getScoreboard();
+            java.lang.String $$5 = $$2.getScoreboardName();
+            for (net.minecraft.world.scores.Objective $$6 : $$4.getObjectives()) {
+                net.minecraft.world.scores.Score $$7;
+                if ($$6.getCriteria() != net.minecraft.world.scores.criteria.ObjectiveCriteria.TRIGGER || !$$4.hasPlayerScore($$5, $$6) || ($$7 = $$4.getOrCreatePlayerScore($$5, $$6)).isLocked()) continue;
+                $$3.add((java.lang.Object)$$6.getName());
             }
         }
-        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)arrayList, (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder);
+        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)$$3, (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
     }
 
-    public static int addValue(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.Score objective, int amount) {
-        objective.add(amount);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.trigger.add.success", (java.lang.Object[])new java.lang.Object[]{objective.getObjective().getFormattedDisplayName(), amount}), true);
-        return objective.getScore();
+    public static int addValue(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.Score $$1, int $$2) {
+        $$1.add($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.trigger.add.success", (java.lang.Object[])new java.lang.Object[]{$$1.getObjective().getFormattedDisplayName(), $$2}), true);
+        return $$1.getScore();
     }
 
-    public static int setValue(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.Score objective, int value) {
-        objective.setScore(value);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.trigger.set.success", (java.lang.Object[])new java.lang.Object[]{objective.getObjective().getFormattedDisplayName(), value}), true);
-        return value;
+    public static int setValue(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.Score $$1, int $$2) {
+        $$1.setScore($$2);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.trigger.set.success", (java.lang.Object[])new java.lang.Object[]{$$1.getObjective().getFormattedDisplayName(), $$2}), true);
+        return $$2;
     }
 
-    public static int simpleTrigger(net.minecraft.commands.CommandSourceStack source, net.minecraft.world.scores.Score objectives) {
-        objectives.add(1);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.trigger.simple.success", (java.lang.Object[])new java.lang.Object[]{objectives.getObjective().getFormattedDisplayName()}), true);
-        return objectives.getScore();
+    public static int simpleTrigger(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.world.scores.Score $$1) {
+        $$1.add(1);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.trigger.simple.success", (java.lang.Object[])new java.lang.Object[]{$$1.getObjective().getFormattedDisplayName()}), true);
+        return $$1.getScore();
     }
 
-    public static net.minecraft.world.scores.Score getScore(net.minecraft.server.level.ServerPlayer player, net.minecraft.world.scores.Objective objective) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        java.lang.String string;
-        if (objective.getCriteria() != net.minecraft.world.scores.criteria.ObjectiveCriteria.TRIGGER) {
+    public static net.minecraft.world.scores.Score getScore(net.minecraft.server.level.ServerPlayer $$0, net.minecraft.world.scores.Objective $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        java.lang.String $$3;
+        if ($$1.getCriteria() != net.minecraft.world.scores.criteria.ObjectiveCriteria.TRIGGER) {
             throw ERROR_INVALID_OBJECTIVE.create();
         }
-        net.minecraft.world.scores.Scoreboard scoreboard = player.getScoreboard();
-        if (!scoreboard.hasPlayerScore(string = player.getScoreboardName(), objective)) {
+        net.minecraft.world.scores.Scoreboard $$2 = $$0.getScoreboard();
+        if (!$$2.hasPlayerScore($$3 = $$0.getScoreboardName(), $$1)) {
             throw ERROR_NOT_PRIMED.create();
         }
-        net.minecraft.world.scores.Score score = scoreboard.getOrCreatePlayerScore(string, objective);
-        if (score.isLocked()) {
+        net.minecraft.world.scores.Score $$4 = $$2.getOrCreatePlayerScore($$3, $$1);
+        if ($$4.isLocked()) {
             throw ERROR_NOT_PRIMED.create();
         }
-        score.setLocked(true);
-        return score;
+        $$4.setLocked(true);
+        return $$4;
     }
 
     static {