--- net/minecraft/server/commands/StopSoundCommand.java
+++ net/minecraft/server/commands/StopSoundCommand.java
@@ -8,31 +8,31 @@
     public net.minecraft.server.commands.StopSoundCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        com.mojang.brigadier.builder.RequiredArgumentBuilder requiredArgumentBuilder = (com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).executes($$0 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), null, null))).then(net.minecraft.commands.Commands.literal((java.lang.String)"*").then(net.minecraft.commands.Commands.argument((java.lang.String)"sound", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.AVAILABLE_SOUNDS).executes($$0 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), null, (net.minecraft.resources.ResourceLocation)net.minecraft.commands.arguments.ResourceLocationArgument.getId((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"sound")))));
-        for (net.minecraft.sounds.SoundSource soundSource : net.minecraft.sounds.SoundSource.values()) {
-            requiredArgumentBuilder.then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)soundSource.getName()).executes($$1 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"targets"), (net.minecraft.sounds.SoundSource)soundSource, null))).then(net.minecraft.commands.Commands.argument((java.lang.String)"sound", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.AVAILABLE_SOUNDS).executes($$1 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"targets"), (net.minecraft.sounds.SoundSource)soundSource, (net.minecraft.resources.ResourceLocation)net.minecraft.commands.arguments.ResourceLocationArgument.getId((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"sound")))));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        com.mojang.brigadier.builder.RequiredArgumentBuilder $$12 = (com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).executes($$0 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), null, null))).then(net.minecraft.commands.Commands.literal((java.lang.String)"*").then(net.minecraft.commands.Commands.argument((java.lang.String)"sound", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.AVAILABLE_SOUNDS).executes($$0 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), null, (net.minecraft.resources.ResourceLocation)net.minecraft.commands.arguments.ResourceLocationArgument.getId((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"sound")))));
+        for (net.minecraft.sounds.SoundSource $$2 : net.minecraft.sounds.SoundSource.values()) {
+            $$12.then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)$$2.getName()).executes($$1 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"targets"), (net.minecraft.sounds.SoundSource)$$2, null))).then(net.minecraft.commands.Commands.argument((java.lang.String)"sound", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.ResourceLocationArgument.id()).suggests(net.minecraft.commands.synchronization.SuggestionProviders.AVAILABLE_SOUNDS).executes($$1 -> net.minecraft.server.commands.StopSoundCommand.stopSound((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$1.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"targets"), (net.minecraft.sounds.SoundSource)$$2, (net.minecraft.resources.ResourceLocation)net.minecraft.commands.arguments.ResourceLocationArgument.getId((com.mojang.brigadier.context.CommandContext)$$1, (java.lang.String)"sound")))));
         }
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"stopsound").requires($$0 -> $$0.hasPermission(2))).then((com.mojang.brigadier.builder.ArgumentBuilder)requiredArgumentBuilder));
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"stopsound").requires($$0 -> $$0.hasPermission(2))).then((com.mojang.brigadier.builder.ArgumentBuilder)$$12));
     }
 
-    public static int stopSound(net.minecraft.commands.CommandSourceStack source, java.util.Collection<net.minecraft.server.level.ServerPlayer> targets, @javax.annotation.Nullable net.minecraft.sounds.SoundSource category, @javax.annotation.Nullable net.minecraft.resources.ResourceLocation sound) {
-        net.minecraft.network.protocol.game.ClientboundStopSoundPacket clientboundStopSoundPacket = new net.minecraft.network.protocol.game.ClientboundStopSoundPacket(sound, category);
-        for (net.minecraft.server.level.ServerPlayer serverPlayer : targets) {
-            serverPlayer.connection.send((net.minecraft.network.protocol.Packet)clientboundStopSoundPacket);
+    public static int stopSound(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<net.minecraft.server.level.ServerPlayer> $$1, @javax.annotation.Nullable net.minecraft.sounds.SoundSource $$2, @javax.annotation.Nullable net.minecraft.resources.ResourceLocation $$3) {
+        net.minecraft.network.protocol.game.ClientboundStopSoundPacket $$4 = new net.minecraft.network.protocol.game.ClientboundStopSoundPacket($$3, $$2);
+        for (net.minecraft.server.level.ServerPlayer $$5 : $$1) {
+            $$5.connection.send((net.minecraft.network.protocol.Packet)$$4);
         }
-        if (category != null) {
-            if (sound != null) {
-                source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.source.sound", (java.lang.Object[])new java.lang.Object[]{sound, category.getName()}), true);
+        if ($$2 != null) {
+            if ($$3 != null) {
+                $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.source.sound", (java.lang.Object[])new java.lang.Object[]{$$3, $$2.getName()}), true);
             } else {
-                source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.source.any", (java.lang.Object[])new java.lang.Object[]{category.getName()}), true);
+                $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.source.any", (java.lang.Object[])new java.lang.Object[]{$$2.getName()}), true);
             }
-        } else if (sound != null) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.sourceless.sound", (java.lang.Object[])new java.lang.Object[]{sound}), true);
+        } else if ($$3 != null) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.sourceless.sound", (java.lang.Object[])new java.lang.Object[]{$$3}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.sourceless.any"), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.stopsound.success.sourceless.any"), true);
         }
-        return targets.size();
+        return $$1.size();
     }
 }
 