--- net/minecraft/server/commands/ExperienceCommand.java
+++ net/minecraft/server/commands/ExperienceCommand.java
@@ -10,44 +10,44 @@
     public net.minecraft.server.commands.ExperienceCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        com.mojang.brigadier.tree.LiteralCommandNode literalCommandNode = dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"experience").requires($$0 -> $$0.hasPermission(2))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"amount", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.server.commands.ExperienceCommand.addExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS))).then(net.minecraft.commands.Commands.literal((java.lang.String)"points").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.addExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"levels").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.addExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.LEVELS))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"set").then(net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"amount", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer((int)0)).executes($$0 -> net.minecraft.server.commands.ExperienceCommand.setExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS))).then(net.minecraft.commands.Commands.literal((java.lang.String)"points").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.setExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"levels").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.setExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.LEVELS))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"query").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.player()).then(net.minecraft.commands.Commands.literal((java.lang.String)"points").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.queryExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.server.level.ServerPlayer)net.minecraft.commands.arguments.EntityArgument.getPlayer((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"levels").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.queryExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.server.level.ServerPlayer)net.minecraft.commands.arguments.EntityArgument.getPlayer((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.LEVELS))))));
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"xp").requires($$0 -> $$0.hasPermission(2))).redirect((com.mojang.brigadier.tree.CommandNode)literalCommandNode));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        com.mojang.brigadier.tree.LiteralCommandNode $$1 = $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"experience").requires($$0 -> $$0.hasPermission(2))).then(net.minecraft.commands.Commands.literal((java.lang.String)"add").then(net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"amount", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.server.commands.ExperienceCommand.addExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS))).then(net.minecraft.commands.Commands.literal((java.lang.String)"points").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.addExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"levels").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.addExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.LEVELS))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"set").then(net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.players()).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"amount", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer((int)0)).executes($$0 -> net.minecraft.server.commands.ExperienceCommand.setExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS))).then(net.minecraft.commands.Commands.literal((java.lang.String)"points").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.setExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"levels").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.setExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.util.Collection)net.minecraft.commands.arguments.EntityArgument.getPlayers((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"amount"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.LEVELS))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"query").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"targets", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.EntityArgument.player()).then(net.minecraft.commands.Commands.literal((java.lang.String)"points").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.queryExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.server.level.ServerPlayer)net.minecraft.commands.arguments.EntityArgument.getPlayer((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.POINTS)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"levels").executes($$0 -> net.minecraft.server.commands.ExperienceCommand.queryExperience((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.server.level.ServerPlayer)net.minecraft.commands.arguments.EntityArgument.getPlayer((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"targets"), (net.minecraft.server.commands.ExperienceCommand$Type)net.minecraft.server.commands.ExperienceCommand$Type.LEVELS))))));
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"xp").requires($$0 -> $$0.hasPermission(2))).redirect((com.mojang.brigadier.tree.CommandNode)$$1));
     }
 
-    public static int queryExperience(net.minecraft.commands.CommandSourceStack source, net.minecraft.server.level.ServerPlayer player, net.minecraft.server.commands.ExperienceCommand$Type type) {
-        int n = type.query.applyAsInt((java.lang.Object)player);
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.query." + type.name), (java.lang.Object[])new java.lang.Object[]{player.getDisplayName(), n}), false);
-        return n;
+    public static int queryExperience(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.server.level.ServerPlayer $$1, net.minecraft.server.commands.ExperienceCommand$Type $$2) {
+        int $$3 = $$2.query.applyAsInt((java.lang.Object)$$1);
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.query." + $$2.name), (java.lang.Object[])new java.lang.Object[]{$$1.getDisplayName(), $$3}), false);
+        return $$3;
     }
 
-    public static int addExperience(net.minecraft.commands.CommandSourceStack source, java.util.Collection<? extends net.minecraft.server.level.ServerPlayer> targets, int amount, net.minecraft.server.commands.ExperienceCommand$Type type) {
-        for (net.minecraft.server.level.ServerPlayer serverPlayer : targets) {
-            type.add.accept((java.lang.Object)serverPlayer, (java.lang.Object)amount);
+    public static int addExperience(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<? extends net.minecraft.server.level.ServerPlayer> $$1, int $$2, net.minecraft.server.commands.ExperienceCommand$Type $$3) {
+        for (net.minecraft.server.level.ServerPlayer $$4 : $$1) {
+            $$3.add.accept((java.lang.Object)$$4, (java.lang.Object)$$2);
         }
-        if (targets.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.add." + type.name + ".success.single"), (java.lang.Object[])new java.lang.Object[]{amount, ((net.minecraft.server.level.ServerPlayer)targets.iterator().next()).getDisplayName()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.add." + $$3.name + ".success.single"), (java.lang.Object[])new java.lang.Object[]{$$2, ((net.minecraft.server.level.ServerPlayer)$$1.iterator().next()).getDisplayName()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.add." + type.name + ".success.multiple"), (java.lang.Object[])new java.lang.Object[]{amount, targets.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.add." + $$3.name + ".success.multiple"), (java.lang.Object[])new java.lang.Object[]{$$2, $$1.size()}), true);
         }
-        return targets.size();
+        return $$1.size();
     }
 
-    public static int setExperience(net.minecraft.commands.CommandSourceStack source, java.util.Collection<? extends net.minecraft.server.level.ServerPlayer> targets, int amount, net.minecraft.server.commands.ExperienceCommand$Type type) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n = 0;
-        for (net.minecraft.server.level.ServerPlayer serverPlayer : targets) {
-            if (!type.set.test((java.lang.Object)serverPlayer, (java.lang.Object)amount)) continue;
-            ++n;
+    public static int setExperience(net.minecraft.commands.CommandSourceStack $$0, java.util.Collection<? extends net.minecraft.server.level.ServerPlayer> $$1, int $$2, net.minecraft.server.commands.ExperienceCommand$Type $$3) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        int $$4 = 0;
+        for (net.minecraft.server.level.ServerPlayer $$5 : $$1) {
+            if (!$$3.set.test((java.lang.Object)$$5, (java.lang.Object)$$2)) continue;
+            ++$$4;
         }
-        if (n == 0) {
+        if ($$4 == 0) {
             throw ERROR_SET_POINTS_INVALID.create();
         }
-        if (targets.size() == 1) {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.set." + type.name + ".success.single"), (java.lang.Object[])new java.lang.Object[]{amount, ((net.minecraft.server.level.ServerPlayer)targets.iterator().next()).getDisplayName()}), true);
+        if ($$1.size() == 1) {
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.set." + $$3.name + ".success.single"), (java.lang.Object[])new java.lang.Object[]{$$2, ((net.minecraft.server.level.ServerPlayer)$$1.iterator().next()).getDisplayName()}), true);
         } else {
-            source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.set." + type.name + ".success.multiple"), (java.lang.Object[])new java.lang.Object[]{amount, targets.size()}), true);
+            $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("commands.experience.set." + $$3.name + ".success.multiple"), (java.lang.Object[])new java.lang.Object[]{$$2, $$1.size()}), true);
         }
-        return targets.size();
+        return $$1.size();
     }
 
     static {