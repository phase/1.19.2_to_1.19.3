--- net/minecraft/server/commands/AdvancementCommands$Action$1.java
+++ net/minecraft/server/commands/AdvancementCommands$Action$1.java
@@ -10,19 +10,19 @@
         super(string, n, $$0);
     }
 
-    public boolean perform(net.minecraft.server.level.ServerPlayer player, net.minecraft.advancements.Advancement advancement) {
-        net.minecraft.advancements.AdvancementProgress advancementProgress = player.getAdvancements().getOrStartProgress(advancement);
-        if (advancementProgress.isDone()) {
+    public boolean perform(net.minecraft.server.level.ServerPlayer $$0, net.minecraft.advancements.Advancement $$1) {
+        net.minecraft.advancements.AdvancementProgress $$2 = $$0.getAdvancements().getOrStartProgress($$1);
+        if ($$2.isDone()) {
             return false;
         }
-        for (java.lang.String string : advancementProgress.getRemainingCriteria()) {
-            player.getAdvancements().award(advancement, string);
+        for (java.lang.String $$3 : $$2.getRemainingCriteria()) {
+            $$0.getAdvancements().award($$1, $$3);
         }
         return true;
     }
 
-    public boolean performCriterion(net.minecraft.server.level.ServerPlayer player, net.minecraft.advancements.Advancement advancement, java.lang.String criterionName) {
-        return player.getAdvancements().award(advancement, criterionName);
+    public boolean performCriterion(net.minecraft.server.level.ServerPlayer $$0, net.minecraft.advancements.Advancement $$1, java.lang.String $$2) {
+        return $$0.getAdvancements().award($$1, $$2);
     }
 }
 