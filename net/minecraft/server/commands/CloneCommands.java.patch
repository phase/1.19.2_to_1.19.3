--- net/minecraft/server/commands/CloneCommands.java
+++ net/minecraft/server/commands/CloneCommands.java
@@ -18,95 +18,93 @@
         $$03.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"clone").requires($$0 -> $$0.hasPermission(2))).then(net.minecraft.commands.Commands.argument((java.lang.String)"begin", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.coordinates.BlockPosArgument.blockPos()).then(net.minecraft.commands.Commands.argument((java.lang.String)"end", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.coordinates.BlockPosArgument.blockPos()).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"destination", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.coordinates.BlockPosArgument.blockPos()).executes($$02 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$02.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"destination"), $$0 -> true, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.NORMAL))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"replace").executes($$02 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$02.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"destination"), $$0 -> true, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.NORMAL))).then(net.minecraft.commands.Commands.literal((java.lang.String)"force").executes($$02 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$02.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"destination"), $$0 -> true, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.FORCE)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"move").executes($$02 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$02.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"destination"), $$0 -> true, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.MOVE)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"normal").executes($$02 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$02.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$02, (java.lang.String)"destination"), $$0 -> true, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.NORMAL))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"masked").executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)FILTER_AIR, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.NORMAL))).then(net.minecraft.commands.Commands.literal((java.lang.String)"force").executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)FILTER_AIR, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.FORCE)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"move").executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)FILTER_AIR, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.MOVE)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"normal").executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)FILTER_AIR, (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.NORMAL))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"filtered").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"filter", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.commands.arguments.blocks.BlockPredicateArgument.blockPredicate((net.minecraft.commands.CommandBuildContext)$$1)).executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)net.minecraft.commands.arguments.blocks.BlockPredicateArgument.getBlockPredicate((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"filter"), (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.NORMAL))).then(net.minecraft.commands.Commands.literal((java.lang.String)"force").executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)net.minecraft.commands.arguments.blocks.BlockPredicateArgument.getBlockPredicate((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"filter"), (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.FORCE)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"move").executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)net.minecraft.commands.arguments.blocks.BlockPredicateArgument.getBlockPredicate((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"filter"), (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.MOVE)))).then(net.minecraft.commands.Commands.literal((java.lang.String)"normal").executes($$0 -> net.minecraft.server.commands.CloneCommands.clone((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"begin"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"end"), (net.minecraft.core.BlockPos)net.minecraft.commands.arguments.coordinates.BlockPosArgument.getLoadedBlockPos((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"destination"), (java.util.function.Predicate)net.minecraft.commands.arguments.blocks.BlockPredicateArgument.getBlockPredicate((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"filter"), (net.minecraft.server.commands.CloneCommands$Mode)net.minecraft.server.commands.CloneCommands$Mode.NORMAL)))))))));
     }
 
-    public static int clone(net.minecraft.commands.CommandSourceStack source, net.minecraft.core.BlockPos beginPos, net.minecraft.core.BlockPos endPos, net.minecraft.core.BlockPos destPos, java.util.function.Predicate<net.minecraft.world.level.block.state.pattern.BlockInWorld> filterPredicate, net.minecraft.server.commands.CloneCommands$Mode cloneMode) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.world.level.block.state.pattern.BlockInWorld blockInWorld;
-        net.minecraft.core.BlockPos blockPos7;
-        net.minecraft.world.level.levelgen.structure.BoundingBox boundingBox = net.minecraft.world.level.levelgen.structure.BoundingBox.fromCorners((net.minecraft.core.Vec3i)beginPos, (net.minecraft.core.Vec3i)endPos);
-        net.minecraft.core.BlockPos blockPos2 = destPos.offset(boundingBox.getLength());
-        net.minecraft.world.level.levelgen.structure.BoundingBox boundingBox2 = net.minecraft.world.level.levelgen.structure.BoundingBox.fromCorners((net.minecraft.core.Vec3i)destPos, (net.minecraft.core.Vec3i)blockPos2);
-        if (!cloneMode.canOverlap() && boundingBox2.intersects(boundingBox)) {
+    public static int clone(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.core.BlockPos $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.BlockPos $$3, java.util.function.Predicate<net.minecraft.world.level.block.state.pattern.BlockInWorld> $$4, net.minecraft.server.commands.CloneCommands$Mode $$5) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.world.level.levelgen.structure.BoundingBox $$6 = net.minecraft.world.level.levelgen.structure.BoundingBox.fromCorners((net.minecraft.core.Vec3i)$$1, (net.minecraft.core.Vec3i)$$2);
+        net.minecraft.core.BlockPos $$7 = $$3.offset($$6.getLength());
+        net.minecraft.world.level.levelgen.structure.BoundingBox $$8 = net.minecraft.world.level.levelgen.structure.BoundingBox.fromCorners((net.minecraft.core.Vec3i)$$3, (net.minecraft.core.Vec3i)$$7);
+        if (!$$5.canOverlap() && $$8.intersects($$6)) {
             throw ERROR_OVERLAP.create();
         }
-        int n = boundingBox.getXSpan() * boundingBox.getYSpan() * boundingBox.getZSpan();
-        if (n > 32768) {
-            throw ERROR_AREA_TOO_LARGE.create((java.lang.Object)32768, (java.lang.Object)n);
+        int $$9 = $$6.getXSpan() * $$6.getYSpan() * $$6.getZSpan();
+        if ($$9 > 32768) {
+            throw ERROR_AREA_TOO_LARGE.create((java.lang.Object)32768, (java.lang.Object)$$9);
         }
-        net.minecraft.server.level.ServerLevel serverLevel = source.getLevel();
-        if (!serverLevel.hasChunksAt(beginPos, endPos) || !serverLevel.hasChunksAt(destPos, blockPos2)) {
+        net.minecraft.server.level.ServerLevel $$10 = $$0.getLevel();
+        if (!$$10.hasChunksAt($$1, $$2) || !$$10.hasChunksAt($$3, $$7)) {
             throw net.minecraft.commands.arguments.coordinates.BlockPosArgument.ERROR_NOT_LOADED.create();
         }
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        java.util.ArrayList arrayList2 = com.google.common.collect.Lists.newArrayList();
-        java.util.ArrayList arrayList3 = com.google.common.collect.Lists.newArrayList();
-        java.util.LinkedList linkedList = com.google.common.collect.Lists.newLinkedList();
-        net.minecraft.core.BlockPos blockPos3 = new net.minecraft.core.BlockPos(boundingBox2.minX() - boundingBox.minX(), boundingBox2.minY() - boundingBox.minY(), boundingBox2.minZ() - boundingBox.minZ());
-        for (int i = boundingBox.minZ(); i <= boundingBox.maxZ(); ++i) {
-            for (int j = boundingBox.minY(); j <= boundingBox.maxY(); ++j) {
-                for (int k = boundingBox.minX(); k <= boundingBox.maxX(); ++k) {
-                    net.minecraft.core.BlockPos blockPos4 = new net.minecraft.core.BlockPos(k, j, i);
-                    blockPos7 = blockPos4.offset((net.minecraft.core.Vec3i)blockPos3);
-                    blockInWorld = new net.minecraft.world.level.block.state.pattern.BlockInWorld((net.minecraft.world.level.LevelReader)serverLevel, blockPos4, false);
-                    net.minecraft.world.level.block.state.BlockState blockState = blockInWorld.getState();
-                    if (!filterPredicate.test((java.lang.Object)blockInWorld)) continue;
-                    net.minecraft.world.level.block.entity.BlockEntity blockEntity = serverLevel.getBlockEntity(blockPos4);
-                    if (blockEntity != null) {
-                        net.minecraft.nbt.CompoundTag compoundTag = blockEntity.saveWithoutMetadata();
-                        arrayList2.add((java.lang.Object)new net.minecraft.server.commands.CloneCommands$CloneBlockInfo(blockPos7, blockState, compoundTag));
-                        linkedList.addLast((java.lang.Object)blockPos4);
+        java.util.ArrayList $$11 = com.google.common.collect.Lists.newArrayList();
+        java.util.ArrayList $$12 = com.google.common.collect.Lists.newArrayList();
+        java.util.ArrayList $$13 = com.google.common.collect.Lists.newArrayList();
+        java.util.LinkedList $$14 = com.google.common.collect.Lists.newLinkedList();
+        net.minecraft.core.BlockPos $$15 = new net.minecraft.core.BlockPos($$8.minX() - $$6.minX(), $$8.minY() - $$6.minY(), $$8.minZ() - $$6.minZ());
+        for (int $$16 = $$6.minZ(); $$16 <= $$6.maxZ(); ++$$16) {
+            for (int $$17 = $$6.minY(); $$17 <= $$6.maxY(); ++$$17) {
+                for (int $$18 = $$6.minX(); $$18 <= $$6.maxX(); ++$$18) {
+                    net.minecraft.core.BlockPos $$19 = new net.minecraft.core.BlockPos($$18, $$17, $$16);
+                    net.minecraft.core.BlockPos $$20 = $$19.offset((net.minecraft.core.Vec3i)$$15);
+                    net.minecraft.world.level.block.state.pattern.BlockInWorld $$21 = new net.minecraft.world.level.block.state.pattern.BlockInWorld((net.minecraft.world.level.LevelReader)$$10, $$19, false);
+                    net.minecraft.world.level.block.state.BlockState $$22 = $$21.getState();
+                    if (!$$4.test((java.lang.Object)$$21)) continue;
+                    net.minecraft.world.level.block.entity.BlockEntity $$23 = $$10.getBlockEntity($$19);
+                    if ($$23 != null) {
+                        net.minecraft.nbt.CompoundTag $$24 = $$23.saveWithoutMetadata();
+                        $$12.add((java.lang.Object)new net.minecraft.server.commands.CloneCommands$CloneBlockInfo($$20, $$22, $$24));
+                        $$14.addLast((java.lang.Object)$$19);
                         continue;
                     }
-                    if (blockState.isSolidRender((net.minecraft.world.level.BlockGetter)serverLevel, blockPos4) || blockState.isCollisionShapeFullBlock((net.minecraft.world.level.BlockGetter)serverLevel, blockPos4)) {
-                        arrayList.add((java.lang.Object)new net.minecraft.server.commands.CloneCommands$CloneBlockInfo(blockPos7, blockState, null));
-                        linkedList.addLast((java.lang.Object)blockPos4);
+                    if ($$22.isSolidRender((net.minecraft.world.level.BlockGetter)$$10, $$19) || $$22.isCollisionShapeFullBlock((net.minecraft.world.level.BlockGetter)$$10, $$19)) {
+                        $$11.add((java.lang.Object)new net.minecraft.server.commands.CloneCommands$CloneBlockInfo($$20, $$22, null));
+                        $$14.addLast((java.lang.Object)$$19);
                         continue;
                     }
-                    arrayList3.add((java.lang.Object)new net.minecraft.server.commands.CloneCommands$CloneBlockInfo(blockPos7, blockState, null));
-                    linkedList.addFirst((java.lang.Object)blockPos4);
+                    $$13.add((java.lang.Object)new net.minecraft.server.commands.CloneCommands$CloneBlockInfo($$20, $$22, null));
+                    $$14.addFirst((java.lang.Object)$$19);
                 }
             }
         }
-        if (cloneMode == net.minecraft.server.commands.CloneCommands$Mode.MOVE) {
-            for (net.minecraft.core.BlockPos blockPos5 : linkedList) {
-                net.minecraft.world.level.block.entity.BlockEntity blockEntity = serverLevel.getBlockEntity(blockPos5);
-                net.minecraft.world.Clearable.tryClear((java.lang.Object)blockEntity);
-                serverLevel.setBlock(blockPos5, net.minecraft.world.level.block.Blocks.BARRIER.defaultBlockState(), 2);
+        if ($$5 == net.minecraft.server.commands.CloneCommands$Mode.MOVE) {
+            for (net.minecraft.core.BlockPos $$25 : $$14) {
+                net.minecraft.world.level.block.entity.BlockEntity $$26 = $$10.getBlockEntity($$25);
+                net.minecraft.world.Clearable.tryClear((java.lang.Object)$$26);
+                $$10.setBlock($$25, net.minecraft.world.level.block.Blocks.BARRIER.defaultBlockState(), 2);
             }
-            for (net.minecraft.core.BlockPos blockPos6 : linkedList) {
-                serverLevel.setBlock(blockPos6, net.minecraft.world.level.block.Blocks.AIR.defaultBlockState(), 3);
+            for (net.minecraft.core.BlockPos $$27 : $$14) {
+                $$10.setBlock($$27, net.minecraft.world.level.block.Blocks.AIR.defaultBlockState(), 3);
             }
         }
-        java.util.ArrayList arrayList4 = com.google.common.collect.Lists.newArrayList();
-        arrayList4.addAll((java.util.Collection)arrayList);
-        arrayList4.addAll((java.util.Collection)arrayList2);
-        arrayList4.addAll((java.util.Collection)arrayList3);
-        java.util.List list = com.google.common.collect.Lists.reverse((java.util.List)arrayList4);
-        for (net.minecraft.core.BlockPos blockPos4 : list) {
-            blockPos7 = serverLevel.getBlockEntity(blockPos4.pos);
-            net.minecraft.world.Clearable.tryClear((java.lang.Object)blockPos7);
-            serverLevel.setBlock(blockPos4.pos, net.minecraft.world.level.block.Blocks.BARRIER.defaultBlockState(), 2);
+        java.util.ArrayList $$28 = com.google.common.collect.Lists.newArrayList();
+        $$28.addAll((java.util.Collection)$$11);
+        $$28.addAll((java.util.Collection)$$12);
+        $$28.addAll((java.util.Collection)$$13);
+        java.util.List $$29 = com.google.common.collect.Lists.reverse((java.util.List)$$28);
+        for (net.minecraft.server.commands.CloneCommands$CloneBlockInfo $$30 : $$29) {
+            net.minecraft.world.level.block.entity.BlockEntity $$31 = $$10.getBlockEntity($$30.pos);
+            net.minecraft.world.Clearable.tryClear((java.lang.Object)$$31);
+            $$10.setBlock($$30.pos, net.minecraft.world.level.block.Blocks.BARRIER.defaultBlockState(), 2);
         }
-        int n2 = 0;
-        for (net.minecraft.core.BlockPos blockPos7 : arrayList4) {
-            if (!serverLevel.setBlock(blockPos7.pos, blockPos7.state, 2)) continue;
-            ++n2;
+        int $$32 = 0;
+        for (net.minecraft.server.commands.CloneCommands$CloneBlockInfo $$33 : $$28) {
+            if (!$$10.setBlock($$33.pos, $$33.state, 2)) continue;
+            ++$$32;
         }
-        for (net.minecraft.core.BlockPos blockPos7 : arrayList2) {
-            blockInWorld = serverLevel.getBlockEntity(blockPos7.pos);
-            if (blockPos7.tag != null && blockInWorld != null) {
-                blockInWorld.load(blockPos7.tag);
-                blockInWorld.setChanged();
+        for (net.minecraft.server.commands.CloneCommands$CloneBlockInfo $$34 : $$12) {
+            net.minecraft.world.level.block.entity.BlockEntity $$35 = $$10.getBlockEntity($$34.pos);
+            if ($$34.tag != null && $$35 != null) {
+                $$35.load($$34.tag);
+                $$35.setChanged();
             }
-            serverLevel.setBlock(blockPos7.pos, blockPos7.state, 2);
+            $$10.setBlock($$34.pos, $$34.state, 2);
         }
-        for (net.minecraft.core.BlockPos blockPos7 : list) {
-            serverLevel.blockUpdated(blockPos7.pos, blockPos7.state.getBlock());
+        for (net.minecraft.server.commands.CloneCommands$CloneBlockInfo $$36 : $$29) {
+            $$10.blockUpdated($$36.pos, $$36.state.getBlock());
         }
-        serverLevel.getBlockTicks().copyArea(boundingBox, (net.minecraft.core.Vec3i)blockPos3);
-        if (n2 == 0) {
+        $$10.getBlockTicks().copyArea($$6, (net.minecraft.core.Vec3i)$$15);
+        if ($$32 == 0) {
             throw ERROR_FAILED.create();
         }
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.clone.success", (java.lang.Object[])new java.lang.Object[]{n2}), true);
-        return n2;
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)"commands.clone.success", (java.lang.Object[])new java.lang.Object[]{$$32}), true);
+        return $$32;
     }
 
     public static /* synthetic */ boolean lambda$static$1(net.minecraft.world.level.block.state.pattern.BlockInWorld $$0) {