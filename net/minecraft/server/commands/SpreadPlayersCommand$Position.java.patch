--- net/minecraft/server/commands/SpreadPlayersCommand$Position.java
+++ net/minecraft/server/commands/SpreadPlayersCommand$Position.java
@@ -11,10 +11,10 @@
     public net.minecraft.server.commands.SpreadPlayersCommand$Position() {
     }
 
-    public double dist(net.minecraft.server.commands.SpreadPlayersCommand$Position other) {
-        double d = this.x - other.x;
-        double d2 = this.z - other.z;
-        return java.lang.Math.sqrt((double)(d * d + d2 * d2));
+    public double dist(net.minecraft.server.commands.SpreadPlayersCommand$Position $$0) {
+        double $$1 = this.x - $$0.x;
+        double $$2 = this.z - $$0.z;
+        return java.lang.Math.sqrt((double)($$1 * $$1 + $$2 * $$2));
     }
 
     public void normalize() {
@@ -27,45 +27,45 @@
         return java.lang.Math.sqrt((double)(this.x * this.x + this.z * this.z));
     }
 
-    public void moveAway(net.minecraft.server.commands.SpreadPlayersCommand$Position other) {
-        this.x -= other.x;
-        this.z -= other.z;
+    public void moveAway(net.minecraft.server.commands.SpreadPlayersCommand$Position $$0) {
+        this.x -= $$0.x;
+        this.z -= $$0.z;
     }
 
-    public boolean clamp(double minX, double minZ, double maxX, double maxZ) {
-        boolean bl = false;
-        if (this.x < minX) {
-            this.x = minX;
-            bl = true;
-        } else if (this.x > maxX) {
-            this.x = maxX;
-            bl = true;
+    public boolean clamp(double $$0, double $$1, double $$2, double $$3) {
+        boolean $$4 = false;
+        if (this.x < $$0) {
+            this.x = $$0;
+            $$4 = true;
+        } else if (this.x > $$2) {
+            this.x = $$2;
+            $$4 = true;
         }
-        if (this.z < minZ) {
-            this.z = minZ;
-            bl = true;
-        } else if (this.z > maxZ) {
-            this.z = maxZ;
-            bl = true;
+        if (this.z < $$1) {
+            this.z = $$1;
+            $$4 = true;
+        } else if (this.z > $$3) {
+            this.z = $$3;
+            $$4 = true;
         }
-        return bl;
+        return $$4;
     }
 
-    public int getSpawnY(net.minecraft.world.level.BlockGetter level, int n) {
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = new net.minecraft.core.BlockPos$MutableBlockPos(this.x, (double)(n + 1), this.z);
-        boolean bl = level.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos).isAir();
-        mutableBlockPos.move(net.minecraft.core.Direction.DOWN);
-        boolean bl2 = level.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos).isAir();
-        while (mutableBlockPos.getY() > level.getMinBuildHeight()) {
-            mutableBlockPos.move(net.minecraft.core.Direction.DOWN);
-            boolean bl3 = level.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos).isAir();
-            if (!bl3 && bl2 && bl) {
-                return mutableBlockPos.getY() + 1;
+    public int getSpawnY(net.minecraft.world.level.BlockGetter $$0, int $$1) {
+        net.minecraft.core.BlockPos$MutableBlockPos $$2 = new net.minecraft.core.BlockPos$MutableBlockPos(this.x, (double)($$1 + 1), this.z);
+        boolean $$3 = $$0.getBlockState((net.minecraft.core.BlockPos)$$2).isAir();
+        $$2.move(net.minecraft.core.Direction.DOWN);
+        boolean $$4 = $$0.getBlockState((net.minecraft.core.BlockPos)$$2).isAir();
+        while ($$2.getY() > $$0.getMinBuildHeight()) {
+            $$2.move(net.minecraft.core.Direction.DOWN);
+            boolean $$5 = $$0.getBlockState((net.minecraft.core.BlockPos)$$2).isAir();
+            if (!$$5 && $$4 && $$3) {
+                return $$2.getY() + 1;
             }
-            bl = bl2;
-            bl2 = bl3;
+            $$3 = $$4;
+            $$4 = $$5;
         }
-        return n + 1;
+        return $$1 + 1;
     }
 
     public boolean isSafe(net.minecraft.world.level.BlockGetter $$0, int $$1) {