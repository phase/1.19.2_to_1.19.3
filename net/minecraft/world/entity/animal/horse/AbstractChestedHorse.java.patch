--- net/minecraft/world/entity/animal/horse/AbstractChestedHorse.java
+++ net/minecraft/world/entity/animal/horse/AbstractChestedHorse.java
@@ -31,8 +31,8 @@
         return (java.lang.Boolean)this.entityData.get(DATA_ID_CHEST);
     }
 
-    public void setChest(boolean chested) {
-        this.entityData.set(DATA_ID_CHEST, (java.lang.Object)chested);
+    public void setChest(boolean $$0) {
+        this.entityData.set(DATA_ID_CHEST, (java.lang.Object)$$0);
     }
 
     public int getInventorySize() {
@@ -56,34 +56,34 @@
         }
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putBoolean("ChestedHorse", this.hasChest());
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putBoolean("ChestedHorse", this.hasChest());
         if (this.hasChest()) {
-            net.minecraft.nbt.ListTag listTag = new net.minecraft.nbt.ListTag();
-            for (int i = 2; i < this.inventory.getContainerSize(); ++i) {
-                net.minecraft.world.item.ItemStack itemStack = this.inventory.getItem(i);
-                if (itemStack.isEmpty()) continue;
-                net.minecraft.nbt.CompoundTag compoundTag = new net.minecraft.nbt.CompoundTag();
-                compoundTag.putByte("Slot", (byte)i);
-                itemStack.save(compoundTag);
-                listTag.add((java.lang.Object)compoundTag);
+            net.minecraft.nbt.ListTag $$1 = new net.minecraft.nbt.ListTag();
+            for (int $$2 = 2; $$2 < this.inventory.getContainerSize(); ++$$2) {
+                net.minecraft.world.item.ItemStack $$3 = this.inventory.getItem($$2);
+                if ($$3.isEmpty()) continue;
+                net.minecraft.nbt.CompoundTag $$4 = new net.minecraft.nbt.CompoundTag();
+                $$4.putByte("Slot", (byte)$$2);
+                $$3.save($$4);
+                $$1.add((java.lang.Object)$$4);
             }
-            compound.put("Items", (net.minecraft.nbt.Tag)listTag);
+            $$0.put("Items", (net.minecraft.nbt.Tag)$$1);
         }
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.setChest(compound.getBoolean("ChestedHorse"));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.setChest($$0.getBoolean("ChestedHorse"));
         this.createInventory();
         if (this.hasChest()) {
-            net.minecraft.nbt.ListTag listTag = compound.getList("Items", 10);
-            for (int i = 0; i < listTag.size(); ++i) {
-                net.minecraft.nbt.CompoundTag compoundTag = listTag.getCompound(i);
-                int n = compoundTag.getByte("Slot") & 0xFF;
-                if (n < 2 || n >= this.inventory.getContainerSize()) continue;
-                this.inventory.setItem(n, net.minecraft.world.item.ItemStack.of((net.minecraft.nbt.CompoundTag)compoundTag));
+            net.minecraft.nbt.ListTag $$1 = $$0.getList("Items", 10);
+            for (int $$2 = 0; $$2 < $$1.size(); ++$$2) {
+                net.minecraft.nbt.CompoundTag $$3 = $$1.getCompound($$2);
+                int $$4 = $$3.getByte("Slot") & 0xFF;
+                if ($$4 < 2 || $$4 >= this.inventory.getContainerSize()) continue;
+                this.inventory.setItem($$4, net.minecraft.world.item.ItemStack.of((net.minecraft.nbt.CompoundTag)$$3));
             }
         }
         this.updateContainerEquipment();
@@ -96,44 +96,36 @@
         return super.getSlot($$0);
     }
 
-    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        if (!this.isBaby()) {
-            if (this.isTamed() && player.isSecondaryUseActive()) {
-                this.openCustomInventoryScreen(player);
-                return net.minecraft.world.InteractionResult.sidedSuccess((boolean)this.level.isClientSide);
-            }
-            if (this.isVehicle()) {
-                return super.mobInteract(player, hand);
-            }
+    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$1) {
+        boolean $$2;
+        boolean bl = $$2 = !this.isBaby() && this.isTamed() && $$0.isSecondaryUseActive();
+        if (this.isVehicle() || $$2) {
+            return super.mobInteract($$0, $$1);
         }
-        if (!itemStack.isEmpty()) {
-            if (this.isFood(itemStack)) {
-                return this.fedFood(player, itemStack);
+        net.minecraft.world.item.ItemStack $$3 = $$0.getItemInHand($$1);
+        if (!$$3.isEmpty()) {
+            if (this.isFood($$3)) {
+                return this.fedFood($$0, $$3);
             }
             if (!this.isTamed()) {
                 this.makeMad();
                 return net.minecraft.world.InteractionResult.sidedSuccess((boolean)this.level.isClientSide);
             }
-            if (!this.hasChest() && itemStack.is(net.minecraft.world.level.block.Blocks.CHEST.asItem())) {
-                this.setChest(true);
-                this.playChestEquipsSound();
-                if (!player.getAbilities().instabuild) {
-                    itemStack.shrink(1);
-                }
-                this.createInventory();
+            if (!this.hasChest() && $$3.is(net.minecraft.world.item.Items.CHEST)) {
+                this.equipChest($$0, $$3);
                 return net.minecraft.world.InteractionResult.sidedSuccess((boolean)this.level.isClientSide);
             }
-            if (!this.isBaby() && !this.isSaddled() && itemStack.is(net.minecraft.world.item.Items.SADDLE)) {
-                this.openCustomInventoryScreen(player);
-                return net.minecraft.world.InteractionResult.sidedSuccess((boolean)this.level.isClientSide);
-            }
         }
-        if (this.isBaby()) {
-            return super.mobInteract(player, hand);
+        return super.mobInteract($$0, $$1);
+    }
+
+    public void equipChest(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.item.ItemStack $$1) {
+        this.setChest(true);
+        this.playChestEquipsSound();
+        if (!$$0.getAbilities().instabuild) {
+            $$1.shrink(1);
         }
-        this.doPlayerRide(player);
-        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)this.level.isClientSide);
+        this.createInventory();
     }
 
     public void playChestEquipsSound() {