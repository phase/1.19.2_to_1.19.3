--- net/minecraft/world/entity/animal/Bee$BeePollinateGoal.java
+++ net/minecraft/world/entity/animal/Bee$BeePollinateGoal.java
@@ -27,13 +27,13 @@
     public net.minecraft.world.entity.animal.Bee$BeePollinateGoal(net.minecraft.world.entity.animal.Bee bee) {
         this.this$0 = bee;
         super(bee);
-        this.VALID_POLLINATION_BLOCKS = state -> {
-            if (state.hasProperty((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.WATERLOGGED) && ((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.WATERLOGGED)).booleanValue()) {
+        this.VALID_POLLINATION_BLOCKS = $$0 -> {
+            if ($$0.hasProperty((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.WATERLOGGED) && ((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.WATERLOGGED)).booleanValue()) {
                 return false;
             }
-            if (state.is(net.minecraft.tags.BlockTags.FLOWERS)) {
-                if (state.is(net.minecraft.world.level.block.Blocks.SUNFLOWER)) {
-                    return state.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.DoublePlantBlock.HALF) == net.minecraft.world.level.block.state.properties.DoubleBlockHalf.UPPER;
+            if ($$0.is(net.minecraft.tags.BlockTags.FLOWERS)) {
+                if ($$0.is(net.minecraft.world.level.block.Blocks.SUNFLOWER)) {
+                    return $$0.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.DoublePlantBlock.HALF) == net.minecraft.world.level.block.state.properties.DoubleBlockHalf.UPPER;
                 }
                 return true;
             }
@@ -169,29 +169,29 @@
         return this.findNearestBlock(this.VALID_POLLINATION_BLOCKS, 5.0);
     }
 
-    public java.util.Optional<net.minecraft.core.BlockPos> findNearestBlock(java.util.function.Predicate<net.minecraft.world.level.block.state.BlockState> predicate, double distance) {
-        net.minecraft.core.BlockPos blockPos = this.this$0.blockPosition();
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = new net.minecraft.core.BlockPos$MutableBlockPos();
-        int n = 0;
-        while ((double)n <= distance) {
-            int n2 = 0;
-            while ((double)n2 < distance) {
-                int n3 = 0;
-                while (n3 <= n2) {
-                    int n4;
-                    int n5 = n4 = n3 < n2 && n3 > -n2 ? n2 : 0;
-                    while (n4 <= n2) {
-                        mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)blockPos, n3, n - 1, n4);
-                        if (blockPos.closerThan((net.minecraft.core.Vec3i)mutableBlockPos, distance) && predicate.test((java.lang.Object)this.this$0.level.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos))) {
-                            return java.util.Optional.of((java.lang.Object)mutableBlockPos);
+    public java.util.Optional<net.minecraft.core.BlockPos> findNearestBlock(java.util.function.Predicate<net.minecraft.world.level.block.state.BlockState> $$0, double $$1) {
+        net.minecraft.core.BlockPos $$2 = this.this$0.blockPosition();
+        net.minecraft.core.BlockPos$MutableBlockPos $$3 = new net.minecraft.core.BlockPos$MutableBlockPos();
+        int $$4 = 0;
+        while ((double)$$4 <= $$1) {
+            int $$5 = 0;
+            while ((double)$$5 < $$1) {
+                int $$6 = 0;
+                while ($$6 <= $$5) {
+                    int $$7;
+                    int n = $$7 = $$6 < $$5 && $$6 > -$$5 ? $$5 : 0;
+                    while ($$7 <= $$5) {
+                        $$3.setWithOffset((net.minecraft.core.Vec3i)$$2, $$6, $$4 - 1, $$7);
+                        if ($$2.closerThan((net.minecraft.core.Vec3i)$$3, $$1) && $$0.test((java.lang.Object)this.this$0.level.getBlockState((net.minecraft.core.BlockPos)$$3))) {
+                            return java.util.Optional.of((java.lang.Object)$$3);
                         }
-                        n4 = n4 > 0 ? -n4 : 1 - n4;
+                        $$7 = $$7 > 0 ? -$$7 : 1 - $$7;
                     }
-                    n3 = n3 > 0 ? -n3 : 1 - n3;
+                    $$6 = $$6 > 0 ? -$$6 : 1 - $$6;
                 }
-                ++n2;
+                ++$$5;
             }
-            n = n > 0 ? -n : 1 - n;
+            $$4 = $$4 > 0 ? -$$4 : 1 - $$4;
         }
         return java.util.Optional.empty();
     }