--- net/minecraft/world/entity/animal/Wolf.java
+++ net/minecraft/world/entity/animal/Wolf.java
@@ -64,22 +64,22 @@
         this.entityData.define(DATA_REMAINING_ANGER_TIME, (java.lang.Object)0);
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         this.playSound(net.minecraft.sounds.SoundEvents.WOLF_STEP, 0.15f, 1.0f);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putByte("CollarColor", (byte)this.getCollarColor().getId());
-        this.addPersistentAngerSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putByte("CollarColor", (byte)this.getCollarColor().getId());
+        this.addPersistentAngerSaveData($$0);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        if (compound.contains("CollarColor", 99)) {
-            this.setCollarColor(net.minecraft.world.item.DyeColor.byId((int)compound.getInt("CollarColor")));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        if ($$0.contains("CollarColor", 99)) {
+            this.setCollarColor(net.minecraft.world.item.DyeColor.byId((int)$$0.getInt("CollarColor")));
         }
-        this.readPersistentAngerSaveData(this.level, compound);
+        this.readPersistentAngerSaveData(this.level, $$0);
     }
 
     public net.minecraft.sounds.SoundEvent getAmbientSound() {
@@ -95,7 +95,7 @@
         return net.minecraft.sounds.SoundEvents.WOLF_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.WOLF_HURT;
     }
 
@@ -165,38 +165,38 @@
         this.shakeAnimO = 0.0f;
     }
 
-    public void die(net.minecraft.world.damagesource.DamageSource cause) {
+    public void die(net.minecraft.world.damagesource.DamageSource $$0) {
         this.isWet = false;
         this.isShaking = false;
         this.shakeAnimO = 0.0f;
         this.shakeAnim = 0.0f;
-        super.die(cause);
+        super.die($$0);
     }
 
     public boolean isWet() {
         return this.isWet;
     }
 
-    public float getWetShade(float partialTicks) {
-        return java.lang.Math.min((float)(0.5f + net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.shakeAnimO, (float)this.shakeAnim) / 2.0f * 0.5f), (float)1.0f);
+    public float getWetShade(float $$0) {
+        return java.lang.Math.min((float)(0.5f + net.minecraft.util.Mth.lerp((float)$$0, (float)this.shakeAnimO, (float)this.shakeAnim) / 2.0f * 0.5f), (float)1.0f);
     }
 
-    public float getBodyRollAngle(float partialTicks, float offset) {
-        float f = (net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.shakeAnimO, (float)this.shakeAnim) + offset) / 1.8f;
-        if (f < 0.0f) {
-            f = 0.0f;
-        } else if (f > 1.0f) {
-            f = 1.0f;
+    public float getBodyRollAngle(float $$0, float $$1) {
+        float $$2 = (net.minecraft.util.Mth.lerp((float)$$0, (float)this.shakeAnimO, (float)this.shakeAnim) + $$1) / 1.8f;
+        if ($$2 < 0.0f) {
+            $$2 = 0.0f;
+        } else if ($$2 > 1.0f) {
+            $$2 = 1.0f;
         }
-        return net.minecraft.util.Mth.sin((float)(f * (float)java.lang.Math.PI)) * net.minecraft.util.Mth.sin((float)(f * (float)java.lang.Math.PI * 11.0f)) * 0.15f * (float)java.lang.Math.PI;
+        return net.minecraft.util.Mth.sin((float)($$2 * (float)java.lang.Math.PI)) * net.minecraft.util.Mth.sin((float)($$2 * (float)java.lang.Math.PI * 11.0f)) * 0.15f * (float)java.lang.Math.PI;
     }
 
-    public float getHeadRollAngle(float partialTicks) {
-        return net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.interestedAngleO, (float)this.interestedAngle) * 0.15f * (float)java.lang.Math.PI;
+    public float getHeadRollAngle(float $$0) {
+        return net.minecraft.util.Mth.lerp((float)$$0, (float)this.interestedAngleO, (float)this.interestedAngle) * 0.15f * (float)java.lang.Math.PI;
     }
 
-    public float getStandingEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
-        return size.height * 0.8f;
+    public float getStandingEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
+        return $$1.height * 0.8f;
     }
 
     public int getMaxHeadXRot() {
@@ -206,31 +206,31 @@
         return super.getMaxHeadXRot();
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
-        if (this.isInvulnerableTo(source)) {
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        if (this.isInvulnerableTo($$0)) {
             return false;
         }
-        net.minecraft.world.entity.Entity entity = source.getEntity();
+        net.minecraft.world.entity.Entity $$2 = $$0.getEntity();
         if (!this.level.isClientSide) {
             this.setOrderedToSit(false);
         }
-        if (entity != null && !(entity instanceof net.minecraft.world.entity.player.Player) && !(entity instanceof net.minecraft.world.entity.projectile.AbstractArrow)) {
-            amount = (amount + 1.0f) / 2.0f;
+        if ($$2 != null && !($$2 instanceof net.minecraft.world.entity.player.Player) && !($$2 instanceof net.minecraft.world.entity.projectile.AbstractArrow)) {
+            $$1 = ($$1 + 1.0f) / 2.0f;
         }
-        return super.hurt(source, amount);
+        return super.hurt($$0, $$1);
     }
 
-    public boolean doHurtTarget(net.minecraft.world.entity.Entity entity) {
-        boolean bl = entity.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), (float)((int)this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE)));
-        if (bl) {
-            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, entity);
+    public boolean doHurtTarget(net.minecraft.world.entity.Entity $$0) {
+        boolean $$1 = $$0.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), (float)((int)this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE)));
+        if ($$1) {
+            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, $$0);
         }
-        return bl;
+        return $$1;
     }
 
-    public void setTame(boolean tamed) {
-        super.setTame(tamed);
-        if (tamed) {
+    public void setTame(boolean $$0) {
+        super.setTame($$0);
+        if ($$0) {
             this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(20.0);
             this.setHealth(20.0f);
         } else {
@@ -239,50 +239,50 @@
         this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE).setBaseValue(4.0);
     }
 
-    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
+    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$1) {
 block13:        {
-            net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-            net.minecraft.world.item.Item item = itemStack.getItem();
+            net.minecraft.world.item.ItemStack $$2 = $$0.getItemInHand($$1);
+            net.minecraft.world.item.Item $$3 = $$2.getItem();
             if (this.level.isClientSide) {
-                boolean bl = this.isOwnedBy((net.minecraft.world.entity.LivingEntity)player) || this.isTame() || itemStack.is(net.minecraft.world.item.Items.BONE) && !this.isTame() && !this.isAngry();
-                return bl ? net.minecraft.world.InteractionResult.CONSUME : net.minecraft.world.InteractionResult.PASS;
+                boolean $$4 = this.isOwnedBy((net.minecraft.world.entity.LivingEntity)$$0) || this.isTame() || $$2.is(net.minecraft.world.item.Items.BONE) && !this.isTame() && !this.isAngry();
+                return $$4 ? net.minecraft.world.InteractionResult.CONSUME : net.minecraft.world.InteractionResult.PASS;
             }
             if (this.isTame()) {
-                if (this.isFood(itemStack) && this.getHealth() < this.getMaxHealth()) {
-                    if (!player.getAbilities().instabuild) {
-                        itemStack.shrink(1);
+                if (this.isFood($$2) && this.getHealth() < this.getMaxHealth()) {
+                    if (!$$0.getAbilities().instabuild) {
+                        $$2.shrink(1);
                     }
-                    this.heal((float)item.getFoodProperties().getNutrition());
+                    this.heal((float)$$3.getFoodProperties().getNutrition());
                     return net.minecraft.world.InteractionResult.SUCCESS;
                 }
-                if (item instanceof net.minecraft.world.item.DyeItem) {
-                    net.minecraft.world.item.DyeColor dyeColor = ((net.minecraft.world.item.DyeItem)item).getDyeColor();
-                    if (dyeColor != this.getCollarColor()) {
-                        this.setCollarColor(dyeColor);
-                        if (!player.getAbilities().instabuild) {
-                            itemStack.shrink(1);
+                if ($$3 instanceof net.minecraft.world.item.DyeItem) {
+                    net.minecraft.world.item.DyeColor $$5 = ((net.minecraft.world.item.DyeItem)$$3).getDyeColor();
+                    if ($$5 != this.getCollarColor()) {
+                        this.setCollarColor($$5);
+                        if (!$$0.getAbilities().instabuild) {
+                            $$2.shrink(1);
                         }
                         return net.minecraft.world.InteractionResult.SUCCESS;
                     }
                     break block13;
                 } else {
-                    net.minecraft.world.InteractionResult interactionResult = super.mobInteract(player, hand);
-                    if ((!interactionResult.consumesAction() || this.isBaby()) && this.isOwnedBy((net.minecraft.world.entity.LivingEntity)player)) {
+                    net.minecraft.world.InteractionResult $$6 = super.mobInteract($$0, $$1);
+                    if ((!$$6.consumesAction() || this.isBaby()) && this.isOwnedBy((net.minecraft.world.entity.LivingEntity)$$0)) {
                         this.setOrderedToSit(!this.isOrderedToSit());
                         this.jumping = false;
                         this.navigation.stop();
                         this.setTarget(null);
                         return net.minecraft.world.InteractionResult.SUCCESS;
                     }
-                    return interactionResult;
+                    return $$6;
                 }
             }
-            if (itemStack.is(net.minecraft.world.item.Items.BONE) && !this.isAngry()) {
-                if (!player.getAbilities().instabuild) {
-                    itemStack.shrink(1);
+            if ($$2.is(net.minecraft.world.item.Items.BONE) && !this.isAngry()) {
+                if (!$$0.getAbilities().instabuild) {
+                    $$2.shrink(1);
                 }
                 if (this.random.nextInt(3) == 0) {
-                    this.tame(player);
+                    this.tame($$0);
                     this.navigation.stop();
                     this.setTarget(null);
                     this.setOrderedToSit(true);
@@ -293,18 +293,18 @@
                 return net.minecraft.world.InteractionResult.SUCCESS;
             }
         }
-        return super.mobInteract(player, hand);
+        return super.mobInteract($$0, $$1);
     }
 
-    public void handleEntityEvent(byte id) {
-        if (id == 8) {
+    public void handleEntityEvent(byte $$0) {
+        if ($$0 == 8) {
             this.isShaking = true;
             this.shakeAnim = 0.0f;
             this.shakeAnimO = 0.0f;
-        } else if (id == 56) {
+        } else if ($$0 == 56) {
             this.cancelShake();
         } else {
-            super.handleEntityEvent(id);
+            super.handleEntityEvent($$0);
         }
     }
 
@@ -318,9 +318,9 @@
         return 0.62831855f;
     }
 
-    public boolean isFood(net.minecraft.world.item.ItemStack stack) {
-        net.minecraft.world.item.Item item = stack.getItem();
-        return item.isEdible() && item.getFoodProperties().isMeat();
+    public boolean isFood(net.minecraft.world.item.ItemStack $$0) {
+        net.minecraft.world.item.Item $$1 = $$0.getItem();
+        return $$1.isEdible() && $$1.getFoodProperties().isMeat();
     }
 
     public int getMaxSpawnClusterSize() {
@@ -331,8 +331,8 @@
         return (java.lang.Integer)this.entityData.get(DATA_REMAINING_ANGER_TIME);
     }
 
-    public void setRemainingPersistentAngerTime(int time) {
-        this.entityData.set(DATA_REMAINING_ANGER_TIME, (java.lang.Object)time);
+    public void setRemainingPersistentAngerTime(int $$0) {
+        this.entityData.set(DATA_REMAINING_ANGER_TIME, (java.lang.Object)$$0);
     }
 
     public void startPersistentAngerTimer() {
@@ -344,75 +344,76 @@
         return this.persistentAngerTarget;
     }
 
-    public void setPersistentAngerTarget(@javax.annotation.Nullable java.util.UUID target) {
-        this.persistentAngerTarget = target;
+    public void setPersistentAngerTarget(@javax.annotation.Nullable java.util.UUID $$0) {
+        this.persistentAngerTarget = $$0;
     }
 
     public net.minecraft.world.item.DyeColor getCollarColor() {
         return net.minecraft.world.item.DyeColor.byId((int)((java.lang.Integer)this.entityData.get(DATA_COLLAR_COLOR)));
     }
 
-    public void setCollarColor(net.minecraft.world.item.DyeColor collarColor) {
-        this.entityData.set(DATA_COLLAR_COLOR, (java.lang.Object)collarColor.getId());
+    public void setCollarColor(net.minecraft.world.item.DyeColor $$0) {
+        this.entityData.set(DATA_COLLAR_COLOR, (java.lang.Object)$$0.getId());
     }
 
+    @javax.annotation.Nullable
     public net.minecraft.world.entity.animal.Wolf getBreedOffspring(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.AgeableMob $$1) {
+        java.util.UUID $$3;
         net.minecraft.world.entity.animal.Wolf $$2 = (net.minecraft.world.entity.animal.Wolf)net.minecraft.world.entity.EntityType.WOLF.create((net.minecraft.world.level.Level)$$0);
-        java.util.UUID $$3 = this.getOwnerUUID();
-        if ($$3 != null) {
+        if ($$2 != null && ($$3 = this.getOwnerUUID()) != null) {
             $$2.setOwnerUUID($$3);
             $$2.setTame(true);
         }
         return $$2;
     }
 
-    public void setIsInterested(boolean isInterested) {
-        this.entityData.set(DATA_INTERESTED_ID, (java.lang.Object)isInterested);
+    public void setIsInterested(boolean $$0) {
+        this.entityData.set(DATA_INTERESTED_ID, (java.lang.Object)$$0);
     }
 
-    public boolean canMate(net.minecraft.world.entity.animal.Animal otherAnimal) {
-        if (otherAnimal == this) {
+    public boolean canMate(net.minecraft.world.entity.animal.Animal $$0) {
+        if ($$0 == this) {
             return false;
         }
         if (!this.isTame()) {
             return false;
         }
-        if (!(otherAnimal instanceof net.minecraft.world.entity.animal.Wolf)) {
+        if (!($$0 instanceof net.minecraft.world.entity.animal.Wolf)) {
             return false;
         }
-        net.minecraft.world.entity.animal.Wolf wolf = (net.minecraft.world.entity.animal.Wolf)otherAnimal;
-        if (!wolf.isTame()) {
+        net.minecraft.world.entity.animal.Wolf $$1 = (net.minecraft.world.entity.animal.Wolf)$$0;
+        if (!$$1.isTame()) {
             return false;
         }
-        if (wolf.isInSittingPose()) {
+        if ($$1.isInSittingPose()) {
             return false;
         }
-        return this.isInLove() && wolf.isInLove();
+        return this.isInLove() && $$1.isInLove();
     }
 
     public boolean isInterested() {
         return (java.lang.Boolean)this.entityData.get(DATA_INTERESTED_ID);
     }
 
-    public boolean wantsToAttack(net.minecraft.world.entity.LivingEntity target, net.minecraft.world.entity.LivingEntity owner) {
-        if (target instanceof net.minecraft.world.entity.monster.Creeper || target instanceof net.minecraft.world.entity.monster.Ghast) {
+    public boolean wantsToAttack(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        if ($$0 instanceof net.minecraft.world.entity.monster.Creeper || $$0 instanceof net.minecraft.world.entity.monster.Ghast) {
             return false;
         }
-        if (target instanceof net.minecraft.world.entity.animal.Wolf) {
-            net.minecraft.world.entity.animal.Wolf wolf = (net.minecraft.world.entity.animal.Wolf)target;
-            return !wolf.isTame() || wolf.getOwner() != owner;
+        if ($$0 instanceof net.minecraft.world.entity.animal.Wolf) {
+            net.minecraft.world.entity.animal.Wolf $$2 = (net.minecraft.world.entity.animal.Wolf)$$0;
+            return !$$2.isTame() || $$2.getOwner() != $$1;
         }
-        if (target instanceof net.minecraft.world.entity.player.Player && owner instanceof net.minecraft.world.entity.player.Player && !((net.minecraft.world.entity.player.Player)owner).canHarmPlayer((net.minecraft.world.entity.player.Player)target)) {
+        if ($$0 instanceof net.minecraft.world.entity.player.Player && $$1 instanceof net.minecraft.world.entity.player.Player && !((net.minecraft.world.entity.player.Player)$$1).canHarmPlayer((net.minecraft.world.entity.player.Player)$$0)) {
             return false;
         }
-        if (target instanceof net.minecraft.world.entity.animal.horse.AbstractHorse && ((net.minecraft.world.entity.animal.horse.AbstractHorse)target).isTamed()) {
+        if ($$0 instanceof net.minecraft.world.entity.animal.horse.AbstractHorse && ((net.minecraft.world.entity.animal.horse.AbstractHorse)$$0).isTamed()) {
             return false;
         }
-        return !(target instanceof net.minecraft.world.entity.TamableAnimal) || !((net.minecraft.world.entity.TamableAnimal)target).isTame();
+        return !($$0 instanceof net.minecraft.world.entity.TamableAnimal) || !((net.minecraft.world.entity.TamableAnimal)$$0).isTame();
     }
 
-    public boolean canBeLeashed(net.minecraft.world.entity.player.Player player) {
-        return !this.isAngry() && super.canBeLeashed(player);
+    public boolean canBeLeashed(net.minecraft.world.entity.player.Player $$0) {
+        return !this.isAngry() && super.canBeLeashed($$0);
     }
 
     public net.minecraft.world.phys.Vec3 getLeashOffset() {
@@ -423,13 +424,14 @@
         return $$1.getBlockState($$3.below()).is(net.minecraft.tags.BlockTags.WOLVES_SPAWNABLE_ON) && net.minecraft.world.entity.animal.Wolf.isBrightEnoughToSpawn((net.minecraft.world.level.BlockAndTintGetter)$$1, (net.minecraft.core.BlockPos)$$3);
     }
 
+    @javax.annotation.Nullable
     public /* synthetic */ net.minecraft.world.entity.AgeableMob getBreedOffspring(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.AgeableMob ageableMob) {
         return this.getBreedOffspring(serverLevel, ageableMob);
     }
 
-    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.LivingEntity entity) {
-        net.minecraft.world.entity.EntityType entityType = entity.getType();
-        return entityType == net.minecraft.world.entity.EntityType.SHEEP || entityType == net.minecraft.world.entity.EntityType.RABBIT || entityType == net.minecraft.world.entity.EntityType.FOX;
+    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.LivingEntity $$0) {
+        net.minecraft.world.entity.EntityType $$1 = $$0.getType();
+        return $$1 == net.minecraft.world.entity.EntityType.SHEEP || $$1 == net.minecraft.world.entity.EntityType.RABBIT || $$1 == net.minecraft.world.entity.EntityType.FOX;
     }
 
     public static /* synthetic */ net.minecraft.util.RandomSource access$000(net.minecraft.world.entity.animal.Wolf $$0) {
@@ -440,9 +442,9 @@
         DATA_INTERESTED_ID = net.minecraft.network.syncher.SynchedEntityData.defineId(net.minecraft.world.entity.animal.Wolf.class, (net.minecraft.network.syncher.EntityDataSerializer)net.minecraft.network.syncher.EntityDataSerializers.BOOLEAN);
         DATA_COLLAR_COLOR = net.minecraft.network.syncher.SynchedEntityData.defineId(net.minecraft.world.entity.animal.Wolf.class, (net.minecraft.network.syncher.EntityDataSerializer)net.minecraft.network.syncher.EntityDataSerializers.INT);
         DATA_REMAINING_ANGER_TIME = net.minecraft.network.syncher.SynchedEntityData.defineId(net.minecraft.world.entity.animal.Wolf.class, (net.minecraft.network.syncher.EntityDataSerializer)net.minecraft.network.syncher.EntityDataSerializers.INT);
-        PREY_SELECTOR = entity -> {
-            net.minecraft.world.entity.EntityType entityType = entity.getType();
-            return entityType == net.minecraft.world.entity.EntityType.SHEEP || entityType == net.minecraft.world.entity.EntityType.RABBIT || entityType == net.minecraft.world.entity.EntityType.FOX;
+        PREY_SELECTOR = $$0 -> {
+            net.minecraft.world.entity.EntityType $$1 = $$0.getType();
+            return $$1 == net.minecraft.world.entity.EntityType.SHEEP || $$1 == net.minecraft.world.entity.EntityType.RABBIT || $$1 == net.minecraft.world.entity.EntityType.FOX;
         };
         PERSISTENT_ANGER_TIME = net.minecraft.util.TimeUtil.rangeOfSeconds((int)20, (int)39);
     }