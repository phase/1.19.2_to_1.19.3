--- net/minecraft/world/entity/animal/PolarBear.java
+++ net/minecraft/world/entity/animal/PolarBear.java
@@ -21,11 +21,12 @@
         super($$0, $$1);
     }
 
+    @javax.annotation.Nullable
     public net.minecraft.world.entity.AgeableMob getBreedOffspring(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.AgeableMob $$1) {
         return (net.minecraft.world.entity.AgeableMob)net.minecraft.world.entity.EntityType.POLAR_BEAR.create((net.minecraft.world.level.Level)$$0);
     }
 
-    public boolean isFood(net.minecraft.world.item.ItemStack stack) {
+    public boolean isFood(net.minecraft.world.item.ItemStack $$0) {
         return false;
     }
 
@@ -57,30 +58,30 @@
         return net.minecraft.world.entity.animal.PolarBear.checkAnimalSpawnRules($$0, (net.minecraft.world.level.LevelAccessor)$$1, (net.minecraft.world.entity.MobSpawnType)$$2, (net.minecraft.core.BlockPos)$$3, (net.minecraft.util.RandomSource)$$4);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.readPersistentAngerSaveData(this.level, compound);
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.readPersistentAngerSaveData(this.level, $$0);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        this.addPersistentAngerSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        this.addPersistentAngerSaveData($$0);
     }
 
     public void startPersistentAngerTimer() {
         this.setRemainingPersistentAngerTime(PERSISTENT_ANGER_TIME.sample(this.random));
     }
 
-    public void setRemainingPersistentAngerTime(int time) {
-        this.remainingPersistentAngerTime = time;
+    public void setRemainingPersistentAngerTime(int $$0) {
+        this.remainingPersistentAngerTime = $$0;
     }
 
     public int getRemainingPersistentAngerTime() {
         return this.remainingPersistentAngerTime;
     }
 
-    public void setPersistentAngerTarget(@javax.annotation.Nullable java.util.UUID target) {
-        this.persistentAngerTarget = target;
+    public void setPersistentAngerTarget(@javax.annotation.Nullable java.util.UUID $$0) {
+        this.persistentAngerTarget = $$0;
     }
 
     @javax.annotation.Nullable
@@ -95,7 +96,7 @@
         return net.minecraft.sounds.SoundEvents.POLAR_BEAR_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.POLAR_BEAR_HURT;
     }
 
@@ -103,7 +104,7 @@
         return net.minecraft.sounds.SoundEvents.POLAR_BEAR_DEATH;
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         this.playSound(net.minecraft.sounds.SoundEvents.POLAR_BEAR_STEP, 0.15f, 1.0f);
     }
 
@@ -136,44 +137,44 @@
         }
     }
 
-    public net.minecraft.world.entity.EntityDimensions getDimensions(net.minecraft.world.entity.Pose pose) {
+    public net.minecraft.world.entity.EntityDimensions getDimensions(net.minecraft.world.entity.Pose $$0) {
         if (this.clientSideStandAnimation > 0.0f) {
-            float f = this.clientSideStandAnimation / 6.0f;
-            float f2 = 1.0f + f;
-            return super.getDimensions(pose).scale(1.0f, f2);
+            float $$1 = this.clientSideStandAnimation / 6.0f;
+            float $$2 = 1.0f + $$1;
+            return super.getDimensions($$0).scale(1.0f, $$2);
         }
-        return super.getDimensions(pose);
+        return super.getDimensions($$0);
     }
 
-    public boolean doHurtTarget(net.minecraft.world.entity.Entity entity) {
-        boolean bl = entity.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), (float)((int)this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE)));
-        if (bl) {
-            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, entity);
+    public boolean doHurtTarget(net.minecraft.world.entity.Entity $$0) {
+        boolean $$1 = $$0.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), (float)((int)this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE)));
+        if ($$1) {
+            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, $$0);
         }
-        return bl;
+        return $$1;
     }
 
     public boolean isStanding() {
         return (java.lang.Boolean)this.entityData.get(DATA_STANDING_ID);
     }
 
-    public void setStanding(boolean standing) {
-        this.entityData.set(DATA_STANDING_ID, (java.lang.Object)standing);
+    public void setStanding(boolean $$0) {
+        this.entityData.set(DATA_STANDING_ID, (java.lang.Object)$$0);
     }
 
-    public float getStandingAnimationScale(float partialTick) {
-        return net.minecraft.util.Mth.lerp((float)partialTick, (float)this.clientSideStandAnimationO, (float)this.clientSideStandAnimation) / 6.0f;
+    public float getStandingAnimationScale(float $$0) {
+        return net.minecraft.util.Mth.lerp((float)$$0, (float)this.clientSideStandAnimationO, (float)this.clientSideStandAnimation) / 6.0f;
     }
 
     public float getWaterSlowDown() {
         return 0.98f;
     }
 
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
-        if (spawnData == null) {
-            spawnData = new net.minecraft.world.entity.AgeableMob$AgeableMobGroupData(1.0f);
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
+        if ($$3 == null) {
+            $$3 = new net.minecraft.world.entity.AgeableMob$AgeableMobGroupData(1.0f);
         }
-        return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+        return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
     }
 
     static {