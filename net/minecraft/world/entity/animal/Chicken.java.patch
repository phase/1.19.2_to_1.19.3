--- net/minecraft/world/entity/animal/Chicken.java
+++ net/minecraft/world/entity/animal/Chicken.java
@@ -35,8 +35,8 @@
         this.goalSelector.addGoal(7, (net.minecraft.world.entity.ai.goal.Goal)new net.minecraft.world.entity.ai.goal.RandomLookAroundGoal((net.minecraft.world.entity.Mob)this));
     }
 
-    public float getStandingEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
-        return this.isBaby() ? size.height * 0.85f : size.height * 0.92f;
+    public float getStandingEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
+        return this.isBaby() ? $$1.height * 0.85f : $$1.height * 0.92f;
     }
 
     public static net.minecraft.world.entity.ai.attributes.AttributeSupplier$Builder createAttributes() {
@@ -82,7 +82,7 @@
         return net.minecraft.sounds.SoundEvents.CHICKEN_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.CHICKEN_HURT;
     }
 
@@ -90,16 +90,17 @@
         return net.minecraft.sounds.SoundEvents.CHICKEN_DEATH;
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         this.playSound(net.minecraft.sounds.SoundEvents.CHICKEN_STEP, 0.15f, 1.0f);
     }
 
+    @javax.annotation.Nullable
     public net.minecraft.world.entity.animal.Chicken getBreedOffspring(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.AgeableMob $$1) {
         return (net.minecraft.world.entity.animal.Chicken)net.minecraft.world.entity.EntityType.CHICKEN.create((net.minecraft.world.level.Level)$$0);
     }
 
-    public boolean isFood(net.minecraft.world.item.ItemStack stack) {
-        return FOOD_ITEMS.test(stack);
+    public boolean isFood(net.minecraft.world.item.ItemStack $$0) {
+        return FOOD_ITEMS.test($$0);
     }
 
     public int getExperienceReward() {
@@ -109,33 +110,33 @@
         return super.getExperienceReward();
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.isChickenJockey = compound.getBoolean("IsChickenJockey");
-        if (compound.contains("EggLayTime")) {
-            this.eggTime = compound.getInt("EggLayTime");
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.isChickenJockey = $$0.getBoolean("IsChickenJockey");
+        if ($$0.contains("EggLayTime")) {
+            this.eggTime = $$0.getInt("EggLayTime");
         }
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putBoolean("IsChickenJockey", this.isChickenJockey);
-        compound.putInt("EggLayTime", this.eggTime);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putBoolean("IsChickenJockey", this.isChickenJockey);
+        $$0.putInt("EggLayTime", this.eggTime);
     }
 
-    public boolean removeWhenFarAway(double distanceToClosestPlayer) {
+    public boolean removeWhenFarAway(double $$0) {
         return this.isChickenJockey();
     }
 
-    public void positionRider(net.minecraft.world.entity.Entity passenger) {
-        super.positionRider(passenger);
-        float f = net.minecraft.util.Mth.sin((float)(this.yBodyRot * ((float)java.lang.Math.PI / 180)));
-        float f2 = net.minecraft.util.Mth.cos((float)(this.yBodyRot * ((float)java.lang.Math.PI / 180)));
-        float f3 = 0.1f;
-        float f4 = 0.0f;
-        passenger.setPos(this.getX() + (double)(0.1f * f), this.getY(0.5) + passenger.getMyRidingOffset() + 0.0, this.getZ() - (double)(0.1f * f2));
-        if (passenger instanceof net.minecraft.world.entity.LivingEntity) {
-            ((net.minecraft.world.entity.LivingEntity)passenger).yBodyRot = this.yBodyRot;
+    public void positionRider(net.minecraft.world.entity.Entity $$0) {
+        super.positionRider($$0);
+        float $$1 = net.minecraft.util.Mth.sin((float)(this.yBodyRot * ((float)java.lang.Math.PI / 180)));
+        float $$2 = net.minecraft.util.Mth.cos((float)(this.yBodyRot * ((float)java.lang.Math.PI / 180)));
+        float $$3 = 0.1f;
+        float $$4 = 0.0f;
+        $$0.setPos(this.getX() + (double)(0.1f * $$1), this.getY(0.5) + $$0.getMyRidingOffset() + 0.0, this.getZ() - (double)(0.1f * $$2));
+        if ($$0 instanceof net.minecraft.world.entity.LivingEntity) {
+            ((net.minecraft.world.entity.LivingEntity)$$0).yBodyRot = this.yBodyRot;
         }
     }
 
@@ -143,10 +144,11 @@
         return this.isChickenJockey;
     }
 
-    public void setChickenJockey(boolean isChickenJockey) {
-        this.isChickenJockey = isChickenJockey;
+    public void setChickenJockey(boolean $$0) {
+        this.isChickenJockey = $$0;
     }
 
+    @javax.annotation.Nullable
     public /* synthetic */ net.minecraft.world.entity.AgeableMob getBreedOffspring(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.AgeableMob ageableMob) {
         return this.getBreedOffspring(serverLevel, ageableMob);
     }