--- net/minecraft/world/entity/animal/Turtle.java
+++ net/minecraft/world/entity/animal/Turtle.java
@@ -26,16 +26,16 @@
         this.maxUpStep = 1.0f;
     }
 
-    public void setHomePos(net.minecraft.core.BlockPos homePos) {
-        this.entityData.set(HOME_POS, (java.lang.Object)homePos);
+    public void setHomePos(net.minecraft.core.BlockPos $$0) {
+        this.entityData.set(HOME_POS, (java.lang.Object)$$0);
     }
 
     public net.minecraft.core.BlockPos getHomePos() {
         return (net.minecraft.core.BlockPos)this.entityData.get(HOME_POS);
     }
 
-    public void setTravelPos(net.minecraft.core.BlockPos travelPos) {
-        this.entityData.set(TRAVEL_POS, (java.lang.Object)travelPos);
+    public void setTravelPos(net.minecraft.core.BlockPos $$0) {
+        this.entityData.set(TRAVEL_POS, (java.lang.Object)$$0);
     }
 
     public net.minecraft.core.BlockPos getTravelPos() {
@@ -46,33 +46,33 @@
         return (java.lang.Boolean)this.entityData.get(HAS_EGG);
     }
 
-    public void setHasEgg(boolean hasEgg) {
-        this.entityData.set(HAS_EGG, (java.lang.Object)hasEgg);
+    public void setHasEgg(boolean $$0) {
+        this.entityData.set(HAS_EGG, (java.lang.Object)$$0);
     }
 
     public boolean isLayingEgg() {
         return (java.lang.Boolean)this.entityData.get(LAYING_EGG);
     }
 
-    public void setLayingEgg(boolean isLayingEgg) {
-        this.layEggCounter = isLayingEgg ? 1 : 0;
-        this.entityData.set(LAYING_EGG, (java.lang.Object)isLayingEgg);
+    public void setLayingEgg(boolean $$0) {
+        this.layEggCounter = $$0 ? 1 : 0;
+        this.entityData.set(LAYING_EGG, (java.lang.Object)$$0);
     }
 
     public boolean isGoingHome() {
         return (java.lang.Boolean)this.entityData.get(GOING_HOME);
     }
 
-    public void setGoingHome(boolean isGoingHome) {
-        this.entityData.set(GOING_HOME, (java.lang.Object)isGoingHome);
+    public void setGoingHome(boolean $$0) {
+        this.entityData.set(GOING_HOME, (java.lang.Object)$$0);
     }
 
     public boolean isTravelling() {
         return (java.lang.Boolean)this.entityData.get(TRAVELLING);
     }
 
-    public void setTravelling(boolean isTravelling) {
-        this.entityData.set(TRAVELLING, (java.lang.Object)isTravelling);
+    public void setTravelling(boolean $$0) {
+        this.entityData.set(TRAVELLING, (java.lang.Object)$$0);
     }
 
     public void defineSynchedData() {
@@ -85,35 +85,35 @@
         this.entityData.define(LAYING_EGG, (java.lang.Object)false);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putInt("HomePosX", this.getHomePos().getX());
-        compound.putInt("HomePosY", this.getHomePos().getY());
-        compound.putInt("HomePosZ", this.getHomePos().getZ());
-        compound.putBoolean("HasEgg", this.hasEgg());
-        compound.putInt("TravelPosX", this.getTravelPos().getX());
-        compound.putInt("TravelPosY", this.getTravelPos().getY());
-        compound.putInt("TravelPosZ", this.getTravelPos().getZ());
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putInt("HomePosX", this.getHomePos().getX());
+        $$0.putInt("HomePosY", this.getHomePos().getY());
+        $$0.putInt("HomePosZ", this.getHomePos().getZ());
+        $$0.putBoolean("HasEgg", this.hasEgg());
+        $$0.putInt("TravelPosX", this.getTravelPos().getX());
+        $$0.putInt("TravelPosY", this.getTravelPos().getY());
+        $$0.putInt("TravelPosZ", this.getTravelPos().getZ());
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        int n = compound.getInt("HomePosX");
-        int n2 = compound.getInt("HomePosY");
-        int n3 = compound.getInt("HomePosZ");
-        this.setHomePos(new net.minecraft.core.BlockPos(n, n2, n3));
-        super.readAdditionalSaveData(compound);
-        this.setHasEgg(compound.getBoolean("HasEgg"));
-        int n4 = compound.getInt("TravelPosX");
-        int n5 = compound.getInt("TravelPosY");
-        int n6 = compound.getInt("TravelPosZ");
-        this.setTravelPos(new net.minecraft.core.BlockPos(n4, n5, n6));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        int $$1 = $$0.getInt("HomePosX");
+        int $$2 = $$0.getInt("HomePosY");
+        int $$3 = $$0.getInt("HomePosZ");
+        this.setHomePos(new net.minecraft.core.BlockPos($$1, $$2, $$3));
+        super.readAdditionalSaveData($$0);
+        this.setHasEgg($$0.getBoolean("HasEgg"));
+        int $$4 = $$0.getInt("TravelPosX");
+        int $$5 = $$0.getInt("TravelPosY");
+        int $$6 = $$0.getInt("TravelPosZ");
+        this.setTravelPos(new net.minecraft.core.BlockPos($$4, $$5, $$6));
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
         this.setHomePos(this.blockPosition());
         this.setTravelPos(net.minecraft.core.BlockPos.ZERO);
-        return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+        return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
     }
 
     public static boolean checkTurtleSpawnRules(net.minecraft.world.entity.EntityType<net.minecraft.world.entity.animal.Turtle> $$0, net.minecraft.world.level.LevelAccessor $$1, net.minecraft.world.entity.MobSpawnType $$2, net.minecraft.core.BlockPos $$3, net.minecraft.util.RandomSource $$4) {
@@ -160,8 +160,8 @@
         return super.getAmbientSound();
     }
 
-    public void playSwimSound(float volume) {
-        super.playSwimSound(volume * 1.5f);
+    public void playSwimSound(float $$0) {
+        super.playSwimSound($$0 * 1.5f);
     }
 
     public net.minecraft.sounds.SoundEvent getSwimSound() {
@@ -169,7 +169,7 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         if (this.isBaby()) {
             return net.minecraft.sounds.SoundEvents.TURTLE_HURT_BABY;
         }
@@ -184,9 +184,9 @@
         return net.minecraft.sounds.SoundEvents.TURTLE_DEATH;
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
-        net.minecraft.sounds.SoundEvent soundEvent = this.isBaby() ? net.minecraft.sounds.SoundEvents.TURTLE_SHAMBLE_BABY : net.minecraft.sounds.SoundEvents.TURTLE_SHAMBLE;
-        this.playSound(soundEvent, 0.15f, 1.0f);
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
+        net.minecraft.sounds.SoundEvent $$2 = this.isBaby() ? net.minecraft.sounds.SoundEvents.TURTLE_SHAMBLE_BABY : net.minecraft.sounds.SoundEvents.TURTLE_SHAMBLE;
+        this.playSound($$2, 0.15f, 1.0f);
     }
 
     public boolean canFallInLove() {
@@ -201,8 +201,8 @@
         return this.isBaby() ? 0.3f : 1.0f;
     }
 
-    public net.minecraft.world.entity.ai.navigation.PathNavigation createNavigation(net.minecraft.world.level.Level level) {
-        return new net.minecraft.world.entity.animal.Turtle$TurtlePathNavigation(this, level);
+    public net.minecraft.world.entity.ai.navigation.PathNavigation createNavigation(net.minecraft.world.level.Level $$0) {
+        return new net.minecraft.world.entity.animal.Turtle$TurtlePathNavigation(this, $$0);
     }
 
     @javax.annotation.Nullable
@@ -210,18 +210,18 @@
         return (net.minecraft.world.entity.AgeableMob)net.minecraft.world.entity.EntityType.TURTLE.create((net.minecraft.world.level.Level)$$0);
     }
 
-    public boolean isFood(net.minecraft.world.item.ItemStack stack) {
-        return stack.is(net.minecraft.world.level.block.Blocks.SEAGRASS.asItem());
+    public boolean isFood(net.minecraft.world.item.ItemStack $$0) {
+        return $$0.is(net.minecraft.world.level.block.Blocks.SEAGRASS.asItem());
     }
 
-    public float getWalkTargetValue(net.minecraft.core.BlockPos pos, net.minecraft.world.level.LevelReader level) {
-        if (!this.isGoingHome() && level.getFluidState(pos).is(net.minecraft.tags.FluidTags.WATER)) {
+    public float getWalkTargetValue(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.LevelReader $$1) {
+        if (!this.isGoingHome() && $$1.getFluidState($$0).is(net.minecraft.tags.FluidTags.WATER)) {
             return 10.0f;
         }
-        if (net.minecraft.world.level.block.TurtleEggBlock.onSand((net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos)pos)) {
+        if (net.minecraft.world.level.block.TurtleEggBlock.onSand((net.minecraft.world.level.BlockGetter)$$1, (net.minecraft.core.BlockPos)$$0)) {
             return 10.0f;
         }
-        return level.getPathfindingCostFromLightLevels(pos);
+        return $$1.getPathfindingCostFromLightLevels($$0);
     }
 
     public void aiStep() {
@@ -239,29 +239,29 @@
         }
     }
 
-    public void travel(net.minecraft.world.phys.Vec3 travelVector) {
+    public void travel(net.minecraft.world.phys.Vec3 $$0) {
         if (this.isEffectiveAi() && this.isInWater()) {
-            this.moveRelative(0.1f, travelVector);
+            this.moveRelative(0.1f, $$0);
             this.move(net.minecraft.world.entity.MoverType.SELF, this.getDeltaMovement());
             this.setDeltaMovement(this.getDeltaMovement().scale(0.9));
             if (!(this.getTarget() != null || this.isGoingHome() && this.getHomePos().closerToCenterThan((net.minecraft.core.Position)this.position(), 20.0))) {
                 this.setDeltaMovement(this.getDeltaMovement().add(0.0, -0.005, 0.0));
             }
         } else {
-            super.travel(travelVector);
+            super.travel($$0);
         }
     }
 
-    public boolean canBeLeashed(net.minecraft.world.entity.player.Player player) {
+    public boolean canBeLeashed(net.minecraft.world.entity.player.Player $$0) {
         return false;
     }
 
-    public void thunderHit(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LightningBolt lightning) {
+    public void thunderHit(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LightningBolt $$1) {
         this.hurt(net.minecraft.world.damagesource.DamageSource.LIGHTNING_BOLT, java.lang.Float.MAX_VALUE);
     }
 
-    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.LivingEntity entity) {
-        return entity.isBaby() && !entity.isInWater();
+    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.LivingEntity $$0) {
+        return $$0.isBaby() && !$$0.isInWater();
     }
 
     public static /* synthetic */ net.minecraft.util.RandomSource access$000(net.minecraft.world.entity.animal.Turtle $$0) {
@@ -284,7 +284,7 @@
         GOING_HOME = net.minecraft.network.syncher.SynchedEntityData.defineId(net.minecraft.world.entity.animal.Turtle.class, (net.minecraft.network.syncher.EntityDataSerializer)net.minecraft.network.syncher.EntityDataSerializers.BOOLEAN);
         TRAVELLING = net.minecraft.network.syncher.SynchedEntityData.defineId(net.minecraft.world.entity.animal.Turtle.class, (net.minecraft.network.syncher.EntityDataSerializer)net.minecraft.network.syncher.EntityDataSerializers.BOOLEAN);
         FOOD_ITEMS = net.minecraft.world.item.crafting.Ingredient.of((net.minecraft.world.level.ItemLike[])new net.minecraft.world.level.ItemLike[]{net.minecraft.world.level.block.Blocks.SEAGRASS.asItem()});
-        BABY_ON_LAND_SELECTOR = entity -> entity.isBaby() && !entity.isInWater();
+        BABY_ON_LAND_SELECTOR = $$0 -> $$0.isBaby() && !$$0.isInWater();
     }
 }
 