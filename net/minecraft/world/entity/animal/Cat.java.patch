--- net/minecraft/world/entity/animal/Cat.java
+++ net/minecraft/world/entity/animal/Cat.java
@@ -58,16 +58,16 @@
         this.entityData.set(DATA_VARIANT_ID, (java.lang.Object)$$0);
     }
 
-    public void setLying(boolean lying) {
-        this.entityData.set(IS_LYING, (java.lang.Object)lying);
+    public void setLying(boolean $$0) {
+        this.entityData.set(IS_LYING, (java.lang.Object)$$0);
     }
 
     public boolean isLying() {
         return (java.lang.Boolean)this.entityData.get(IS_LYING);
     }
 
-    public void setRelaxStateOne(boolean relaxStateOne) {
-        this.entityData.set(RELAX_STATE_ONE, (java.lang.Object)relaxStateOne);
+    public void setRelaxStateOne(boolean $$0) {
+        this.entityData.set(RELAX_STATE_ONE, (java.lang.Object)$$0);
     }
 
     public boolean isRelaxStateOne() {
@@ -78,8 +78,8 @@
         return net.minecraft.world.item.DyeColor.byId((int)((java.lang.Integer)this.entityData.get(DATA_COLLAR_COLOR)));
     }
 
-    public void setCollarColor(net.minecraft.world.item.DyeColor color) {
-        this.entityData.set(DATA_COLLAR_COLOR, (java.lang.Object)color.getId());
+    public void setCollarColor(net.minecraft.world.item.DyeColor $$0) {
+        this.entityData.set(DATA_COLLAR_COLOR, (java.lang.Object)$$0.getId());
     }
 
     public void defineSynchedData() {
@@ -90,20 +90,20 @@
         this.entityData.define(DATA_COLLAR_COLOR, (java.lang.Object)net.minecraft.world.item.DyeColor.RED.getId());
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putString("variant", net.minecraft.core.Registry.CAT_VARIANT.getKey((java.lang.Object)this.getCatVariant()).toString());
-        compound.putByte("CollarColor", (byte)this.getCollarColor().getId());
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putString("variant", net.minecraft.core.Registry.CAT_VARIANT.getKey((java.lang.Object)this.getCatVariant()).toString());
+        $$0.putByte("CollarColor", (byte)this.getCollarColor().getId());
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        net.minecraft.world.entity.animal.CatVariant catVariant = (net.minecraft.world.entity.animal.CatVariant)net.minecraft.core.Registry.CAT_VARIANT.get(net.minecraft.resources.ResourceLocation.tryParse((java.lang.String)compound.getString("variant")));
-        if (catVariant != null) {
-            this.setCatVariant(catVariant);
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        net.minecraft.world.entity.animal.CatVariant $$1 = (net.minecraft.world.entity.animal.CatVariant)net.minecraft.core.Registry.CAT_VARIANT.get(net.minecraft.resources.ResourceLocation.tryParse((java.lang.String)$$0.getString("variant")));
+        if ($$1 != null) {
+            this.setCatVariant($$1);
         }
-        if (compound.contains("CollarColor", 99)) {
-            this.setCollarColor(net.minecraft.world.item.DyeColor.byId((int)compound.getInt("CollarColor")));
+        if ($$0.contains("CollarColor", 99)) {
+            this.setCollarColor(net.minecraft.world.item.DyeColor.byId((int)$$0.getInt("CollarColor")));
         }
     }
 
@@ -148,7 +148,7 @@
         this.playSound(net.minecraft.sounds.SoundEvents.CAT_HISS, this.getSoundVolume(), this.getVoicePitch());
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.CAT_HURT;
     }
 
@@ -175,8 +175,8 @@
         return (float)this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE);
     }
 
-    public boolean doHurtTarget(net.minecraft.world.entity.Entity entity) {
-        return entity.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), this.getAttackDamage());
+    public boolean doHurtTarget(net.minecraft.world.entity.Entity $$0) {
+        return $$0.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), this.getAttackDamage());
     }
 
     public void tick() {
@@ -212,25 +212,27 @@
         this.relaxStateOneAmount = this.isRelaxStateOne() ? java.lang.Math.min((float)1.0f, (float)(this.relaxStateOneAmount + 0.1f)) : java.lang.Math.max((float)0.0f, (float)(this.relaxStateOneAmount - 0.13f));
     }
 
-    public float getLieDownAmount(float partialTicks) {
-        return net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.lieDownAmountO, (float)this.lieDownAmount);
+    public float getLieDownAmount(float $$0) {
+        return net.minecraft.util.Mth.lerp((float)$$0, (float)this.lieDownAmountO, (float)this.lieDownAmount);
     }
 
-    public float getLieDownAmountTail(float partialTicks) {
-        return net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.lieDownAmountOTail, (float)this.lieDownAmountTail);
+    public float getLieDownAmountTail(float $$0) {
+        return net.minecraft.util.Mth.lerp((float)$$0, (float)this.lieDownAmountOTail, (float)this.lieDownAmountTail);
     }
 
-    public float getRelaxStateOneAmount(float partialTicks) {
-        return net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.relaxStateOneAmountO, (float)this.relaxStateOneAmount);
+    public float getRelaxStateOneAmount(float $$0) {
+        return net.minecraft.util.Mth.lerp((float)$$0, (float)this.relaxStateOneAmountO, (float)this.relaxStateOneAmount);
     }
 
+    @javax.annotation.Nullable
     public net.minecraft.world.entity.animal.Cat getBreedOffspring(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.AgeableMob $$1) {
         net.minecraft.world.entity.animal.Cat $$2 = (net.minecraft.world.entity.animal.Cat)net.minecraft.world.entity.EntityType.CAT.create((net.minecraft.world.level.Level)$$0);
-        if ($$1 instanceof net.minecraft.world.entity.animal.Cat) {
+        if ($$2 != null && $$1 instanceof net.minecraft.world.entity.animal.Cat) {
+            net.minecraft.world.entity.animal.Cat $$3 = (net.minecraft.world.entity.animal.Cat)$$1;
             if (this.random.nextBoolean()) {
                 $$2.setCatVariant(this.getCatVariant());
             } else {
-                $$2.setCatVariant(((net.minecraft.world.entity.animal.Cat)$$1).getCatVariant());
+                $$2.setCatVariant($$3.getCatVariant());
             }
             if (this.isTame()) {
                 $$2.setOwnerUUID(this.getOwnerUUID());
@@ -238,80 +240,80 @@
                 if (this.random.nextBoolean()) {
                     $$2.setCollarColor(this.getCollarColor());
                 } else {
-                    $$2.setCollarColor(((net.minecraft.world.entity.animal.Cat)$$1).getCollarColor());
+                    $$2.setCollarColor($$3.getCollarColor());
                 }
             }
         }
         return $$2;
     }
 
-    public boolean canMate(net.minecraft.world.entity.animal.Animal otherAnimal) {
+    public boolean canMate(net.minecraft.world.entity.animal.Animal $$0) {
         if (!this.isTame()) {
             return false;
         }
-        if (!(otherAnimal instanceof net.minecraft.world.entity.animal.Cat)) {
+        if (!($$0 instanceof net.minecraft.world.entity.animal.Cat)) {
             return false;
         }
-        net.minecraft.world.entity.animal.Cat cat = (net.minecraft.world.entity.animal.Cat)otherAnimal;
-        return cat.isTame() && super.canMate(otherAnimal);
+        net.minecraft.world.entity.animal.Cat $$1 = (net.minecraft.world.entity.animal.Cat)$$0;
+        return $$1.isTame() && super.canMate($$0);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
-        spawnData = super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
-        boolean bl = level.getMoonBrightness() > 0.9f;
-        net.minecraft.tags.TagKey tagKey = bl ? net.minecraft.tags.CatVariantTags.FULL_MOON_SPAWNS : net.minecraft.tags.CatVariantTags.DEFAULT_SPAWNS;
-        net.minecraft.core.Registry.CAT_VARIANT.getTag(tagKey).flatMap($$1 -> $$1.getRandomElement(level.getRandom())).ifPresent($$0 -> this.setCatVariant((net.minecraft.world.entity.animal.CatVariant)$$0.value()));
-        net.minecraft.server.level.ServerLevel serverLevel = level.getLevel();
-        if (serverLevel.structureManager().getStructureWithPieceAt(this.blockPosition(), net.minecraft.tags.StructureTags.CATS_SPAWN_AS_BLACK).isValid()) {
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$02, net.minecraft.world.DifficultyInstance $$12, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
+        $$3 = super.finalizeSpawn($$02, $$12, $$2, $$3, $$4);
+        boolean $$5 = $$02.getMoonBrightness() > 0.9f;
+        net.minecraft.tags.TagKey $$6 = $$5 ? net.minecraft.tags.CatVariantTags.FULL_MOON_SPAWNS : net.minecraft.tags.CatVariantTags.DEFAULT_SPAWNS;
+        net.minecraft.core.Registry.CAT_VARIANT.getTag($$6).flatMap($$1 -> $$1.getRandomElement($$02.getRandom())).ifPresent($$0 -> this.setCatVariant((net.minecraft.world.entity.animal.CatVariant)$$0.value()));
+        net.minecraft.server.level.ServerLevel $$7 = $$02.getLevel();
+        if ($$7.structureManager().getStructureWithPieceAt(this.blockPosition(), net.minecraft.tags.StructureTags.CATS_SPAWN_AS_BLACK).isValid()) {
             this.setCatVariant(net.minecraft.world.entity.animal.CatVariant.ALL_BLACK);
             this.setPersistenceRequired();
         }
-        return spawnData;
+        return $$3;
     }
 
-    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        net.minecraft.world.InteractionResult interactionResult;
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        net.minecraft.world.item.Item item = itemStack.getItem();
+    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$1) {
+        net.minecraft.world.InteractionResult $$6;
+        net.minecraft.world.item.ItemStack $$2 = $$0.getItemInHand($$1);
+        net.minecraft.world.item.Item $$3 = $$2.getItem();
         if (this.level.isClientSide) {
-            if (this.isTame() && this.isOwnedBy((net.minecraft.world.entity.LivingEntity)player)) {
+            if (this.isTame() && this.isOwnedBy((net.minecraft.world.entity.LivingEntity)$$0)) {
                 return net.minecraft.world.InteractionResult.SUCCESS;
             }
-            if (this.isFood(itemStack) && (this.getHealth() < this.getMaxHealth() || !this.isTame())) {
+            if (this.isFood($$2) && (this.getHealth() < this.getMaxHealth() || !this.isTame())) {
                 return net.minecraft.world.InteractionResult.SUCCESS;
             }
             return net.minecraft.world.InteractionResult.PASS;
         }
         if (this.isTame()) {
-            if (this.isOwnedBy((net.minecraft.world.entity.LivingEntity)player)) {
-                if (item instanceof net.minecraft.world.item.DyeItem) {
-                    interactionResult = ((net.minecraft.world.item.DyeItem)item).getDyeColor();
-                    if (interactionResult != this.getCollarColor()) {
-                        this.setCollarColor((net.minecraft.world.item.DyeColor)interactionResult);
-                        if (!player.getAbilities().instabuild) {
-                            itemStack.shrink(1);
+            if (this.isOwnedBy((net.minecraft.world.entity.LivingEntity)$$0)) {
+                if ($$3 instanceof net.minecraft.world.item.DyeItem) {
+                    net.minecraft.world.item.DyeColor $$4 = ((net.minecraft.world.item.DyeItem)$$3).getDyeColor();
+                    if ($$4 != this.getCollarColor()) {
+                        this.setCollarColor($$4);
+                        if (!$$0.getAbilities().instabuild) {
+                            $$2.shrink(1);
                         }
                         this.setPersistenceRequired();
                         return net.minecraft.world.InteractionResult.CONSUME;
                     }
                 } else {
-                    if (item.isEdible() && this.isFood(itemStack) && this.getHealth() < this.getMaxHealth()) {
-                        this.usePlayerItem(player, hand, itemStack);
-                        this.heal((float)item.getFoodProperties().getNutrition());
+                    if ($$3.isEdible() && this.isFood($$2) && this.getHealth() < this.getMaxHealth()) {
+                        this.usePlayerItem($$0, $$1, $$2);
+                        this.heal((float)$$3.getFoodProperties().getNutrition());
                         return net.minecraft.world.InteractionResult.CONSUME;
                     }
-                    net.minecraft.world.InteractionResult interactionResult2 = super.mobInteract(player, hand);
-                    if (!interactionResult2.consumesAction() || this.isBaby()) {
+                    net.minecraft.world.InteractionResult $$5 = super.mobInteract($$0, $$1);
+                    if (!$$5.consumesAction() || this.isBaby()) {
                         this.setOrderedToSit(!this.isOrderedToSit());
                     }
-                    return interactionResult2;
+                    return $$5;
                 }
             }
-        } else if (this.isFood(itemStack)) {
-            this.usePlayerItem(player, hand, itemStack);
+        } else if (this.isFood($$2)) {
+            this.usePlayerItem($$0, $$1, $$2);
             if (this.random.nextInt(3) == 0) {
-                this.tame(player);
+                this.tame($$0);
                 this.setOrderedToSit(true);
                 this.level.broadcastEntityEvent((net.minecraft.world.entity.Entity)this, (byte)7);
             } else {
@@ -320,21 +322,21 @@
             this.setPersistenceRequired();
             return net.minecraft.world.InteractionResult.CONSUME;
         }
-        if ((interactionResult = super.mobInteract(player, hand)).consumesAction()) {
+        if (($$6 = super.mobInteract($$0, $$1)).consumesAction()) {
             this.setPersistenceRequired();
         }
-        return interactionResult;
+        return $$6;
     }
 
-    public boolean isFood(net.minecraft.world.item.ItemStack stack) {
-        return TEMPT_INGREDIENT.test(stack);
+    public boolean isFood(net.minecraft.world.item.ItemStack $$0) {
+        return TEMPT_INGREDIENT.test($$0);
     }
 
-    public float getStandingEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
-        return size.height * 0.5f;
+    public float getStandingEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
+        return $$1.height * 0.5f;
     }
 
-    public boolean removeWhenFarAway(double distanceToClosestPlayer) {
+    public boolean removeWhenFarAway(double $$0) {
         return !this.isTame() && this.tickCount > 2400;
     }
 
@@ -352,6 +354,7 @@
         return this.isCrouching() || super.isSteppingCarefully();
     }
 
+    @javax.annotation.Nullable
     public /* synthetic */ net.minecraft.world.entity.AgeableMob getBreedOffspring(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.AgeableMob ageableMob) {
         return this.getBreedOffspring(serverLevel, ageableMob);
     }