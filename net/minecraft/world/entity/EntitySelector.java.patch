--- net/minecraft/world/entity/EntitySelector.java
+++ net/minecraft/world/entity/EntitySelector.java
@@ -16,77 +16,77 @@
     public net.minecraft.world.entity.EntitySelector() {
     }
 
-    public static java.util.function.Predicate<net.minecraft.world.entity.Entity> withinDistance(double x, double y, double z, double range) {
-        double d = range * range;
-        return entity -> entity != null && entity.distanceToSqr(x, y, z) <= d;
+    public static java.util.function.Predicate<net.minecraft.world.entity.Entity> withinDistance(double $$0, double $$1, double $$2, double $$3) {
+        double $$42 = $$3 * $$3;
+        return $$4 -> $$4 != null && $$4.distanceToSqr($$0, $$1, $$2) <= $$42;
     }
 
-    public static java.util.function.Predicate<net.minecraft.world.entity.Entity> pushableBy(net.minecraft.world.entity.Entity entity) {
-        net.minecraft.world.scores.Team$CollisionRule collisionRule;
-        net.minecraft.world.scores.Team team = entity.getTeam();
-        net.minecraft.world.scores.Team$CollisionRule collisionRule2 = collisionRule = team == null ? net.minecraft.world.scores.Team$CollisionRule.ALWAYS : team.getCollisionRule();
-        if (collisionRule == net.minecraft.world.scores.Team$CollisionRule.NEVER) {
+    public static java.util.function.Predicate<net.minecraft.world.entity.Entity> pushableBy(net.minecraft.world.entity.Entity $$0) {
+        net.minecraft.world.scores.Team$CollisionRule $$2;
+        net.minecraft.world.scores.Team $$1 = $$0.getTeam();
+        net.minecraft.world.scores.Team$CollisionRule collisionRule = $$2 = $$1 == null ? net.minecraft.world.scores.Team$CollisionRule.ALWAYS : $$1.getCollisionRule();
+        if ($$2 == net.minecraft.world.scores.Team$CollisionRule.NEVER) {
             return com.google.common.base.Predicates.alwaysFalse();
         }
-        return NO_SPECTATORS.and(pushedEntity -> {
-            boolean bl;
-            net.minecraft.world.scores.Team$CollisionRule collisionRule2;
-            if (!pushedEntity.isPushable()) {
+        return NO_SPECTATORS.and($$3 -> {
+            boolean $$6;
+            net.minecraft.world.scores.Team$CollisionRule $$5;
+            if (!$$3.isPushable()) {
                 return false;
             }
-            if (!(!entity.level.isClientSide || pushedEntity instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)pushedEntity).isLocalPlayer())) {
+            if (!(!$$0.level.isClientSide || $$3 instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)$$3).isLocalPlayer())) {
                 return false;
             }
-            net.minecraft.world.scores.Team team2 = pushedEntity.getTeam();
-            net.minecraft.world.scores.Team$CollisionRule collisionRule3 = collisionRule2 = team2 == null ? net.minecraft.world.scores.Team$CollisionRule.ALWAYS : team2.getCollisionRule();
-            if (collisionRule2 == net.minecraft.world.scores.Team$CollisionRule.NEVER) {
+            net.minecraft.world.scores.Team $$4 = $$3.getTeam();
+            net.minecraft.world.scores.Team$CollisionRule collisionRule = $$5 = $$4 == null ? net.minecraft.world.scores.Team$CollisionRule.ALWAYS : $$4.getCollisionRule();
+            if ($$5 == net.minecraft.world.scores.Team$CollisionRule.NEVER) {
                 return false;
             }
-            boolean bl2 = bl = team != null && team.isAlliedTo(team2);
-            if ((collisionRule == net.minecraft.world.scores.Team$CollisionRule.PUSH_OWN_TEAM || collisionRule2 == net.minecraft.world.scores.Team$CollisionRule.PUSH_OWN_TEAM) && bl) {
+            boolean bl = $$6 = $$1 != null && $$1.isAlliedTo($$4);
+            if (($$2 == net.minecraft.world.scores.Team$CollisionRule.PUSH_OWN_TEAM || $$5 == net.minecraft.world.scores.Team$CollisionRule.PUSH_OWN_TEAM) && $$6) {
                 return false;
             }
-            return collisionRule != net.minecraft.world.scores.Team$CollisionRule.PUSH_OTHER_TEAMS && collisionRule2 != net.minecraft.world.scores.Team$CollisionRule.PUSH_OTHER_TEAMS || bl;
+            return $$2 != net.minecraft.world.scores.Team$CollisionRule.PUSH_OTHER_TEAMS && $$5 != net.minecraft.world.scores.Team$CollisionRule.PUSH_OTHER_TEAMS || $$6;
         });
     }
 
-    public static java.util.function.Predicate<net.minecraft.world.entity.Entity> notRiding(net.minecraft.world.entity.Entity entity) {
-        return passenger -> {
-            while (passenger.isPassenger()) {
-                if ((passenger = passenger.getVehicle()) != entity) continue;
+    public static java.util.function.Predicate<net.minecraft.world.entity.Entity> notRiding(net.minecraft.world.entity.Entity $$0) {
+        return $$1 -> {
+            while ($$1.isPassenger()) {
+                if (($$1 = $$1.getVehicle()) != $$0) continue;
                 return false;
             }
             return true;
         };
     }
 
-    public static /* synthetic */ boolean lambda$static$4(net.minecraft.world.entity.Entity entity) {
-        return !entity.isSpectator();
+    public static /* synthetic */ boolean lambda$static$4(net.minecraft.world.entity.Entity $$0) {
+        return !$$0.isSpectator();
     }
 
-    public static /* synthetic */ boolean lambda$static$3(net.minecraft.world.entity.Entity entity) {
-        return !(entity instanceof net.minecraft.world.entity.player.Player) || !entity.isSpectator() && !((net.minecraft.world.entity.player.Player)entity).isCreative();
+    public static /* synthetic */ boolean lambda$static$3(net.minecraft.world.entity.Entity $$0) {
+        return !($$0 instanceof net.minecraft.world.entity.player.Player) || !$$0.isSpectator() && !((net.minecraft.world.entity.player.Player)$$0).isCreative();
     }
 
-    public static /* synthetic */ boolean lambda$static$2(net.minecraft.world.entity.Entity entity) {
-        return entity instanceof net.minecraft.world.Container && entity.isAlive();
+    public static /* synthetic */ boolean lambda$static$2(net.minecraft.world.entity.Entity $$0) {
+        return $$0 instanceof net.minecraft.world.Container && $$0.isAlive();
     }
 
-    public static /* synthetic */ boolean lambda$static$1(net.minecraft.world.entity.Entity entity) {
-        return entity.isAlive() && !entity.isVehicle() && !entity.isPassenger();
+    public static /* synthetic */ boolean lambda$static$1(net.minecraft.world.entity.Entity $$0) {
+        return $$0.isAlive() && !$$0.isVehicle() && !$$0.isPassenger();
     }
 
-    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.Entity entity) {
-        return entity.isAlive() && entity instanceof net.minecraft.world.entity.LivingEntity;
+    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.Entity $$0) {
+        return $$0.isAlive() && $$0 instanceof net.minecraft.world.entity.LivingEntity;
     }
 
     static {
         ENTITY_STILL_ALIVE = net.minecraft.world.entity.Entity::isAlive;
-        LIVING_ENTITY_STILL_ALIVE = entity -> entity.isAlive() && entity instanceof net.minecraft.world.entity.LivingEntity;
-        ENTITY_NOT_BEING_RIDDEN = entity -> entity.isAlive() && !entity.isVehicle() && !entity.isPassenger();
-        CONTAINER_ENTITY_SELECTOR = entity -> entity instanceof net.minecraft.world.Container && entity.isAlive();
-        NO_CREATIVE_OR_SPECTATOR = entity -> !(entity instanceof net.minecraft.world.entity.player.Player) || !entity.isSpectator() && !((net.minecraft.world.entity.player.Player)entity).isCreative();
-        NO_SPECTATORS = entity -> !entity.isSpectator();
+        LIVING_ENTITY_STILL_ALIVE = $$0 -> $$0.isAlive() && $$0 instanceof net.minecraft.world.entity.LivingEntity;
+        ENTITY_NOT_BEING_RIDDEN = $$0 -> $$0.isAlive() && !$$0.isVehicle() && !$$0.isPassenger();
+        CONTAINER_ENTITY_SELECTOR = $$0 -> $$0 instanceof net.minecraft.world.Container && $$0.isAlive();
+        NO_CREATIVE_OR_SPECTATOR = $$0 -> !($$0 instanceof net.minecraft.world.entity.player.Player) || !$$0.isSpectator() && !((net.minecraft.world.entity.player.Player)$$0).isCreative();
+        NO_SPECTATORS = $$0 -> !$$0.isSpectator();
         CAN_BE_COLLIDED_WITH = NO_SPECTATORS.and(net.minecraft.world.entity.Entity::canBeCollidedWith);
     }
 }