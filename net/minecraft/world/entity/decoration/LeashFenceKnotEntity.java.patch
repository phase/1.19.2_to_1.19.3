--- net/minecraft/world/entity/decoration/LeashFenceKnotEntity.java
+++ net/minecraft/world/entity/decoration/LeashFenceKnotEntity.java
@@ -12,9 +12,9 @@
         super($$0, $$1);
     }
 
-    public net.minecraft.world.entity.decoration.LeashFenceKnotEntity(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        super(net.minecraft.world.entity.EntityType.LEASH_KNOT, level, pos);
-        this.setPos((double)pos.getX(), (double)pos.getY(), (double)pos.getZ());
+    public net.minecraft.world.entity.decoration.LeashFenceKnotEntity(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1) {
+        super(net.minecraft.world.entity.EntityType.LEASH_KNOT, $$0, $$1);
+        this.setPos((double)$$1.getX(), (double)$$1.getY(), (double)$$1.getZ());
     }
 
     public void recalculateBoundingBox() {
@@ -24,7 +24,7 @@
         this.setBoundingBox(new net.minecraft.world.phys.AABB(this.getX() - $$0, this.getY(), this.getZ() - $$0, this.getX() + $$0, this.getY() + $$1, this.getZ() + $$0));
     }
 
-    public void setDirection(net.minecraft.core.Direction facingDirection) {
+    public void setDirection(net.minecraft.core.Direction $$0) {
     }
 
     public int getWidth() {
@@ -35,42 +35,42 @@
         return 9;
     }
 
-    public float getEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
+    public float getEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
         return 0.0625f;
     }
 
-    public boolean shouldRenderAtSqrDistance(double distance) {
-        return distance < 1024.0;
+    public boolean shouldRenderAtSqrDistance(double $$0) {
+        return $$0 < 1024.0;
     }
 
-    public void dropItem(@javax.annotation.Nullable net.minecraft.world.entity.Entity brokenEntity) {
+    public void dropItem(@javax.annotation.Nullable net.minecraft.world.entity.Entity $$0) {
         this.playSound(net.minecraft.sounds.SoundEvents.LEASH_KNOT_BREAK, 1.0f, 1.0f);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
     }
 
-    public net.minecraft.world.InteractionResult interact(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
+    public net.minecraft.world.InteractionResult interact(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$1) {
         if (this.level.isClientSide) {
             return net.minecraft.world.InteractionResult.SUCCESS;
         }
-        boolean bl = false;
-        double d = 7.0;
-        java.util.List list = this.level.getEntitiesOfClass(net.minecraft.world.entity.Mob.class, new net.minecraft.world.phys.AABB(this.getX() - 7.0, this.getY() - 7.0, this.getZ() - 7.0, this.getX() + 7.0, this.getY() + 7.0, this.getZ() + 7.0));
-        for (net.minecraft.world.entity.Mob mob : list) {
-            if (mob.getLeashHolder() != player) continue;
-            mob.setLeashedTo((net.minecraft.world.entity.Entity)this, true);
-            bl = true;
+        boolean $$2 = false;
+        double $$3 = 7.0;
+        java.util.List $$4 = this.level.getEntitiesOfClass(net.minecraft.world.entity.Mob.class, new net.minecraft.world.phys.AABB(this.getX() - 7.0, this.getY() - 7.0, this.getZ() - 7.0, this.getX() + 7.0, this.getY() + 7.0, this.getZ() + 7.0));
+        for (net.minecraft.world.entity.Mob $$5 : $$4) {
+            if ($$5.getLeashHolder() != $$0) continue;
+            $$5.setLeashedTo((net.minecraft.world.entity.Entity)this, true);
+            $$2 = true;
         }
-        if (!bl) {
+        if (!$$2) {
             this.discard();
-            if (player.getAbilities().instabuild) {
-                for (net.minecraft.world.entity.Mob mob : list) {
-                    if (!mob.isLeashed() || mob.getLeashHolder() != this) continue;
-                    mob.dropLeash(true, false);
+            if ($$0.getAbilities().instabuild) {
+                for (net.minecraft.world.entity.Mob $$6 : $$4) {
+                    if (!$$6.isLeashed() || $$6.getLeashHolder() != this) continue;
+                    $$6.dropLeash(true, false);
                 }
             }
         }
@@ -81,30 +81,30 @@
         return this.level.getBlockState(this.pos).is(net.minecraft.tags.BlockTags.FENCES);
     }
 
-    public static net.minecraft.world.entity.decoration.LeashFenceKnotEntity getOrCreateKnot(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        int n = pos.getX();
-        int n2 = pos.getY();
-        int n3 = pos.getZ();
-        java.util.List list = level.getEntitiesOfClass(net.minecraft.world.entity.decoration.LeashFenceKnotEntity.class, new net.minecraft.world.phys.AABB((double)n - 1.0, (double)n2 - 1.0, (double)n3 - 1.0, (double)n + 1.0, (double)n2 + 1.0, (double)n3 + 1.0));
-        for (net.minecraft.world.entity.decoration.LeashFenceKnotEntity leashFenceKnotEntity : list) {
-            if (!leashFenceKnotEntity.getPos().equals((java.lang.Object)pos)) continue;
-            return leashFenceKnotEntity;
+    public static net.minecraft.world.entity.decoration.LeashFenceKnotEntity getOrCreateKnot(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1) {
+        int $$2 = $$1.getX();
+        int $$3 = $$1.getY();
+        int $$4 = $$1.getZ();
+        java.util.List $$5 = $$0.getEntitiesOfClass(net.minecraft.world.entity.decoration.LeashFenceKnotEntity.class, new net.minecraft.world.phys.AABB((double)$$2 - 1.0, (double)$$3 - 1.0, (double)$$4 - 1.0, (double)$$2 + 1.0, (double)$$3 + 1.0, (double)$$4 + 1.0));
+        for (net.minecraft.world.entity.decoration.LeashFenceKnotEntity $$6 : $$5) {
+            if (!$$6.getPos().equals((java.lang.Object)$$1)) continue;
+            return $$6;
         }
-        java.util.Iterator iterator = new net.minecraft.world.entity.decoration.LeashFenceKnotEntity(level, pos);
-        level.addFreshEntity((net.minecraft.world.entity.Entity)iterator);
-        return iterator;
+        net.minecraft.world.entity.decoration.LeashFenceKnotEntity $$7 = new net.minecraft.world.entity.decoration.LeashFenceKnotEntity($$0, $$1);
+        $$0.addFreshEntity((net.minecraft.world.entity.Entity)$$7);
+        return $$7;
     }
 
     public void playPlacementSound() {
         this.playSound(net.minecraft.sounds.SoundEvents.LEASH_KNOT_PLACE, 1.0f, 1.0f);
     }
 
-    public net.minecraft.network.protocol.Packet<?> getAddEntityPacket() {
+    public net.minecraft.network.protocol.Packet<net.minecraft.network.protocol.game.ClientGamePacketListener> getAddEntityPacket() {
         return new net.minecraft.network.protocol.game.ClientboundAddEntityPacket((net.minecraft.world.entity.Entity)this, 0, this.getPos());
     }
 
-    public net.minecraft.world.phys.Vec3 getRopeHoldPosition(float partialTicks) {
-        return this.getPosition(partialTicks).add(0.0, 0.2, 0.0);
+    public net.minecraft.world.phys.Vec3 getRopeHoldPosition(float $$0) {
+        return this.getPosition($$0).add(0.0, 0.2, 0.0);
     }
 
     public net.minecraft.world.item.ItemStack getPickResult() {