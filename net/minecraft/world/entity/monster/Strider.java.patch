--- net/minecraft/world/entity/monster/Strider.java
+++ net/minecraft/world/entity/monster/Strider.java
@@ -40,11 +40,11 @@
         return $$1.getBlockState((net.minecraft.core.BlockPos)$$5).isAir();
     }
 
-    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> key) {
-        if (DATA_BOOST_TIME.equals(key) && this.level.isClientSide) {
+    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> $$0) {
+        if (DATA_BOOST_TIME.equals($$0) && this.level.isClientSide) {
             this.steering.onSynced();
         }
-        super.onSyncedDataUpdated(key);
+        super.onSyncedDataUpdated($$0);
     }
 
     public void defineSynchedData() {
@@ -54,14 +54,14 @@
         this.entityData.define(DATA_SADDLE_ID, (java.lang.Object)false);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        this.steering.addAdditionalSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        this.steering.addAdditionalSaveData($$0);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.steering.readAdditionalSaveData(compound);
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.steering.readAdditionalSaveData($$0);
     }
 
     public boolean isSaddled() {
@@ -72,10 +72,10 @@
         return this.isAlive() && !this.isBaby();
     }
 
-    public void equipSaddle(@javax.annotation.Nullable net.minecraft.sounds.SoundSource source) {
+    public void equipSaddle(@javax.annotation.Nullable net.minecraft.sounds.SoundSource $$0) {
         this.steering.setSaddle(true);
-        if (source != null) {
-            this.level.playSound(null, (net.minecraft.world.entity.Entity)this, net.minecraft.sounds.SoundEvents.STRIDER_SADDLE, source, 0.5f, 1.0f);
+        if ($$0 != null) {
+            this.level.playSound(null, (net.minecraft.world.entity.Entity)this, net.minecraft.sounds.SoundEvents.STRIDER_SADDLE, $$0, 0.5f, 1.0f);
         }
     }
 
@@ -93,8 +93,8 @@
         this.goalSelector.addGoal(9, (net.minecraft.world.entity.ai.goal.Goal)new net.minecraft.world.entity.ai.goal.LookAtPlayerGoal((net.minecraft.world.entity.Mob)this, net.minecraft.world.entity.monster.Strider.class, 8.0f));
     }
 
-    public void setSuffocating(boolean suffocating) {
-        this.entityData.set(DATA_SUFFOCATING, (java.lang.Object)suffocating);
+    public void setSuffocating(boolean $$0) {
+        this.entityData.set(DATA_SUFFOCATING, (java.lang.Object)$$0);
     }
 
     public boolean isSuffocating() {
@@ -114,8 +114,8 @@
         return (double)this.getBbHeight() - 0.19 + (double)(0.12f * net.minecraft.util.Mth.cos((float)($$1 * 1.5f)) * 2.0f * $$0);
     }
 
-    public boolean checkSpawnObstruction(net.minecraft.world.level.LevelReader level) {
-        return level.isUnobstructed((net.minecraft.world.entity.Entity)this);
+    public boolean checkSpawnObstruction(net.minecraft.world.level.LevelReader $$0) {
+        return $$0.isUnobstructed((net.minecraft.world.entity.Entity)this);
     }
 
     @javax.annotation.Nullable
@@ -132,36 +132,36 @@
         return false;
     }
 
-    public net.minecraft.world.phys.Vec3 getDismountLocationForPassenger(net.minecraft.world.entity.LivingEntity livingEntity) {
-        java.util.Iterator iterator = new java.util.Iterator[]{net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)livingEntity.getBbWidth(), (float)livingEntity.getYRot()), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)livingEntity.getBbWidth(), (float)(livingEntity.getYRot() - 22.5f)), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)livingEntity.getBbWidth(), (float)(livingEntity.getYRot() + 22.5f)), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)livingEntity.getBbWidth(), (float)(livingEntity.getYRot() - 45.0f)), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)livingEntity.getBbWidth(), (float)(livingEntity.getYRot() + 45.0f))};
-        java.util.LinkedHashSet linkedHashSet = com.google.common.collect.Sets.newLinkedHashSet();
-        double d = this.getBoundingBox().maxY;
-        double d2 = this.getBoundingBox().minY - 0.5;
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = new net.minecraft.core.BlockPos$MutableBlockPos();
-        for (net.minecraft.world.phys.Vec3 vec3 : iterator) {
-            mutableBlockPos.set(this.getX() + vec3.x, d, this.getZ() + vec3.z);
-            for (double d3 = d; d3 > d2; d3 -= 1.0) {
-                linkedHashSet.add((java.lang.Object)mutableBlockPos.immutable());
-                mutableBlockPos.move(net.minecraft.core.Direction.DOWN);
+    public net.minecraft.world.phys.Vec3 getDismountLocationForPassenger(net.minecraft.world.entity.LivingEntity $$0) {
+        java.util.Iterator $$1 = new java.util.Iterator[]{net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)$$0.getBbWidth(), (float)$$0.getYRot()), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)$$0.getBbWidth(), (float)($$0.getYRot() - 22.5f)), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)$$0.getBbWidth(), (float)($$0.getYRot() + 22.5f)), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)$$0.getBbWidth(), (float)($$0.getYRot() - 45.0f)), net.minecraft.world.entity.monster.Strider.getCollisionHorizontalEscapeVector((double)this.getBbWidth(), (double)$$0.getBbWidth(), (float)($$0.getYRot() + 45.0f))};
+        java.util.LinkedHashSet $$2 = com.google.common.collect.Sets.newLinkedHashSet();
+        double $$3 = this.getBoundingBox().maxY;
+        double $$4 = this.getBoundingBox().minY - 0.5;
+        net.minecraft.core.BlockPos$MutableBlockPos $$5 = new net.minecraft.core.BlockPos$MutableBlockPos();
+        for (net.minecraft.world.phys.Vec3 $$6 : $$1) {
+            $$5.set(this.getX() + $$6.x, $$3, this.getZ() + $$6.z);
+            for (double $$7 = $$3; $$7 > $$4; $$7 -= 1.0) {
+                $$2.add((java.lang.Object)$$5.immutable());
+                $$5.move(net.minecraft.core.Direction.DOWN);
             }
         }
-        for (net.minecraft.core.BlockPos blockPos : linkedHashSet) {
-            double d4;
-            if (this.level.getFluidState(blockPos).is(net.minecraft.tags.FluidTags.LAVA) || !net.minecraft.world.entity.vehicle.DismountHelper.isBlockFloorValid((double)(d4 = this.level.getBlockFloorHeight(blockPos)))) continue;
-            net.minecraft.world.phys.Vec3 vec3 = net.minecraft.world.phys.Vec3.upFromBottomCenterOf((net.minecraft.core.Vec3i)blockPos, (double)d4);
-            for (net.minecraft.world.entity.Pose pose : livingEntity.getDismountPoses()) {
-                net.minecraft.world.phys.AABB aABB = livingEntity.getLocalBoundsForPose(pose);
-                if (!net.minecraft.world.entity.vehicle.DismountHelper.canDismountTo((net.minecraft.world.level.CollisionGetter)this.level, (net.minecraft.world.entity.LivingEntity)livingEntity, (net.minecraft.world.phys.AABB)aABB.move(vec3))) continue;
-                livingEntity.setPose(pose);
-                return vec3;
+        for (net.minecraft.core.BlockPos $$8 : $$2) {
+            double $$9;
+            if (this.level.getFluidState($$8).is(net.minecraft.tags.FluidTags.LAVA) || !net.minecraft.world.entity.vehicle.DismountHelper.isBlockFloorValid((double)($$9 = this.level.getBlockFloorHeight($$8)))) continue;
+            net.minecraft.world.phys.Vec3 $$10 = net.minecraft.world.phys.Vec3.upFromBottomCenterOf((net.minecraft.core.Vec3i)$$8, (double)$$9);
+            for (net.minecraft.world.entity.Pose $$11 : $$0.getDismountPoses()) {
+                net.minecraft.world.phys.AABB $$12 = $$0.getLocalBoundsForPose($$11);
+                if (!net.minecraft.world.entity.vehicle.DismountHelper.canDismountTo((net.minecraft.world.level.CollisionGetter)this.level, (net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.phys.AABB)$$12.move($$10))) continue;
+                $$0.setPose($$11);
+                return $$10;
             }
         }
         return new net.minecraft.world.phys.Vec3(this.getX(), this.getBoundingBox().maxY, this.getZ());
     }
 
-    public void travel(net.minecraft.world.phys.Vec3 travelVector) {
+    public void travel(net.minecraft.world.phys.Vec3 $$0) {
         this.setSpeed(this.getMoveSpeed());
-        this.travel((net.minecraft.world.entity.Mob)this, this.steering, travelVector);
+        this.travel((net.minecraft.world.entity.Mob)this, this.steering, $$0);
     }
 
     public float getMoveSpeed() {
@@ -172,15 +172,15 @@
         return (float)this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.MOVEMENT_SPEED) * (this.isSuffocating() ? 0.23f : 0.55f);
     }
 
-    public void travelWithInput(net.minecraft.world.phys.Vec3 travelVec) {
-        super.travel(travelVec);
+    public void travelWithInput(net.minecraft.world.phys.Vec3 $$0) {
+        super.travel($$0);
     }
 
     public float nextStep() {
         return this.moveDist + 0.6f;
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         this.playSound(this.isInLava() ? net.minecraft.sounds.SoundEvents.STRIDER_STEP_LAVA : net.minecraft.sounds.SoundEvents.STRIDER_STEP, 1.0f, 1.0f);
     }
 
@@ -188,13 +188,13 @@
         return this.steering.boost(this.getRandom());
     }
 
-    public void checkFallDamage(double y, boolean onGround, net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.BlockPos pos) {
+    public void checkFallDamage(double $$0, boolean $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.core.BlockPos $$3) {
         this.checkInsideBlocks();
         if (this.isInLava()) {
             this.resetFallDistance();
             return;
         }
-        super.checkFallDamage(y, onGround, state, pos);
+        super.checkFallDamage($$0, $$1, $$2, $$3);
     }
 
     public void tick() {
@@ -248,7 +248,7 @@
         return net.minecraft.sounds.SoundEvents.STRIDER_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.STRIDER_HURT;
     }
 
@@ -256,7 +256,7 @@
         return net.minecraft.sounds.SoundEvents.STRIDER_DEATH;
     }
 
-    public boolean canAddPassenger(net.minecraft.world.entity.Entity passenger) {
+    public boolean canAddPassenger(net.minecraft.world.entity.Entity $$0) {
         return !this.isVehicle() && !this.isEyeInFluid(net.minecraft.tags.FluidTags.LAVA);
     }
 
@@ -268,23 +268,24 @@
         return false;
     }
 
-    public net.minecraft.world.entity.ai.navigation.PathNavigation createNavigation(net.minecraft.world.level.Level level) {
-        return new net.minecraft.world.entity.monster.Strider$StriderPathNavigation(this, level);
+    public net.minecraft.world.entity.ai.navigation.PathNavigation createNavigation(net.minecraft.world.level.Level $$0) {
+        return new net.minecraft.world.entity.monster.Strider$StriderPathNavigation(this, $$0);
     }
 
-    public float getWalkTargetValue(net.minecraft.core.BlockPos pos, net.minecraft.world.level.LevelReader level) {
-        if (level.getBlockState(pos).getFluidState().is(net.minecraft.tags.FluidTags.LAVA)) {
+    public float getWalkTargetValue(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.LevelReader $$1) {
+        if ($$1.getBlockState($$0).getFluidState().is(net.minecraft.tags.FluidTags.LAVA)) {
             return 10.0f;
         }
         return this.isInLava() ? java.lang.Float.NEGATIVE_INFINITY : 0.0f;
     }
 
+    @javax.annotation.Nullable
     public net.minecraft.world.entity.monster.Strider getBreedOffspring(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.AgeableMob $$1) {
         return (net.minecraft.world.entity.monster.Strider)net.minecraft.world.entity.EntityType.STRIDER.create((net.minecraft.world.level.Level)$$0);
     }
 
-    public boolean isFood(net.minecraft.world.item.ItemStack stack) {
-        return FOOD_ITEMS.test(stack);
+    public boolean isFood(net.minecraft.world.item.ItemStack $$0) {
+        return FOOD_ITEMS.test($$0);
     }
 
     public void dropEquipment() {
@@ -294,26 +295,26 @@
         }
     }
 
-    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        boolean bl = this.isFood(player.getItemInHand(hand));
-        if (!bl && this.isSaddled() && !this.isVehicle() && !player.isSecondaryUseActive()) {
+    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$1) {
+        boolean $$2 = this.isFood($$0.getItemInHand($$1));
+        if (!$$2 && this.isSaddled() && !this.isVehicle() && !$$0.isSecondaryUseActive()) {
             if (!this.level.isClientSide) {
-                player.startRiding((net.minecraft.world.entity.Entity)this);
+                $$0.startRiding((net.minecraft.world.entity.Entity)this);
             }
             return net.minecraft.world.InteractionResult.sidedSuccess((boolean)this.level.isClientSide);
         }
-        net.minecraft.world.InteractionResult interactionResult = super.mobInteract(player, hand);
-        if (!interactionResult.consumesAction()) {
-            net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-            if (itemStack.is(net.minecraft.world.item.Items.SADDLE)) {
-                return itemStack.interactLivingEntity(player, (net.minecraft.world.entity.LivingEntity)this, hand);
+        net.minecraft.world.InteractionResult $$3 = super.mobInteract($$0, $$1);
+        if (!$$3.consumesAction()) {
+            net.minecraft.world.item.ItemStack $$4 = $$0.getItemInHand($$1);
+            if ($$4.is(net.minecraft.world.item.Items.SADDLE)) {
+                return $$4.interactLivingEntity($$0, (net.minecraft.world.entity.LivingEntity)this, $$1);
             }
             return net.minecraft.world.InteractionResult.PASS;
         }
-        if (bl && !this.isSilent()) {
+        if ($$2 && !this.isSilent()) {
             this.level.playSound(null, this.getX(), this.getY(), this.getZ(), net.minecraft.sounds.SoundEvents.STRIDER_EAT, this.getSoundSource(), 1.0f, 1.0f + (this.random.nextFloat() - this.random.nextFloat()) * 0.2f);
         }
-        return interactionResult;
+        return $$3;
     }
 
     public net.minecraft.world.phys.Vec3 getLeashOffset() {
@@ -321,33 +322,38 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
         if (this.isBaby()) {
-            return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+            return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
         }
-        net.minecraft.util.RandomSource randomSource = level.getRandom();
-        if (randomSource.nextInt(30) == 0) {
-            net.minecraft.world.entity.Mob mob = (net.minecraft.world.entity.Mob)net.minecraft.world.entity.EntityType.ZOMBIFIED_PIGLIN.create((net.minecraft.world.level.Level)level.getLevel());
-            spawnData = this.spawnJockey(level, difficulty, mob, (net.minecraft.world.entity.SpawnGroupData)new net.minecraft.world.entity.monster.Zombie$ZombieGroupData(net.minecraft.world.entity.monster.Zombie.getSpawnAsBabyOdds((net.minecraft.util.RandomSource)randomSource), false));
-            mob.setItemSlot(net.minecraft.world.entity.EquipmentSlot.MAINHAND, new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.WARPED_FUNGUS_ON_A_STICK));
-            this.equipSaddle(null);
-        } else if (randomSource.nextInt(10) == 0) {
-            net.minecraft.world.entity.AgeableMob ageableMob = (net.minecraft.world.entity.AgeableMob)net.minecraft.world.entity.EntityType.STRIDER.create((net.minecraft.world.level.Level)level.getLevel());
-            ageableMob.setAge(-24000);
-            spawnData = this.spawnJockey(level, difficulty, (net.minecraft.world.entity.Mob)ageableMob, null);
+        net.minecraft.util.RandomSource $$5 = $$0.getRandom();
+        if ($$5.nextInt(30) == 0) {
+            net.minecraft.world.entity.Mob $$6 = (net.minecraft.world.entity.Mob)net.minecraft.world.entity.EntityType.ZOMBIFIED_PIGLIN.create((net.minecraft.world.level.Level)$$0.getLevel());
+            if ($$6 != null) {
+                $$3 = this.spawnJockey($$0, $$1, $$6, (net.minecraft.world.entity.SpawnGroupData)new net.minecraft.world.entity.monster.Zombie$ZombieGroupData(net.minecraft.world.entity.monster.Zombie.getSpawnAsBabyOdds((net.minecraft.util.RandomSource)$$5), false));
+                $$6.setItemSlot(net.minecraft.world.entity.EquipmentSlot.MAINHAND, new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.WARPED_FUNGUS_ON_A_STICK));
+                this.equipSaddle(null);
+            }
+        } else if ($$5.nextInt(10) == 0) {
+            net.minecraft.world.entity.AgeableMob $$7 = (net.minecraft.world.entity.AgeableMob)net.minecraft.world.entity.EntityType.STRIDER.create((net.minecraft.world.level.Level)$$0.getLevel());
+            if ($$7 != null) {
+                $$7.setAge(-24000);
+                $$3 = this.spawnJockey($$0, $$1, (net.minecraft.world.entity.Mob)$$7, null);
+            }
         } else {
-            spawnData = new net.minecraft.world.entity.AgeableMob$AgeableMobGroupData(0.5f);
+            $$3 = new net.minecraft.world.entity.AgeableMob$AgeableMobGroupData(0.5f);
         }
-        return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+        return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
     }
 
-    public net.minecraft.world.entity.SpawnGroupData spawnJockey(net.minecraft.world.level.ServerLevelAccessor serverLevel, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.Mob jockey, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData) {
-        jockey.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0f);
-        jockey.finalizeSpawn(serverLevel, difficulty, net.minecraft.world.entity.MobSpawnType.JOCKEY, spawnData, null);
-        jockey.startRiding((net.minecraft.world.entity.Entity)this, true);
+    public net.minecraft.world.entity.SpawnGroupData spawnJockey(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.Mob $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3) {
+        $$2.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0f);
+        $$2.finalizeSpawn($$0, $$1, net.minecraft.world.entity.MobSpawnType.JOCKEY, $$3, null);
+        $$2.startRiding((net.minecraft.world.entity.Entity)this, true);
         return new net.minecraft.world.entity.AgeableMob$AgeableMobGroupData(0.0f);
     }
 
+    @javax.annotation.Nullable
     public /* synthetic */ net.minecraft.world.entity.AgeableMob getBreedOffspring(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.AgeableMob ageableMob) {
         return this.getBreedOffspring(serverLevel, ageableMob);
     }