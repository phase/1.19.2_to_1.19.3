--- net/minecraft/world/entity/monster/Monster.java
+++ net/minecraft/world/entity/monster/Monster.java
@@ -41,7 +41,7 @@
         return net.minecraft.sounds.SoundEvents.HOSTILE_SPLASH;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.HOSTILE_HURT;
     }
 
@@ -53,8 +53,8 @@
         return new net.minecraft.world.entity.LivingEntity$Fallsounds(net.minecraft.sounds.SoundEvents.HOSTILE_SMALL_FALL, net.minecraft.sounds.SoundEvents.HOSTILE_BIG_FALL);
     }
 
-    public float getWalkTargetValue(net.minecraft.core.BlockPos pos, net.minecraft.world.level.LevelReader level) {
-        return -level.getPathfindingCostFromLightLevels(pos);
+    public float getWalkTargetValue(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.LevelReader $$1) {
+        return -$$1.getPathfindingCostFromLightLevels($$0);
     }
 
     public static boolean isDarkEnoughToSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.core.BlockPos $$1, net.minecraft.util.RandomSource $$2) {
@@ -90,15 +90,15 @@
         return true;
     }
 
-    public boolean isPreventingPlayerRest(net.minecraft.world.entity.player.Player player) {
+    public boolean isPreventingPlayerRest(net.minecraft.world.entity.player.Player $$0) {
         return true;
     }
 
-    public net.minecraft.world.item.ItemStack getProjectile(net.minecraft.world.item.ItemStack shootable) {
-        if (shootable.getItem() instanceof net.minecraft.world.item.ProjectileWeaponItem) {
-            java.util.function.Predicate predicate = ((net.minecraft.world.item.ProjectileWeaponItem)shootable.getItem()).getSupportedHeldProjectiles();
-            net.minecraft.world.item.ItemStack itemStack = net.minecraft.world.item.ProjectileWeaponItem.getHeldProjectile((net.minecraft.world.entity.LivingEntity)this, (java.util.function.Predicate)predicate);
-            return itemStack.isEmpty() ? new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.ARROW) : itemStack;
+    public net.minecraft.world.item.ItemStack getProjectile(net.minecraft.world.item.ItemStack $$0) {
+        if ($$0.getItem() instanceof net.minecraft.world.item.ProjectileWeaponItem) {
+            java.util.function.Predicate $$1 = ((net.minecraft.world.item.ProjectileWeaponItem)$$0.getItem()).getSupportedHeldProjectiles();
+            net.minecraft.world.item.ItemStack $$2 = net.minecraft.world.item.ProjectileWeaponItem.getHeldProjectile((net.minecraft.world.entity.LivingEntity)this, (java.util.function.Predicate)$$1);
+            return $$2.isEmpty() ? new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.ARROW) : $$2;
         }
         return net.minecraft.world.item.ItemStack.EMPTY;
     }