--- net/minecraft/world/entity/monster/Ghast.java
+++ net/minecraft/world/entity/monster/Ghast.java
@@ -21,15 +21,15 @@
         this.goalSelector.addGoal(5, (net.minecraft.world.entity.ai.goal.Goal)new net.minecraft.world.entity.monster.Ghast$RandomFloatAroundGoal(this));
         this.goalSelector.addGoal(7, (net.minecraft.world.entity.ai.goal.Goal)new net.minecraft.world.entity.monster.Ghast$GhastLookGoal(this));
         this.goalSelector.addGoal(7, (net.minecraft.world.entity.ai.goal.Goal)new net.minecraft.world.entity.monster.Ghast$GhastShootFireballGoal(this));
-        this.targetSelector.addGoal(1, (net.minecraft.world.entity.ai.goal.Goal)new net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal((net.minecraft.world.entity.Mob)this, net.minecraft.world.entity.player.Player.class, 10, true, false, entity -> java.lang.Math.abs((double)(entity.getY() - this.getY())) <= 4.0));
+        this.targetSelector.addGoal(1, (net.minecraft.world.entity.ai.goal.Goal)new net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal((net.minecraft.world.entity.Mob)this, net.minecraft.world.entity.player.Player.class, 10, true, false, $$0 -> java.lang.Math.abs((double)($$0.getY() - this.getY())) <= 4.0));
     }
 
     public boolean isCharging() {
         return (java.lang.Boolean)this.entityData.get(DATA_IS_CHARGING);
     }
 
-    public void setCharging(boolean charging) {
-        this.entityData.set(DATA_IS_CHARGING, (java.lang.Object)charging);
+    public void setCharging(boolean $$0) {
+        this.entityData.set(DATA_IS_CHARGING, (java.lang.Object)$$0);
     }
 
     public int getExplosionPower() {
@@ -48,15 +48,15 @@
         return !net.minecraft.world.entity.monster.Ghast.isReflectedFireball((net.minecraft.world.damagesource.DamageSource)$$0) && super.isInvulnerableTo($$0);
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
-        if (net.minecraft.world.entity.monster.Ghast.isReflectedFireball((net.minecraft.world.damagesource.DamageSource)source)) {
-            super.hurt(source, 1000.0f);
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        if (net.minecraft.world.entity.monster.Ghast.isReflectedFireball((net.minecraft.world.damagesource.DamageSource)$$0)) {
+            super.hurt($$0, 1000.0f);
             return true;
         }
-        if (this.isInvulnerableTo(source)) {
+        if (this.isInvulnerableTo($$0)) {
             return false;
         }
-        return super.hurt(source, amount);
+        return super.hurt($$0, $$1);
     }
 
     public void defineSynchedData() {
@@ -76,7 +76,7 @@
         return net.minecraft.sounds.SoundEvents.GHAST_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.GHAST_HURT;
     }
 
@@ -96,19 +96,19 @@
         return 1;
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putByte("ExplosionPower", (byte)this.explosionPower);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putByte("ExplosionPower", (byte)this.explosionPower);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        if (compound.contains("ExplosionPower", 99)) {
-            this.explosionPower = compound.getByte("ExplosionPower");
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        if ($$0.contains("ExplosionPower", 99)) {
+            this.explosionPower = $$0.getByte("ExplosionPower");
         }
     }
 
-    public float getStandingEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
+    public float getStandingEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
         return 2.6f;
     }
 