--- net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled.java
+++ net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled.java
@@ -10,15 +10,15 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.HUNTED_RECENTLY, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.REGISTERED));
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
-        if (this.isAttackTargetDeadHoglin(entity)) {
-            net.minecraft.world.entity.monster.piglin.PiglinAi.dontKillAnyMoreHoglinsForAWhile(entity);
+    public void start(net.minecraft.server.level.ServerLevel $$0, E $$1, long $$2) {
+        if (this.isAttackTargetDeadHoglin($$1)) {
+            net.minecraft.world.entity.monster.piglin.PiglinAi.dontKillAnyMoreHoglinsForAWhile($$1);
         }
     }
 
-    public boolean isAttackTargetDeadHoglin(E piglin) {
-        net.minecraft.world.entity.LivingEntity livingEntity = (net.minecraft.world.entity.LivingEntity)piglin.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET).get();
-        return livingEntity.getType() == net.minecraft.world.entity.EntityType.HOGLIN && livingEntity.isDeadOrDying();
+    public boolean isAttackTargetDeadHoglin(E $$0) {
+        net.minecraft.world.entity.LivingEntity $$1 = (net.minecraft.world.entity.LivingEntity)$$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET).get();
+        return $$1.getType() == net.minecraft.world.entity.EntityType.HOGLIN && $$1.isDeadOrDying();
     }
 }
 