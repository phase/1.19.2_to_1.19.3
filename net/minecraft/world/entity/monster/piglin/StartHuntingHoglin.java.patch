--- net/minecraft/world/entity/monster/piglin/StartHuntingHoglin.java
+++ net/minecraft/world/entity/monster/piglin/StartHuntingHoglin.java
@@ -10,16 +10,16 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_HUNTABLE_HOGLIN, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.ANGRY_AT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_ABSENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.HUNTED_RECENTLY, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_ABSENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLINS, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.REGISTERED));
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.monster.piglin.Piglin owner) {
-        return !owner.isBaby() && !net.minecraft.world.entity.monster.piglin.PiglinAi.hasAnyoneNearbyHuntedRecently((net.minecraft.world.entity.monster.piglin.Piglin)owner);
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.monster.piglin.Piglin $$1) {
+        return !$$1.isBaby() && !net.minecraft.world.entity.monster.piglin.PiglinAi.hasAnyoneNearbyHuntedRecently((net.minecraft.world.entity.monster.piglin.Piglin)$$1);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
-        net.minecraft.world.entity.monster.hoglin.Hoglin hoglin = (net.minecraft.world.entity.monster.hoglin.Hoglin)entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_HUNTABLE_HOGLIN).get();
-        net.minecraft.world.entity.monster.piglin.PiglinAi.setAngerTarget(entity, (net.minecraft.world.entity.LivingEntity)hoglin);
-        net.minecraft.world.entity.monster.piglin.PiglinAi.dontKillAnyMoreHoglinsForAWhile(entity);
-        net.minecraft.world.entity.monster.piglin.PiglinAi.broadcastAngerTarget(entity, (net.minecraft.world.entity.LivingEntity)hoglin);
-        net.minecraft.world.entity.monster.piglin.PiglinAi.broadcastDontKillAnyMoreHoglinsForAWhile(entity);
+    public void start(net.minecraft.server.level.ServerLevel $$0, E $$1, long $$2) {
+        net.minecraft.world.entity.monster.hoglin.Hoglin $$3 = (net.minecraft.world.entity.monster.hoglin.Hoglin)$$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_HUNTABLE_HOGLIN).get();
+        net.minecraft.world.entity.monster.piglin.PiglinAi.setAngerTarget($$1, (net.minecraft.world.entity.LivingEntity)$$3);
+        net.minecraft.world.entity.monster.piglin.PiglinAi.dontKillAnyMoreHoglinsForAWhile($$1);
+        net.minecraft.world.entity.monster.piglin.PiglinAi.broadcastAngerTarget($$1, (net.minecraft.world.entity.LivingEntity)$$3);
+        net.minecraft.world.entity.monster.piglin.PiglinAi.broadcastDontKillAnyMoreHoglinsForAWhile($$1);
     }
 }
 