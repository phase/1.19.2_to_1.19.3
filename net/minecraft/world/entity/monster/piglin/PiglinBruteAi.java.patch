--- net/minecraft/world/entity/monster/piglin/PiglinBruteAi.java
+++ net/minecraft/world/entity/monster/piglin/PiglinBruteAi.java
@@ -19,31 +19,31 @@
     public net.minecraft.world.entity.monster.piglin.PiglinBruteAi() {
     }
 
-    public static net.minecraft.world.entity.ai.Brain<?> makeBrain(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> brain) {
-        net.minecraft.world.entity.monster.piglin.PiglinBruteAi.initCoreActivity((net.minecraft.world.entity.monster.piglin.PiglinBrute)piglinBrute, brain);
-        net.minecraft.world.entity.monster.piglin.PiglinBruteAi.initIdleActivity((net.minecraft.world.entity.monster.piglin.PiglinBrute)piglinBrute, brain);
-        net.minecraft.world.entity.monster.piglin.PiglinBruteAi.initFightActivity((net.minecraft.world.entity.monster.piglin.PiglinBrute)piglinBrute, brain);
-        brain.setCoreActivities((java.util.Set)com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.CORE));
-        brain.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
-        brain.useDefaultActivity();
-        return brain;
+    public static net.minecraft.world.entity.ai.Brain<?> makeBrain(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> $$1) {
+        net.minecraft.world.entity.monster.piglin.PiglinBruteAi.initCoreActivity((net.minecraft.world.entity.monster.piglin.PiglinBrute)$$0, $$1);
+        net.minecraft.world.entity.monster.piglin.PiglinBruteAi.initIdleActivity((net.minecraft.world.entity.monster.piglin.PiglinBrute)$$0, $$1);
+        net.minecraft.world.entity.monster.piglin.PiglinBruteAi.initFightActivity((net.minecraft.world.entity.monster.piglin.PiglinBrute)$$0, $$1);
+        $$1.setCoreActivities((java.util.Set)com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.CORE));
+        $$1.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
+        $$1.useDefaultActivity();
+        return $$1;
     }
 
-    public static void initMemories(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute) {
-        net.minecraft.core.GlobalPos globalPos = net.minecraft.core.GlobalPos.of((net.minecraft.resources.ResourceKey)piglinBrute.level.dimension(), (net.minecraft.core.BlockPos)piglinBrute.blockPosition());
-        piglinBrute.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.HOME, (java.lang.Object)globalPos);
+    public static void initMemories(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0) {
+        net.minecraft.core.GlobalPos $$1 = net.minecraft.core.GlobalPos.of((net.minecraft.resources.ResourceKey)$$0.level.dimension(), (net.minecraft.core.BlockPos)$$0.blockPosition());
+        $$0.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.HOME, (java.lang.Object)$$1);
     }
 
-    public static void initCoreActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> brain) {
-        brain.addActivity(net.minecraft.world.entity.schedule.Activity.CORE, 0, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.LookAtTargetSink(45, 90), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MoveToTargetSink(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.InteractWithDoor(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopBeingAngryIfTargetDead()));
+    public static void initCoreActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> $$1) {
+        $$1.addActivity(net.minecraft.world.entity.schedule.Activity.CORE, 0, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.LookAtTargetSink(45, 90), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MoveToTargetSink(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.InteractWithDoor(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopBeingAngryIfTargetDead()));
     }
 
-    public static void initIdleActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> brain) {
-        brain.addActivity(net.minecraft.world.entity.schedule.Activity.IDLE, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StartAttacking(net.minecraft.world.entity.monster.piglin.PiglinBruteAi::findNearestValidAttackTarget), (java.lang.Object)net.minecraft.world.entity.monster.piglin.PiglinBruteAi.createIdleLookBehaviors(), (java.lang.Object)net.minecraft.world.entity.monster.piglin.PiglinBruteAi.createIdleMovementBehaviors(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetLookAndInteract(net.minecraft.world.entity.EntityType.PLAYER, 4)));
+    public static void initIdleActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> $$1) {
+        $$1.addActivity(net.minecraft.world.entity.schedule.Activity.IDLE, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StartAttacking(net.minecraft.world.entity.monster.piglin.PiglinBruteAi::findNearestValidAttackTarget), (java.lang.Object)net.minecraft.world.entity.monster.piglin.PiglinBruteAi.createIdleLookBehaviors(), (java.lang.Object)net.minecraft.world.entity.monster.piglin.PiglinBruteAi.createIdleMovementBehaviors(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetLookAndInteract(net.minecraft.world.entity.EntityType.PLAYER, 4)));
     }
 
-    public static void initFightActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> brain) {
-        brain.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.FIGHT, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid($$1 -> !net.minecraft.world.entity.monster.piglin.PiglinBruteAi.isNearestValidAttackTarget((net.minecraft.world.entity.monster.piglin.AbstractPiglin)piglinBrute, (net.minecraft.world.entity.LivingEntity)$$1)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach(1.0f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MeleeAttack(20)), net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
+    public static void initFightActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0, net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.piglin.PiglinBrute> $$12) {
+        $$12.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.FIGHT, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid($$1 -> !net.minecraft.world.entity.monster.piglin.PiglinBruteAi.isNearestValidAttackTarget((net.minecraft.world.entity.monster.piglin.AbstractPiglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach(1.0f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MeleeAttack(20)), net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
     }
 
     public static net.minecraft.world.entity.ai.behavior.RunOne<net.minecraft.world.entity.monster.piglin.PiglinBrute> createIdleLookBehaviors() {
@@ -54,42 +54,42 @@
         return new net.minecraft.world.entity.ai.behavior.RunOne((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.RandomStroll(0.6f), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)net.minecraft.world.entity.ai.behavior.InteractWith.of((net.minecraft.world.entity.EntityType)net.minecraft.world.entity.EntityType.PIGLIN, (int)8, (net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET, (float)0.6f, (int)2), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)net.minecraft.world.entity.ai.behavior.InteractWith.of((net.minecraft.world.entity.EntityType)net.minecraft.world.entity.EntityType.PIGLIN_BRUTE, (int)8, (net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET, (float)0.6f, (int)2), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StrollToPoi(net.minecraft.world.entity.ai.memory.MemoryModuleType.HOME, 0.6f, 2, 100), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StrollAroundPoi(net.minecraft.world.entity.ai.memory.MemoryModuleType.HOME, 0.6f, 5), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.DoNothing(30, 60), (java.lang.Object)1)));
     }
 
-    public static void updateActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute) {
-        net.minecraft.world.entity.ai.Brain brain = piglinBrute.getBrain();
-        net.minecraft.world.entity.schedule.Activity activity = (net.minecraft.world.entity.schedule.Activity)brain.getActiveNonCoreActivity().orElse(null);
-        brain.setActiveActivityToFirstValid((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.FIGHT, (java.lang.Object)net.minecraft.world.entity.schedule.Activity.IDLE));
-        net.minecraft.world.entity.schedule.Activity activity2 = (net.minecraft.world.entity.schedule.Activity)brain.getActiveNonCoreActivity().orElse(null);
-        if (activity != activity2) {
-            net.minecraft.world.entity.monster.piglin.PiglinBruteAi.playActivitySound((net.minecraft.world.entity.monster.piglin.PiglinBrute)piglinBrute);
+    public static void updateActivity(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0) {
+        net.minecraft.world.entity.ai.Brain $$1 = $$0.getBrain();
+        net.minecraft.world.entity.schedule.Activity $$2 = (net.minecraft.world.entity.schedule.Activity)$$1.getActiveNonCoreActivity().orElse(null);
+        $$1.setActiveActivityToFirstValid((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.FIGHT, (java.lang.Object)net.minecraft.world.entity.schedule.Activity.IDLE));
+        net.minecraft.world.entity.schedule.Activity $$3 = (net.minecraft.world.entity.schedule.Activity)$$1.getActiveNonCoreActivity().orElse(null);
+        if ($$2 != $$3) {
+            net.minecraft.world.entity.monster.piglin.PiglinBruteAi.playActivitySound((net.minecraft.world.entity.monster.piglin.PiglinBrute)$$0);
         }
-        piglinBrute.setAggressive(brain.hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET));
+        $$0.setAggressive($$1.hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET));
     }
 
-    public static boolean isNearestValidAttackTarget(net.minecraft.world.entity.monster.piglin.AbstractPiglin piglinBrute, net.minecraft.world.entity.LivingEntity target) {
-        return net.minecraft.world.entity.monster.piglin.PiglinBruteAi.findNearestValidAttackTarget((net.minecraft.world.entity.monster.piglin.AbstractPiglin)piglinBrute).filter(entity -> entity == target).isPresent();
+    public static boolean isNearestValidAttackTarget(net.minecraft.world.entity.monster.piglin.AbstractPiglin $$0, net.minecraft.world.entity.LivingEntity $$12) {
+        return net.minecraft.world.entity.monster.piglin.PiglinBruteAi.findNearestValidAttackTarget((net.minecraft.world.entity.monster.piglin.AbstractPiglin)$$0).filter($$1 -> $$1 == $$12).isPresent();
     }
 
-    public static java.util.Optional<? extends net.minecraft.world.entity.LivingEntity> findNearestValidAttackTarget(net.minecraft.world.entity.monster.piglin.AbstractPiglin piglinBrute) {
-        java.util.Optional optional = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getLivingEntityFromUUIDMemory((net.minecraft.world.entity.LivingEntity)piglinBrute, (net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.ANGRY_AT);
-        if (optional.isPresent() && net.minecraft.world.entity.ai.sensing.Sensor.isEntityAttackableIgnoringLineOfSight((net.minecraft.world.entity.LivingEntity)piglinBrute, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)optional.get()))) {
-            return optional;
+    public static java.util.Optional<? extends net.minecraft.world.entity.LivingEntity> findNearestValidAttackTarget(net.minecraft.world.entity.monster.piglin.AbstractPiglin $$0) {
+        java.util.Optional $$1 = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getLivingEntityFromUUIDMemory((net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.ANGRY_AT);
+        if ($$1.isPresent() && net.minecraft.world.entity.ai.sensing.Sensor.isEntityAttackableIgnoringLineOfSight((net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)$$1.get()))) {
+            return $$1;
         }
-        java.util.Optional optional2 = net.minecraft.world.entity.monster.piglin.PiglinBruteAi.getTargetIfWithinRange((net.minecraft.world.entity.monster.piglin.AbstractPiglin)piglinBrute, (net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ATTACKABLE_PLAYER);
-        if (optional2.isPresent()) {
-            return optional2;
+        java.util.Optional $$2 = net.minecraft.world.entity.monster.piglin.PiglinBruteAi.getTargetIfWithinRange((net.minecraft.world.entity.monster.piglin.AbstractPiglin)$$0, (net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ATTACKABLE_PLAYER);
+        if ($$2.isPresent()) {
+            return $$2;
         }
-        return piglinBrute.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_NEMESIS);
+        return $$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_NEMESIS);
     }
 
-    public static java.util.Optional<? extends net.minecraft.world.entity.LivingEntity> getTargetIfWithinRange(net.minecraft.world.entity.monster.piglin.AbstractPiglin piglinBrute, net.minecraft.world.entity.ai.memory.MemoryModuleType<? extends net.minecraft.world.entity.LivingEntity> memoryType) {
-        return piglinBrute.getBrain().getMemory(memoryType).filter(entity -> entity.closerThan((net.minecraft.world.entity.Entity)piglinBrute, 12.0));
+    public static java.util.Optional<? extends net.minecraft.world.entity.LivingEntity> getTargetIfWithinRange(net.minecraft.world.entity.monster.piglin.AbstractPiglin $$0, net.minecraft.world.entity.ai.memory.MemoryModuleType<? extends net.minecraft.world.entity.LivingEntity> $$12) {
+        return $$0.getBrain().getMemory($$12).filter($$1 -> $$1.closerThan((net.minecraft.world.entity.Entity)$$0, 12.0));
     }
 
-    public static void wasHurtBy(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute, net.minecraft.world.entity.LivingEntity target) {
-        if (target instanceof net.minecraft.world.entity.monster.piglin.AbstractPiglin) {
+    public static void wasHurtBy(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        if ($$1 instanceof net.minecraft.world.entity.monster.piglin.AbstractPiglin) {
             return;
         }
-        net.minecraft.world.entity.monster.piglin.PiglinAi.maybeRetaliate((net.minecraft.world.entity.monster.piglin.AbstractPiglin)piglinBrute, (net.minecraft.world.entity.LivingEntity)target);
+        net.minecraft.world.entity.monster.piglin.PiglinAi.maybeRetaliate((net.minecraft.world.entity.monster.piglin.AbstractPiglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
     }
 
     public static void setAngerTarget(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0, net.minecraft.world.entity.LivingEntity $$1) {
@@ -97,16 +97,16 @@
         $$0.getBrain().setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.ANGRY_AT, (java.lang.Object)$$1.getUUID(), 600L);
     }
 
-    public static void maybePlayActivitySound(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute) {
-        if ((double)piglinBrute.level.random.nextFloat() < 0.0125) {
-            net.minecraft.world.entity.monster.piglin.PiglinBruteAi.playActivitySound((net.minecraft.world.entity.monster.piglin.PiglinBrute)piglinBrute);
+    public static void maybePlayActivitySound(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0) {
+        if ((double)$$0.level.random.nextFloat() < 0.0125) {
+            net.minecraft.world.entity.monster.piglin.PiglinBruteAi.playActivitySound((net.minecraft.world.entity.monster.piglin.PiglinBrute)$$0);
         }
     }
 
-    public static void playActivitySound(net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute) {
-        piglinBrute.getBrain().getActiveNonCoreActivity().ifPresent(activity -> {
-            if (activity == net.minecraft.world.entity.schedule.Activity.FIGHT) {
-                piglinBrute.playAngrySound();
+    public static void playActivitySound(net.minecraft.world.entity.monster.piglin.PiglinBrute $$0) {
+        $$0.getBrain().getActiveNonCoreActivity().ifPresent($$1 -> {
+            if ($$1 == net.minecraft.world.entity.schedule.Activity.FIGHT) {
+                $$0.playAngrySound();
             }
         });
     }