--- net/minecraft/world/entity/monster/Illusioner.java
+++ net/minecraft/world/entity/monster/Illusioner.java
@@ -43,9 +43,9 @@
         return net.minecraft.world.entity.monster.Monster.createMonsterAttributes().add(net.minecraft.world.entity.ai.attributes.Attributes.MOVEMENT_SPEED, 0.5).add(net.minecraft.world.entity.ai.attributes.Attributes.FOLLOW_RANGE, 18.0).add(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH, 32.0);
     }
 
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
         this.setItemSlot(net.minecraft.world.entity.EquipmentSlot.MAINHAND, new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.BOW));
-        return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+        return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
     }
 
     public void defineSynchedData() {
@@ -89,25 +89,25 @@
         return net.minecraft.sounds.SoundEvents.ILLUSIONER_AMBIENT;
     }
 
-    public net.minecraft.world.phys.Vec3[] getIllusionOffsets(float partialTick) {
+    public net.minecraft.world.phys.Vec3[] getIllusionOffsets(float $$0) {
         if (this.clientSideIllusionTicks <= 0) {
             return this.clientSideIllusionOffsets[1];
         }
-        double d = ((float)this.clientSideIllusionTicks - partialTick) / 3.0f;
-        d = java.lang.Math.pow((double)d, (double)0.25);
-        net.minecraft.world.phys.Vec3[] vec3Array = new net.minecraft.world.phys.Vec3[4];
-        for (int i = 0; i < 4; ++i) {
-            vec3Array[i] = this.clientSideIllusionOffsets[1][i].scale(1.0 - d).add(this.clientSideIllusionOffsets[0][i].scale(d));
+        double $$1 = ((float)this.clientSideIllusionTicks - $$0) / 3.0f;
+        $$1 = java.lang.Math.pow((double)$$1, (double)0.25);
+        net.minecraft.world.phys.Vec3[] $$2 = new net.minecraft.world.phys.Vec3[4];
+        for (int $$3 = 0; $$3 < 4; ++$$3) {
+            $$2[$$3] = this.clientSideIllusionOffsets[1][$$3].scale(1.0 - $$1).add(this.clientSideIllusionOffsets[0][$$3].scale($$1));
         }
-        return vec3Array;
+        return $$2;
     }
 
-    public boolean isAlliedTo(net.minecraft.world.entity.Entity entity) {
-        if (super.isAlliedTo(entity)) {
+    public boolean isAlliedTo(net.minecraft.world.entity.Entity $$0) {
+        if (super.isAlliedTo($$0)) {
             return true;
         }
-        if (entity instanceof net.minecraft.world.entity.LivingEntity && ((net.minecraft.world.entity.LivingEntity)entity).getMobType() == net.minecraft.world.entity.MobType.ILLAGER) {
-            return this.getTeam() == null && entity.getTeam() == null;
+        if ($$0 instanceof net.minecraft.world.entity.LivingEntity && ((net.minecraft.world.entity.LivingEntity)$$0).getMobType() == net.minecraft.world.entity.MobType.ILLAGER) {
+            return this.getTeam() == null && $$0.getTeam() == null;
         }
         return false;
     }
@@ -120,7 +120,7 @@
         return net.minecraft.sounds.SoundEvents.ILLUSIONER_DEATH;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.ILLUSIONER_HURT;
     }
 
@@ -128,19 +128,19 @@
         return net.minecraft.sounds.SoundEvents.ILLUSIONER_CAST_SPELL;
     }
 
-    public void applyRaidBuffs(int wave, boolean unusedFalse) {
+    public void applyRaidBuffs(int $$0, boolean $$1) {
     }
 
-    public void performRangedAttack(net.minecraft.world.entity.LivingEntity target, float distanceFactor) {
-        net.minecraft.world.item.ItemStack itemStack = this.getProjectile(this.getItemInHand(net.minecraft.world.entity.projectile.ProjectileUtil.getWeaponHoldingHand((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.item.Item)net.minecraft.world.item.Items.BOW)));
-        net.minecraft.world.entity.projectile.AbstractArrow abstractArrow = net.minecraft.world.entity.projectile.ProjectileUtil.getMobArrow((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.item.ItemStack)itemStack, (float)distanceFactor);
-        double d = target.getX() - this.getX();
-        double d2 = target.getY(0.3333333333333333) - abstractArrow.getY();
-        double d3 = target.getZ() - this.getZ();
-        double d4 = java.lang.Math.sqrt((double)(d * d + d3 * d3));
-        abstractArrow.shoot(d, d2 + d4 * (double)0.2f, d3, 1.6f, (float)(14 - this.level.getDifficulty().getId() * 4));
+    public void performRangedAttack(net.minecraft.world.entity.LivingEntity $$0, float $$1) {
+        net.minecraft.world.item.ItemStack $$2 = this.getProjectile(this.getItemInHand(net.minecraft.world.entity.projectile.ProjectileUtil.getWeaponHoldingHand((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.item.Item)net.minecraft.world.item.Items.BOW)));
+        net.minecraft.world.entity.projectile.AbstractArrow $$3 = net.minecraft.world.entity.projectile.ProjectileUtil.getMobArrow((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.item.ItemStack)$$2, (float)$$1);
+        double $$4 = $$0.getX() - this.getX();
+        double $$5 = $$0.getY(0.3333333333333333) - $$3.getY();
+        double $$6 = $$0.getZ() - this.getZ();
+        double $$7 = java.lang.Math.sqrt((double)($$4 * $$4 + $$6 * $$6));
+        $$3.shoot($$4, $$5 + $$7 * (double)0.2f, $$6, 1.6f, (float)(14 - this.level.getDifficulty().getId() * 4));
         this.playSound(net.minecraft.sounds.SoundEvents.SKELETON_SHOOT, 1.0f, 1.0f / (this.getRandom().nextFloat() * 0.4f + 0.8f));
-        this.level.addFreshEntity((net.minecraft.world.entity.Entity)abstractArrow);
+        this.level.addFreshEntity((net.minecraft.world.entity.Entity)$$3);
     }
 
     public net.minecraft.world.entity.monster.AbstractIllager$IllagerArmPose getArmPose() {