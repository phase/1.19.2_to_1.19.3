--- net/minecraft/world/entity/monster/MagmaCube.java
+++ net/minecraft/world/entity/monster/MagmaCube.java
@@ -18,13 +18,13 @@
         return $$1.getDifficulty() != net.minecraft.world.Difficulty.PEACEFUL;
     }
 
-    public boolean checkSpawnObstruction(net.minecraft.world.level.LevelReader level) {
-        return level.isUnobstructed((net.minecraft.world.entity.Entity)this) && !level.containsAnyLiquid(this.getBoundingBox());
+    public boolean checkSpawnObstruction(net.minecraft.world.level.LevelReader $$0) {
+        return $$0.isUnobstructed((net.minecraft.world.entity.Entity)this) && !$$0.containsAnyLiquid(this.getBoundingBox());
     }
 
-    public void setSize(int size, boolean resetHealth) {
-        super.setSize(size, resetHealth);
-        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.ARMOR).setBaseValue((double)(size * 3));
+    public void setSize(int $$0, boolean $$1) {
+        super.setSize($$0, $$1);
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.ARMOR).setBaseValue((double)($$0 * 3));
     }
 
     public float getLightLevelDependentMagicValue() {
@@ -75,7 +75,7 @@
         return super.getAttackDamage() + 2.0f;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         if (this.isTiny()) {
             return net.minecraft.sounds.SoundEvents.MAGMA_CUBE_HURT_SMALL;
         }