--- net/minecraft/world/entity/monster/Creeper.java
+++ net/minecraft/world/entity/monster/Creeper.java
@@ -62,26 +62,26 @@
         this.entityData.define(DATA_IS_IGNITED, (java.lang.Object)false);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
         if (((java.lang.Boolean)this.entityData.get(DATA_IS_POWERED)).booleanValue()) {
-            compound.putBoolean("powered", true);
+            $$0.putBoolean("powered", true);
         }
-        compound.putShort("Fuse", (short)this.maxSwell);
-        compound.putByte("ExplosionRadius", (byte)this.explosionRadius);
-        compound.putBoolean("ignited", this.isIgnited());
+        $$0.putShort("Fuse", (short)this.maxSwell);
+        $$0.putByte("ExplosionRadius", (byte)this.explosionRadius);
+        $$0.putBoolean("ignited", this.isIgnited());
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.entityData.set(DATA_IS_POWERED, (java.lang.Object)compound.getBoolean("powered"));
-        if (compound.contains("Fuse", 99)) {
-            this.maxSwell = compound.getShort("Fuse");
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.entityData.set(DATA_IS_POWERED, (java.lang.Object)$$0.getBoolean("powered"));
+        if ($$0.contains("Fuse", 99)) {
+            this.maxSwell = $$0.getShort("Fuse");
         }
-        if (compound.contains("ExplosionRadius", 99)) {
-            this.explosionRadius = compound.getByte("ExplosionRadius");
+        if ($$0.contains("ExplosionRadius", 99)) {
+            this.explosionRadius = $$0.getByte("ExplosionRadius");
         }
-        if (compound.getBoolean("ignited")) {
+        if ($$0.getBoolean("ignited")) {
             this.ignite();
         }
     }
@@ -116,7 +116,7 @@
         super.setTarget($$0);
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.CREEPER_HURT;
     }
 
@@ -124,17 +124,17 @@
         return net.minecraft.sounds.SoundEvents.CREEPER_DEATH;
     }
 
-    public void dropCustomDeathLoot(net.minecraft.world.damagesource.DamageSource source, int looting, boolean recentlyHit) {
-        net.minecraft.world.entity.monster.Creeper creeper;
-        super.dropCustomDeathLoot(source, looting, recentlyHit);
-        net.minecraft.world.entity.Entity entity = source.getEntity();
-        if (entity != this && entity instanceof net.minecraft.world.entity.monster.Creeper && (creeper = (net.minecraft.world.entity.monster.Creeper)entity).canDropMobsSkull()) {
-            creeper.increaseDroppedSkulls();
+    public void dropCustomDeathLoot(net.minecraft.world.damagesource.DamageSource $$0, int $$1, boolean $$2) {
+        net.minecraft.world.entity.monster.Creeper $$4;
+        super.dropCustomDeathLoot($$0, $$1, $$2);
+        net.minecraft.world.entity.Entity $$3 = $$0.getEntity();
+        if ($$3 != this && $$3 instanceof net.minecraft.world.entity.monster.Creeper && ($$4 = (net.minecraft.world.entity.monster.Creeper)$$3).canDropMobsSkull()) {
+            $$4.increaseDroppedSkulls();
             this.spawnAtLocation((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.CREEPER_HEAD);
         }
     }
 
-    public boolean doHurtTarget(net.minecraft.world.entity.Entity entity) {
+    public boolean doHurtTarget(net.minecraft.world.entity.Entity $$0) {
         return true;
     }
 
@@ -142,34 +142,34 @@
         return (java.lang.Boolean)this.entityData.get(DATA_IS_POWERED);
     }
 
-    public float getSwelling(float partialTicks) {
-        return net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.oldSwell, (float)this.swell) / (float)(this.maxSwell - 2);
+    public float getSwelling(float $$0) {
+        return net.minecraft.util.Mth.lerp((float)$$0, (float)this.oldSwell, (float)this.swell) / (float)(this.maxSwell - 2);
     }
 
     public int getSwellDir() {
         return (java.lang.Integer)this.entityData.get(DATA_SWELL_DIR);
     }
 
-    public void setSwellDir(int state) {
-        this.entityData.set(DATA_SWELL_DIR, (java.lang.Object)state);
+    public void setSwellDir(int $$0) {
+        this.entityData.set(DATA_SWELL_DIR, (java.lang.Object)$$0);
     }
 
-    public void thunderHit(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LightningBolt lightning) {
-        super.thunderHit(level, lightning);
+    public void thunderHit(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LightningBolt $$1) {
+        super.thunderHit($$0, $$1);
         this.entityData.set(DATA_IS_POWERED, (java.lang.Object)true);
     }
 
-    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        if (itemStack.is(net.minecraft.world.item.Items.FLINT_AND_STEEL)) {
-            this.level.playSound(player, this.getX(), this.getY(), this.getZ(), net.minecraft.sounds.SoundEvents.FLINTANDSTEEL_USE, this.getSoundSource(), 1.0f, this.random.nextFloat() * 0.4f + 0.8f);
+    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$12) {
+        net.minecraft.world.item.ItemStack $$2 = $$0.getItemInHand($$12);
+        if ($$2.is(net.minecraft.world.item.Items.FLINT_AND_STEEL)) {
+            this.level.playSound($$0, this.getX(), this.getY(), this.getZ(), net.minecraft.sounds.SoundEvents.FLINTANDSTEEL_USE, this.getSoundSource(), 1.0f, this.random.nextFloat() * 0.4f + 0.8f);
             if (!this.level.isClientSide) {
                 this.ignite();
-                itemStack.hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)player, entity -> entity.broadcastBreakEvent(hand));
+                $$2.hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)$$0, $$1 -> $$1.broadcastBreakEvent($$12));
             }
             return net.minecraft.world.InteractionResult.sidedSuccess((boolean)this.level.isClientSide);
         }
-        return super.mobInteract(player, hand);
+        return super.mobInteract($$0, $$12);
     }
 
     public void explodeCreeper() {