--- net/minecraft/world/entity/monster/ZombifiedPiglin.java
+++ net/minecraft/world/entity/monster/ZombifiedPiglin.java
@@ -24,8 +24,8 @@
         this.setPathfindingMalus(net.minecraft.world.level.pathfinder.BlockPathTypes.LAVA, 8.0f);
     }
 
-    public void setPersistentAngerTarget(@javax.annotation.Nullable java.util.UUID target) {
-        this.persistentAngerTarget = target;
+    public void setPersistentAngerTarget(@javax.annotation.Nullable java.util.UUID $$0) {
+        this.persistentAngerTarget = $$0;
     }
 
     public double getMyRidingOffset() {
@@ -89,24 +89,24 @@
     }
 
     public void alertOthers() {
-        double $$0 = this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.FOLLOW_RANGE);
-        net.minecraft.world.phys.AABB $$1 = net.minecraft.world.phys.AABB.unitCubeFromLowerCorner((net.minecraft.world.phys.Vec3)this.position()).inflate($$0, 10.0, $$0);
-        this.level.getEntitiesOfClass(net.minecraft.world.entity.monster.ZombifiedPiglin.class, $$1, net.minecraft.world.entity.EntitySelector.NO_SPECTATORS).stream().filter(zombifiedPiglin -> zombifiedPiglin != this).filter(zombifiedPiglin -> zombifiedPiglin.getTarget() == null).filter(zombifiedPiglin -> !zombifiedPiglin.isAlliedTo((net.minecraft.world.entity.Entity)this.getTarget())).forEach(zombifiedPiglin -> zombifiedPiglin.setTarget(this.getTarget()));
+        double $$02 = this.getAttributeValue(net.minecraft.world.entity.ai.attributes.Attributes.FOLLOW_RANGE);
+        net.minecraft.world.phys.AABB $$1 = net.minecraft.world.phys.AABB.unitCubeFromLowerCorner((net.minecraft.world.phys.Vec3)this.position()).inflate($$02, 10.0, $$02);
+        this.level.getEntitiesOfClass(net.minecraft.world.entity.monster.ZombifiedPiglin.class, $$1, net.minecraft.world.entity.EntitySelector.NO_SPECTATORS).stream().filter($$0 -> $$0 != this).filter($$0 -> $$0.getTarget() == null).filter($$0 -> !$$0.isAlliedTo((net.minecraft.world.entity.Entity)this.getTarget())).forEach($$0 -> $$0.setTarget(this.getTarget()));
     }
 
     public void playAngerSound() {
         this.playSound(net.minecraft.sounds.SoundEvents.ZOMBIFIED_PIGLIN_ANGRY, this.getSoundVolume() * 2.0f, this.getVoicePitch() * 1.8f);
     }
 
-    public void setTarget(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity livingEntity) {
-        if (this.getTarget() == null && livingEntity != null) {
+    public void setTarget(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity $$0) {
+        if (this.getTarget() == null && $$0 != null) {
             this.playFirstAngerSoundIn = FIRST_ANGER_SOUND_DELAY.sample(this.random);
             this.ticksUntilNextAlert = ALERT_INTERVAL.sample(this.random);
         }
-        if (livingEntity instanceof net.minecraft.world.entity.player.Player) {
-            this.setLastHurtByPlayer((net.minecraft.world.entity.player.Player)livingEntity);
+        if ($$0 instanceof net.minecraft.world.entity.player.Player) {
+            this.setLastHurtByPlayer((net.minecraft.world.entity.player.Player)$$0);
         }
-        super.setTarget(livingEntity);
+        super.setTarget($$0);
     }
 
     public void startPersistentAngerTimer() {
@@ -117,22 +117,22 @@
         return $$1.getDifficulty() != net.minecraft.world.Difficulty.PEACEFUL && !$$1.getBlockState($$3.below()).is(net.minecraft.world.level.block.Blocks.NETHER_WART_BLOCK);
     }
 
-    public boolean checkSpawnObstruction(net.minecraft.world.level.LevelReader level) {
-        return level.isUnobstructed((net.minecraft.world.entity.Entity)this) && !level.containsAnyLiquid(this.getBoundingBox());
+    public boolean checkSpawnObstruction(net.minecraft.world.level.LevelReader $$0) {
+        return $$0.isUnobstructed((net.minecraft.world.entity.Entity)this) && !$$0.containsAnyLiquid(this.getBoundingBox());
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        this.addPersistentAngerSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        this.addPersistentAngerSaveData($$0);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.readPersistentAngerSaveData(this.level, compound);
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.readPersistentAngerSaveData(this.level, $$0);
     }
 
-    public void setRemainingPersistentAngerTime(int time) {
-        this.remainingPersistentAngerTime = time;
+    public void setRemainingPersistentAngerTime(int $$0) {
+        this.remainingPersistentAngerTime = $$0;
     }
 
     public int getRemainingPersistentAngerTime() {
@@ -143,7 +143,7 @@
         return this.isAngry() ? net.minecraft.sounds.SoundEvents.ZOMBIFIED_PIGLIN_ANGRY : net.minecraft.sounds.SoundEvents.ZOMBIFIED_PIGLIN_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.ZOMBIFIED_PIGLIN_HURT;
     }
 
@@ -168,8 +168,8 @@
         return this.persistentAngerTarget;
     }
 
-    public boolean isPreventingPlayerRest(net.minecraft.world.entity.player.Player player) {
-        return this.isAngryAt((net.minecraft.world.entity.LivingEntity)player);
+    public boolean isPreventingPlayerRest(net.minecraft.world.entity.player.Player $$0) {
+        return this.isAngryAt((net.minecraft.world.entity.LivingEntity)$$0);
     }
 
     public boolean wantsToPickUp(net.minecraft.world.item.ItemStack $$0) {