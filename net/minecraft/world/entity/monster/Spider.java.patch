--- net/minecraft/world/entity/monster/Spider.java
+++ net/minecraft/world/entity/monster/Spider.java
@@ -29,8 +29,8 @@
         return this.getBbHeight() * 0.5f;
     }
 
-    public net.minecraft.world.entity.ai.navigation.PathNavigation createNavigation(net.minecraft.world.level.Level level) {
-        return new net.minecraft.world.entity.ai.navigation.WallClimberNavigation((net.minecraft.world.entity.Mob)this, level);
+    public net.minecraft.world.entity.ai.navigation.PathNavigation createNavigation(net.minecraft.world.level.Level $$0) {
+        return new net.minecraft.world.entity.ai.navigation.WallClimberNavigation((net.minecraft.world.entity.Mob)this, $$0);
     }
 
     public void defineSynchedData() {
@@ -53,7 +53,7 @@
         return net.minecraft.sounds.SoundEvents.SPIDER_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.SPIDER_HURT;
     }
 
@@ -61,7 +61,7 @@
         return net.minecraft.sounds.SoundEvents.SPIDER_DEATH;
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         this.playSound(net.minecraft.sounds.SoundEvents.SPIDER_STEP, 0.15f, 1.0f);
     }
 
@@ -69,9 +69,9 @@
         return this.isClimbing();
     }
 
-    public void makeStuckInBlock(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.phys.Vec3 motionMultiplier) {
-        if (!state.is(net.minecraft.world.level.block.Blocks.COBWEB)) {
-            super.makeStuckInBlock(state, motionMultiplier);
+    public void makeStuckInBlock(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.phys.Vec3 $$1) {
+        if (!$$0.is(net.minecraft.world.level.block.Blocks.COBWEB)) {
+            super.makeStuckInBlock($$0, $$1);
         }
     }
 
@@ -79,47 +79,47 @@
         return net.minecraft.world.entity.MobType.ARTHROPOD;
     }
 
-    public boolean canBeAffected(net.minecraft.world.effect.MobEffectInstance potioneffect) {
-        if (potioneffect.getEffect() == net.minecraft.world.effect.MobEffects.POISON) {
+    public boolean canBeAffected(net.minecraft.world.effect.MobEffectInstance $$0) {
+        if ($$0.getEffect() == net.minecraft.world.effect.MobEffects.POISON) {
             return false;
         }
-        return super.canBeAffected(potioneffect);
+        return super.canBeAffected($$0);
     }
 
     public boolean isClimbing() {
         return ((java.lang.Byte)this.entityData.get(DATA_FLAGS_ID) & 1) != 0;
     }
 
-    public void setClimbing(boolean climbing) {
-        byte by = (java.lang.Byte)this.entityData.get(DATA_FLAGS_ID);
-        by = climbing ? (byte)(by | 1) : (byte)(by & 0xFFFFFFFE);
-        this.entityData.set(DATA_FLAGS_ID, (java.lang.Object)by);
+    public void setClimbing(boolean $$0) {
+        byte $$1 = (java.lang.Byte)this.entityData.get(DATA_FLAGS_ID);
+        $$1 = $$0 ? (byte)($$1 | 1) : (byte)($$1 & 0xFFFFFFFE);
+        this.entityData.set(DATA_FLAGS_ID, (java.lang.Object)$$1);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
-        net.minecraft.world.entity.monster.Skeleton skeleton;
-        spawnData = super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
-        net.minecraft.util.RandomSource randomSource = level.getRandom();
-        if (randomSource.nextInt(100) == 0) {
-            skeleton = (net.minecraft.world.entity.monster.Skeleton)net.minecraft.world.entity.EntityType.SKELETON.create(this.level);
-            skeleton.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0f);
-            skeleton.finalizeSpawn(level, difficulty, reason, null, null);
-            skeleton.startRiding((net.minecraft.world.entity.Entity)this);
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
+        net.minecraft.world.effect.MobEffect $$7;
+        net.minecraft.world.entity.monster.Skeleton $$6;
+        $$3 = super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
+        net.minecraft.util.RandomSource $$5 = $$0.getRandom();
+        if ($$5.nextInt(100) == 0 && ($$6 = (net.minecraft.world.entity.monster.Skeleton)net.minecraft.world.entity.EntityType.SKELETON.create(this.level)) != null) {
+            $$6.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0f);
+            $$6.finalizeSpawn($$0, $$1, $$2, null, null);
+            $$6.startRiding((net.minecraft.world.entity.Entity)this);
         }
-        if (spawnData == null) {
-            spawnData = new net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData();
-            if (level.getDifficulty() == net.minecraft.world.Difficulty.HARD && randomSource.nextFloat() < 0.1f * difficulty.getSpecialMultiplier()) {
-                ((net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData)spawnData).setRandomEffect(randomSource);
+        if ($$3 == null) {
+            $$3 = new net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData();
+            if ($$0.getDifficulty() == net.minecraft.world.Difficulty.HARD && $$5.nextFloat() < 0.1f * $$1.getSpecialMultiplier()) {
+                ((net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData)$$3).setRandomEffect($$5);
             }
         }
-        if (spawnData instanceof net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData && (skeleton = ((net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData)spawnData).effect) != null) {
-            this.addEffect(new net.minecraft.world.effect.MobEffectInstance((net.minecraft.world.effect.MobEffect)skeleton, java.lang.Integer.MAX_VALUE));
+        if ($$3 instanceof net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData && ($$7 = ((net.minecraft.world.entity.monster.Spider$SpiderEffectsGroupData)$$3).effect) != null) {
+            this.addEffect(new net.minecraft.world.effect.MobEffectInstance($$7, java.lang.Integer.MAX_VALUE));
         }
-        return spawnData;
+        return $$3;
     }
 
-    public float getStandingEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
+    public float getStandingEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
         return 0.65f;
     }
 