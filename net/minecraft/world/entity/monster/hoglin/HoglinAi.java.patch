--- net/minecraft/world/entity/monster/hoglin/HoglinAi.java
+++ net/minecraft/world/entity/monster/hoglin/HoglinAi.java
@@ -24,182 +24,182 @@
     public net.minecraft.world.entity.monster.hoglin.HoglinAi() {
     }
 
-    public static net.minecraft.world.entity.ai.Brain<?> makeBrain(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> brain) {
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.initCoreActivity(brain);
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.initIdleActivity(brain);
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.initFightActivity(brain);
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.initRetreatActivity(brain);
-        brain.setCoreActivities((java.util.Set)com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.CORE));
-        brain.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
-        brain.useDefaultActivity();
-        return brain;
+    public static net.minecraft.world.entity.ai.Brain<?> makeBrain(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> $$0) {
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.initCoreActivity($$0);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.initIdleActivity($$0);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.initFightActivity($$0);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.initRetreatActivity($$0);
+        $$0.setCoreActivities((java.util.Set)com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.CORE));
+        $$0.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
+        $$0.useDefaultActivity();
+        return $$0;
     }
 
-    public static void initCoreActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> brain) {
-        brain.addActivity(net.minecraft.world.entity.schedule.Activity.CORE, 0, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.LookAtTargetSink(45, 90), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MoveToTargetSink()));
+    public static void initCoreActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> $$0) {
+        $$0.addActivity(net.minecraft.world.entity.schedule.Activity.CORE, 0, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.LookAtTargetSink(45, 90), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MoveToTargetSink()));
     }
 
-    public static void initIdleActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> brain) {
-        brain.addActivity(net.minecraft.world.entity.schedule.Activity.IDLE, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.BecomePassiveIfMemoryPresent(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, 200), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.AnimalMakeLove(net.minecraft.world.entity.EntityType.HOGLIN, 0.6f), (java.lang.Object)net.minecraft.world.entity.ai.behavior.SetWalkTargetAwayFrom.pos((net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, (float)1.0f, (int)8, (boolean)true), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StartAttacking(net.minecraft.world.entity.monster.hoglin.HoglinAi::findNearestValidAttackTarget), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.hoglin.Hoglin::isAdult, (net.minecraft.world.entity.ai.behavior.Behavior)net.minecraft.world.entity.ai.behavior.SetWalkTargetAwayFrom.entity((net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLIN, (float)0.4f, (int)8, (boolean)false)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunSometimes((net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.SetEntityLookTarget(8.0f), net.minecraft.util.valueproviders.UniformInt.of((int)30, (int)60)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.BabyFollowAdult(ADULT_FOLLOW_RANGE, 0.6f), (java.lang.Object)net.minecraft.world.entity.monster.hoglin.HoglinAi.createIdleMovementBehaviors()));
+    public static void initIdleActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> $$0) {
+        $$0.addActivity(net.minecraft.world.entity.schedule.Activity.IDLE, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.BecomePassiveIfMemoryPresent(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, 200), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.AnimalMakeLove(net.minecraft.world.entity.EntityType.HOGLIN, 0.6f), (java.lang.Object)net.minecraft.world.entity.ai.behavior.SetWalkTargetAwayFrom.pos((net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, (float)1.0f, (int)8, (boolean)true), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StartAttacking(net.minecraft.world.entity.monster.hoglin.HoglinAi::findNearestValidAttackTarget), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.hoglin.Hoglin::isAdult, (net.minecraft.world.entity.ai.behavior.Behavior)net.minecraft.world.entity.ai.behavior.SetWalkTargetAwayFrom.entity((net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLIN, (float)0.4f, (int)8, (boolean)false)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunSometimes((net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.SetEntityLookTarget(8.0f), net.minecraft.util.valueproviders.UniformInt.of((int)30, (int)60)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.BabyFollowAdult(ADULT_FOLLOW_RANGE, 0.6f), (java.lang.Object)net.minecraft.world.entity.monster.hoglin.HoglinAi.createIdleMovementBehaviors()));
     }
 
-    public static void initFightActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> brain) {
-        brain.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.FIGHT, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.BecomePassiveIfMemoryPresent(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, 200), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.AnimalMakeLove(net.minecraft.world.entity.EntityType.HOGLIN, 0.6f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach(1.0f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.hoglin.Hoglin::isAdult, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(40)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.AgeableMob::isBaby, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(15)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EraseMemoryIf(net.minecraft.world.entity.monster.hoglin.HoglinAi::isBreeding, net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET)), net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
+    public static void initFightActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> $$0) {
+        $$0.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.FIGHT, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.BecomePassiveIfMemoryPresent(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, 200), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.AnimalMakeLove(net.minecraft.world.entity.EntityType.HOGLIN, 0.6f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach(1.0f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.hoglin.Hoglin::isAdult, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(40)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.AgeableMob::isBaby, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(15)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EraseMemoryIf(net.minecraft.world.entity.monster.hoglin.HoglinAi::isBreeding, net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET)), net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
     }
 
-    public static void initRetreatActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> brain) {
-        brain.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.AVOID, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.world.entity.ai.behavior.SetWalkTargetAwayFrom.entity((net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET, (float)1.3f, (int)15, (boolean)false), (java.lang.Object)net.minecraft.world.entity.monster.hoglin.HoglinAi.createIdleMovementBehaviors(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunSometimes((net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.SetEntityLookTarget(8.0f), net.minecraft.util.valueproviders.UniformInt.of((int)30, (int)60)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EraseMemoryIf(net.minecraft.world.entity.monster.hoglin.HoglinAi::wantsToStopFleeing, net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET)), net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET);
+    public static void initRetreatActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> $$0) {
+        $$0.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.AVOID, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.world.entity.ai.behavior.SetWalkTargetAwayFrom.entity((net.minecraft.world.entity.ai.memory.MemoryModuleType)net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET, (float)1.3f, (int)15, (boolean)false), (java.lang.Object)net.minecraft.world.entity.monster.hoglin.HoglinAi.createIdleMovementBehaviors(), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunSometimes((net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.SetEntityLookTarget(8.0f), net.minecraft.util.valueproviders.UniformInt.of((int)30, (int)60)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EraseMemoryIf(net.minecraft.world.entity.monster.hoglin.HoglinAi::wantsToStopFleeing, net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET)), net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET);
     }
 
     public static net.minecraft.world.entity.ai.behavior.RunOne<net.minecraft.world.entity.monster.hoglin.Hoglin> createIdleMovementBehaviors() {
         return new net.minecraft.world.entity.ai.behavior.RunOne((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.RandomStroll(0.4f), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromLookTarget(0.4f, 3), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.DoNothing(30, 60), (java.lang.Object)1)));
     }
 
-    public static void updateActivity(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        net.minecraft.world.entity.ai.Brain brain = hoglin.getBrain();
-        net.minecraft.world.entity.schedule.Activity activity = (net.minecraft.world.entity.schedule.Activity)brain.getActiveNonCoreActivity().orElse(null);
-        brain.setActiveActivityToFirstValid((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.FIGHT, (java.lang.Object)net.minecraft.world.entity.schedule.Activity.AVOID, (java.lang.Object)net.minecraft.world.entity.schedule.Activity.IDLE));
-        net.minecraft.world.entity.schedule.Activity activity2 = (net.minecraft.world.entity.schedule.Activity)brain.getActiveNonCoreActivity().orElse(null);
-        if (activity != activity2) {
-            net.minecraft.world.entity.monster.hoglin.HoglinAi.getSoundForCurrentActivity((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin).ifPresent(arg_0 -> ((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin).playSoundEvent(arg_0));
+    public static void updateActivity(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        net.minecraft.world.entity.ai.Brain $$1 = $$0.getBrain();
+        net.minecraft.world.entity.schedule.Activity $$2 = (net.minecraft.world.entity.schedule.Activity)$$1.getActiveNonCoreActivity().orElse(null);
+        $$1.setActiveActivityToFirstValid((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.FIGHT, (java.lang.Object)net.minecraft.world.entity.schedule.Activity.AVOID, (java.lang.Object)net.minecraft.world.entity.schedule.Activity.IDLE));
+        net.minecraft.world.entity.schedule.Activity $$3 = (net.minecraft.world.entity.schedule.Activity)$$1.getActiveNonCoreActivity().orElse(null);
+        if ($$2 != $$3) {
+            net.minecraft.world.entity.monster.hoglin.HoglinAi.getSoundForCurrentActivity((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0).ifPresent(arg_0 -> ((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0).playSoundEvent(arg_0));
         }
-        hoglin.setAggressive(brain.hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET));
+        $$0.setAggressive($$1.hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET));
     }
 
-    public static void onHitTarget(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity target) {
-        if (hoglin.isBaby()) {
+    public static void onHitTarget(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        if ($$0.isBaby()) {
             return;
         }
-        if (target.getType() == net.minecraft.world.entity.EntityType.PIGLIN && net.minecraft.world.entity.monster.hoglin.HoglinAi.piglinsOutnumberHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin)) {
-            net.minecraft.world.entity.monster.hoglin.HoglinAi.setAvoidTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)target);
-            net.minecraft.world.entity.monster.hoglin.HoglinAi.broadcastRetreat((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)target);
+        if ($$1.getType() == net.minecraft.world.entity.EntityType.PIGLIN && net.minecraft.world.entity.monster.hoglin.HoglinAi.piglinsOutnumberHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0)) {
+            net.minecraft.world.entity.monster.hoglin.HoglinAi.setAvoidTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
+            net.minecraft.world.entity.monster.hoglin.HoglinAi.broadcastRetreat((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
             return;
         }
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.broadcastAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)target);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.broadcastAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
     }
 
-    public static void broadcastRetreat(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity target) {
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.getVisibleAdultHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin).forEach(adults -> net.minecraft.world.entity.monster.hoglin.HoglinAi.retreatFromNearestTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)adults, (net.minecraft.world.entity.LivingEntity)target));
+    public static void broadcastRetreat(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$12) {
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.getVisibleAdultHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0).forEach($$1 -> net.minecraft.world.entity.monster.hoglin.HoglinAi.retreatFromNearestTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$1, (net.minecraft.world.entity.LivingEntity)$$12));
     }
 
-    public static void retreatFromNearestTarget(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity target) {
-        net.minecraft.world.entity.LivingEntity livingEntity = target;
-        net.minecraft.world.entity.ai.Brain brain = hoglin.getBrain();
-        livingEntity = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearestTarget((net.minecraft.world.entity.LivingEntity)hoglin, (java.util.Optional)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET), (net.minecraft.world.entity.LivingEntity)livingEntity);
-        livingEntity = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearestTarget((net.minecraft.world.entity.LivingEntity)hoglin, (java.util.Optional)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET), (net.minecraft.world.entity.LivingEntity)livingEntity);
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.setAvoidTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity);
+    public static void retreatFromNearestTarget(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        net.minecraft.world.entity.LivingEntity $$2 = $$1;
+        net.minecraft.world.entity.ai.Brain $$3 = $$0.getBrain();
+        $$2 = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearestTarget((net.minecraft.world.entity.LivingEntity)$$0, (java.util.Optional)$$3.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET), (net.minecraft.world.entity.LivingEntity)$$2);
+        $$2 = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearestTarget((net.minecraft.world.entity.LivingEntity)$$0, (java.util.Optional)$$3.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET), (net.minecraft.world.entity.LivingEntity)$$2);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.setAvoidTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$2);
     }
 
-    public static void setAvoidTarget(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity target) {
-        hoglin.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
-        hoglin.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
-        hoglin.getBrain().setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET, (java.lang.Object)target, (long)RETREAT_DURATION.sample(hoglin.level.random));
+    public static void setAvoidTarget(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        $$0.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
+        $$0.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
+        $$0.getBrain().setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.AVOID_TARGET, (java.lang.Object)$$1, (long)RETREAT_DURATION.sample($$0.level.random));
     }
 
-    public static java.util.Optional<? extends net.minecraft.world.entity.LivingEntity> findNearestValidAttackTarget(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isPacified((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin) || net.minecraft.world.entity.monster.hoglin.HoglinAi.isBreeding((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin)) {
+    public static java.util.Optional<? extends net.minecraft.world.entity.LivingEntity> findNearestValidAttackTarget(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isPacified((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0) || net.minecraft.world.entity.monster.hoglin.HoglinAi.isBreeding((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0)) {
             return java.util.Optional.empty();
         }
-        return hoglin.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ATTACKABLE_PLAYER);
+        return $$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ATTACKABLE_PLAYER);
     }
 
-    public static boolean isPosNearNearestRepellent(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.core.BlockPos pos) {
-        java.util.Optional optional = hoglin.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT);
-        return optional.isPresent() && ((net.minecraft.core.BlockPos)optional.get()).closerThan((net.minecraft.core.Vec3i)pos, 8.0);
+    public static boolean isPosNearNearestRepellent(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.core.BlockPos $$1) {
+        java.util.Optional $$2 = $$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT);
+        return $$2.isPresent() && ((net.minecraft.core.BlockPos)$$2.get()).closerThan((net.minecraft.core.Vec3i)$$1, 8.0);
     }
 
-    public static boolean wantsToStopFleeing(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        return hoglin.isAdult() && !net.minecraft.world.entity.monster.hoglin.HoglinAi.piglinsOutnumberHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin);
+    public static boolean wantsToStopFleeing(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        return $$0.isAdult() && !net.minecraft.world.entity.monster.hoglin.HoglinAi.piglinsOutnumberHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0);
     }
 
-    public static boolean piglinsOutnumberHoglins(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        int n;
-        if (hoglin.isBaby()) {
+    public static boolean piglinsOutnumberHoglins(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        int $$2;
+        if ($$0.isBaby()) {
             return false;
         }
-        int n2 = (java.lang.Integer)hoglin.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_PIGLIN_COUNT).orElse((java.lang.Object)0);
-        return n2 > (n = (java.lang.Integer)hoglin.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_HOGLIN_COUNT).orElse((java.lang.Object)0) + 1);
+        int $$1 = (java.lang.Integer)$$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_PIGLIN_COUNT).orElse((java.lang.Object)0);
+        return $$1 > ($$2 = (java.lang.Integer)$$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_HOGLIN_COUNT).orElse((java.lang.Object)0) + 1);
     }
 
-    public static void wasHurtBy(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity livingEntity) {
-        net.minecraft.world.entity.ai.Brain brain = hoglin.getBrain();
-        brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PACIFIED);
-        brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
-        if (hoglin.isBaby()) {
-            net.minecraft.world.entity.monster.hoglin.HoglinAi.retreatFromNearestTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity);
+    public static void wasHurtBy(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        net.minecraft.world.entity.ai.Brain $$2 = $$0.getBrain();
+        $$2.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PACIFIED);
+        $$2.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
+        if ($$0.isBaby()) {
+            net.minecraft.world.entity.monster.hoglin.HoglinAi.retreatFromNearestTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
             return;
         }
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.maybeRetaliate((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.maybeRetaliate((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
     }
 
-    public static void maybeRetaliate(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity livingEntity) {
-        if (hoglin.getBrain().isActive(net.minecraft.world.entity.schedule.Activity.AVOID) && livingEntity.getType() == net.minecraft.world.entity.EntityType.PIGLIN) {
+    public static void maybeRetaliate(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        if ($$0.getBrain().isActive(net.minecraft.world.entity.schedule.Activity.AVOID) && $$1.getType() == net.minecraft.world.entity.EntityType.PIGLIN) {
             return;
         }
-        if (livingEntity.getType() == net.minecraft.world.entity.EntityType.HOGLIN) {
+        if ($$1.getType() == net.minecraft.world.entity.EntityType.HOGLIN) {
             return;
         }
-        if (net.minecraft.world.entity.ai.behavior.BehaviorUtils.isOtherTargetMuchFurtherAwayThanCurrentAttackTarget((net.minecraft.world.entity.LivingEntity)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity, (double)4.0)) {
+        if (net.minecraft.world.entity.ai.behavior.BehaviorUtils.isOtherTargetMuchFurtherAwayThanCurrentAttackTarget((net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.entity.LivingEntity)$$1, (double)4.0)) {
             return;
         }
-        if (!net.minecraft.world.entity.ai.sensing.Sensor.isEntityAttackable((net.minecraft.world.entity.LivingEntity)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity)) {
+        if (!net.minecraft.world.entity.ai.sensing.Sensor.isEntityAttackable((net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.entity.LivingEntity)$$1)) {
             return;
         }
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.setAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity);
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.broadcastAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.setAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.broadcastAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$1);
     }
 
-    public static void setAttackTarget(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity target) {
-        net.minecraft.world.entity.ai.Brain brain = hoglin.getBrain();
-        brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE);
-        brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
-        brain.setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET, (java.lang.Object)target, 200L);
+    public static void setAttackTarget(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        net.minecraft.world.entity.ai.Brain $$2 = $$0.getBrain();
+        $$2.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE);
+        $$2.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
+        $$2.setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET, (java.lang.Object)$$1, 200L);
     }
 
-    public static void broadcastAttackTarget(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity target) {
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.getVisibleAdultHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin).forEach(adults -> net.minecraft.world.entity.monster.hoglin.HoglinAi.setAttackTargetIfCloserThanCurrent((net.minecraft.world.entity.monster.hoglin.Hoglin)adults, (net.minecraft.world.entity.LivingEntity)target));
+    public static void broadcastAttackTarget(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$12) {
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.getVisibleAdultHoglins((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0).forEach($$1 -> net.minecraft.world.entity.monster.hoglin.HoglinAi.setAttackTargetIfCloserThanCurrent((net.minecraft.world.entity.monster.hoglin.Hoglin)$$1, (net.minecraft.world.entity.LivingEntity)$$12));
     }
 
-    public static void setAttackTargetIfCloserThanCurrent(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.LivingEntity target) {
-        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isPacified((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin)) {
+    public static void setAttackTargetIfCloserThanCurrent(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isPacified((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0)) {
             return;
         }
-        java.util.Optional optional = hoglin.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
-        net.minecraft.world.entity.LivingEntity livingEntity = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearestTarget((net.minecraft.world.entity.LivingEntity)hoglin, (java.util.Optional)optional, (net.minecraft.world.entity.LivingEntity)target);
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.setAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.LivingEntity)livingEntity);
+        java.util.Optional $$2 = $$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
+        net.minecraft.world.entity.LivingEntity $$3 = net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearestTarget((net.minecraft.world.entity.LivingEntity)$$0, (java.util.Optional)$$2, (net.minecraft.world.entity.LivingEntity)$$1);
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.setAttackTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.LivingEntity)$$3);
     }
 
-    public static java.util.Optional<net.minecraft.sounds.SoundEvent> getSoundForCurrentActivity(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        return hoglin.getBrain().getActiveNonCoreActivity().map(activity -> net.minecraft.world.entity.monster.hoglin.HoglinAi.getSoundForActivity((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin, (net.minecraft.world.entity.schedule.Activity)activity));
+    public static java.util.Optional<net.minecraft.sounds.SoundEvent> getSoundForCurrentActivity(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        return $$0.getBrain().getActiveNonCoreActivity().map($$1 -> net.minecraft.world.entity.monster.hoglin.HoglinAi.getSoundForActivity((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0, (net.minecraft.world.entity.schedule.Activity)$$1));
     }
 
-    public static net.minecraft.sounds.SoundEvent getSoundForActivity(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin, net.minecraft.world.entity.schedule.Activity activity) {
-        if (activity == net.minecraft.world.entity.schedule.Activity.AVOID || hoglin.isConverting()) {
+    public static net.minecraft.sounds.SoundEvent getSoundForActivity(net.minecraft.world.entity.monster.hoglin.Hoglin $$0, net.minecraft.world.entity.schedule.Activity $$1) {
+        if ($$1 == net.minecraft.world.entity.schedule.Activity.AVOID || $$0.isConverting()) {
             return net.minecraft.sounds.SoundEvents.HOGLIN_RETREAT;
         }
-        if (activity == net.minecraft.world.entity.schedule.Activity.FIGHT) {
+        if ($$1 == net.minecraft.world.entity.schedule.Activity.FIGHT) {
             return net.minecraft.sounds.SoundEvents.HOGLIN_ANGRY;
         }
-        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isNearRepellent((net.minecraft.world.entity.monster.hoglin.Hoglin)hoglin)) {
+        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isNearRepellent((net.minecraft.world.entity.monster.hoglin.Hoglin)$$0)) {
             return net.minecraft.sounds.SoundEvents.HOGLIN_RETREAT;
         }
         return net.minecraft.sounds.SoundEvents.HOGLIN_AMBIENT;
     }
 
-    public static java.util.List<net.minecraft.world.entity.monster.hoglin.Hoglin> getVisibleAdultHoglins(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        return (java.util.List)hoglin.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_HOGLINS).orElse((java.lang.Object)com.google.common.collect.ImmutableList.of());
+    public static java.util.List<net.minecraft.world.entity.monster.hoglin.Hoglin> getVisibleAdultHoglins(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        return (java.util.List)$$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_HOGLINS).orElse((java.lang.Object)com.google.common.collect.ImmutableList.of());
     }
 
-    public static boolean isNearRepellent(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        return hoglin.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT);
+    public static boolean isNearRepellent(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        return $$0.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT);
     }
 
-    public static boolean isBreeding(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        return hoglin.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
+    public static boolean isBreeding(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        return $$0.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
     }
 
-    public static boolean isPacified(net.minecraft.world.entity.monster.hoglin.Hoglin hoglin) {
-        return hoglin.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.PACIFIED);
+    public static boolean isPacified(net.minecraft.world.entity.monster.hoglin.Hoglin $$0) {
+        return $$0.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.PACIFIED);
     }
 
     static {