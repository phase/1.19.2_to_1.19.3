--- net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -28,7 +28,7 @@
         this.xpReward = 5;
     }
 
-    public boolean canBeLeashed(net.minecraft.world.entity.player.Player player) {
+    public boolean canBeLeashed(net.minecraft.world.entity.player.Player $$0) {
         return !this.isLeashed();
     }
 
@@ -36,40 +36,40 @@
         return net.minecraft.world.entity.monster.Monster.createMonsterAttributes().add(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH, 40.0).add(net.minecraft.world.entity.ai.attributes.Attributes.MOVEMENT_SPEED, (double)0.3f).add(net.minecraft.world.entity.ai.attributes.Attributes.KNOCKBACK_RESISTANCE, (double)0.6f).add(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_KNOCKBACK, 1.0).add(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE, 6.0);
     }
 
-    public boolean doHurtTarget(net.minecraft.world.entity.Entity entity) {
-        if (!(entity instanceof net.minecraft.world.entity.LivingEntity)) {
+    public boolean doHurtTarget(net.minecraft.world.entity.Entity $$0) {
+        if (!($$0 instanceof net.minecraft.world.entity.LivingEntity)) {
             return false;
         }
         this.attackAnimationRemainingTicks = 10;
         this.level.broadcastEntityEvent((net.minecraft.world.entity.Entity)this, (byte)4);
         this.playSound(net.minecraft.sounds.SoundEvents.HOGLIN_ATTACK, 1.0f, this.getVoicePitch());
-        net.minecraft.world.entity.monster.hoglin.HoglinAi.onHitTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)entity));
-        return net.minecraft.world.entity.monster.hoglin.HoglinBase.hurtAndThrowTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)entity));
+        net.minecraft.world.entity.monster.hoglin.HoglinAi.onHitTarget((net.minecraft.world.entity.monster.hoglin.Hoglin)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)$$0));
+        return net.minecraft.world.entity.monster.hoglin.HoglinBase.hurtAndThrowTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)$$0));
     }
 
-    public void blockedByShield(net.minecraft.world.entity.LivingEntity entity) {
+    public void blockedByShield(net.minecraft.world.entity.LivingEntity $$0) {
         if (this.isAdult()) {
-            net.minecraft.world.entity.monster.hoglin.HoglinBase.throwTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)entity);
+            net.minecraft.world.entity.monster.hoglin.HoglinBase.throwTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)$$0);
         }
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
-        boolean bl = super.hurt(source, amount);
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        boolean $$2 = super.hurt($$0, $$1);
         if (this.level.isClientSide) {
             return false;
         }
-        if (bl && source.getEntity() instanceof net.minecraft.world.entity.LivingEntity) {
-            net.minecraft.world.entity.monster.hoglin.HoglinAi.wasHurtBy((net.minecraft.world.entity.monster.hoglin.Hoglin)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)source.getEntity()));
+        if ($$2 && $$0.getEntity() instanceof net.minecraft.world.entity.LivingEntity) {
+            net.minecraft.world.entity.monster.hoglin.HoglinAi.wasHurtBy((net.minecraft.world.entity.monster.hoglin.Hoglin)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)$$0.getEntity()));
         }
-        return bl;
+        return $$2;
     }
 
     public net.minecraft.world.entity.ai.Brain$Provider<net.minecraft.world.entity.monster.hoglin.Hoglin> brainProvider() {
         return net.minecraft.world.entity.ai.Brain.provider((java.util.Collection)MEMORY_TYPES, (java.util.Collection)SENSOR_TYPES);
     }
 
-    public net.minecraft.world.entity.ai.Brain<?> makeBrain(com.mojang.serialization.Dynamic<?> dynamic) {
-        return net.minecraft.world.entity.monster.hoglin.HoglinAi.makeBrain((net.minecraft.world.entity.ai.Brain)this.brainProvider().makeBrain(dynamic));
+    public net.minecraft.world.entity.ai.Brain<?> makeBrain(com.mojang.serialization.Dynamic<?> $$0) {
+        return net.minecraft.world.entity.monster.hoglin.HoglinAi.makeBrain((net.minecraft.world.entity.ai.Brain)this.brainProvider().makeBrain($$0));
     }
 
     public net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.hoglin.Hoglin> getBrain() {
@@ -114,22 +114,22 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
-        if (level.getRandom().nextFloat() < 0.2f) {
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
+        if ($$0.getRandom().nextFloat() < 0.2f) {
             this.setBaby(true);
         }
-        return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+        return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
     }
 
-    public boolean removeWhenFarAway(double distanceToClosestPlayer) {
+    public boolean removeWhenFarAway(double $$0) {
         return !this.isPersistenceRequired();
     }
 
-    public float getWalkTargetValue(net.minecraft.core.BlockPos pos, net.minecraft.world.level.LevelReader level) {
-        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isPosNearNearestRepellent((net.minecraft.world.entity.monster.hoglin.Hoglin)this, (net.minecraft.core.BlockPos)pos)) {
+    public float getWalkTargetValue(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.LevelReader $$1) {
+        if (net.minecraft.world.entity.monster.hoglin.HoglinAi.isPosNearNearestRepellent((net.minecraft.world.entity.monster.hoglin.Hoglin)this, (net.minecraft.core.BlockPos)$$0)) {
             return -1.0f;
         }
-        if (level.getBlockState(pos.below()).is(net.minecraft.world.level.block.Blocks.CRIMSON_NYLIUM)) {
+        if ($$1.getBlockState($$0.below()).is(net.minecraft.world.level.block.Blocks.CRIMSON_NYLIUM)) {
             return 10.0f;
         }
         return 0.0f;
@@ -139,20 +139,20 @@
         return (double)this.getBbHeight() - (this.isBaby() ? 0.2 : 0.15);
     }
 
-    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        net.minecraft.world.InteractionResult interactionResult = super.mobInteract(player, hand);
-        if (interactionResult.consumesAction()) {
+    public net.minecraft.world.InteractionResult mobInteract(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$1) {
+        net.minecraft.world.InteractionResult $$2 = super.mobInteract($$0, $$1);
+        if ($$2.consumesAction()) {
             this.setPersistenceRequired();
         }
-        return interactionResult;
+        return $$2;
     }
 
-    public void handleEntityEvent(byte id) {
-        if (id == 4) {
+    public void handleEntityEvent(byte $$0) {
+        if ($$0 == 4) {
             this.attackAnimationRemainingTicks = 10;
             this.playSound(net.minecraft.sounds.SoundEvents.HOGLIN_ATTACK, 1.0f, this.getVoicePitch());
         } else {
-            super.handleEntityEvent(id);
+            super.handleEntityEvent($$0);
         }
     }
 
@@ -168,15 +168,15 @@
         return this.xpReward;
     }
 
-    public void finishConversion(net.minecraft.server.level.ServerLevel serverLevel) {
-        net.minecraft.world.entity.monster.Zoglin zoglin = (net.minecraft.world.entity.monster.Zoglin)this.convertTo(net.minecraft.world.entity.EntityType.ZOGLIN, true);
-        if (zoglin != null) {
-            zoglin.addEffect(new net.minecraft.world.effect.MobEffectInstance(net.minecraft.world.effect.MobEffects.CONFUSION, 200, 0));
+    public void finishConversion(net.minecraft.server.level.ServerLevel $$0) {
+        net.minecraft.world.entity.monster.Zoglin $$1 = (net.minecraft.world.entity.monster.Zoglin)this.convertTo(net.minecraft.world.entity.EntityType.ZOGLIN, true);
+        if ($$1 != null) {
+            $$1.addEffect(new net.minecraft.world.effect.MobEffectInstance(net.minecraft.world.effect.MobEffects.CONFUSION, 200, 0));
         }
     }
 
-    public boolean isFood(net.minecraft.world.item.ItemStack stack) {
-        return stack.is(net.minecraft.world.item.Items.CRIMSON_FUNGUS);
+    public boolean isFood(net.minecraft.world.item.ItemStack $$0) {
+        return $$0.is(net.minecraft.world.item.Items.CRIMSON_FUNGUS);
     }
 
     public boolean isAdult() {
@@ -188,26 +188,26 @@
         this.entityData.define(DATA_IMMUNE_TO_ZOMBIFICATION, (java.lang.Object)false);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
         if (this.isImmuneToZombification()) {
-            compound.putBoolean("IsImmuneToZombification", true);
+            $$0.putBoolean("IsImmuneToZombification", true);
         }
-        compound.putInt("TimeInOverworld", this.timeInOverworld);
+        $$0.putInt("TimeInOverworld", this.timeInOverworld);
         if (this.cannotBeHunted) {
-            compound.putBoolean("CannotBeHunted", true);
+            $$0.putBoolean("CannotBeHunted", true);
         }
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.setImmuneToZombification(compound.getBoolean("IsImmuneToZombification"));
-        this.timeInOverworld = compound.getInt("TimeInOverworld");
-        this.setCannotBeHunted(compound.getBoolean("CannotBeHunted"));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.setImmuneToZombification($$0.getBoolean("IsImmuneToZombification"));
+        this.timeInOverworld = $$0.getInt("TimeInOverworld");
+        this.setCannotBeHunted($$0.getBoolean("CannotBeHunted"));
     }
 
-    public void setImmuneToZombification(boolean immuneToZombification) {
-        this.getEntityData().set(DATA_IMMUNE_TO_ZOMBIFICATION, (java.lang.Object)immuneToZombification);
+    public void setImmuneToZombification(boolean $$0) {
+        this.getEntityData().set(DATA_IMMUNE_TO_ZOMBIFICATION, (java.lang.Object)$$0);
     }
 
     public boolean isImmuneToZombification() {
@@ -218,8 +218,8 @@
         return !this.level.dimensionType().piglinSafe() && !this.isImmuneToZombification() && !this.isNoAi();
     }
 
-    public void setCannotBeHunted(boolean cannotBeHurt) {
-        this.cannotBeHunted = cannotBeHurt;
+    public void setCannotBeHunted(boolean $$0) {
+        this.cannotBeHunted = $$0;
     }
 
     public boolean canBeHunted() {
@@ -250,7 +250,7 @@
         return (net.minecraft.sounds.SoundEvent)net.minecraft.world.entity.monster.hoglin.HoglinAi.getSoundForCurrentActivity((net.minecraft.world.entity.monster.hoglin.Hoglin)this).orElse(null);
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.HOGLIN_HURT;
     }
 
@@ -266,7 +266,7 @@
         return net.minecraft.sounds.SoundEvents.HOSTILE_SPLASH;
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         this.playSound(net.minecraft.sounds.SoundEvents.HOGLIN_STEP, 0.15f, 1.0f);
     }
 