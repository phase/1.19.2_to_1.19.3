--- net/minecraft/world/entity/monster/Phantom.java
+++ net/minecraft/world/entity/monster/Phantom.java
@@ -44,8 +44,8 @@
         this.entityData.define(ID_SIZE, (java.lang.Object)0);
     }
 
-    public void setPhantomSize(int phantomSize) {
-        this.entityData.set(ID_SIZE, (java.lang.Object)net.minecraft.util.Mth.clamp((int)phantomSize, (int)0, (int)64));
+    public void setPhantomSize(int $$0) {
+        this.entityData.set(ID_SIZE, (java.lang.Object)net.minecraft.util.Mth.clamp((int)$$0, (int)0, (int)64));
     }
 
     public void updatePhantomSizeInfo() {
@@ -57,15 +57,15 @@
         return (java.lang.Integer)this.entityData.get(ID_SIZE);
     }
 
-    public float getStandingEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
-        return size.height * 0.35f;
+    public float getStandingEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
+        return $$1.height * 0.35f;
     }
 
-    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> key) {
-        if (ID_SIZE.equals(key)) {
+    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> $$0) {
+        if (ID_SIZE.equals($$0)) {
             this.updatePhantomSizeInfo();
         }
-        super.onSyncedDataUpdated(key);
+        super.onSyncedDataUpdated($$0);
     }
 
     public int getUniqueFlapTickOffset() {
@@ -104,29 +104,29 @@
         super.customServerAiStep();
     }
 
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
         this.anchorPoint = this.blockPosition().above(5);
         this.setPhantomSize(0);
-        return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+        return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        if (compound.contains("AX")) {
-            this.anchorPoint = new net.minecraft.core.BlockPos(compound.getInt("AX"), compound.getInt("AY"), compound.getInt("AZ"));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        if ($$0.contains("AX")) {
+            this.anchorPoint = new net.minecraft.core.BlockPos($$0.getInt("AX"), $$0.getInt("AY"), $$0.getInt("AZ"));
         }
-        this.setPhantomSize(compound.getInt("Size"));
+        this.setPhantomSize($$0.getInt("Size"));
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putInt("AX", this.anchorPoint.getX());
-        compound.putInt("AY", this.anchorPoint.getY());
-        compound.putInt("AZ", this.anchorPoint.getZ());
-        compound.putInt("Size", this.getPhantomSize());
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putInt("AX", this.anchorPoint.getX());
+        $$0.putInt("AY", this.anchorPoint.getY());
+        $$0.putInt("AZ", this.anchorPoint.getZ());
+        $$0.putInt("Size", this.getPhantomSize());
     }
 
-    public boolean shouldRenderAtSqrDistance(double distance) {
+    public boolean shouldRenderAtSqrDistance(double $$0) {
         return true;
     }
 
@@ -138,7 +138,7 @@
         return net.minecraft.sounds.SoundEvents.PHANTOM_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.PHANTOM_HURT;
     }
 
@@ -154,15 +154,15 @@
         return 1.0f;
     }
 
-    public boolean canAttackType(net.minecraft.world.entity.EntityType<?> type) {
+    public boolean canAttackType(net.minecraft.world.entity.EntityType<?> $$0) {
         return true;
     }
 
-    public net.minecraft.world.entity.EntityDimensions getDimensions(net.minecraft.world.entity.Pose pose) {
-        int n = this.getPhantomSize();
-        net.minecraft.world.entity.EntityDimensions entityDimensions = super.getDimensions(pose);
-        float f = (entityDimensions.width + 0.2f * (float)n) / entityDimensions.width;
-        return entityDimensions.scale(f);
+    public net.minecraft.world.entity.EntityDimensions getDimensions(net.minecraft.world.entity.Pose $$0) {
+        int $$1 = this.getPhantomSize();
+        net.minecraft.world.entity.EntityDimensions $$2 = super.getDimensions($$0);
+        float $$3 = ($$2.width + 0.2f * (float)$$1) / $$2.width;
+        return $$2.scale($$3);
     }
 
     public static /* synthetic */ net.minecraft.util.RandomSource access$000(net.minecraft.world.entity.monster.Phantom $$0) {