--- net/minecraft/world/entity/monster/Vindicator.java
+++ net/minecraft/world/entity/monster/Vindicator.java
@@ -43,10 +43,10 @@
         return net.minecraft.world.entity.monster.Monster.createMonsterAttributes().add(net.minecraft.world.entity.ai.attributes.Attributes.MOVEMENT_SPEED, (double)0.35f).add(net.minecraft.world.entity.ai.attributes.Attributes.FOLLOW_RANGE, 12.0).add(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH, 24.0).add(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE, 5.0);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
         if (this.isJohnny) {
-            compound.putBoolean("Johnny", true);
+            $$0.putBoolean("Johnny", true);
         }
     }
 
@@ -60,10 +60,10 @@
         return net.minecraft.world.entity.monster.AbstractIllager$IllagerArmPose.CROSSED;
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        if (compound.contains("Johnny", 99)) {
-            this.isJohnny = compound.getBoolean("Johnny");
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        if ($$0.contains("Johnny", 99)) {
+            this.isJohnny = $$0.getBoolean("Johnny");
         }
     }
 
@@ -72,13 +72,13 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
-        net.minecraft.world.entity.SpawnGroupData spawnGroupData = super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
+        net.minecraft.world.entity.SpawnGroupData $$5 = super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
         ((net.minecraft.world.entity.ai.navigation.GroundPathNavigation)this.getNavigation()).setCanOpenDoors(true);
-        net.minecraft.util.RandomSource randomSource = level.getRandom();
-        this.populateDefaultEquipmentSlots(randomSource, difficulty);
-        this.populateDefaultEquipmentEnchantments(randomSource, difficulty);
-        return spawnGroupData;
+        net.minecraft.util.RandomSource $$6 = $$0.getRandom();
+        this.populateDefaultEquipmentSlots($$6, $$1);
+        this.populateDefaultEquipmentEnchantments($$6, $$1);
+        return $$5;
     }
 
     public void populateDefaultEquipmentSlots(net.minecraft.util.RandomSource $$0, net.minecraft.world.DifficultyInstance $$1) {
@@ -87,19 +87,19 @@
         }
     }
 
-    public boolean isAlliedTo(net.minecraft.world.entity.Entity entity) {
-        if (super.isAlliedTo(entity)) {
+    public boolean isAlliedTo(net.minecraft.world.entity.Entity $$0) {
+        if (super.isAlliedTo($$0)) {
             return true;
         }
-        if (entity instanceof net.minecraft.world.entity.LivingEntity && ((net.minecraft.world.entity.LivingEntity)entity).getMobType() == net.minecraft.world.entity.MobType.ILLAGER) {
-            return this.getTeam() == null && entity.getTeam() == null;
+        if ($$0 instanceof net.minecraft.world.entity.LivingEntity && ((net.minecraft.world.entity.LivingEntity)$$0).getMobType() == net.minecraft.world.entity.MobType.ILLAGER) {
+            return this.getTeam() == null && $$0.getTeam() == null;
         }
         return false;
     }
 
-    public void setCustomName(@javax.annotation.Nullable net.minecraft.network.chat.Component name) {
-        super.setCustomName(name);
-        if (!this.isJohnny && name != null && name.getString().equals((java.lang.Object)"Johnny")) {
+    public void setCustomName(@javax.annotation.Nullable net.minecraft.network.chat.Component $$0) {
+        super.setCustomName($$0);
+        if (!this.isJohnny && $$0 != null && $$0.getString().equals((java.lang.Object)"Johnny")) {
             this.isJohnny = true;
         }
     }
@@ -112,29 +112,29 @@
         return net.minecraft.sounds.SoundEvents.VINDICATOR_DEATH;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.VINDICATOR_HURT;
     }
 
-    public void applyRaidBuffs(int wave, boolean unusedFalse) {
-        boolean bl;
-        net.minecraft.world.item.ItemStack itemStack = new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.IRON_AXE);
-        net.minecraft.world.entity.raid.Raid raid = this.getCurrentRaid();
-        int n = 1;
-        if (wave > raid.getNumGroups(net.minecraft.world.Difficulty.NORMAL)) {
-            n = 2;
+    public void applyRaidBuffs(int $$0, boolean $$1) {
+        boolean $$5;
+        net.minecraft.world.item.ItemStack $$2 = new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.IRON_AXE);
+        net.minecraft.world.entity.raid.Raid $$3 = this.getCurrentRaid();
+        int $$4 = 1;
+        if ($$0 > $$3.getNumGroups(net.minecraft.world.Difficulty.NORMAL)) {
+            $$4 = 2;
         }
-        boolean bl2 = bl = this.random.nextFloat() <= raid.getEnchantOdds();
-        if (bl) {
-            java.util.HashMap hashMap = com.google.common.collect.Maps.newHashMap();
-            hashMap.put((java.lang.Object)net.minecraft.world.item.enchantment.Enchantments.SHARPNESS, (java.lang.Object)n);
-            net.minecraft.world.item.enchantment.EnchantmentHelper.setEnchantments((java.util.Map)hashMap, (net.minecraft.world.item.ItemStack)itemStack);
+        boolean bl = $$5 = this.random.nextFloat() <= $$3.getEnchantOdds();
+        if ($$5) {
+            java.util.HashMap $$6 = com.google.common.collect.Maps.newHashMap();
+            $$6.put((java.lang.Object)net.minecraft.world.item.enchantment.Enchantments.SHARPNESS, (java.lang.Object)$$4);
+            net.minecraft.world.item.enchantment.EnchantmentHelper.setEnchantments((java.util.Map)$$6, (net.minecraft.world.item.ItemStack)$$2);
         }
-        this.setItemSlot(net.minecraft.world.entity.EquipmentSlot.MAINHAND, itemStack);
+        this.setItemSlot(net.minecraft.world.entity.EquipmentSlot.MAINHAND, $$2);
     }
 
-    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.Difficulty difficulty) {
-        return difficulty == net.minecraft.world.Difficulty.NORMAL || difficulty == net.minecraft.world.Difficulty.HARD;
+    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.Difficulty $$0) {
+        return $$0 == net.minecraft.world.Difficulty.NORMAL || $$0 == net.minecraft.world.Difficulty.HARD;
     }
 
     public static /* synthetic */ net.minecraft.util.RandomSource access$000(net.minecraft.world.entity.monster.Vindicator $$0) {
@@ -142,7 +142,7 @@
     }
 
     static {
-        DOOR_BREAKING_PREDICATE = difficulty -> difficulty == net.minecraft.world.Difficulty.NORMAL || difficulty == net.minecraft.world.Difficulty.HARD;
+        DOOR_BREAKING_PREDICATE = $$0 -> $$0 == net.minecraft.world.Difficulty.NORMAL || $$0 == net.minecraft.world.Difficulty.HARD;
     }
 }
 