--- net/minecraft/world/entity/monster/Vex.java
+++ net/minecraft/world/entity/monster/Vex.java
@@ -27,8 +27,8 @@
         return this.tickCount % TICKS_PER_FLAP == 0;
     }
 
-    public void move(net.minecraft.world.entity.MoverType type, net.minecraft.world.phys.Vec3 pos) {
-        super.move(type, pos);
+    public void move(net.minecraft.world.entity.MoverType $$0, net.minecraft.world.phys.Vec3 $$1) {
+        super.move($$0, $$1);
         this.checkInsideBlocks();
     }
 
@@ -64,25 +64,25 @@
         this.entityData.define(DATA_FLAGS_ID, (java.lang.Object)0);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        if (compound.contains("BoundX")) {
-            this.boundOrigin = new net.minecraft.core.BlockPos(compound.getInt("BoundX"), compound.getInt("BoundY"), compound.getInt("BoundZ"));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        if ($$0.contains("BoundX")) {
+            this.boundOrigin = new net.minecraft.core.BlockPos($$0.getInt("BoundX"), $$0.getInt("BoundY"), $$0.getInt("BoundZ"));
         }
-        if (compound.contains("LifeTicks")) {
-            this.setLimitedLife(compound.getInt("LifeTicks"));
+        if ($$0.contains("LifeTicks")) {
+            this.setLimitedLife($$0.getInt("LifeTicks"));
         }
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
         if (this.boundOrigin != null) {
-            compound.putInt("BoundX", this.boundOrigin.getX());
-            compound.putInt("BoundY", this.boundOrigin.getY());
-            compound.putInt("BoundZ", this.boundOrigin.getZ());
+            $$0.putInt("BoundX", this.boundOrigin.getX());
+            $$0.putInt("BoundY", this.boundOrigin.getY());
+            $$0.putInt("BoundZ", this.boundOrigin.getZ());
         }
         if (this.hasLimitedLife) {
-            compound.putInt("LifeTicks", this.limitedLifeTicks);
+            $$0.putInt("LifeTicks", this.limitedLifeTicks);
         }
     }
 
@@ -96,36 +96,36 @@
         return this.boundOrigin;
     }
 
-    public void setBoundOrigin(@javax.annotation.Nullable net.minecraft.core.BlockPos boundOrigin) {
-        this.boundOrigin = boundOrigin;
+    public void setBoundOrigin(@javax.annotation.Nullable net.minecraft.core.BlockPos $$0) {
+        this.boundOrigin = $$0;
     }
 
-    public boolean getVexFlag(int mask) {
-        byte by = (java.lang.Byte)this.entityData.get(DATA_FLAGS_ID);
-        return (by & mask) != 0;
+    public boolean getVexFlag(int $$0) {
+        byte $$1 = (java.lang.Byte)this.entityData.get(DATA_FLAGS_ID);
+        return ($$1 & $$0) != 0;
     }
 
-    public void setVexFlag(int mask, boolean value) {
-        int n = ((java.lang.Byte)this.entityData.get(DATA_FLAGS_ID)).byteValue();
-        n = value ? (n |= mask) : (n &= ~mask);
-        this.entityData.set(DATA_FLAGS_ID, (java.lang.Object)((byte)(n & 0xFF)));
+    public void setVexFlag(int $$0, boolean $$1) {
+        int $$2 = ((java.lang.Byte)this.entityData.get(DATA_FLAGS_ID)).byteValue();
+        $$2 = $$1 ? ($$2 |= $$0) : ($$2 &= ~$$0);
+        this.entityData.set(DATA_FLAGS_ID, (java.lang.Object)((byte)($$2 & 0xFF)));
     }
 
     public boolean isCharging() {
         return this.getVexFlag(1);
     }
 
-    public void setIsCharging(boolean charging) {
-        this.setVexFlag(1, charging);
+    public void setIsCharging(boolean $$0) {
+        this.setVexFlag(1, $$0);
     }
 
-    public void setOwner(net.minecraft.world.entity.Mob owner) {
-        this.owner = owner;
+    public void setOwner(net.minecraft.world.entity.Mob $$0) {
+        this.owner = $$0;
     }
 
-    public void setLimitedLife(int limitedLifeTicks) {
+    public void setLimitedLife(int $$0) {
         this.hasLimitedLife = true;
-        this.limitedLifeTicks = limitedLifeTicks;
+        this.limitedLifeTicks = $$0;
     }
 
     public net.minecraft.sounds.SoundEvent getAmbientSound() {
@@ -136,7 +136,7 @@
         return net.minecraft.sounds.SoundEvents.VEX_DEATH;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.VEX_HURT;
     }
 
@@ -145,11 +145,11 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor level, net.minecraft.world.DifficultyInstance difficulty, net.minecraft.world.entity.MobSpawnType reason, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData spawnData, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag dataTag) {
-        net.minecraft.util.RandomSource randomSource = level.getRandom();
-        this.populateDefaultEquipmentSlots(randomSource, difficulty);
-        this.populateDefaultEquipmentEnchantments(randomSource, difficulty);
-        return super.finalizeSpawn(level, difficulty, reason, spawnData, dataTag);
+    public net.minecraft.world.entity.SpawnGroupData finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor $$0, net.minecraft.world.DifficultyInstance $$1, net.minecraft.world.entity.MobSpawnType $$2, @javax.annotation.Nullable net.minecraft.world.entity.SpawnGroupData $$3, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$4) {
+        net.minecraft.util.RandomSource $$5 = $$0.getRandom();
+        this.populateDefaultEquipmentSlots($$5, $$1);
+        this.populateDefaultEquipmentEnchantments($$5, $$1);
+        return super.finalizeSpawn($$0, $$1, $$2, $$3, $$4);
     }
 
     public void populateDefaultEquipmentSlots(net.minecraft.util.RandomSource $$0, net.minecraft.world.DifficultyInstance $$1) {