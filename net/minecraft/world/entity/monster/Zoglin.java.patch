--- net/minecraft/world/entity/monster/Zoglin.java
+++ net/minecraft/world/entity/monster/Zoglin.java
@@ -32,36 +32,36 @@
         return net.minecraft.world.entity.ai.Brain.provider((java.util.Collection)MEMORY_TYPES, (java.util.Collection)SENSOR_TYPES);
     }
 
-    public net.minecraft.world.entity.ai.Brain<?> makeBrain(com.mojang.serialization.Dynamic<?> dynamic) {
-        net.minecraft.world.entity.ai.Brain brain = this.brainProvider().makeBrain(dynamic);
-        net.minecraft.world.entity.monster.Zoglin.initCoreActivity((net.minecraft.world.entity.ai.Brain)brain);
-        net.minecraft.world.entity.monster.Zoglin.initIdleActivity((net.minecraft.world.entity.ai.Brain)brain);
-        net.minecraft.world.entity.monster.Zoglin.initFightActivity((net.minecraft.world.entity.ai.Brain)brain);
-        brain.setCoreActivities((java.util.Set)com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.CORE));
-        brain.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
-        brain.useDefaultActivity();
-        return brain;
+    public net.minecraft.world.entity.ai.Brain<?> makeBrain(com.mojang.serialization.Dynamic<?> $$0) {
+        net.minecraft.world.entity.ai.Brain $$1 = this.brainProvider().makeBrain($$0);
+        net.minecraft.world.entity.monster.Zoglin.initCoreActivity((net.minecraft.world.entity.ai.Brain)$$1);
+        net.minecraft.world.entity.monster.Zoglin.initIdleActivity((net.minecraft.world.entity.ai.Brain)$$1);
+        net.minecraft.world.entity.monster.Zoglin.initFightActivity((net.minecraft.world.entity.ai.Brain)$$1);
+        $$1.setCoreActivities((java.util.Set)com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.entity.schedule.Activity.CORE));
+        $$1.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
+        $$1.useDefaultActivity();
+        return $$1;
     }
 
-    public static void initCoreActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.Zoglin> brain) {
-        brain.addActivity(net.minecraft.world.entity.schedule.Activity.CORE, 0, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.LookAtTargetSink(45, 90), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MoveToTargetSink()));
+    public static void initCoreActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.Zoglin> $$0) {
+        $$0.addActivity(net.minecraft.world.entity.schedule.Activity.CORE, 0, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.LookAtTargetSink(45, 90), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.MoveToTargetSink()));
     }
 
-    public static void initIdleActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.Zoglin> brain) {
-        brain.addActivity(net.minecraft.world.entity.schedule.Activity.IDLE, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StartAttacking(net.minecraft.world.entity.monster.Zoglin::findNearestValidAttackTarget), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunSometimes((net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.SetEntityLookTarget(8.0f), net.minecraft.util.valueproviders.UniformInt.of((int)30, (int)60)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunOne((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.RandomStroll(0.4f), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromLookTarget(0.4f, 3), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.DoNothing(30, 60), (java.lang.Object)1)))));
+    public static void initIdleActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.Zoglin> $$0) {
+        $$0.addActivity(net.minecraft.world.entity.schedule.Activity.IDLE, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.StartAttacking(net.minecraft.world.entity.monster.Zoglin::findNearestValidAttackTarget), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunSometimes((net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.SetEntityLookTarget(8.0f), net.minecraft.util.valueproviders.UniformInt.of((int)30, (int)60)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunOne((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.RandomStroll(0.4f), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromLookTarget(0.4f, 3), (java.lang.Object)2), (java.lang.Object)com.mojang.datafixers.util.Pair.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.DoNothing(30, 60), (java.lang.Object)1)))));
     }
 
-    public static void initFightActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.Zoglin> brain) {
-        brain.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.FIGHT, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach(1.0f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.Zoglin::isAdult, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(40)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.Zoglin::isBaby, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(15)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid()), net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
+    public static void initFightActivity(net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.Zoglin> $$0) {
+        $$0.addActivityAndRemoveMemoryWhenStopped(net.minecraft.world.entity.schedule.Activity.FIGHT, 10, com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.entity.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach(1.0f), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.Zoglin::isAdult, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(40)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.RunIf(net.minecraft.world.entity.monster.Zoglin::isBaby, (net.minecraft.world.entity.ai.behavior.Behavior)new net.minecraft.world.entity.ai.behavior.MeleeAttack(15)), (java.lang.Object)new net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid()), net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET);
     }
 
     public java.util.Optional<? extends net.minecraft.world.entity.LivingEntity> findNearestValidAttackTarget() {
         return ((net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)this.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).orElse((java.lang.Object)net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities.empty())).findClosest(arg_0 -> this.isTargetable(arg_0));
     }
 
-    public boolean isTargetable(net.minecraft.world.entity.LivingEntity livingEntity) {
-        net.minecraft.world.entity.EntityType entityType = livingEntity.getType();
-        return entityType != net.minecraft.world.entity.EntityType.ZOGLIN && entityType != net.minecraft.world.entity.EntityType.CREEPER && net.minecraft.world.entity.ai.sensing.Sensor.isEntityAttackable((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)livingEntity);
+    public boolean isTargetable(net.minecraft.world.entity.LivingEntity $$0) {
+        net.minecraft.world.entity.EntityType $$1 = $$0.getType();
+        return $$1 != net.minecraft.world.entity.EntityType.ZOGLIN && $$1 != net.minecraft.world.entity.EntityType.CREEPER && net.minecraft.world.entity.ai.sensing.Sensor.isEntityAttackable((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)$$0);
     }
 
     public void defineSynchedData() {
@@ -69,9 +69,9 @@
         this.entityData.define(DATA_BABY_ID, (java.lang.Object)false);
     }
 
-    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> key) {
-        super.onSyncedDataUpdated(key);
-        if (DATA_BABY_ID.equals(key)) {
+    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> $$0) {
+        super.onSyncedDataUpdated($$0);
+        if (DATA_BABY_ID.equals($$0)) {
             this.refreshDimensions();
         }
     }
@@ -84,23 +84,23 @@
         return !this.isBaby();
     }
 
-    public boolean doHurtTarget(net.minecraft.world.entity.Entity entity) {
-        if (!(entity instanceof net.minecraft.world.entity.LivingEntity)) {
+    public boolean doHurtTarget(net.minecraft.world.entity.Entity $$0) {
+        if (!($$0 instanceof net.minecraft.world.entity.LivingEntity)) {
             return false;
         }
         this.attackAnimationRemainingTicks = 10;
         this.level.broadcastEntityEvent((net.minecraft.world.entity.Entity)this, (byte)4);
         this.playSound(net.minecraft.sounds.SoundEvents.ZOGLIN_ATTACK, 1.0f, this.getVoicePitch());
-        return net.minecraft.world.entity.monster.hoglin.HoglinBase.hurtAndThrowTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)entity));
+        return net.minecraft.world.entity.monster.hoglin.HoglinBase.hurtAndThrowTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)$$0));
     }
 
-    public boolean canBeLeashed(net.minecraft.world.entity.player.Player player) {
+    public boolean canBeLeashed(net.minecraft.world.entity.player.Player $$0) {
         return !this.isLeashed();
     }
 
-    public void blockedByShield(net.minecraft.world.entity.LivingEntity entity) {
+    public void blockedByShield(net.minecraft.world.entity.LivingEntity $$0) {
         if (!this.isBaby()) {
-            net.minecraft.world.entity.monster.hoglin.HoglinBase.throwTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)entity);
+            net.minecraft.world.entity.monster.hoglin.HoglinBase.throwTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)$$0);
         }
     }
 
@@ -108,24 +108,24 @@
         return (double)this.getBbHeight() - (this.isBaby() ? 0.2 : 0.15);
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
-        boolean bl = super.hurt(source, amount);
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        boolean $$2 = super.hurt($$0, $$1);
         if (this.level.isClientSide) {
             return false;
         }
-        if (!bl || !(source.getEntity() instanceof net.minecraft.world.entity.LivingEntity)) {
-            return bl;
+        if (!$$2 || !($$0.getEntity() instanceof net.minecraft.world.entity.LivingEntity)) {
+            return $$2;
         }
-        net.minecraft.world.entity.LivingEntity livingEntity = (net.minecraft.world.entity.LivingEntity)source.getEntity();
-        if (this.canAttack(livingEntity) && !net.minecraft.world.entity.ai.behavior.BehaviorUtils.isOtherTargetMuchFurtherAwayThanCurrentAttackTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)livingEntity, (double)4.0)) {
-            this.setAttackTarget(livingEntity);
+        net.minecraft.world.entity.LivingEntity $$3 = (net.minecraft.world.entity.LivingEntity)$$0.getEntity();
+        if (this.canAttack($$3) && !net.minecraft.world.entity.ai.behavior.BehaviorUtils.isOtherTargetMuchFurtherAwayThanCurrentAttackTarget((net.minecraft.world.entity.LivingEntity)this, (net.minecraft.world.entity.LivingEntity)$$3, (double)4.0)) {
+            this.setAttackTarget($$3);
         }
-        return bl;
+        return $$2;
     }
 
-    public void setAttackTarget(net.minecraft.world.entity.LivingEntity target) {
+    public void setAttackTarget(net.minecraft.world.entity.LivingEntity $$0) {
         this.brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE);
-        this.brain.setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET, (java.lang.Object)target, 200L);
+        this.brain.setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET, (java.lang.Object)$$0, 200L);
     }
 
     public net.minecraft.world.entity.ai.Brain<net.minecraft.world.entity.monster.Zoglin> getBrain() {
@@ -149,9 +149,9 @@
         this.updateActivity();
     }
 
-    public void setBaby(boolean childZombie) {
-        this.getEntityData().set(DATA_BABY_ID, (java.lang.Object)childZombie);
-        if (!this.level.isClientSide && childZombie) {
+    public void setBaby(boolean $$0) {
+        this.getEntityData().set(DATA_BABY_ID, (java.lang.Object)$$0);
+        if (!this.level.isClientSide && $$0) {
             this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.ATTACK_DAMAGE).setBaseValue(0.5);
         }
     }
@@ -167,12 +167,12 @@
         super.aiStep();
     }
 
-    public void handleEntityEvent(byte id) {
-        if (id == 4) {
+    public void handleEntityEvent(byte $$0) {
+        if ($$0 == 4) {
             this.attackAnimationRemainingTicks = 10;
             this.playSound(net.minecraft.sounds.SoundEvents.ZOGLIN_ATTACK, 1.0f, this.getVoicePitch());
         } else {
-            super.handleEntityEvent(id);
+            super.handleEntityEvent($$0);
         }
     }
 
@@ -190,7 +190,7 @@
         return net.minecraft.sounds.SoundEvents.ZOGLIN_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.ZOGLIN_HURT;
     }
 
@@ -198,7 +198,7 @@
         return net.minecraft.sounds.SoundEvents.ZOGLIN_DEATH;
     }
 
-    public void playStepSound(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState block) {
+    public void playStepSound(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         this.playSound(net.minecraft.sounds.SoundEvents.ZOGLIN_STEP, 0.15f, 1.0f);
     }
 
@@ -215,16 +215,16 @@
         return net.minecraft.world.entity.MobType.UNDEAD;
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
         if (this.isBaby()) {
-            compound.putBoolean("IsBaby", true);
+            $$0.putBoolean("IsBaby", true);
         }
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        if (compound.getBoolean("IsBaby")) {
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        if ($$0.getBoolean("IsBaby")) {
             this.setBaby(true);
         }
     }