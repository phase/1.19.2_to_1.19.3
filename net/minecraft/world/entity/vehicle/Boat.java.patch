--- net/minecraft/world/entity/vehicle/Boat.java
+++ net/minecraft/world/entity/vehicle/Boat.java
@@ -50,16 +50,16 @@
         this.blocksBuilding = true;
     }
 
-    public net.minecraft.world.entity.vehicle.Boat(net.minecraft.world.level.Level level, double x, double y, double z) {
-        this(net.minecraft.world.entity.EntityType.BOAT, level);
-        this.setPos(x, y, z);
-        this.xo = x;
-        this.yo = y;
-        this.zo = z;
+    public net.minecraft.world.entity.vehicle.Boat(net.minecraft.world.level.Level $$0, double $$1, double $$2, double $$3) {
+        this(net.minecraft.world.entity.EntityType.BOAT, $$0);
+        this.setPos($$1, $$2, $$3);
+        this.xo = $$1;
+        this.yo = $$2;
+        this.zo = $$3;
     }
 
-    public float getEyeHeight(net.minecraft.world.entity.Pose pose, net.minecraft.world.entity.EntityDimensions size) {
-        return size.height;
+    public float getEyeHeight(net.minecraft.world.entity.Pose $$0, net.minecraft.world.entity.EntityDimensions $$1) {
+        return $$1.height;
     }
 
     public net.minecraft.world.entity.Entity$MovementEmission getMovementEmission() {
@@ -76,12 +76,12 @@
         this.entityData.define(DATA_ID_BUBBLE_TIME, (java.lang.Object)0);
     }
 
-    public boolean canCollideWith(net.minecraft.world.entity.Entity entity) {
-        return net.minecraft.world.entity.vehicle.Boat.canVehicleCollide((net.minecraft.world.entity.Entity)this, (net.minecraft.world.entity.Entity)entity);
+    public boolean canCollideWith(net.minecraft.world.entity.Entity $$0) {
+        return net.minecraft.world.entity.vehicle.Boat.canVehicleCollide((net.minecraft.world.entity.Entity)this, (net.minecraft.world.entity.Entity)$$0);
     }
 
-    public static boolean canVehicleCollide(net.minecraft.world.entity.Entity vehicle, net.minecraft.world.entity.Entity entity) {
-        return (entity.canBeCollidedWith() || entity.isPushable()) && !vehicle.isPassengerOfSameVehicle(entity);
+    public static boolean canVehicleCollide(net.minecraft.world.entity.Entity $$0, net.minecraft.world.entity.Entity $$1) {
+        return ($$1.canBeCollidedWith() || $$1.isPushable()) && !$$0.isPassengerOfSameVehicle($$1);
     }
 
     public boolean canBeCollidedWith() {
@@ -92,17 +92,17 @@
         return true;
     }
 
-    public net.minecraft.world.phys.Vec3 getRelativePortalPosition(net.minecraft.core.Direction$Axis axis, net.minecraft.BlockUtil$FoundRectangle portal) {
-        return net.minecraft.world.entity.LivingEntity.resetForwardDirectionOfRelativePortalPosition((net.minecraft.world.phys.Vec3)super.getRelativePortalPosition(axis, portal));
+    public net.minecraft.world.phys.Vec3 getRelativePortalPosition(net.minecraft.core.Direction$Axis $$0, net.minecraft.BlockUtil$FoundRectangle $$1) {
+        return net.minecraft.world.entity.LivingEntity.resetForwardDirectionOfRelativePortalPosition((net.minecraft.world.phys.Vec3)super.getRelativePortalPosition($$0, $$1));
     }
 
     public double getPassengersRidingOffset() {
-        return -0.1;
+        return this.getBoatType() == net.minecraft.world.entity.vehicle.Boat$Type.BAMBOO ? 0.3 : -0.1;
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
-        boolean bl;
-        if (this.isInvulnerableTo(source)) {
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        boolean $$2;
+        if (this.isInvulnerableTo($$0)) {
             return false;
         }
         if (this.level.isClientSide || this.isRemoved()) {
@@ -110,13 +110,13 @@
         }
         this.setHurtDir(-this.getHurtDir());
         this.setHurtTime(10);
-        this.setDamage(this.getDamage() + amount * 10.0f);
+        this.setDamage(this.getDamage() + $$1 * 10.0f);
         this.markHurt();
-        this.gameEvent(net.minecraft.world.level.gameevent.GameEvent.ENTITY_DAMAGE, source.getEntity());
-        boolean bl2 = bl = source.getEntity() instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)source.getEntity()).getAbilities().instabuild;
-        if (bl || this.getDamage() > 40.0f) {
-            if (!bl && this.level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DOENTITYDROPS)) {
-                this.destroy(source);
+        this.gameEvent(net.minecraft.world.level.gameevent.GameEvent.ENTITY_DAMAGE, $$0.getEntity());
+        boolean bl = $$2 = $$0.getEntity() instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)$$0.getEntity()).getAbilities().instabuild;
+        if ($$2 || this.getDamage() > 40.0f) {
+            if (!$$2 && this.level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DOENTITYDROPS)) {
+                this.destroy($$0);
             }
             this.discard();
         }
@@ -127,10 +127,10 @@
         this.spawnAtLocation((net.minecraft.world.level.ItemLike)this.getDropItem());
     }
 
-    public void onAboveBubbleCol(boolean downwards) {
+    public void onAboveBubbleCol(boolean $$0) {
         if (!this.level.isClientSide) {
             this.isAboveBubbleColumn = true;
-            this.bubbleColumnDirectionIsDown = downwards;
+            this.bubbleColumnDirectionIsDown = $$0;
             if (this.getBubbleTime() == 0) {
                 this.setBubbleTime(60);
             }
@@ -142,39 +142,27 @@
         }
     }
 
-    public void push(net.minecraft.world.entity.Entity entity) {
-        if (entity instanceof net.minecraft.world.entity.vehicle.Boat) {
-            if (entity.getBoundingBox().minY < this.getBoundingBox().maxY) {
-                super.push(entity);
+    public void push(net.minecraft.world.entity.Entity $$0) {
+        if ($$0 instanceof net.minecraft.world.entity.vehicle.Boat) {
+            if ($$0.getBoundingBox().minY < this.getBoundingBox().maxY) {
+                super.push($$0);
             }
-        } else if (entity.getBoundingBox().minY <= this.getBoundingBox().minY) {
-            super.push(entity);
+        } else if ($$0.getBoundingBox().minY <= this.getBoundingBox().minY) {
+            super.push($$0);
         }
     }
 
     public net.minecraft.world.item.Item getDropItem() {
-        switch (net.minecraft.world.entity.vehicle.Boat$1.$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type[this.getBoatType().ordinal()]) {
-            default: {
-                return net.minecraft.world.item.Items.OAK_BOAT;
-            }
-            case 2: {
-                return net.minecraft.world.item.Items.SPRUCE_BOAT;
-            }
-            case 3: {
-                return net.minecraft.world.item.Items.BIRCH_BOAT;
-            }
-            case 4: {
-                return net.minecraft.world.item.Items.JUNGLE_BOAT;
-            }
-            case 5: {
-                return net.minecraft.world.item.Items.ACACIA_BOAT;
-            }
-            case 6: {
-                return net.minecraft.world.item.Items.DARK_OAK_BOAT;
-            }
-            case 7: 
-        }
-        return net.minecraft.world.item.Items.MANGROVE_BOAT;
+        return switch (net.minecraft.world.entity.vehicle.Boat$1.$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type[this.getBoatType().ordinal()]) {
+            case 1 -> net.minecraft.world.item.Items.SPRUCE_BOAT;
+            case 2 -> net.minecraft.world.item.Items.BIRCH_BOAT;
+            case 3 -> net.minecraft.world.item.Items.JUNGLE_BOAT;
+            case 4 -> net.minecraft.world.item.Items.ACACIA_BOAT;
+            case 5 -> net.minecraft.world.item.Items.DARK_OAK_BOAT;
+            case 6 -> net.minecraft.world.item.Items.MANGROVE_BOAT;
+            case 7 -> net.minecraft.world.item.Items.BAMBOO_RAFT;
+            default -> net.minecraft.world.item.Items.OAK_BOAT;
+        };
     }
 
     public void animateHurt() {
@@ -187,12 +175,12 @@
         return !this.isRemoved();
     }
 
-    public void lerpTo(double x, double y, double z, float yaw, float pitch, int posRotationIncrements, boolean teleport) {
-        this.lerpX = x;
-        this.lerpY = y;
-        this.lerpZ = z;
-        this.lerpYRot = yaw;
-        this.lerpXRot = pitch;
+    public void lerpTo(double $$0, double $$1, double $$2, float $$3, float $$4, int $$5, boolean $$6) {
+        this.lerpX = $$0;
+        this.lerpY = $$1;
+        this.lerpZ = $$2;
+        this.lerpYRot = $$3;
+        this.lerpXRot = $$4;
         this.lerpSteps = 10;
     }
 
@@ -324,14 +312,14 @@
         this.setRot(this.getYRot(), this.getXRot());
     }
 
-    public void setPaddleState(boolean left, boolean right) {
-        this.entityData.set(DATA_ID_PADDLE_LEFT, (java.lang.Object)left);
-        this.entityData.set(DATA_ID_PADDLE_RIGHT, (java.lang.Object)right);
+    public void setPaddleState(boolean $$0, boolean $$1) {
+        this.entityData.set(DATA_ID_PADDLE_LEFT, (java.lang.Object)$$0);
+        this.entityData.set(DATA_ID_PADDLE_RIGHT, (java.lang.Object)$$1);
     }
 
-    public float getRowingTime(int side, float limbSwing) {
-        if (this.getPaddleState(side)) {
-            return net.minecraft.util.Mth.clampedLerp((float)(this.paddlePositions[side] - 0.3926991f), (float)this.paddlePositions[side], (float)limbSwing);
+    public float getRowingTime(int $$0, float $$1) {
+        if (this.getPaddleState($$0)) {
+            return net.minecraft.util.Mth.clampedLerp((float)(this.paddlePositions[$$0] - 0.3926991f), (float)this.paddlePositions[$$0], (float)$$1);
         }
         return 0.0f;
     }
@@ -533,100 +521,100 @@
         return 0.0f;
     }
 
-    public void positionRider(net.minecraft.world.entity.Entity passenger) {
-        if (!this.hasPassenger(passenger)) {
+    public void positionRider(net.minecraft.world.entity.Entity $$0) {
+        if (!this.hasPassenger($$0)) {
             return;
         }
-        float f = this.getSinglePassengerXOffset();
-        float f2 = (float)((this.isRemoved() ? (double)0.01f : this.getPassengersRidingOffset()) + passenger.getMyRidingOffset());
+        float $$1 = this.getSinglePassengerXOffset();
+        float $$2 = (float)((this.isRemoved() ? (double)0.01f : this.getPassengersRidingOffset()) + $$0.getMyRidingOffset());
         if (this.getPassengers().size() > 1) {
-            int n = this.getPassengers().indexOf((java.lang.Object)passenger);
-            f = n == 0 ? 0.2f : -0.6f;
-            if (passenger instanceof net.minecraft.world.entity.animal.Animal) {
-                f += 0.2f;
+            int $$3 = this.getPassengers().indexOf((java.lang.Object)$$0);
+            $$1 = $$3 == 0 ? 0.2f : -0.6f;
+            if ($$0 instanceof net.minecraft.world.entity.animal.Animal) {
+                $$1 += 0.2f;
             }
         }
-        net.minecraft.world.phys.Vec3 vec3 = new net.minecraft.world.phys.Vec3((double)f, 0.0, 0.0).yRot(-this.getYRot() * ((float)java.lang.Math.PI / 180) - 1.5707964f);
-        passenger.setPos(this.getX() + vec3.x, this.getY() + (double)f2, this.getZ() + vec3.z);
-        passenger.setYRot(passenger.getYRot() + this.deltaRotation);
-        passenger.setYHeadRot(passenger.getYHeadRot() + this.deltaRotation);
-        this.clampRotation(passenger);
-        if (passenger instanceof net.minecraft.world.entity.animal.Animal && this.getPassengers().size() == this.getMaxPassengers()) {
-            int n = passenger.getId() % 2 == 0 ? 90 : 270;
-            passenger.setYBodyRot(((net.minecraft.world.entity.animal.Animal)passenger).yBodyRot + (float)n);
-            passenger.setYHeadRot(passenger.getYHeadRot() + (float)n);
+        net.minecraft.world.phys.Vec3 $$4 = new net.minecraft.world.phys.Vec3((double)$$1, 0.0, 0.0).yRot(-this.getYRot() * ((float)java.lang.Math.PI / 180) - 1.5707964f);
+        $$0.setPos(this.getX() + $$4.x, this.getY() + (double)$$2, this.getZ() + $$4.z);
+        $$0.setYRot($$0.getYRot() + this.deltaRotation);
+        $$0.setYHeadRot($$0.getYHeadRot() + this.deltaRotation);
+        this.clampRotation($$0);
+        if ($$0 instanceof net.minecraft.world.entity.animal.Animal && this.getPassengers().size() == this.getMaxPassengers()) {
+            int $$5 = $$0.getId() % 2 == 0 ? 90 : 270;
+            $$0.setYBodyRot(((net.minecraft.world.entity.animal.Animal)$$0).yBodyRot + (float)$$5);
+            $$0.setYHeadRot($$0.getYHeadRot() + (float)$$5);
         }
     }
 
-    public net.minecraft.world.phys.Vec3 getDismountLocationForPassenger(net.minecraft.world.entity.LivingEntity livingEntity) {
-        double d;
-        net.minecraft.world.phys.Vec3 vec3 = net.minecraft.world.entity.vehicle.Boat.getCollisionHorizontalEscapeVector((double)(this.getBbWidth() * net.minecraft.util.Mth.SQRT_OF_TWO), (double)livingEntity.getBbWidth(), (float)livingEntity.getYRot());
-        double d2 = this.getX() + vec3.x;
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(d2, this.getBoundingBox().maxY, d = this.getZ() + vec3.z);
-        net.minecraft.core.BlockPos blockPos2 = blockPos.below();
-        if (!this.level.isWaterAt(blockPos2)) {
-            double d3;
-            java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-            double d4 = this.level.getBlockFloorHeight(blockPos);
-            if (net.minecraft.world.entity.vehicle.DismountHelper.isBlockFloorValid((double)d4)) {
-                arrayList.add((java.lang.Object)new net.minecraft.world.phys.Vec3(d2, (double)blockPos.getY() + d4, d));
+    public net.minecraft.world.phys.Vec3 getDismountLocationForPassenger(net.minecraft.world.entity.LivingEntity $$0) {
+        double $$3;
+        net.minecraft.world.phys.Vec3 $$1 = net.minecraft.world.entity.vehicle.Boat.getCollisionHorizontalEscapeVector((double)(this.getBbWidth() * net.minecraft.util.Mth.SQRT_OF_TWO), (double)$$0.getBbWidth(), (float)$$0.getYRot());
+        double $$2 = this.getX() + $$1.x;
+        net.minecraft.core.BlockPos $$4 = new net.minecraft.core.BlockPos($$2, this.getBoundingBox().maxY, $$3 = this.getZ() + $$1.z);
+        net.minecraft.core.BlockPos $$5 = $$4.below();
+        if (!this.level.isWaterAt($$5)) {
+            double $$8;
+            java.util.ArrayList $$6 = com.google.common.collect.Lists.newArrayList();
+            double $$7 = this.level.getBlockFloorHeight($$4);
+            if (net.minecraft.world.entity.vehicle.DismountHelper.isBlockFloorValid((double)$$7)) {
+                $$6.add((java.lang.Object)new net.minecraft.world.phys.Vec3($$2, (double)$$4.getY() + $$7, $$3));
             }
-            if (net.minecraft.world.entity.vehicle.DismountHelper.isBlockFloorValid((double)(d3 = this.level.getBlockFloorHeight(blockPos2)))) {
-                arrayList.add((java.lang.Object)new net.minecraft.world.phys.Vec3(d2, (double)blockPos2.getY() + d3, d));
+            if (net.minecraft.world.entity.vehicle.DismountHelper.isBlockFloorValid((double)($$8 = this.level.getBlockFloorHeight($$5)))) {
+                $$6.add((java.lang.Object)new net.minecraft.world.phys.Vec3($$2, (double)$$5.getY() + $$8, $$3));
             }
-            for (net.minecraft.world.entity.Pose pose : livingEntity.getDismountPoses()) {
-                for (net.minecraft.world.phys.Vec3 vec32 : arrayList) {
-                    if (!net.minecraft.world.entity.vehicle.DismountHelper.canDismountTo((net.minecraft.world.level.CollisionGetter)this.level, (net.minecraft.world.phys.Vec3)vec32, (net.minecraft.world.entity.LivingEntity)livingEntity, (net.minecraft.world.entity.Pose)pose)) continue;
-                    livingEntity.setPose(pose);
-                    return vec32;
+            for (net.minecraft.world.entity.Pose $$9 : $$0.getDismountPoses()) {
+                for (net.minecraft.world.phys.Vec3 $$10 : $$6) {
+                    if (!net.minecraft.world.entity.vehicle.DismountHelper.canDismountTo((net.minecraft.world.level.CollisionGetter)this.level, (net.minecraft.world.phys.Vec3)$$10, (net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.entity.Pose)$$9)) continue;
+                    $$0.setPose($$9);
+                    return $$10;
                 }
             }
         }
-        return super.getDismountLocationForPassenger(livingEntity);
+        return super.getDismountLocationForPassenger($$0);
     }
 
-    public void clampRotation(net.minecraft.world.entity.Entity entityToUpdate) {
-        entityToUpdate.setYBodyRot(this.getYRot());
-        float f = net.minecraft.util.Mth.wrapDegrees((float)(entityToUpdate.getYRot() - this.getYRot()));
-        float f2 = net.minecraft.util.Mth.clamp((float)f, (float)-105.0f, (float)105.0f);
-        entityToUpdate.yRotO += f2 - f;
-        entityToUpdate.setYRot(entityToUpdate.getYRot() + f2 - f);
-        entityToUpdate.setYHeadRot(entityToUpdate.getYRot());
+    public void clampRotation(net.minecraft.world.entity.Entity $$0) {
+        $$0.setYBodyRot(this.getYRot());
+        float $$1 = net.minecraft.util.Mth.wrapDegrees((float)($$0.getYRot() - this.getYRot()));
+        float $$2 = net.minecraft.util.Mth.clamp((float)$$1, (float)-105.0f, (float)105.0f);
+        $$0.yRotO += $$2 - $$1;
+        $$0.setYRot($$0.getYRot() + $$2 - $$1);
+        $$0.setYHeadRot($$0.getYRot());
     }
 
-    public void onPassengerTurned(net.minecraft.world.entity.Entity entityToUpdate) {
-        this.clampRotation(entityToUpdate);
+    public void onPassengerTurned(net.minecraft.world.entity.Entity $$0) {
+        this.clampRotation($$0);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        compound.putString("Type", this.getBoatType().getName());
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        $$0.putString("Type", this.getBoatType().getName());
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        if (compound.contains("Type", 8)) {
-            this.setType(net.minecraft.world.entity.vehicle.Boat$Type.byName((java.lang.String)compound.getString("Type")));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        if ($$0.contains("Type", 8)) {
+            this.setType(net.minecraft.world.entity.vehicle.Boat$Type.byName((java.lang.String)$$0.getString("Type")));
         }
     }
 
-    public net.minecraft.world.InteractionResult interact(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        if (player.isSecondaryUseActive()) {
+    public net.minecraft.world.InteractionResult interact(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.InteractionHand $$1) {
+        if ($$0.isSecondaryUseActive()) {
             return net.minecraft.world.InteractionResult.PASS;
         }
         if (this.outOfControlTicks < 60.0f) {
             if (!this.level.isClientSide) {
-                return player.startRiding((net.minecraft.world.entity.Entity)this) ? net.minecraft.world.InteractionResult.CONSUME : net.minecraft.world.InteractionResult.PASS;
+                return $$0.startRiding((net.minecraft.world.entity.Entity)this) ? net.minecraft.world.InteractionResult.CONSUME : net.minecraft.world.InteractionResult.PASS;
             }
             return net.minecraft.world.InteractionResult.SUCCESS;
         }
         return net.minecraft.world.InteractionResult.PASS;
     }
 
-    public void checkFallDamage(double y, boolean onGround, net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.BlockPos pos) {
+    public void checkFallDamage(double $$0, boolean $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.core.BlockPos $$3) {
         this.lastYd = this.getDeltaMovement().y;
         if (this.isPassenger()) {
             return;
         }
-        if (onGround) {
+        if ($$1) {
             if (this.fallDistance > 3.0f) {
                 if (this.status != net.minecraft.world.entity.vehicle.Boat$Status.ON_LAND) {
                     this.resetFallDistance();
@@ -636,73 +624,70 @@
                 if (!this.level.isClientSide && !this.isRemoved()) {
                     this.kill();
                     if (this.level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DOENTITYDROPS)) {
-                        int n;
-                        for (n = 0;
- n < 3; ++n) {
+                        for (int $$4 = 0; $$4 < 3; ++$$4) {
                             this.spawnAtLocation((net.minecraft.world.level.ItemLike)this.getBoatType().getPlanks());
                         }
-                        for (n = 0;
- n < 2; ++n) {
+                        for (int $$5 = 0; $$5 < 2; ++$$5) {
                             this.spawnAtLocation((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.STICK);
                         }
                     }
                 }
             }
             this.resetFallDistance();
-        } else if (!this.level.getFluidState(this.blockPosition().below()).is(net.minecraft.tags.FluidTags.WATER) && y < 0.0) {
-            this.fallDistance -= (float)y;
+        } else if (!this.level.getFluidState(this.blockPosition().below()).is(net.minecraft.tags.FluidTags.WATER) && $$0 < 0.0) {
+            this.fallDistance -= (float)$$0;
         }
     }
 
-    public boolean getPaddleState(int side) {
-        return (java.lang.Boolean)this.entityData.get(side == 0 ? DATA_ID_PADDLE_LEFT : DATA_ID_PADDLE_RIGHT) != false && this.getControllingPassenger() != null;
+    public boolean getPaddleState(int $$0) {
+        return (java.lang.Boolean)this.entityData.get($$0 == 0 ? DATA_ID_PADDLE_LEFT : DATA_ID_PADDLE_RIGHT) != false && this.getControllingPassenger() != null;
     }
 
-    public void setDamage(float damageTaken) {
-        this.entityData.set(DATA_ID_DAMAGE, (java.lang.Object)java.lang.Float.valueOf((float)damageTaken));
+    public void setDamage(float $$0) {
+        this.entityData.set(DATA_ID_DAMAGE, (java.lang.Object)java.lang.Float.valueOf((float)$$0));
     }
 
     public float getDamage() {
         return ((java.lang.Float)this.entityData.get(DATA_ID_DAMAGE)).floatValue();
     }
 
-    public void setHurtTime(int hurtTime) {
-        this.entityData.set(DATA_ID_HURT, (java.lang.Object)hurtTime);
+    public void setHurtTime(int $$0) {
+        this.entityData.set(DATA_ID_HURT, (java.lang.Object)$$0);
     }
 
     public int getHurtTime() {
         return (java.lang.Integer)this.entityData.get(DATA_ID_HURT);
     }
 
-    public void setBubbleTime(int bubbleTime) {
-        this.entityData.set(DATA_ID_BUBBLE_TIME, (java.lang.Object)bubbleTime);
+    public void setBubbleTime(int $$0) {
+        this.entityData.set(DATA_ID_BUBBLE_TIME, (java.lang.Object)$$0);
     }
 
     public int getBubbleTime() {
         return (java.lang.Integer)this.entityData.get(DATA_ID_BUBBLE_TIME);
     }
 
-    public float getBubbleAngle(float partialTicks) {
-        return net.minecraft.util.Mth.lerp((float)partialTicks, (float)this.bubbleAngleO, (float)this.bubbleAngle);
+    public float getBubbleAngle(float $$0) {
+        return net.minecraft.util.Mth.lerp((float)$$0, (float)this.bubbleAngleO, (float)this.bubbleAngle);
     }
 
-    public void setHurtDir(int hurtDirection) {
-        this.entityData.set(DATA_ID_HURTDIR, (java.lang.Object)hurtDirection);
+    public void setHurtDir(int $$0) {
+        this.entityData.set(DATA_ID_HURTDIR, (java.lang.Object)$$0);
     }
 
     public int getHurtDir() {
         return (java.lang.Integer)this.entityData.get(DATA_ID_HURTDIR);
     }
 
-    public void setType(net.minecraft.world.entity.vehicle.Boat$Type boatType) {
-        this.entityData.set(DATA_ID_TYPE, (java.lang.Object)boatType.ordinal());
+    public void setType(net.minecraft.world.entity.vehicle.Boat$Type $$0) {
+        this.entityData.set(DATA_ID_TYPE, (java.lang.Object)$$0.ordinal());
     }
 
     public net.minecraft.world.entity.vehicle.Boat$Type getBoatType() {
         return net.minecraft.world.entity.vehicle.Boat$Type.byId((int)((java.lang.Integer)this.entityData.get(DATA_ID_TYPE)));
     }
 
-    public boolean canAddPassenger(net.minecraft.world.entity.Entity passenger) {
+    public boolean canAddPassenger(net.minecraft.world.entity.Entity $$0) {
         return this.getPassengers().size() < this.getMaxPassengers() && !this.isEyeInFluid(net.minecraft.tags.FluidTags.WATER);
     }
 
@@ -715,17 +700,13 @@
         return this.getFirstPassenger();
     }
 
-    public void setInput(boolean inputLeft, boolean inputRight, boolean inputUp, boolean inputDown) {
-        this.inputLeft = inputLeft;
-        this.inputRight = inputRight;
-        this.inputUp = inputUp;
-        this.inputDown = inputDown;
+    public void setInput(boolean $$0, boolean $$1, boolean $$2, boolean $$3) {
+        this.inputLeft = $$0;
+        this.inputRight = $$1;
+        this.inputUp = $$2;
+        this.inputDown = $$3;
     }
 
-    public net.minecraft.network.protocol.Packet<?> getAddEntityPacket() {
-        return new net.minecraft.network.protocol.game.ClientboundAddEntityPacket((net.minecraft.world.entity.Entity)this);
-    }
-
     public boolean isUnderWater() {
         return this.status == net.minecraft.world.entity.vehicle.Boat$Status.UNDER_WATER || this.status == net.minecraft.world.entity.vehicle.Boat$Status.UNDER_FLOWING_WATER;
     }