--- net/minecraft/world/entity/ExperienceOrb.java
+++ net/minecraft/world/entity/ExperienceOrb.java
@@ -17,12 +17,12 @@
     public int count;
     public net.minecraft.world.entity.player.Player followingPlayer;
 
-    public net.minecraft.world.entity.ExperienceOrb(net.minecraft.world.level.Level level, double x, double y, double z, int value) {
-        this(net.minecraft.world.entity.EntityType.EXPERIENCE_ORB, level);
-        this.setPos(x, y, z);
+    public net.minecraft.world.entity.ExperienceOrb(net.minecraft.world.level.Level $$0, double $$1, double $$2, double $$3, int $$4) {
+        this(net.minecraft.world.entity.EntityType.EXPERIENCE_ORB, $$0);
+        this.setPos($$1, $$2, $$3);
         this.setYRot((float)(this.random.nextDouble() * 360.0));
         this.setDeltaMovement((this.random.nextDouble() * (double)0.2f - (double)0.1f) * 2.0, this.random.nextDouble() * 0.2 * 2.0, (this.random.nextDouble() * (double)0.2f - (double)0.1f) * 2.0);
-        this.value = value;
+        this.value = $$4;
     }
 
     public net.minecraft.world.entity.ExperienceOrb(net.minecraft.world.entity.EntityType<? extends net.minecraft.world.entity.ExperienceOrb> $$0, net.minecraft.world.level.Level $$1) {
@@ -137,45 +137,45 @@
     public void doWaterSplashEffect() {
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
-        if (this.isInvulnerableTo(source)) {
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        if (this.isInvulnerableTo($$0)) {
             return false;
         }
         if (this.level.isClientSide) {
             return true;
         }
         this.markHurt();
-        this.health = (int)((float)this.health - amount);
+        this.health = (int)((float)this.health - $$1);
         if (this.health <= 0) {
             this.discard();
         }
         return true;
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        compound.putShort("Health", (short)this.health);
-        compound.putShort("Age", (short)this.age);
-        compound.putShort("Value", (short)this.value);
-        compound.putInt("Count", this.count);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        $$0.putShort("Health", (short)this.health);
+        $$0.putShort("Age", (short)this.age);
+        $$0.putShort("Value", (short)this.value);
+        $$0.putInt("Count", this.count);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        this.health = compound.getShort("Health");
-        this.age = compound.getShort("Age");
-        this.value = compound.getShort("Value");
-        this.count = java.lang.Math.max((int)compound.getInt("Count"), (int)1);
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        this.health = $$0.getShort("Health");
+        this.age = $$0.getShort("Age");
+        this.value = $$0.getShort("Value");
+        this.count = java.lang.Math.max((int)$$0.getInt("Count"), (int)1);
     }
 
-    public void playerTouch(net.minecraft.world.entity.player.Player entity) {
+    public void playerTouch(net.minecraft.world.entity.player.Player $$0) {
         if (this.level.isClientSide) {
             return;
         }
-        if (entity.takeXpDelay == 0) {
-            entity.takeXpDelay = 2;
-            entity.take((net.minecraft.world.entity.Entity)this, 1);
-            int n = this.repairPlayerItems(entity, this.value);
-            if (n > 0) {
-                entity.giveExperiencePoints(n);
+        if ($$0.takeXpDelay == 0) {
+            $$0.takeXpDelay = 2;
+            $$0.take((net.minecraft.world.entity.Entity)this, 1);
+            int $$1 = this.repairPlayerItems($$0, this.value);
+            if ($$1 > 0) {
+                $$0.giveExperiencePoints($$1);
             }
             --this.count;
             if (this.count == 0) {
@@ -199,12 +199,12 @@
         return $$1;
     }
 
-    public int durabilityToXp(int durability) {
-        return durability / 2;
+    public int durabilityToXp(int $$0) {
+        return $$0 / 2;
     }
 
-    public int xpToDurability(int xp) {
-        return xp * 2;
+    public int xpToDurability(int $$0) {
+        return $$0 * 2;
     }
 
     public int getValue() {
@@ -245,35 +245,35 @@
         return 0;
     }
 
-    public static int getExperienceValue(int expValue) {
-        if (expValue >= 2477) {
+    public static int getExperienceValue(int $$0) {
+        if ($$0 >= 2477) {
             return 2477;
         }
-        if (expValue >= 1237) {
+        if ($$0 >= 1237) {
             return 1237;
         }
-        if (expValue >= 617) {
+        if ($$0 >= 617) {
             return 617;
         }
-        if (expValue >= 307) {
+        if ($$0 >= 307) {
             return 307;
         }
-        if (expValue >= 149) {
+        if ($$0 >= 149) {
             return 149;
         }
-        if (expValue >= 73) {
+        if ($$0 >= 73) {
             return 73;
         }
-        if (expValue >= 37) {
+        if ($$0 >= 37) {
             return 37;
         }
-        if (expValue >= 17) {
+        if ($$0 >= 17) {
             return 17;
         }
-        if (expValue >= 7) {
+        if ($$0 >= 7) {
             return 7;
         }
-        if (expValue >= 3) {
+        if ($$0 >= 3) {
             return 3;
         }
         return 1;
@@ -283,7 +283,7 @@
         return false;
     }
 
-    public net.minecraft.network.protocol.Packet<?> getAddEntityPacket() {
+    public net.minecraft.network.protocol.Packet<net.minecraft.network.protocol.game.ClientGamePacketListener> getAddEntityPacket() {
         return new net.minecraft.network.protocol.game.ClientboundAddExperienceOrbPacket(this);
     }
 