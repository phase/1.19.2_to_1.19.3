--- net/minecraft/world/entity/AreaEffectCloud.java
+++ net/minecraft/world/entity/AreaEffectCloud.java
@@ -40,9 +40,9 @@
         this.setRadius(3.0f);
     }
 
-    public net.minecraft.world.entity.AreaEffectCloud(net.minecraft.world.level.Level level, double x, double y, double z) {
-        this(net.minecraft.world.entity.EntityType.AREA_EFFECT_CLOUD, level);
-        this.setPos(x, y, z);
+    public net.minecraft.world.entity.AreaEffectCloud(net.minecraft.world.level.Level $$0, double $$1, double $$2, double $$3) {
+        this(net.minecraft.world.entity.EntityType.AREA_EFFECT_CLOUD, $$0);
+        this.setPos($$1, $$2, $$3);
     }
 
     public void defineSynchedData() {
@@ -52,9 +52,9 @@
         this.getEntityData().define(DATA_PARTICLE, (java.lang.Object)net.minecraft.core.particles.ParticleTypes.ENTITY_EFFECT);
     }
 
-    public void setRadius(float radius) {
+    public void setRadius(float $$0) {
         if (!this.level.isClientSide) {
-            this.getEntityData().set(DATA_RADIUS, (java.lang.Object)java.lang.Float.valueOf((float)net.minecraft.util.Mth.clamp((float)radius, (float)0.0f, (float)32.0f)));
+            this.getEntityData().set(DATA_RADIUS, (java.lang.Object)java.lang.Float.valueOf((float)net.minecraft.util.Mth.clamp((float)$$0, (float)0.0f, (float)32.0f)));
         }
     }
 
@@ -70,8 +70,8 @@
         return ((java.lang.Float)this.getEntityData().get(DATA_RADIUS)).floatValue();
     }
 
-    public void setPotion(net.minecraft.world.item.alchemy.Potion potion) {
-        this.potion = potion;
+    public void setPotion(net.minecraft.world.item.alchemy.Potion $$0) {
+        this.potion = $$0;
         if (!this.fixedColor) {
             this.updateColor();
         }
@@ -85,8 +85,8 @@
         }
     }
 
-    public void addEffect(net.minecraft.world.effect.MobEffectInstance effectInstance) {
-        this.effects.add((java.lang.Object)effectInstance);
+    public void addEffect(net.minecraft.world.effect.MobEffectInstance $$0) {
+        this.effects.add((java.lang.Object)$$0);
         if (!this.fixedColor) {
             this.updateColor();
         }
@@ -96,21 +96,21 @@
         return (java.lang.Integer)this.getEntityData().get(DATA_COLOR);
     }
 
-    public void setFixedColor(int color) {
+    public void setFixedColor(int $$0) {
         this.fixedColor = true;
-        this.getEntityData().set(DATA_COLOR, (java.lang.Object)color);
+        this.getEntityData().set(DATA_COLOR, (java.lang.Object)$$0);
     }
 
     public net.minecraft.core.particles.ParticleOptions getParticle() {
         return (net.minecraft.core.particles.ParticleOptions)this.getEntityData().get(DATA_PARTICLE);
     }
 
-    public void setParticle(net.minecraft.core.particles.ParticleOptions particleOption) {
-        this.getEntityData().set(DATA_PARTICLE, (java.lang.Object)particleOption);
+    public void setParticle(net.minecraft.core.particles.ParticleOptions $$0) {
+        this.getEntityData().set(DATA_PARTICLE, (java.lang.Object)$$0);
     }
 
-    public void setWaiting(boolean waiting) {
-        this.getEntityData().set(DATA_WAITING, (java.lang.Object)waiting);
+    public void setWaiting(boolean $$0) {
+        this.getEntityData().set(DATA_WAITING, (java.lang.Object)$$0);
     }
 
     public boolean isWaiting() {
@@ -121,8 +121,8 @@
         return this.duration;
     }
 
-    public void setDuration(int duration) {
-        this.duration = duration;
+    public void setDuration(int $$0) {
+        this.duration = $$0;
     }
 
     public void tick() {
@@ -241,16 +241,16 @@
         return this.radiusOnUse;
     }
 
-    public void setRadiusOnUse(float radiusOnUse) {
-        this.radiusOnUse = radiusOnUse;
+    public void setRadiusOnUse(float $$0) {
+        this.radiusOnUse = $$0;
     }
 
     public float getRadiusPerTick() {
         return this.radiusPerTick;
     }
 
-    public void setRadiusPerTick(float radiusPerTick) {
-        this.radiusPerTick = radiusPerTick;
+    public void setRadiusPerTick(float $$0) {
+        this.radiusPerTick = $$0;
     }
 
     public int getDurationOnUse() {
@@ -265,13 +265,13 @@
         return this.waitTime;
     }
 
-    public void setWaitTime(int waitTime) {
-        this.waitTime = waitTime;
+    public void setWaitTime(int $$0) {
+        this.waitTime = $$0;
     }
 
-    public void setOwner(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity owner) {
-        this.owner = owner;
-        this.ownerUUID = owner == null ? null : owner.getUUID();
+    public void setOwner(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity $$0) {
+        this.owner = $$0;
+        this.ownerUUID = $$0 == null ? null : $$0.getUUID();
     }
 
     @javax.annotation.Nullable
@@ -283,76 +283,76 @@
         return this.owner;
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        this.tickCount = compound.getInt("Age");
-        this.duration = compound.getInt("Duration");
-        this.waitTime = compound.getInt("WaitTime");
-        this.reapplicationDelay = compound.getInt("ReapplicationDelay");
-        this.durationOnUse = compound.getInt("DurationOnUse");
-        this.radiusOnUse = compound.getFloat("RadiusOnUse");
-        this.radiusPerTick = compound.getFloat("RadiusPerTick");
-        this.setRadius(compound.getFloat("Radius"));
-        if (compound.hasUUID("Owner")) {
-            this.ownerUUID = compound.getUUID("Owner");
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        this.tickCount = $$0.getInt("Age");
+        this.duration = $$0.getInt("Duration");
+        this.waitTime = $$0.getInt("WaitTime");
+        this.reapplicationDelay = $$0.getInt("ReapplicationDelay");
+        this.durationOnUse = $$0.getInt("DurationOnUse");
+        this.radiusOnUse = $$0.getFloat("RadiusOnUse");
+        this.radiusPerTick = $$0.getFloat("RadiusPerTick");
+        this.setRadius($$0.getFloat("Radius"));
+        if ($$0.hasUUID("Owner")) {
+            this.ownerUUID = $$0.getUUID("Owner");
         }
-        if (compound.contains("Particle", 8)) {
+        if ($$0.contains("Particle", 8)) {
             try {
-                this.setParticle(net.minecraft.commands.arguments.ParticleArgument.readParticle((com.mojang.brigadier.StringReader)new com.mojang.brigadier.StringReader(compound.getString("Particle"))));
+                this.setParticle(net.minecraft.commands.arguments.ParticleArgument.readParticle((com.mojang.brigadier.StringReader)new com.mojang.brigadier.StringReader($$0.getString("Particle")), (net.minecraft.core.HolderLookup)net.minecraft.core.HolderLookup.forRegistry((net.minecraft.core.Registry)net.minecraft.core.Registry.PARTICLE_TYPE)));
             }
-            catch (com.mojang.brigadier.exceptions.CommandSyntaxException commandSyntaxException) {
-                LOGGER.warn("Couldn't load custom particle {}", (java.lang.Object)compound.getString("Particle"), (java.lang.Object)((java.lang.Object)commandSyntaxException));
+            catch (com.mojang.brigadier.exceptions.CommandSyntaxException $$1) {
+                LOGGER.warn("Couldn't load custom particle {}", (java.lang.Object)$$0.getString("Particle"), (java.lang.Object)((java.lang.Object)$$1));
             }
         }
-        if (compound.contains("Color", 99)) {
-            this.setFixedColor(compound.getInt("Color"));
+        if ($$0.contains("Color", 99)) {
+            this.setFixedColor($$0.getInt("Color"));
         }
-        if (compound.contains("Potion", 8)) {
-            this.setPotion(net.minecraft.world.item.alchemy.PotionUtils.getPotion((net.minecraft.nbt.CompoundTag)compound));
+        if ($$0.contains("Potion", 8)) {
+            this.setPotion(net.minecraft.world.item.alchemy.PotionUtils.getPotion((net.minecraft.nbt.CompoundTag)$$0));
         }
-        if (compound.contains("Effects", 9)) {
-            net.minecraft.nbt.ListTag listTag = compound.getList("Effects", 10);
+        if ($$0.contains("Effects", 9)) {
+            net.minecraft.nbt.ListTag $$2 = $$0.getList("Effects", 10);
             this.effects.clear();
-            for (int i = 0; i < listTag.size(); ++i) {
-                net.minecraft.world.effect.MobEffectInstance mobEffectInstance = net.minecraft.world.effect.MobEffectInstance.load((net.minecraft.nbt.CompoundTag)listTag.getCompound(i));
-                if (mobEffectInstance == null) continue;
-                this.addEffect(mobEffectInstance);
+            for (int $$3 = 0; $$3 < $$2.size(); ++$$3) {
+                net.minecraft.world.effect.MobEffectInstance $$4 = net.minecraft.world.effect.MobEffectInstance.load((net.minecraft.nbt.CompoundTag)$$2.getCompound($$3));
+                if ($$4 == null) continue;
+                this.addEffect($$4);
             }
         }
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        compound.putInt("Age", this.tickCount);
-        compound.putInt("Duration", this.duration);
-        compound.putInt("WaitTime", this.waitTime);
-        compound.putInt("ReapplicationDelay", this.reapplicationDelay);
-        compound.putInt("DurationOnUse", this.durationOnUse);
-        compound.putFloat("RadiusOnUse", this.radiusOnUse);
-        compound.putFloat("RadiusPerTick", this.radiusPerTick);
-        compound.putFloat("Radius", this.getRadius());
-        compound.putString("Particle", this.getParticle().writeToString());
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        $$0.putInt("Age", this.tickCount);
+        $$0.putInt("Duration", this.duration);
+        $$0.putInt("WaitTime", this.waitTime);
+        $$0.putInt("ReapplicationDelay", this.reapplicationDelay);
+        $$0.putInt("DurationOnUse", this.durationOnUse);
+        $$0.putFloat("RadiusOnUse", this.radiusOnUse);
+        $$0.putFloat("RadiusPerTick", this.radiusPerTick);
+        $$0.putFloat("Radius", this.getRadius());
+        $$0.putString("Particle", this.getParticle().writeToString());
         if (this.ownerUUID != null) {
-            compound.putUUID("Owner", this.ownerUUID);
+            $$0.putUUID("Owner", this.ownerUUID);
         }
         if (this.fixedColor) {
-            compound.putInt("Color", this.getColor());
+            $$0.putInt("Color", this.getColor());
         }
         if (this.potion != net.minecraft.world.item.alchemy.Potions.EMPTY) {
-            compound.putString("Potion", net.minecraft.core.Registry.POTION.getKey((java.lang.Object)this.potion).toString());
+            $$0.putString("Potion", net.minecraft.core.Registry.POTION.getKey((java.lang.Object)this.potion).toString());
         }
         if (!this.effects.isEmpty()) {
-            net.minecraft.nbt.ListTag listTag = new net.minecraft.nbt.ListTag();
-            for (net.minecraft.world.effect.MobEffectInstance mobEffectInstance : this.effects) {
-                listTag.add((java.lang.Object)mobEffectInstance.save(new net.minecraft.nbt.CompoundTag()));
+            net.minecraft.nbt.ListTag $$1 = new net.minecraft.nbt.ListTag();
+            for (net.minecraft.world.effect.MobEffectInstance $$2 : this.effects) {
+                $$1.add((java.lang.Object)$$2.save(new net.minecraft.nbt.CompoundTag()));
             }
-            compound.put("Effects", (net.minecraft.nbt.Tag)listTag);
+            $$0.put("Effects", (net.minecraft.nbt.Tag)$$1);
         }
     }
 
-    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> key) {
-        if (DATA_RADIUS.equals(key)) {
+    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> $$0) {
+        if (DATA_RADIUS.equals($$0)) {
             this.refreshDimensions();
         }
-        super.onSyncedDataUpdated(key);
+        super.onSyncedDataUpdated($$0);
     }
 
     public net.minecraft.world.item.alchemy.Potion getPotion() {
@@ -363,11 +363,7 @@
         return net.minecraft.world.level.material.PushReaction.IGNORE;
     }
 
-    public net.minecraft.network.protocol.Packet<?> getAddEntityPacket() {
-        return new net.minecraft.network.protocol.game.ClientboundAddEntityPacket((net.minecraft.world.entity.Entity)this);
-    }
-
-    public net.minecraft.world.entity.EntityDimensions getDimensions(net.minecraft.world.entity.Pose pose) {
+    public net.minecraft.world.entity.EntityDimensions getDimensions(net.minecraft.world.entity.Pose $$0) {
         return net.minecraft.world.entity.EntityDimensions.scalable((float)(this.getRadius() * 2.0f), (float)0.5f);
     }
 