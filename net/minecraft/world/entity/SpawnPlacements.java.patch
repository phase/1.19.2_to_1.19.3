--- net/minecraft/world/entity/SpawnPlacements.java
+++ net/minecraft/world/entity/SpawnPlacements.java
@@ -10,21 +10,21 @@
     public net.minecraft.world.entity.SpawnPlacements() {
     }
 
-    public static <T extends net.minecraft.world.entity.Mob> void register(net.minecraft.world.entity.EntityType<T> entityType, net.minecraft.world.entity.SpawnPlacements$Type decoratorType, net.minecraft.world.level.levelgen.Heightmap$Types heightMapType, net.minecraft.world.entity.SpawnPlacements$SpawnPredicate<T> decoratorPredicate) {
-        net.minecraft.world.entity.SpawnPlacements$Data data = (net.minecraft.world.entity.SpawnPlacements$Data)DATA_BY_TYPE.put(entityType, (java.lang.Object)new net.minecraft.world.entity.SpawnPlacements$Data(heightMapType, decoratorType, decoratorPredicate));
-        if (data != null) {
-            throw new java.lang.IllegalStateException("Duplicate registration for type " + net.minecraft.core.Registry.ENTITY_TYPE.getKey(entityType));
+    public static <T extends net.minecraft.world.entity.Mob> void register(net.minecraft.world.entity.EntityType<T> $$0, net.minecraft.world.entity.SpawnPlacements$Type $$1, net.minecraft.world.level.levelgen.Heightmap$Types $$2, net.minecraft.world.entity.SpawnPlacements$SpawnPredicate<T> $$3) {
+        net.minecraft.world.entity.SpawnPlacements$Data $$4 = (net.minecraft.world.entity.SpawnPlacements$Data)DATA_BY_TYPE.put($$0, (java.lang.Object)new net.minecraft.world.entity.SpawnPlacements$Data($$2, $$1, $$3));
+        if ($$4 != null) {
+            throw new java.lang.IllegalStateException("Duplicate registration for type " + net.minecraft.core.Registry.ENTITY_TYPE.getKey($$0));
         }
     }
 
-    public static net.minecraft.world.entity.SpawnPlacements$Type getPlacementType(net.minecraft.world.entity.EntityType<?> entityType) {
-        net.minecraft.world.entity.SpawnPlacements$Data data = (net.minecraft.world.entity.SpawnPlacements$Data)DATA_BY_TYPE.get(entityType);
-        return data == null ? net.minecraft.world.entity.SpawnPlacements$Type.NO_RESTRICTIONS : data.placement;
+    public static net.minecraft.world.entity.SpawnPlacements$Type getPlacementType(net.minecraft.world.entity.EntityType<?> $$0) {
+        net.minecraft.world.entity.SpawnPlacements$Data $$1 = (net.minecraft.world.entity.SpawnPlacements$Data)DATA_BY_TYPE.get($$0);
+        return $$1 == null ? net.minecraft.world.entity.SpawnPlacements$Type.NO_RESTRICTIONS : $$1.placement;
     }
 
-    public static net.minecraft.world.level.levelgen.Heightmap$Types getHeightmapType(@javax.annotation.Nullable net.minecraft.world.entity.EntityType<?> entityType) {
-        net.minecraft.world.entity.SpawnPlacements$Data data = (net.minecraft.world.entity.SpawnPlacements$Data)DATA_BY_TYPE.get(entityType);
-        return data == null ? net.minecraft.world.level.levelgen.Heightmap$Types.MOTION_BLOCKING_NO_LEAVES : data.heightMap;
+    public static net.minecraft.world.level.levelgen.Heightmap$Types getHeightmapType(@javax.annotation.Nullable net.minecraft.world.entity.EntityType<?> $$0) {
+        net.minecraft.world.entity.SpawnPlacements$Data $$1 = (net.minecraft.world.entity.SpawnPlacements$Data)DATA_BY_TYPE.get($$0);
+        return $$1 == null ? net.minecraft.world.level.levelgen.Heightmap$Types.MOTION_BLOCKING_NO_LEAVES : $$1.heightMap;
     }
 
     public static <T extends net.minecraft.world.entity.Entity> boolean checkSpawnRules(net.minecraft.world.entity.EntityType<T> $$0, net.minecraft.world.level.ServerLevelAccessor $$1, net.minecraft.world.entity.MobSpawnType $$2, net.minecraft.core.BlockPos $$3, net.minecraft.util.RandomSource $$4) {