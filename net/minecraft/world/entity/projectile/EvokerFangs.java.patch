--- net/minecraft/world/entity/projectile/EvokerFangs.java
+++ net/minecraft/world/entity/projectile/EvokerFangs.java
@@ -23,20 +23,20 @@
         this.lifeTicks = 22;
     }
 
-    public net.minecraft.world.entity.projectile.EvokerFangs(net.minecraft.world.level.Level level, double x, double y, double z, float yRot, int warmupDelay, net.minecraft.world.entity.LivingEntity owner) {
-        this(net.minecraft.world.entity.EntityType.EVOKER_FANGS, level);
-        this.warmupDelayTicks = warmupDelay;
-        this.setOwner(owner);
-        this.setYRot(yRot * 57.295776f);
-        this.setPos(x, y, z);
+    public net.minecraft.world.entity.projectile.EvokerFangs(net.minecraft.world.level.Level $$0, double $$1, double $$2, double $$3, float $$4, int $$5, net.minecraft.world.entity.LivingEntity $$6) {
+        this(net.minecraft.world.entity.EntityType.EVOKER_FANGS, $$0);
+        this.warmupDelayTicks = $$5;
+        this.setOwner($$6);
+        this.setYRot($$4 * 57.295776f);
+        this.setPos($$1, $$2, $$3);
     }
 
     public void defineSynchedData() {
     }
 
-    public void setOwner(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity owner) {
-        this.owner = owner;
-        this.ownerUUID = owner == null ? null : owner.getUUID();
+    public void setOwner(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity $$0) {
+        this.owner = $$0;
+        this.ownerUUID = $$0 == null ? null : $$0.getUUID();
     }
 
     @javax.annotation.Nullable
@@ -48,17 +48,17 @@
         return this.owner;
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        this.warmupDelayTicks = compound.getInt("Warmup");
-        if (compound.hasUUID("Owner")) {
-            this.ownerUUID = compound.getUUID("Owner");
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        this.warmupDelayTicks = $$0.getInt("Warmup");
+        if ($$0.hasUUID("Owner")) {
+            this.ownerUUID = $$0.getUUID("Owner");
         }
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        compound.putInt("Warmup", this.warmupDelayTicks);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        $$0.putInt("Warmup", this.warmupDelayTicks);
         if (this.ownerUUID != null) {
-            compound.putUUID("Owner", this.ownerUUID);
+            $$0.putUUID("Owner", this.ownerUUID);
         }
     }
 
@@ -96,24 +96,24 @@
         }
     }
 
-    public void dealDamageTo(net.minecraft.world.entity.LivingEntity target) {
-        net.minecraft.world.entity.LivingEntity livingEntity = this.getOwner();
-        if (!target.isAlive() || target.isInvulnerable() || target == livingEntity) {
+    public void dealDamageTo(net.minecraft.world.entity.LivingEntity $$0) {
+        net.minecraft.world.entity.LivingEntity $$1 = this.getOwner();
+        if (!$$0.isAlive() || $$0.isInvulnerable() || $$0 == $$1) {
             return;
         }
-        if (livingEntity == null) {
-            target.hurt(net.minecraft.world.damagesource.DamageSource.MAGIC, 6.0f);
+        if ($$1 == null) {
+            $$0.hurt(net.minecraft.world.damagesource.DamageSource.MAGIC, 6.0f);
         } else {
-            if (livingEntity.isAlliedTo((net.minecraft.world.entity.Entity)target)) {
+            if ($$1.isAlliedTo((net.minecraft.world.entity.Entity)$$0)) {
                 return;
             }
-            target.hurt(net.minecraft.world.damagesource.DamageSource.indirectMagic((net.minecraft.world.entity.Entity)this, (net.minecraft.world.entity.Entity)livingEntity), 6.0f);
+            $$0.hurt(net.minecraft.world.damagesource.DamageSource.indirectMagic((net.minecraft.world.entity.Entity)this, (net.minecraft.world.entity.Entity)$$1), 6.0f);
         }
     }
 
-    public void handleEntityEvent(byte id) {
-        super.handleEntityEvent(id);
-        if (id == 4) {
+    public void handleEntityEvent(byte $$0) {
+        super.handleEntityEvent($$0);
+        if ($$0 == 4) {
             this.clientSideAttackStarted = true;
             if (!this.isSilent()) {
                 this.level.playLocalSound(this.getX(), this.getY(), this.getZ(), net.minecraft.sounds.SoundEvents.EVOKER_FANGS_ATTACK, this.getSoundSource(), 1.0f, this.random.nextFloat() * 0.2f + 0.85f, false);
@@ -121,19 +121,15 @@
         }
     }
 
-    public float getAnimationProgress(float partialTicks) {
+    public float getAnimationProgress(float $$0) {
         if (!this.clientSideAttackStarted) {
             return 0.0f;
         }
-        int n = this.lifeTicks - 2;
-        if (n <= 0) {
+        int $$1 = this.lifeTicks - 2;
+        if ($$1 <= 0) {
             return 1.0f;
         }
-        return 1.0f - ((float)n - partialTicks) / 20.0f;
+        return 1.0f - ((float)$$1 - $$0) / 20.0f;
     }
-
-    public net.minecraft.network.protocol.Packet<?> getAddEntityPacket() {
-        return new net.minecraft.network.protocol.game.ClientboundAddEntityPacket((net.minecraft.world.entity.Entity)this);
-    }
 }
 