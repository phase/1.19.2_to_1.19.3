--- net/minecraft/world/entity/projectile/FishingHook.java
+++ net/minecraft/world/entity/projectile/FishingHook.java
@@ -39,25 +39,25 @@
         this($$0, $$1, 0, 0);
     }
 
-    public net.minecraft.world.entity.projectile.FishingHook(net.minecraft.world.entity.player.Player player, net.minecraft.world.level.Level level, int luck, int lureSpeed) {
-        this(net.minecraft.world.entity.EntityType.FISHING_BOBBER, level, luck, lureSpeed);
-        this.setOwner((net.minecraft.world.entity.Entity)player);
-        float f = player.getXRot();
-        float f2 = player.getYRot();
-        float f3 = net.minecraft.util.Mth.cos((float)(-f2 * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
-        float f4 = net.minecraft.util.Mth.sin((float)(-f2 * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
-        float f5 = -net.minecraft.util.Mth.cos((float)(-f * ((float)java.lang.Math.PI / 180)));
-        float f6 = net.minecraft.util.Mth.sin((float)(-f * ((float)java.lang.Math.PI / 180)));
-        double d = player.getX() - (double)f4 * 0.3;
-        double d2 = player.getEyeY();
-        double d3 = player.getZ() - (double)f3 * 0.3;
-        this.moveTo(d, d2, d3, f2, f);
-        net.minecraft.world.phys.Vec3 vec3 = new net.minecraft.world.phys.Vec3((double)(-f4), (double)net.minecraft.util.Mth.clamp((float)(-(f6 / f5)), (float)-5.0f, (float)5.0f), (double)(-f3));
-        double d4 = vec3.length();
-        vec3 = vec3.multiply(0.6 / d4 + this.random.triangle(0.5, 0.0103365), 0.6 / d4 + this.random.triangle(0.5, 0.0103365), 0.6 / d4 + this.random.triangle(0.5, 0.0103365));
-        this.setDeltaMovement(vec3);
-        this.setYRot((float)(net.minecraft.util.Mth.atan2((double)vec3.x, (double)vec3.z) * 57.2957763671875));
-        this.setXRot((float)(net.minecraft.util.Mth.atan2((double)vec3.y, (double)vec3.horizontalDistance()) * 57.2957763671875));
+    public net.minecraft.world.entity.projectile.FishingHook(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.level.Level $$1, int $$2, int $$3) {
+        this(net.minecraft.world.entity.EntityType.FISHING_BOBBER, $$1, $$2, $$3);
+        this.setOwner((net.minecraft.world.entity.Entity)$$0);
+        float $$4 = $$0.getXRot();
+        float $$5 = $$0.getYRot();
+        float $$6 = net.minecraft.util.Mth.cos((float)(-$$5 * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
+        float $$7 = net.minecraft.util.Mth.sin((float)(-$$5 * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
+        float $$8 = -net.minecraft.util.Mth.cos((float)(-$$4 * ((float)java.lang.Math.PI / 180)));
+        float $$9 = net.minecraft.util.Mth.sin((float)(-$$4 * ((float)java.lang.Math.PI / 180)));
+        double $$10 = $$0.getX() - (double)$$7 * 0.3;
+        double $$11 = $$0.getEyeY();
+        double $$12 = $$0.getZ() - (double)$$6 * 0.3;
+        this.moveTo($$10, $$11, $$12, $$5, $$4);
+        net.minecraft.world.phys.Vec3 $$13 = new net.minecraft.world.phys.Vec3((double)(-$$7), (double)net.minecraft.util.Mth.clamp((float)(-($$9 / $$8)), (float)-5.0f, (float)5.0f), (double)(-$$6));
+        double $$14 = $$13.length();
+        $$13 = $$13.multiply(0.6 / $$14 + this.random.triangle(0.5, 0.0103365), 0.6 / $$14 + this.random.triangle(0.5, 0.0103365), 0.6 / $$14 + this.random.triangle(0.5, 0.0103365));
+        this.setDeltaMovement($$13);
+        this.setYRot((float)(net.minecraft.util.Mth.atan2((double)$$13.x, (double)$$13.z) * 57.2957763671875));
+        this.setXRot((float)(net.minecraft.util.Mth.atan2((double)$$13.y, (double)$$13.horizontalDistance()) * 57.2957763671875));
         this.yRotO = this.getYRot();
         this.xRotO = this.getXRot();
     }
@@ -67,26 +67,26 @@
         this.getEntityData().define(DATA_BITING, (java.lang.Object)false);
     }
 
-    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> key) {
-        if (DATA_HOOKED_ENTITY.equals(key)) {
-            int n = (java.lang.Integer)this.getEntityData().get(DATA_HOOKED_ENTITY);
-            net.minecraft.world.entity.Entity entity = this.hookedIn = n > 0 ? this.level.getEntity(n - 1) : null;
+    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> $$0) {
+        if (DATA_HOOKED_ENTITY.equals($$0)) {
+            int $$1 = (java.lang.Integer)this.getEntityData().get(DATA_HOOKED_ENTITY);
+            net.minecraft.world.entity.Entity entity = this.hookedIn = $$1 > 0 ? this.level.getEntity($$1 - 1) : null;
         }
-        if (DATA_BITING.equals(key)) {
+        if (DATA_BITING.equals($$0)) {
             this.biting = (java.lang.Boolean)this.getEntityData().get(DATA_BITING);
             if (this.biting) {
                 this.setDeltaMovement(this.getDeltaMovement().x, (double)(-0.4f * net.minecraft.util.Mth.nextFloat((net.minecraft.util.RandomSource)this.syncronizedRandom, (float)0.6f, (float)1.0f)), this.getDeltaMovement().z);
             }
         }
-        super.onSyncedDataUpdated(key);
+        super.onSyncedDataUpdated($$0);
     }
 
-    public boolean shouldRenderAtSqrDistance(double distance) {
-        double d = 64.0;
-        return distance < 4096.0;
+    public boolean shouldRenderAtSqrDistance(double $$0) {
+        double $$1 = 64.0;
+        return $$0 < 4096.0;
     }
 
-    public void lerpTo(double x, double y, double z, float yaw, float pitch, int posRotationIncrements, boolean teleport) {
+    public void lerpTo(double $$0, double $$1, double $$2, float $$3, float $$4, int $$5, boolean $$6) {
     }
 
     public void tick() {
@@ -175,12 +175,12 @@
         this.reapplyPosition();
     }
 
-    public boolean shouldStopFishing(net.minecraft.world.entity.player.Player player) {
-        net.minecraft.world.item.ItemStack itemStack = player.getMainHandItem();
-        net.minecraft.world.item.ItemStack itemStack2 = player.getOffhandItem();
-        boolean bl = itemStack.is(net.minecraft.world.item.Items.FISHING_ROD);
-        boolean bl2 = itemStack2.is(net.minecraft.world.item.Items.FISHING_ROD);
-        if (player.isRemoved() || !player.isAlive() || !bl && !bl2 || this.distanceToSqr((net.minecraft.world.entity.Entity)player) > 1024.0) {
+    public boolean shouldStopFishing(net.minecraft.world.entity.player.Player $$0) {
+        net.minecraft.world.item.ItemStack $$1 = $$0.getMainHandItem();
+        net.minecraft.world.item.ItemStack $$2 = $$0.getOffhandItem();
+        boolean $$3 = $$1.is(net.minecraft.world.item.Items.FISHING_ROD);
+        boolean $$4 = $$2.is(net.minecraft.world.item.Items.FISHING_ROD);
+        if ($$0.isRemoved() || !$$0.isAlive() || !$$3 && !$$4 || this.distanceToSqr((net.minecraft.world.entity.Entity)$$0) > 1024.0) {
             this.discard();
             return true;
         }
@@ -192,20 +192,20 @@
         this.onHit($$0);
     }
 
-    public boolean canHitEntity(net.minecraft.world.entity.Entity target) {
-        return super.canHitEntity(target) || target.isAlive() && target instanceof net.minecraft.world.entity.item.ItemEntity;
+    public boolean canHitEntity(net.minecraft.world.entity.Entity $$0) {
+        return super.canHitEntity($$0) || $$0.isAlive() && $$0 instanceof net.minecraft.world.entity.item.ItemEntity;
     }
 
-    public void onHitEntity(net.minecraft.world.phys.EntityHitResult result) {
-        super.onHitEntity(result);
+    public void onHitEntity(net.minecraft.world.phys.EntityHitResult $$0) {
+        super.onHitEntity($$0);
         if (!this.level.isClientSide) {
-            this.setHookedEntity(result.getEntity());
+            this.setHookedEntity($$0.getEntity());
         }
     }
 
-    public void onHitBlock(net.minecraft.world.phys.BlockHitResult result) {
-        super.onHitBlock(result);
-        this.setDeltaMovement(this.getDeltaMovement().normalize().scale(result.distanceTo((net.minecraft.world.entity.Entity)this)));
+    public void onHitBlock(net.minecraft.world.phys.BlockHitResult $$0) {
+        super.onHitBlock($$0);
+        this.setDeltaMovement(this.getDeltaMovement().normalize().scale($$0.distanceTo((net.minecraft.world.entity.Entity)this)));
     }
 
     public void setHookedEntity(@javax.annotation.Nullable net.minecraft.world.entity.Entity $$0) {
@@ -213,15 +213,15 @@
         this.getEntityData().set(DATA_HOOKED_ENTITY, (java.lang.Object)($$0 == null ? 0 : $$0.getId() + 1));
     }
 
-    public void catchingFish(net.minecraft.core.BlockPos pos) {
-        net.minecraft.server.level.ServerLevel serverLevel = (net.minecraft.server.level.ServerLevel)this.level;
-        int n = 1;
-        net.minecraft.core.BlockPos blockPos = pos.above();
-        if (this.random.nextFloat() < 0.25f && this.level.isRainingAt(blockPos)) {
-            ++n;
+    public void catchingFish(net.minecraft.core.BlockPos $$0) {
+        net.minecraft.server.level.ServerLevel $$1 = (net.minecraft.server.level.ServerLevel)this.level;
+        int $$2 = 1;
+        net.minecraft.core.BlockPos $$3 = $$0.above();
+        if (this.random.nextFloat() < 0.25f && this.level.isRainingAt($$3)) {
+            ++$$2;
         }
-        if (this.random.nextFloat() < 0.5f && !this.level.canSeeSky(blockPos)) {
-            --n;
+        if (this.random.nextFloat() < 0.5f && !this.level.canSeeSky($$3)) {
+            --$$2;
         }
         if (this.nibble > 0) {
             --this.nibble;
@@ -231,52 +231,52 @@
                 this.getEntityData().set(DATA_BITING, (java.lang.Object)false);
             }
         } else if (this.timeUntilHooked > 0) {
-            this.timeUntilHooked -= n;
+            this.timeUntilHooked -= $$2;
             if (this.timeUntilHooked > 0) {
-                double d;
-                double d2;
+                double $$9;
+                double $$8;
                 this.fishAngle += (float)this.random.triangle(0.0, 9.188);
-                float f = this.fishAngle * ((float)java.lang.Math.PI / 180);
-                float f2 = net.minecraft.util.Mth.sin((float)f);
-                float f3 = net.minecraft.util.Mth.cos((float)f);
-                double d3 = this.getX() + (double)(f2 * (float)this.timeUntilHooked * 0.1f);
-                net.minecraft.world.level.block.state.BlockState blockState = serverLevel.getBlockState(new net.minecraft.core.BlockPos(d3, (d2 = (double)((float)net.minecraft.util.Mth.floor((double)this.getY()) + 1.0f)) - 1.0, d = this.getZ() + (double)(f3 * (float)this.timeUntilHooked * 0.1f)));
-                if (blockState.is(net.minecraft.world.level.block.Blocks.WATER)) {
+                float $$4 = this.fishAngle * ((float)java.lang.Math.PI / 180);
+                float $$5 = net.minecraft.util.Mth.sin((float)$$4);
+                float $$6 = net.minecraft.util.Mth.cos((float)$$4);
+                double $$7 = this.getX() + (double)($$5 * (float)this.timeUntilHooked * 0.1f);
+                net.minecraft.world.level.block.state.BlockState $$10 = $$1.getBlockState(new net.minecraft.core.BlockPos($$7, ($$8 = (double)((float)net.minecraft.util.Mth.floor((double)this.getY()) + 1.0f)) - 1.0, $$9 = this.getZ() + (double)($$6 * (float)this.timeUntilHooked * 0.1f)));
+                if ($$10.is(net.minecraft.world.level.block.Blocks.WATER)) {
                     if (this.random.nextFloat() < 0.15f) {
-                        serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.BUBBLE, d3, d2 - (double)0.1f, d, 1, (double)f2, 0.1, (double)f3, 0.0);
+                        $$1.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.BUBBLE, $$7, $$8 - (double)0.1f, $$9, 1, (double)$$5, 0.1, (double)$$6, 0.0);
                     }
-                    float f4 = f2 * 0.04f;
-                    float f5 = f3 * 0.04f;
-                    serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.FISHING, d3, d2, d, 0, (double)f5, 0.01, (double)(-f4), 1.0);
-                    serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.FISHING, d3, d2, d, 0, (double)(-f5), 0.01, (double)f4, 1.0);
+                    float $$11 = $$5 * 0.04f;
+                    float $$12 = $$6 * 0.04f;
+                    $$1.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.FISHING, $$7, $$8, $$9, 0, (double)$$12, 0.01, (double)(-$$11), 1.0);
+                    $$1.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.FISHING, $$7, $$8, $$9, 0, (double)(-$$12), 0.01, (double)$$11, 1.0);
                 }
             } else {
                 this.playSound(net.minecraft.sounds.SoundEvents.FISHING_BOBBER_SPLASH, 0.25f, 1.0f + (this.random.nextFloat() - this.random.nextFloat()) * 0.4f);
-                double d = this.getY() + 0.5;
-                serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.BUBBLE, this.getX(), d, this.getZ(), (int)(1.0f + this.getBbWidth() * 20.0f), (double)this.getBbWidth(), 0.0, (double)this.getBbWidth(), (double)0.2f);
-                serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.FISHING, this.getX(), d, this.getZ(), (int)(1.0f + this.getBbWidth() * 20.0f), (double)this.getBbWidth(), 0.0, (double)this.getBbWidth(), (double)0.2f);
+                double $$13 = this.getY() + 0.5;
+                $$1.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.BUBBLE, this.getX(), $$13, this.getZ(), (int)(1.0f + this.getBbWidth() * 20.0f), (double)this.getBbWidth(), 0.0, (double)this.getBbWidth(), (double)0.2f);
+                $$1.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.FISHING, this.getX(), $$13, this.getZ(), (int)(1.0f + this.getBbWidth() * 20.0f), (double)this.getBbWidth(), 0.0, (double)this.getBbWidth(), (double)0.2f);
                 this.nibble = net.minecraft.util.Mth.nextInt((net.minecraft.util.RandomSource)this.random, (int)20, (int)40);
                 this.getEntityData().set(DATA_BITING, (java.lang.Object)true);
             }
         } else if (this.timeUntilLured > 0) {
-            this.timeUntilLured -= n;
-            float f = 0.15f;
+            this.timeUntilLured -= $$2;
+            float $$14 = 0.15f;
             if (this.timeUntilLured < 20) {
-                f += (float)(20 - this.timeUntilLured) * 0.05f;
+                $$14 += (float)(20 - this.timeUntilLured) * 0.05f;
             } else if (this.timeUntilLured < 40) {
-                f += (float)(40 - this.timeUntilLured) * 0.02f;
+                $$14 += (float)(40 - this.timeUntilLured) * 0.02f;
             } else if (this.timeUntilLured < 60) {
-                f += (float)(60 - this.timeUntilLured) * 0.01f;
+                $$14 += (float)(60 - this.timeUntilLured) * 0.01f;
             }
-            if (this.random.nextFloat() < f) {
-                double d;
-                double d4;
-                float f6 = net.minecraft.util.Mth.nextFloat((net.minecraft.util.RandomSource)this.random, (float)0.0f, (float)360.0f) * ((float)java.lang.Math.PI / 180);
-                float f7 = net.minecraft.util.Mth.nextFloat((net.minecraft.util.RandomSource)this.random, (float)25.0f, (float)60.0f);
-                double d5 = this.getX() + (double)(net.minecraft.util.Mth.sin((float)f6) * f7) * 0.1;
-                net.minecraft.world.level.block.state.BlockState blockState = serverLevel.getBlockState(new net.minecraft.core.BlockPos(d5, (d4 = (double)((float)net.minecraft.util.Mth.floor((double)this.getY()) + 1.0f)) - 1.0, d = this.getZ() + (double)(net.minecraft.util.Mth.cos((float)f6) * f7) * 0.1));
-                if (blockState.is(net.minecraft.world.level.block.Blocks.WATER)) {
-                    serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.SPLASH, d5, d4, d, 2 + this.random.nextInt(2), (double)0.1f, 0.0, (double)0.1f, 0.0);
+            if (this.random.nextFloat() < $$14) {
+                double $$19;
+                double $$18;
+                float $$15 = net.minecraft.util.Mth.nextFloat((net.minecraft.util.RandomSource)this.random, (float)0.0f, (float)360.0f) * ((float)java.lang.Math.PI / 180);
+                float $$16 = net.minecraft.util.Mth.nextFloat((net.minecraft.util.RandomSource)this.random, (float)25.0f, (float)60.0f);
+                double $$17 = this.getX() + (double)(net.minecraft.util.Mth.sin((float)$$15) * $$16) * 0.1;
+                net.minecraft.world.level.block.state.BlockState $$20 = $$1.getBlockState(new net.minecraft.core.BlockPos($$17, ($$18 = (double)((float)net.minecraft.util.Mth.floor((double)this.getY()) + 1.0f)) - 1.0, $$19 = this.getZ() + (double)(net.minecraft.util.Mth.cos((float)$$15) * $$16) * 0.1));
+                if ($$20.is(net.minecraft.world.level.block.Blocks.WATER)) {
+                    $$1.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.SPLASH, $$17, $$18, $$19, 2 + this.random.nextInt(2), (double)0.1f, 0.0, (double)0.1f, 0.0);
                 }
             }
             if (this.timeUntilLured <= 0) {
@@ -289,39 +289,39 @@
         }
     }
 
-    public boolean calculateOpenWater(net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.entity.projectile.FishingHook$OpenWaterType openWaterType = net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID;
-        for (int i = -1; i <= 2; ++i) {
-            net.minecraft.world.entity.projectile.FishingHook$OpenWaterType openWaterType2 = this.getOpenWaterTypeForArea(pos.offset(-2, i, -2), pos.offset(2, i, 2));
-            switch (net.minecraft.world.entity.projectile.FishingHook$1.$SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType[openWaterType2.ordinal()]) {
+    public boolean calculateOpenWater(net.minecraft.core.BlockPos $$0) {
+        net.minecraft.world.entity.projectile.FishingHook$OpenWaterType $$1 = net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID;
+        for (int $$2 = -1; $$2 <= 2; ++$$2) {
+            net.minecraft.world.entity.projectile.FishingHook$OpenWaterType $$3 = this.getOpenWaterTypeForArea($$0.offset(-2, $$2, -2), $$0.offset(2, $$2, 2));
+            switch (net.minecraft.world.entity.projectile.FishingHook$1.$SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType[$$3.ordinal()]) {
                 case 1: {
                     return false;
                 }
                 case 2: {
-                    if (openWaterType != net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID) break;
+                    if ($$1 != net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID) break;
                     return false;
                 }
                 case 3: {
-                    if (openWaterType != net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.ABOVE_WATER) break;
+                    if ($$1 != net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.ABOVE_WATER) break;
                     return false;
                 }
             }
-            openWaterType = openWaterType2;
+            $$1 = $$3;
         }
         return true;
     }
 
-    public net.minecraft.world.entity.projectile.FishingHook$OpenWaterType getOpenWaterTypeForArea(net.minecraft.core.BlockPos firstPos, net.minecraft.core.BlockPos secondPos) {
-        return (net.minecraft.world.entity.projectile.FishingHook$OpenWaterType)net.minecraft.core.BlockPos.betweenClosedStream((net.minecraft.core.BlockPos)firstPos, (net.minecraft.core.BlockPos)secondPos).map(arg_0 -> this.getOpenWaterTypeForBlock(arg_0)).reduce((firstType, secondType) -> firstType == secondType ? firstType : net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID).orElse((java.lang.Object)net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID);
+    public net.minecraft.world.entity.projectile.FishingHook$OpenWaterType getOpenWaterTypeForArea(net.minecraft.core.BlockPos $$02, net.minecraft.core.BlockPos $$12) {
+        return (net.minecraft.world.entity.projectile.FishingHook$OpenWaterType)net.minecraft.core.BlockPos.betweenClosedStream((net.minecraft.core.BlockPos)$$02, (net.minecraft.core.BlockPos)$$12).map(arg_0 -> this.getOpenWaterTypeForBlock(arg_0)).reduce(($$0, $$1) -> $$0 == $$1 ? $$0 : net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID).orElse((java.lang.Object)net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID);
     }
 
-    public net.minecraft.world.entity.projectile.FishingHook$OpenWaterType getOpenWaterTypeForBlock(net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = this.level.getBlockState(pos);
-        if (blockState.isAir() || blockState.is(net.minecraft.world.level.block.Blocks.LILY_PAD)) {
+    public net.minecraft.world.entity.projectile.FishingHook$OpenWaterType getOpenWaterTypeForBlock(net.minecraft.core.BlockPos $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = this.level.getBlockState($$0);
+        if ($$1.isAir() || $$1.is(net.minecraft.world.level.block.Blocks.LILY_PAD)) {
             return net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.ABOVE_WATER;
         }
-        net.minecraft.world.level.material.FluidState fluidState = blockState.getFluidState();
-        if (fluidState.is(net.minecraft.tags.FluidTags.WATER) && fluidState.isSource() && blockState.getCollisionShape((net.minecraft.world.level.BlockGetter)this.level, pos).isEmpty()) {
+        net.minecraft.world.level.material.FluidState $$2 = $$1.getFluidState();
+        if ($$2.is(net.minecraft.tags.FluidTags.WATER) && $$2.isSource() && $$1.getCollisionShape((net.minecraft.world.level.BlockGetter)this.level, $$0).isEmpty()) {
             return net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INSIDE_WATER;
         }
         return net.minecraft.world.entity.projectile.FishingHook$OpenWaterType.INVALID;
@@ -331,54 +331,54 @@
         return this.openWater;
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
     }
 
-    public int retrieve(net.minecraft.world.item.ItemStack stack) {
-        net.minecraft.world.entity.player.Player player = this.getPlayerOwner();
-        if (this.level.isClientSide || player == null || this.shouldStopFishing(player)) {
+    public int retrieve(net.minecraft.world.item.ItemStack $$0) {
+        net.minecraft.world.entity.player.Player $$1 = this.getPlayerOwner();
+        if (this.level.isClientSide || $$1 == null || this.shouldStopFishing($$1)) {
             return 0;
         }
-        int n = 0;
+        int $$2 = 0;
         if (this.hookedIn != null) {
             this.pullEntity(this.hookedIn);
-            net.minecraft.advancements.CriteriaTriggers.FISHING_ROD_HOOKED.trigger((net.minecraft.server.level.ServerPlayer)player, stack, this, (java.util.Collection)java.util.Collections.emptyList());
+            net.minecraft.advancements.CriteriaTriggers.FISHING_ROD_HOOKED.trigger((net.minecraft.server.level.ServerPlayer)$$1, $$0, this, (java.util.Collection)java.util.Collections.emptyList());
             this.level.broadcastEntityEvent((net.minecraft.world.entity.Entity)this, (byte)31);
-            n = this.hookedIn instanceof net.minecraft.world.entity.item.ItemEntity ? 3 : 5;
+            $$2 = this.hookedIn instanceof net.minecraft.world.entity.item.ItemEntity ? 3 : 5;
         } else if (this.nibble > 0) {
-            net.minecraft.world.level.storage.loot.LootContext$Builder builder = new net.minecraft.world.level.storage.loot.LootContext$Builder((net.minecraft.server.level.ServerLevel)this.level).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.ORIGIN, (java.lang.Object)this.position()).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.TOOL, (java.lang.Object)stack).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.THIS_ENTITY, (java.lang.Object)this).withRandom(this.random).withLuck((float)this.luck + player.getLuck());
-            net.minecraft.world.level.storage.loot.LootTable lootTable = this.level.getServer().getLootTables().get(net.minecraft.world.level.storage.loot.BuiltInLootTables.FISHING);
-            it.unimi.dsi.fastutil.objects.ObjectArrayList objectArrayList = lootTable.getRandomItems(builder.create(net.minecraft.world.level.storage.loot.parameters.LootContextParamSets.FISHING));
-            net.minecraft.advancements.CriteriaTriggers.FISHING_ROD_HOOKED.trigger((net.minecraft.server.level.ServerPlayer)player, stack, this, (java.util.Collection)objectArrayList);
-            for (net.minecraft.world.item.ItemStack itemStack : objectArrayList) {
-                net.minecraft.world.entity.item.ItemEntity itemEntity = new net.minecraft.world.entity.item.ItemEntity(this.level, this.getX(), this.getY(), this.getZ(), itemStack);
-                double d = player.getX() - this.getX();
-                double d2 = player.getY() - this.getY();
-                double d3 = player.getZ() - this.getZ();
-                double d4 = 0.1;
-                itemEntity.setDeltaMovement(d * 0.1, d2 * 0.1 + java.lang.Math.sqrt((double)java.lang.Math.sqrt((double)(d * d + d2 * d2 + d3 * d3))) * 0.08, d3 * 0.1);
-                this.level.addFreshEntity((net.minecraft.world.entity.Entity)itemEntity);
-                player.level.addFreshEntity((net.minecraft.world.entity.Entity)new net.minecraft.world.entity.ExperienceOrb(player.level, player.getX(), player.getY() + 0.5, player.getZ() + 0.5, this.random.nextInt(6) + 1));
-                if (!itemStack.is(net.minecraft.tags.ItemTags.FISHES)) continue;
-                player.awardStat(net.minecraft.stats.Stats.FISH_CAUGHT, 1);
+            net.minecraft.world.level.storage.loot.LootContext$Builder $$3 = new net.minecraft.world.level.storage.loot.LootContext$Builder((net.minecraft.server.level.ServerLevel)this.level).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.ORIGIN, (java.lang.Object)this.position()).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.TOOL, (java.lang.Object)$$0).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.THIS_ENTITY, (java.lang.Object)this).withRandom(this.random).withLuck((float)this.luck + $$1.getLuck());
+            net.minecraft.world.level.storage.loot.LootTable $$4 = this.level.getServer().getLootTables().get(net.minecraft.world.level.storage.loot.BuiltInLootTables.FISHING);
+            it.unimi.dsi.fastutil.objects.ObjectArrayList $$5 = $$4.getRandomItems($$3.create(net.minecraft.world.level.storage.loot.parameters.LootContextParamSets.FISHING));
+            net.minecraft.advancements.CriteriaTriggers.FISHING_ROD_HOOKED.trigger((net.minecraft.server.level.ServerPlayer)$$1, $$0, this, (java.util.Collection)$$5);
+            for (net.minecraft.world.item.ItemStack $$6 : $$5) {
+                net.minecraft.world.entity.item.ItemEntity $$7 = new net.minecraft.world.entity.item.ItemEntity(this.level, this.getX(), this.getY(), this.getZ(), $$6);
+                double $$8 = $$1.getX() - this.getX();
+                double $$9 = $$1.getY() - this.getY();
+                double $$10 = $$1.getZ() - this.getZ();
+                double $$11 = 0.1;
+                $$7.setDeltaMovement($$8 * 0.1, $$9 * 0.1 + java.lang.Math.sqrt((double)java.lang.Math.sqrt((double)($$8 * $$8 + $$9 * $$9 + $$10 * $$10))) * 0.08, $$10 * 0.1);
+                this.level.addFreshEntity((net.minecraft.world.entity.Entity)$$7);
+                $$1.level.addFreshEntity((net.minecraft.world.entity.Entity)new net.minecraft.world.entity.ExperienceOrb($$1.level, $$1.getX(), $$1.getY() + 0.5, $$1.getZ() + 0.5, this.random.nextInt(6) + 1));
+                if (!$$6.is(net.minecraft.tags.ItemTags.FISHES)) continue;
+                $$1.awardStat(net.minecraft.stats.Stats.FISH_CAUGHT, 1);
             }
-            n = 1;
+            $$2 = 1;
         }
         if (this.onGround) {
-            n = 2;
+            $$2 = 2;
         }
         this.discard();
-        return n;
+        return $$2;
     }
 
-    public void handleEntityEvent(byte id) {
-        if (id == 31 && this.level.isClientSide && this.hookedIn instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)this.hookedIn).isLocalPlayer()) {
+    public void handleEntityEvent(byte $$0) {
+        if ($$0 == 31 && this.level.isClientSide && this.hookedIn instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)this.hookedIn).isLocalPlayer()) {
             this.pullEntity(this.hookedIn);
         }
-        super.handleEntityEvent(id);
+        super.handleEntityEvent($$0);
     }
 
     public void pullEntity(net.minecraft.world.entity.Entity $$0) {
@@ -430,7 +430,7 @@
         return false;
     }
 
-    public net.minecraft.network.protocol.Packet<?> getAddEntityPacket() {
+    public net.minecraft.network.protocol.Packet<net.minecraft.network.protocol.game.ClientGamePacketListener> getAddEntityPacket() {
         net.minecraft.world.entity.Entity $$0 = this.getOwner();
         return new net.minecraft.network.protocol.game.ClientboundAddEntityPacket((net.minecraft.world.entity.Entity)this, $$0 == null ? this.getId() : $$0.getId());
     }