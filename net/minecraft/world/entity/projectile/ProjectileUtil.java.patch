--- net/minecraft/world/entity/projectile/ProjectileUtil.java
+++ net/minecraft/world/entity/projectile/ProjectileUtil.java
@@ -8,55 +8,55 @@
     public net.minecraft.world.entity.projectile.ProjectileUtil() {
     }
 
-    public static net.minecraft.world.phys.HitResult getHitResult(net.minecraft.world.entity.Entity projectile, java.util.function.Predicate<net.minecraft.world.entity.Entity> filter) {
-        net.minecraft.world.phys.EntityHitResult entityHitResult;
-        net.minecraft.world.phys.Vec3 vec3;
-        net.minecraft.world.phys.Vec3 vec32 = projectile.getDeltaMovement();
-        net.minecraft.world.level.Level level = projectile.level;
-        net.minecraft.world.phys.Vec3 vec33 = projectile.position();
-        net.minecraft.world.phys.BlockHitResult blockHitResult = level.clip(new net.minecraft.world.level.ClipContext(vec33, vec3 = vec33.add(vec32), net.minecraft.world.level.ClipContext$Block.COLLIDER, net.minecraft.world.level.ClipContext$Fluid.NONE, projectile));
-        if (blockHitResult.getType() != net.minecraft.world.phys.HitResult$Type.MISS) {
-            vec3 = blockHitResult.getLocation();
+    public static net.minecraft.world.phys.HitResult getHitResult(net.minecraft.world.entity.Entity $$0, java.util.function.Predicate<net.minecraft.world.entity.Entity> $$1) {
+        net.minecraft.world.phys.EntityHitResult $$7;
+        net.minecraft.world.phys.Vec3 $$5;
+        net.minecraft.world.phys.Vec3 $$2 = $$0.getDeltaMovement();
+        net.minecraft.world.level.Level $$3 = $$0.level;
+        net.minecraft.world.phys.Vec3 $$4 = $$0.position();
+        net.minecraft.world.phys.BlockHitResult $$6 = $$3.clip(new net.minecraft.world.level.ClipContext($$4, $$5 = $$4.add($$2), net.minecraft.world.level.ClipContext$Block.COLLIDER, net.minecraft.world.level.ClipContext$Fluid.NONE, $$0));
+        if ($$6.getType() != net.minecraft.world.phys.HitResult$Type.MISS) {
+            $$5 = $$6.getLocation();
         }
-        if ((entityHitResult = net.minecraft.world.entity.projectile.ProjectileUtil.getEntityHitResult((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.Entity)projectile, (net.minecraft.world.phys.Vec3)vec33, (net.minecraft.world.phys.Vec3)vec3, (net.minecraft.world.phys.AABB)projectile.getBoundingBox().expandTowards(projectile.getDeltaMovement()).inflate(1.0), filter)) != null) {
-            blockHitResult = entityHitResult;
+        if (($$7 = net.minecraft.world.entity.projectile.ProjectileUtil.getEntityHitResult((net.minecraft.world.level.Level)$$3, (net.minecraft.world.entity.Entity)$$0, (net.minecraft.world.phys.Vec3)$$4, (net.minecraft.world.phys.Vec3)$$5, (net.minecraft.world.phys.AABB)$$0.getBoundingBox().expandTowards($$0.getDeltaMovement()).inflate(1.0), $$1)) != null) {
+            $$6 = $$7;
         }
-        return blockHitResult;
+        return $$6;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.phys.EntityHitResult getEntityHitResult(net.minecraft.world.entity.Entity shooter, net.minecraft.world.phys.Vec3 startVec, net.minecraft.world.phys.Vec3 endVec, net.minecraft.world.phys.AABB boundingBox, java.util.function.Predicate<net.minecraft.world.entity.Entity> filter, double distance) {
-        net.minecraft.world.level.Level level = shooter.level;
-        double d = distance;
-        net.minecraft.world.entity.Entity entity = null;
-        net.minecraft.world.phys.Vec3 vec3 = null;
-        for (net.minecraft.world.entity.Entity entity2 : level.getEntities(shooter, boundingBox, filter)) {
-            net.minecraft.world.phys.Vec3 vec32;
-            double d2;
-            net.minecraft.world.phys.AABB aABB = entity2.getBoundingBox().inflate((double)entity2.getPickRadius());
-            java.util.Optional optional = aABB.clip(startVec, endVec);
-            if (aABB.contains(startVec)) {
-                if (!(d >= 0.0)) continue;
-                entity = entity2;
-                vec3 = (net.minecraft.world.phys.Vec3)optional.orElse((java.lang.Object)startVec);
-                d = 0.0;
+    public static net.minecraft.world.phys.EntityHitResult getEntityHitResult(net.minecraft.world.entity.Entity $$0, net.minecraft.world.phys.Vec3 $$1, net.minecraft.world.phys.Vec3 $$2, net.minecraft.world.phys.AABB $$3, java.util.function.Predicate<net.minecraft.world.entity.Entity> $$4, double $$5) {
+        net.minecraft.world.level.Level $$6 = $$0.level;
+        double $$7 = $$5;
+        net.minecraft.world.entity.Entity $$8 = null;
+        net.minecraft.world.phys.Vec3 $$9 = null;
+        for (net.minecraft.world.entity.Entity $$10 : $$6.getEntities($$0, $$3, $$4)) {
+            net.minecraft.world.phys.Vec3 $$13;
+            double $$14;
+            net.minecraft.world.phys.AABB $$11 = $$10.getBoundingBox().inflate((double)$$10.getPickRadius());
+            java.util.Optional $$12 = $$11.clip($$1, $$2);
+            if ($$11.contains($$1)) {
+                if (!($$7 >= 0.0)) continue;
+                $$8 = $$10;
+                $$9 = (net.minecraft.world.phys.Vec3)$$12.orElse((java.lang.Object)$$1);
+                $$7 = 0.0;
                 continue;
             }
-            if (!optional.isPresent() || !((d2 = startVec.distanceToSqr(vec32 = (net.minecraft.world.phys.Vec3)optional.get())) < d) && d != 0.0) continue;
-            if (entity2.getRootVehicle() == shooter.getRootVehicle()) {
-                if (d != 0.0) continue;
-                entity = entity2;
-                vec3 = vec32;
+            if (!$$12.isPresent() || !(($$14 = $$1.distanceToSqr($$13 = (net.minecraft.world.phys.Vec3)$$12.get())) < $$7) && $$7 != 0.0) continue;
+            if ($$10.getRootVehicle() == $$0.getRootVehicle()) {
+                if ($$7 != 0.0) continue;
+                $$8 = $$10;
+                $$9 = $$13;
                 continue;
             }
-            entity = entity2;
-            vec3 = vec32;
-            d = d2;
+            $$8 = $$10;
+            $$9 = $$13;
+            $$7 = $$14;
         }
-        if (entity == null) {
+        if ($$8 == null) {
             return null;
         }
-        return new net.minecraft.world.phys.EntityHitResult(entity, vec3);
+        return new net.minecraft.world.phys.EntityHitResult($$8, $$9);
     }
 
     @javax.annotation.Nullable
@@ -65,59 +65,59 @@
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.phys.EntityHitResult getEntityHitResult(net.minecraft.world.level.Level level, net.minecraft.world.entity.Entity projectile, net.minecraft.world.phys.Vec3 startVec, net.minecraft.world.phys.Vec3 endVec, net.minecraft.world.phys.AABB boundingBox, java.util.function.Predicate<net.minecraft.world.entity.Entity> filter, float distance) {
-        double d = java.lang.Double.MAX_VALUE;
-        net.minecraft.world.entity.Entity entity = null;
-        for (net.minecraft.world.entity.Entity entity2 : level.getEntities(projectile, boundingBox, filter)) {
-            double d2;
-            net.minecraft.world.phys.AABB aABB = entity2.getBoundingBox().inflate((double)distance);
-            java.util.Optional optional = aABB.clip(startVec, endVec);
-            if (!optional.isPresent() || !((d2 = startVec.distanceToSqr((net.minecraft.world.phys.Vec3)optional.get())) < d)) continue;
-            entity = entity2;
-            d = d2;
+    public static net.minecraft.world.phys.EntityHitResult getEntityHitResult(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.Entity $$1, net.minecraft.world.phys.Vec3 $$2, net.minecraft.world.phys.Vec3 $$3, net.minecraft.world.phys.AABB $$4, java.util.function.Predicate<net.minecraft.world.entity.Entity> $$5, float $$6) {
+        double $$7 = java.lang.Double.MAX_VALUE;
+        net.minecraft.world.entity.Entity $$8 = null;
+        for (net.minecraft.world.entity.Entity $$9 : $$0.getEntities($$1, $$4, $$5)) {
+            double $$12;
+            net.minecraft.world.phys.AABB $$10 = $$9.getBoundingBox().inflate((double)$$6);
+            java.util.Optional $$11 = $$10.clip($$2, $$3);
+            if (!$$11.isPresent() || !(($$12 = $$2.distanceToSqr((net.minecraft.world.phys.Vec3)$$11.get())) < $$7)) continue;
+            $$8 = $$9;
+            $$7 = $$12;
         }
-        if (entity == null) {
+        if ($$8 == null) {
             return null;
         }
-        return new net.minecraft.world.phys.EntityHitResult(entity);
+        return new net.minecraft.world.phys.EntityHitResult($$8);
     }
 
-    public static void rotateTowardsMovement(net.minecraft.world.entity.Entity projectile, float rotationSpeed) {
-        net.minecraft.world.phys.Vec3 vec3 = projectile.getDeltaMovement();
-        if (vec3.lengthSqr() == 0.0) {
+    public static void rotateTowardsMovement(net.minecraft.world.entity.Entity $$0, float $$1) {
+        net.minecraft.world.phys.Vec3 $$2 = $$0.getDeltaMovement();
+        if ($$2.lengthSqr() == 0.0) {
             return;
         }
-        double d = vec3.horizontalDistance();
-        projectile.setYRot((float)(net.minecraft.util.Mth.atan2((double)vec3.z, (double)vec3.x) * 57.2957763671875) + 90.0f);
-        projectile.setXRot((float)(net.minecraft.util.Mth.atan2((double)d, (double)vec3.y) * 57.2957763671875) - 90.0f);
-        while (projectile.getXRot() - projectile.xRotO < -180.0f) {
-            projectile.xRotO -= 360.0f;
+        double $$3 = $$2.horizontalDistance();
+        $$0.setYRot((float)(net.minecraft.util.Mth.atan2((double)$$2.z, (double)$$2.x) * 57.2957763671875) + 90.0f);
+        $$0.setXRot((float)(net.minecraft.util.Mth.atan2((double)$$3, (double)$$2.y) * 57.2957763671875) - 90.0f);
+        while ($$0.getXRot() - $$0.xRotO < -180.0f) {
+            $$0.xRotO -= 360.0f;
         }
-        while (projectile.getXRot() - projectile.xRotO >= 180.0f) {
-            projectile.xRotO += 360.0f;
+        while ($$0.getXRot() - $$0.xRotO >= 180.0f) {
+            $$0.xRotO += 360.0f;
         }
-        while (projectile.getYRot() - projectile.yRotO < -180.0f) {
-            projectile.yRotO -= 360.0f;
+        while ($$0.getYRot() - $$0.yRotO < -180.0f) {
+            $$0.yRotO -= 360.0f;
         }
-        while (projectile.getYRot() - projectile.yRotO >= 180.0f) {
-            projectile.yRotO += 360.0f;
+        while ($$0.getYRot() - $$0.yRotO >= 180.0f) {
+            $$0.yRotO += 360.0f;
         }
-        projectile.setXRot(net.minecraft.util.Mth.lerp((float)rotationSpeed, (float)projectile.xRotO, (float)projectile.getXRot()));
-        projectile.setYRot(net.minecraft.util.Mth.lerp((float)rotationSpeed, (float)projectile.yRotO, (float)projectile.getYRot()));
+        $$0.setXRot(net.minecraft.util.Mth.lerp((float)$$1, (float)$$0.xRotO, (float)$$0.getXRot()));
+        $$0.setYRot(net.minecraft.util.Mth.lerp((float)$$1, (float)$$0.yRotO, (float)$$0.getYRot()));
     }
 
-    public static net.minecraft.world.InteractionHand getWeaponHoldingHand(net.minecraft.world.entity.LivingEntity shooter, net.minecraft.world.item.Item weapon) {
-        return shooter.getMainHandItem().is(weapon) ? net.minecraft.world.InteractionHand.MAIN_HAND : net.minecraft.world.InteractionHand.OFF_HAND;
+    public static net.minecraft.world.InteractionHand getWeaponHoldingHand(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.item.Item $$1) {
+        return $$0.getMainHandItem().is($$1) ? net.minecraft.world.InteractionHand.MAIN_HAND : net.minecraft.world.InteractionHand.OFF_HAND;
     }
 
-    public static net.minecraft.world.entity.projectile.AbstractArrow getMobArrow(net.minecraft.world.entity.LivingEntity shooter, net.minecraft.world.item.ItemStack arrowStack, float velocity) {
-        net.minecraft.world.item.ArrowItem arrowItem = (net.minecraft.world.item.ArrowItem)(arrowStack.getItem() instanceof net.minecraft.world.item.ArrowItem ? arrowStack.getItem() : net.minecraft.world.item.Items.ARROW);
-        net.minecraft.world.entity.projectile.AbstractArrow abstractArrow = arrowItem.createArrow(shooter.level, arrowStack, shooter);
-        abstractArrow.setEnchantmentEffectsFromEntity(shooter, velocity);
-        if (arrowStack.is(net.minecraft.world.item.Items.TIPPED_ARROW) && abstractArrow instanceof net.minecraft.world.entity.projectile.Arrow) {
-            ((net.minecraft.world.entity.projectile.Arrow)abstractArrow).setEffectsFromItem(arrowStack);
+    public static net.minecraft.world.entity.projectile.AbstractArrow getMobArrow(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.item.ItemStack $$1, float $$2) {
+        net.minecraft.world.item.ArrowItem $$3 = (net.minecraft.world.item.ArrowItem)($$1.getItem() instanceof net.minecraft.world.item.ArrowItem ? $$1.getItem() : net.minecraft.world.item.Items.ARROW);
+        net.minecraft.world.entity.projectile.AbstractArrow $$4 = $$3.createArrow($$0.level, $$1, $$0);
+        $$4.setEnchantmentEffectsFromEntity($$0, $$2);
+        if ($$1.is(net.minecraft.world.item.Items.TIPPED_ARROW) && $$4 instanceof net.minecraft.world.entity.projectile.Arrow) {
+            ((net.minecraft.world.entity.projectile.Arrow)$$4).setEffectsFromItem($$1);
         }
-        return abstractArrow;
+        return $$4;
     }
 }
 