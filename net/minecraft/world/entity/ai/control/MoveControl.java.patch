--- net/minecraft/world/entity/ai/control/MoveControl.java
+++ net/minecraft/world/entity/ai/control/MoveControl.java
@@ -31,20 +31,20 @@
         return this.speedModifier;
     }
 
-    public void setWantedPosition(double x, double y, double z, double speed) {
-        this.wantedX = x;
-        this.wantedY = y;
-        this.wantedZ = z;
-        this.speedModifier = speed;
+    public void setWantedPosition(double $$0, double $$1, double $$2, double $$3) {
+        this.wantedX = $$0;
+        this.wantedY = $$1;
+        this.wantedZ = $$2;
+        this.speedModifier = $$3;
         if (this.operation != net.minecraft.world.entity.ai.control.MoveControl$Operation.JUMPING) {
             this.operation = net.minecraft.world.entity.ai.control.MoveControl$Operation.MOVE_TO;
         }
     }
 
-    public void strafe(float forward, float strafe) {
+    public void strafe(float $$0, float $$1) {
         this.operation = net.minecraft.world.entity.ai.control.MoveControl$Operation.STRAFE;
-        this.strafeForwards = forward;
-        this.strafeRight = strafe;
+        this.strafeForwards = $$0;
+        this.strafeRight = $$1;
         this.speedModifier = 0.25;
     }
 
@@ -107,21 +107,21 @@
         return $$2 == null || ($$3 = $$2.getNodeEvaluator()) == null || $$3.getBlockPathType((net.minecraft.world.level.BlockGetter)this.mob.level, net.minecraft.util.Mth.floor((double)(this.mob.getX() + (double)$$0)), this.mob.getBlockY(), net.minecraft.util.Mth.floor((double)(this.mob.getZ() + (double)$$1))) == net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE;
     }
 
-    public float rotlerp(float sourceAngle, float targetAngle, float maximumChange) {
-        float f;
-        float f2 = net.minecraft.util.Mth.wrapDegrees((float)(targetAngle - sourceAngle));
-        if (f2 > maximumChange) {
-            f2 = maximumChange;
+    public float rotlerp(float $$0, float $$1, float $$2) {
+        float $$4;
+        float $$3 = net.minecraft.util.Mth.wrapDegrees((float)($$1 - $$0));
+        if ($$3 > $$2) {
+            $$3 = $$2;
         }
-        if (f2 < -maximumChange) {
-            f2 = -maximumChange;
+        if ($$3 < -$$2) {
+            $$3 = -$$2;
         }
-        if ((f = sourceAngle + f2) < 0.0f) {
-            f += 360.0f;
-        } else if (f > 360.0f) {
-            f -= 360.0f;
+        if (($$4 = $$0 + $$3) < 0.0f) {
+            $$4 += 360.0f;
+        } else if ($$4 > 360.0f) {
+            $$4 -= 360.0f;
         }
-        return f;
+        return $$4;
     }
 
     public double getWantedX() {