--- net/minecraft/world/entity/ai/goal/FollowOwnerGoal.java
+++ net/minecraft/world/entity/ai/goal/FollowOwnerGoal.java
@@ -103,33 +103,33 @@
         }
     }
 
-    public boolean maybeTeleportTo(int x, int y, int z) {
-        if (java.lang.Math.abs((double)((double)x - this.owner.getX())) < 2.0 && java.lang.Math.abs((double)((double)z - this.owner.getZ())) < 2.0) {
+    public boolean maybeTeleportTo(int $$0, int $$1, int $$2) {
+        if (java.lang.Math.abs((double)((double)$$0 - this.owner.getX())) < 2.0 && java.lang.Math.abs((double)((double)$$2 - this.owner.getZ())) < 2.0) {
             return false;
         }
-        if (!this.canTeleportTo(new net.minecraft.core.BlockPos(x, y, z))) {
+        if (!this.canTeleportTo(new net.minecraft.core.BlockPos($$0, $$1, $$2))) {
             return false;
         }
-        this.tamable.moveTo((double)x + 0.5, (double)y, (double)z + 0.5, this.tamable.getYRot(), this.tamable.getXRot());
+        this.tamable.moveTo((double)$$0 + 0.5, (double)$$1, (double)$$2 + 0.5, this.tamable.getYRot(), this.tamable.getXRot());
         this.navigation.stop();
         return true;
     }
 
-    public boolean canTeleportTo(net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes = net.minecraft.world.level.pathfinder.WalkNodeEvaluator.getBlockPathTypeStatic((net.minecraft.world.level.BlockGetter)this.level, (net.minecraft.core.BlockPos$MutableBlockPos)pos.mutable());
-        if (blockPathTypes != net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE) {
+    public boolean canTeleportTo(net.minecraft.core.BlockPos $$0) {
+        net.minecraft.world.level.pathfinder.BlockPathTypes $$1 = net.minecraft.world.level.pathfinder.WalkNodeEvaluator.getBlockPathTypeStatic((net.minecraft.world.level.BlockGetter)this.level, (net.minecraft.core.BlockPos$MutableBlockPos)$$0.mutable());
+        if ($$1 != net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE) {
             return false;
         }
-        net.minecraft.world.level.block.state.BlockState blockState = this.level.getBlockState(pos.below());
-        if (!this.canFly && blockState.getBlock() instanceof net.minecraft.world.level.block.LeavesBlock) {
+        net.minecraft.world.level.block.state.BlockState $$2 = this.level.getBlockState($$0.below());
+        if (!this.canFly && $$2.getBlock() instanceof net.minecraft.world.level.block.LeavesBlock) {
             return false;
         }
-        net.minecraft.core.BlockPos blockPos = pos.subtract((net.minecraft.core.Vec3i)this.tamable.blockPosition());
-        return this.level.noCollision((net.minecraft.world.entity.Entity)this.tamable, this.tamable.getBoundingBox().move(blockPos));
+        net.minecraft.core.BlockPos $$3 = $$0.subtract((net.minecraft.core.Vec3i)this.tamable.blockPosition());
+        return this.level.noCollision((net.minecraft.world.entity.Entity)this.tamable, this.tamable.getBoundingBox().move($$3));
     }
 
-    public int randomIntInclusive(int min, int max) {
-        return this.tamable.getRandom().nextInt(max - min + 1) + min;
+    public int randomIntInclusive(int $$0, int $$1) {
+        return this.tamable.getRandom().nextInt($$1 - $$0 + 1) + $$0;
     }
 }
 