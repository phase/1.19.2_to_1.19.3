--- net/minecraft/world/entity/ai/navigation/FlyingPathNavigation.java
+++ net/minecraft/world/entity/ai/navigation/FlyingPathNavigation.java
@@ -10,10 +10,10 @@
         super($$0, $$1);
     }
 
-    public net.minecraft.world.level.pathfinder.PathFinder createPathFinder(int maxVisitedNodes) {
+    public net.minecraft.world.level.pathfinder.PathFinder createPathFinder(int $$0) {
         this.nodeEvaluator = new net.minecraft.world.level.pathfinder.FlyNodeEvaluator();
         this.nodeEvaluator.setCanPassDoors(true);
-        return new net.minecraft.world.level.pathfinder.PathFinder(this.nodeEvaluator, maxVisitedNodes);
+        return new net.minecraft.world.level.pathfinder.PathFinder(this.nodeEvaluator, $$0);
     }
 
     public boolean canUpdatePath() {
@@ -24,8 +24,8 @@
         return this.mob.position();
     }
 
-    public net.minecraft.world.level.pathfinder.Path createPath(net.minecraft.world.entity.Entity entity, int n) {
-        return this.createPath(entity.blockPosition(), n);
+    public net.minecraft.world.level.pathfinder.Path createPath(net.minecraft.world.entity.Entity $$0, int $$1) {
+        return this.createPath($$0.blockPosition(), $$1);
     }
 
     public void tick() {
@@ -52,24 +52,24 @@
         this.mob.getMoveControl().setWantedPosition($$1.x, $$1.y, $$1.z, this.speedModifier);
     }
 
-    public void setCanOpenDoors(boolean canOpenDoors) {
-        this.nodeEvaluator.setCanOpenDoors(canOpenDoors);
+    public void setCanOpenDoors(boolean $$0) {
+        this.nodeEvaluator.setCanOpenDoors($$0);
     }
 
     public boolean canPassDoors() {
         return this.nodeEvaluator.canPassDoors();
     }
 
-    public void setCanPassDoors(boolean canEnterDoors) {
-        this.nodeEvaluator.setCanPassDoors(canEnterDoors);
+    public void setCanPassDoors(boolean $$0) {
+        this.nodeEvaluator.setCanPassDoors($$0);
     }
 
     public boolean canOpenDoors() {
         return this.nodeEvaluator.canPassDoors();
     }
 
-    public boolean isStableDestination(net.minecraft.core.BlockPos pos) {
-        return this.level.getBlockState(pos).entityCanStandOn((net.minecraft.world.level.BlockGetter)this.level, pos, (net.minecraft.world.entity.Entity)this.mob);
+    public boolean isStableDestination(net.minecraft.core.BlockPos $$0) {
+        return this.level.getBlockState($$0).entityCanStandOn((net.minecraft.world.level.BlockGetter)this.level, $$0, (net.minecraft.world.entity.Entity)this.mob);
     }
 }
 