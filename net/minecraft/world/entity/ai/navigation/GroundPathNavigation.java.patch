--- net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
+++ net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
@@ -12,10 +12,10 @@
         super($$0, $$1);
     }
 
-    public net.minecraft.world.level.pathfinder.PathFinder createPathFinder(int maxVisitedNodes) {
+    public net.minecraft.world.level.pathfinder.PathFinder createPathFinder(int $$0) {
         this.nodeEvaluator = new net.minecraft.world.level.pathfinder.WalkNodeEvaluator();
         this.nodeEvaluator.setCanPassDoors(true);
-        return new net.minecraft.world.level.pathfinder.PathFinder(this.nodeEvaluator, maxVisitedNodes);
+        return new net.minecraft.world.level.pathfinder.PathFinder(this.nodeEvaluator, $$0);
     }
 
     public boolean canUpdatePath() {
@@ -26,33 +26,32 @@
         return new net.minecraft.world.phys.Vec3(this.mob.getX(), (double)this.getSurfaceY(), this.mob.getZ());
     }
 
-    public net.minecraft.world.level.pathfinder.Path createPath(net.minecraft.core.BlockPos pos, int accuracy) {
-        net.minecraft.core.BlockPos blockPos;
-        if (this.level.getBlockState(pos).isAir()) {
-            blockPos = pos.below();
-            while (blockPos.getY() > this.level.getMinBuildHeight() && this.level.getBlockState(blockPos).isAir()) {
-                blockPos = blockPos.below();
+    public net.minecraft.world.level.pathfinder.Path createPath(net.minecraft.core.BlockPos $$0, int $$1) {
+        if (this.level.getBlockState($$0).isAir()) {
+            net.minecraft.core.BlockPos $$2 = $$0.below();
+            while ($$2.getY() > this.level.getMinBuildHeight() && this.level.getBlockState($$2).isAir()) {
+                $$2 = $$2.below();
             }
-            if (blockPos.getY() > this.level.getMinBuildHeight()) {
-                return super.createPath(blockPos.above(), accuracy);
+            if ($$2.getY() > this.level.getMinBuildHeight()) {
+                return super.createPath($$2.above(), $$1);
             }
-            while (blockPos.getY() < this.level.getMaxBuildHeight() && this.level.getBlockState(blockPos).isAir()) {
-                blockPos = blockPos.above();
+            while ($$2.getY() < this.level.getMaxBuildHeight() && this.level.getBlockState($$2).isAir()) {
+                $$2 = $$2.above();
             }
-            pos = blockPos;
+            $$0 = $$2;
         }
-        if (this.level.getBlockState(pos).getMaterial().isSolid()) {
-            blockPos = pos.above();
-            while (blockPos.getY() < this.level.getMaxBuildHeight() && this.level.getBlockState(blockPos).getMaterial().isSolid()) {
-                blockPos = blockPos.above();
+        if (this.level.getBlockState($$0).getMaterial().isSolid()) {
+            net.minecraft.core.BlockPos $$3 = $$0.above();
+            while ($$3.getY() < this.level.getMaxBuildHeight() && this.level.getBlockState($$3).getMaterial().isSolid()) {
+                $$3 = $$3.above();
             }
-            return super.createPath(blockPos, accuracy);
+            return super.createPath($$3, $$1);
         }
-        return super.createPath(pos, accuracy);
+        return super.createPath($$0, $$1);
     }
 
-    public net.minecraft.world.level.pathfinder.Path createPath(net.minecraft.world.entity.Entity entity, int n) {
-        return this.createPath(entity.blockPosition(), n);
+    public net.minecraft.world.level.pathfinder.Path createPath(net.minecraft.world.entity.Entity $$0, int $$1) {
+        return this.createPath($$0.blockPosition(), $$1);
     }
 
     public int getSurfaceY() {
@@ -85,18 +84,18 @@
         }
     }
 
-    public boolean hasValidPathType(net.minecraft.world.level.pathfinder.BlockPathTypes pathType) {
-        if (pathType == net.minecraft.world.level.pathfinder.BlockPathTypes.WATER) {
+    public boolean hasValidPathType(net.minecraft.world.level.pathfinder.BlockPathTypes $$0) {
+        if ($$0 == net.minecraft.world.level.pathfinder.BlockPathTypes.WATER) {
             return false;
         }
-        if (pathType == net.minecraft.world.level.pathfinder.BlockPathTypes.LAVA) {
+        if ($$0 == net.minecraft.world.level.pathfinder.BlockPathTypes.LAVA) {
             return false;
         }
-        return pathType != net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN;
+        return $$0 != net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN;
     }
 
-    public void setCanOpenDoors(boolean canBreakDoors) {
-        this.nodeEvaluator.setCanOpenDoors(canBreakDoors);
+    public void setCanOpenDoors(boolean $$0) {
+        this.nodeEvaluator.setCanOpenDoors($$0);
     }
 
     public boolean canPassDoors() {
@@ -111,8 +110,8 @@
         return this.nodeEvaluator.canPassDoors();
     }
 
-    public void setAvoidSun(boolean avoidSun) {
-        this.avoidSun = avoidSun;
+    public void setAvoidSun(boolean $$0) {
+        this.avoidSun = $$0;
     }
 }
 