--- net/minecraft/world/entity/ai/attributes/AttributeInstance.java
+++ net/minecraft/world/entity/ai/attributes/AttributeInstance.java
@@ -32,16 +32,16 @@
         return this.baseValue;
     }
 
-    public void setBaseValue(double baseValue) {
-        if (baseValue == this.baseValue) {
+    public void setBaseValue(double $$0) {
+        if ($$0 == this.baseValue) {
             return;
         }
-        this.baseValue = baseValue;
+        this.baseValue = $$0;
         this.setDirty();
     }
 
-    public java.util.Set<net.minecraft.world.entity.ai.attributes.AttributeModifier> getModifiers(net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation operation) {
-        return (java.util.Set)this.modifiersByOperation.computeIfAbsent((java.lang.Object)operation, $$0 -> com.google.common.collect.Sets.newHashSet());
+    public java.util.Set<net.minecraft.world.entity.ai.attributes.AttributeModifier> getModifiers(net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation $$02) {
+        return (java.util.Set)this.modifiersByOperation.computeIfAbsent((java.lang.Object)$$02, $$0 -> com.google.common.collect.Sets.newHashSet());
     }
 
     public java.util.Set<net.minecraft.world.entity.ai.attributes.AttributeModifier> getModifiers() {
@@ -49,30 +49,30 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.ai.attributes.AttributeModifier getModifier(java.util.UUID uuid) {
-        return (net.minecraft.world.entity.ai.attributes.AttributeModifier)this.modifierById.get((java.lang.Object)uuid);
+    public net.minecraft.world.entity.ai.attributes.AttributeModifier getModifier(java.util.UUID $$0) {
+        return (net.minecraft.world.entity.ai.attributes.AttributeModifier)this.modifierById.get((java.lang.Object)$$0);
     }
 
-    public boolean hasModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier modifier) {
-        return this.modifierById.get((java.lang.Object)modifier.getId()) != null;
+    public boolean hasModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier $$0) {
+        return this.modifierById.get((java.lang.Object)$$0.getId()) != null;
     }
 
-    public void addModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier modifier) {
-        net.minecraft.world.entity.ai.attributes.AttributeModifier attributeModifier = (net.minecraft.world.entity.ai.attributes.AttributeModifier)this.modifierById.putIfAbsent((java.lang.Object)modifier.getId(), (java.lang.Object)modifier);
-        if (attributeModifier != null) {
+    public void addModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier $$0) {
+        net.minecraft.world.entity.ai.attributes.AttributeModifier $$1 = (net.minecraft.world.entity.ai.attributes.AttributeModifier)this.modifierById.putIfAbsent((java.lang.Object)$$0.getId(), (java.lang.Object)$$0);
+        if ($$1 != null) {
             throw new java.lang.IllegalArgumentException("Modifier is already applied on this attribute!");
         }
-        this.getModifiers(modifier.getOperation()).add((java.lang.Object)modifier);
+        this.getModifiers($$0.getOperation()).add((java.lang.Object)$$0);
         this.setDirty();
     }
 
-    public void addTransientModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier modifier) {
-        this.addModifier(modifier);
+    public void addTransientModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier $$0) {
+        this.addModifier($$0);
     }
 
-    public void addPermanentModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier modifier) {
-        this.addModifier(modifier);
-        this.permanentModifiers.add((java.lang.Object)modifier);
+    public void addPermanentModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier $$0) {
+        this.addModifier($$0);
+        this.permanentModifiers.add((java.lang.Object)$$0);
     }
 
     public void setDirty() {
@@ -80,24 +80,24 @@
         this.onDirty.accept((java.lang.Object)this);
     }
 
-    public void removeModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier modifier) {
-        this.getModifiers(modifier.getOperation()).remove((java.lang.Object)modifier);
-        this.modifierById.remove((java.lang.Object)modifier.getId());
-        this.permanentModifiers.remove((java.lang.Object)modifier);
+    public void removeModifier(net.minecraft.world.entity.ai.attributes.AttributeModifier $$0) {
+        this.getModifiers($$0.getOperation()).remove((java.lang.Object)$$0);
+        this.modifierById.remove((java.lang.Object)$$0.getId());
+        this.permanentModifiers.remove((java.lang.Object)$$0);
         this.setDirty();
     }
 
-    public void removeModifier(java.util.UUID identifier) {
-        net.minecraft.world.entity.ai.attributes.AttributeModifier attributeModifier = this.getModifier(identifier);
-        if (attributeModifier != null) {
-            this.removeModifier(attributeModifier);
+    public void removeModifier(java.util.UUID $$0) {
+        net.minecraft.world.entity.ai.attributes.AttributeModifier $$1 = this.getModifier($$0);
+        if ($$1 != null) {
+            this.removeModifier($$1);
         }
     }
 
-    public boolean removePermanentModifier(java.util.UUID identifier) {
-        net.minecraft.world.entity.ai.attributes.AttributeModifier attributeModifier = this.getModifier(identifier);
-        if (attributeModifier != null && this.permanentModifiers.contains((java.lang.Object)attributeModifier)) {
-            this.removeModifier(attributeModifier);
+    public boolean removePermanentModifier(java.util.UUID $$0) {
+        net.minecraft.world.entity.ai.attributes.AttributeModifier $$1 = this.getModifier($$0);
+        if ($$1 != null && this.permanentModifiers.contains((java.lang.Object)$$1)) {
+            this.removeModifier($$1);
             return true;
         }
         return false;
@@ -132,18 +132,18 @@
         return this.attribute.sanitizeValue($$2);
     }
 
-    public java.util.Collection<net.minecraft.world.entity.ai.attributes.AttributeModifier> getModifiersOrEmpty(net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation operation) {
-        return (java.util.Collection)this.modifiersByOperation.getOrDefault((java.lang.Object)operation, (java.lang.Object)java.util.Collections.emptySet());
+    public java.util.Collection<net.minecraft.world.entity.ai.attributes.AttributeModifier> getModifiersOrEmpty(net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation $$0) {
+        return (java.util.Collection)this.modifiersByOperation.getOrDefault((java.lang.Object)$$0, (java.lang.Object)java.util.Collections.emptySet());
     }
 
-    public void replaceFrom(net.minecraft.world.entity.ai.attributes.AttributeInstance instance) {
-        this.baseValue = instance.baseValue;
+    public void replaceFrom(net.minecraft.world.entity.ai.attributes.AttributeInstance $$02) {
+        this.baseValue = $$02.baseValue;
         this.modifierById.clear();
-        this.modifierById.putAll(instance.modifierById);
+        this.modifierById.putAll($$02.modifierById);
         this.permanentModifiers.clear();
-        this.permanentModifiers.addAll((java.util.Collection)instance.permanentModifiers);
+        this.permanentModifiers.addAll((java.util.Collection)$$02.permanentModifiers);
         this.modifiersByOperation.clear();
-        instance.modifiersByOperation.forEach(($$0, $$1) -> this.getModifiers($$0).addAll((java.util.Collection)$$1));
+        $$02.modifiersByOperation.forEach(($$0, $$1) -> this.getModifiers($$0).addAll((java.util.Collection)$$1));
         this.setDirty();
     }
 
@@ -161,16 +161,16 @@
         return $$0;
     }
 
-    public void load(net.minecraft.nbt.CompoundTag nbt) {
-        this.baseValue = nbt.getDouble("Base");
-        if (nbt.contains("Modifiers", 9)) {
-            net.minecraft.nbt.ListTag listTag = nbt.getList("Modifiers", 10);
-            for (int i = 0; i < listTag.size(); ++i) {
-                net.minecraft.world.entity.ai.attributes.AttributeModifier attributeModifier = net.minecraft.world.entity.ai.attributes.AttributeModifier.load((net.minecraft.nbt.CompoundTag)listTag.getCompound(i));
-                if (attributeModifier == null) continue;
-                this.modifierById.put((java.lang.Object)attributeModifier.getId(), (java.lang.Object)attributeModifier);
-                this.getModifiers(attributeModifier.getOperation()).add((java.lang.Object)attributeModifier);
-                this.permanentModifiers.add((java.lang.Object)attributeModifier);
+    public void load(net.minecraft.nbt.CompoundTag $$0) {
+        this.baseValue = $$0.getDouble("Base");
+        if ($$0.contains("Modifiers", 9)) {
+            net.minecraft.nbt.ListTag $$1 = $$0.getList("Modifiers", 10);
+            for (int $$2 = 0; $$2 < $$1.size(); ++$$2) {
+                net.minecraft.world.entity.ai.attributes.AttributeModifier $$3 = net.minecraft.world.entity.ai.attributes.AttributeModifier.load((net.minecraft.nbt.CompoundTag)$$1.getCompound($$2));
+                if ($$3 == null) continue;
+                this.modifierById.put((java.lang.Object)$$3.getId(), (java.lang.Object)$$3);
+                this.getModifiers($$3.getOperation()).add((java.lang.Object)$$3);
+                this.permanentModifiers.add((java.lang.Object)$$3);
             }
         }
         this.setDirty();