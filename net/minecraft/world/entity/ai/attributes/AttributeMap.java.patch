--- net/minecraft/world/entity/ai/attributes/AttributeMap.java
+++ net/minecraft/world/entity/ai/attributes/AttributeMap.java
@@ -16,9 +16,9 @@
         this.supplier = $$0;
     }
 
-    public void onAttributeModified(net.minecraft.world.entity.ai.attributes.AttributeInstance instance) {
-        if (instance.getAttribute().isClientSyncable()) {
-            this.dirtyAttributes.add((java.lang.Object)instance);
+    public void onAttributeModified(net.minecraft.world.entity.ai.attributes.AttributeInstance $$0) {
+        if ($$0.getAttribute().isClientSyncable()) {
+            this.dirtyAttributes.add((java.lang.Object)$$0);
         }
     }
 
@@ -31,36 +31,53 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.ai.attributes.AttributeInstance getInstance(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        return (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.computeIfAbsent((java.lang.Object)attribute, $$0 -> this.supplier.createInstance(arg_0 -> this.onAttributeModified(arg_0), $$0));
+    public net.minecraft.world.entity.ai.attributes.AttributeInstance getInstance(net.minecraft.world.entity.ai.attributes.Attribute $$02) {
+        return (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.computeIfAbsent((java.lang.Object)$$02, $$0 -> this.supplier.createInstance(arg_0 -> this.onAttributeModified(arg_0), $$0));
     }
 
-    public boolean hasAttribute(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        return this.attributes.get((java.lang.Object)attribute) != null || this.supplier.hasAttribute(attribute);
+    @javax.annotation.Nullable
+    public net.minecraft.world.entity.ai.attributes.AttributeInstance getInstance(net.minecraft.core.Holder<net.minecraft.world.entity.ai.attributes.Attribute> $$0) {
+        return this.getInstance((net.minecraft.world.entity.ai.attributes.Attribute)$$0.value());
     }
 
-    public boolean hasModifier(net.minecraft.world.entity.ai.attributes.Attribute attribute, java.util.UUID uuid) {
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)attribute);
-        return attributeInstance != null ? attributeInstance.getModifier(uuid) != null : this.supplier.hasModifier(attribute, uuid);
+    public boolean hasAttribute(net.minecraft.world.entity.ai.attributes.Attribute $$0) {
+        return this.attributes.get((java.lang.Object)$$0) != null || this.supplier.hasAttribute($$0);
     }
 
-    public double getValue(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)attribute);
-        return attributeInstance != null ? attributeInstance.getValue() : this.supplier.getValue(attribute);
+    public boolean hasAttribute(net.minecraft.core.Holder<net.minecraft.world.entity.ai.attributes.Attribute> $$0) {
+        return this.hasAttribute((net.minecraft.world.entity.ai.attributes.Attribute)$$0.value());
     }
 
-    public double getBaseValue(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)attribute);
-        return attributeInstance != null ? attributeInstance.getBaseValue() : this.supplier.getBaseValue(attribute);
+    public boolean hasModifier(net.minecraft.world.entity.ai.attributes.Attribute $$0, java.util.UUID $$1) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$2 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)$$0);
+        return $$2 != null ? $$2.getModifier($$1) != null : this.supplier.hasModifier($$0, $$1);
     }
 
-    public double getModifierValue(net.minecraft.world.entity.ai.attributes.Attribute attribute, java.util.UUID uuid) {
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)attribute);
-        return attributeInstance != null ? attributeInstance.getModifier(uuid).getAmount() : this.supplier.getModifierValue(attribute, uuid);
+    public boolean hasModifier(net.minecraft.core.Holder<net.minecraft.world.entity.ai.attributes.Attribute> $$0, java.util.UUID $$1) {
+        return this.hasModifier((net.minecraft.world.entity.ai.attributes.Attribute)$$0.value(), $$1);
     }
 
-    public void removeAttributeModifiers(com.google.common.collect.Multimap<net.minecraft.world.entity.ai.attributes.Attribute, net.minecraft.world.entity.ai.attributes.AttributeModifier> map) {
-        map.asMap().forEach(($$0, $$1) -> {
+    public double getValue(net.minecraft.world.entity.ai.attributes.Attribute $$0) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$1 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)$$0);
+        return $$1 != null ? $$1.getValue() : this.supplier.getValue($$0);
+    }
+
+    public double getBaseValue(net.minecraft.world.entity.ai.attributes.Attribute $$0) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$1 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)$$0);
+        return $$1 != null ? $$1.getBaseValue() : this.supplier.getBaseValue($$0);
+    }
+
+    public double getModifierValue(net.minecraft.world.entity.ai.attributes.Attribute $$0, java.util.UUID $$1) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$2 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get((java.lang.Object)$$0);
+        return $$2 != null ? $$2.getModifier($$1).getAmount() : this.supplier.getModifierValue($$0, $$1);
+    }
+
+    public double getModifierValue(net.minecraft.core.Holder<net.minecraft.world.entity.ai.attributes.Attribute> $$0, java.util.UUID $$1) {
+        return this.getModifierValue((net.minecraft.world.entity.ai.attributes.Attribute)$$0.value(), $$1);
+    }
+
+    public void removeAttributeModifiers(com.google.common.collect.Multimap<net.minecraft.world.entity.ai.attributes.Attribute, net.minecraft.world.entity.ai.attributes.AttributeModifier> $$02) {
+        $$02.asMap().forEach(($$0, $$1) -> {
             net.minecraft.world.entity.ai.attributes.AttributeInstance $$2 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.attributes.get($$0);
             if ($$2 != null) {
                 $$1.forEach(arg_0 -> ((net.minecraft.world.entity.ai.attributes.AttributeInstance)$$2).removeModifier(arg_0));
@@ -68,8 +85,8 @@
         });
     }
 
-    public void addTransientAttributeModifiers(com.google.common.collect.Multimap<net.minecraft.world.entity.ai.attributes.Attribute, net.minecraft.world.entity.ai.attributes.AttributeModifier> map) {
-        map.forEach(($$0, $$1) -> {
+    public void addTransientAttributeModifiers(com.google.common.collect.Multimap<net.minecraft.world.entity.ai.attributes.Attribute, net.minecraft.world.entity.ai.attributes.AttributeModifier> $$02) {
+        $$02.forEach(($$0, $$1) -> {
             net.minecraft.world.entity.ai.attributes.AttributeInstance $$2 = this.getInstance($$0);
             if ($$2 != null) {
                 $$2.removeModifier($$1);
@@ -78,8 +95,8 @@
         });
     }
 
-    public void assignValues(net.minecraft.world.entity.ai.attributes.AttributeMap manager) {
-        manager.attributes.values().forEach($$0 -> {
+    public void assignValues(net.minecraft.world.entity.ai.attributes.AttributeMap $$02) {
+        $$02.attributes.values().forEach($$0 -> {
             net.minecraft.world.entity.ai.attributes.AttributeInstance $$1 = this.getInstance($$0.getAttribute());
             if ($$1 != null) {
                 $$1.replaceFrom($$0);
@@ -95,16 +112,16 @@
         return $$0;
     }
 
-    public void load(net.minecraft.nbt.ListTag nbt) {
-        for (int i = 0; i < nbt.size(); ++i) {
-            net.minecraft.nbt.CompoundTag compoundTag = nbt.getCompound(i);
-            java.lang.String string = compoundTag.getString("Name");
-            net.minecraft.Util.ifElse((java.util.Optional)net.minecraft.core.Registry.ATTRIBUTE.getOptional(net.minecraft.resources.ResourceLocation.tryParse((java.lang.String)string)), $$1 -> {
+    public void load(net.minecraft.nbt.ListTag $$0) {
+        for (int $$12 = 0; $$12 < $$0.size(); ++$$12) {
+            net.minecraft.nbt.CompoundTag $$2 = $$0.getCompound($$12);
+            java.lang.String $$3 = $$2.getString("Name");
+            net.minecraft.Util.ifElse((java.util.Optional)net.minecraft.core.Registry.ATTRIBUTE.getOptional(net.minecraft.resources.ResourceLocation.tryParse((java.lang.String)$$3)), $$1 -> {
                 net.minecraft.world.entity.ai.attributes.AttributeInstance $$2 = this.getInstance($$1);
                 if ($$2 != null) {
-                    $$2.load(compoundTag);
+                    $$2.load($$2);
                 }
-            }, () -> LOGGER.warn("Ignoring unknown attribute '{}'", (java.lang.Object)string));
+            }, () -> LOGGER.warn("Ignoring unknown attribute '{}'", (java.lang.Object)$$3));
         }
     }
 