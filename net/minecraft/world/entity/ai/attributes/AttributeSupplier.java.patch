--- net/minecraft/world/entity/ai/attributes/AttributeSupplier.java
+++ net/minecraft/world/entity/ai/attributes/AttributeSupplier.java
@@ -11,52 +11,52 @@
         this.instances = com.google.common.collect.ImmutableMap.copyOf($$0);
     }
 
-    public net.minecraft.world.entity.ai.attributes.AttributeInstance getAttributeInstance(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.instances.get((java.lang.Object)attribute);
-        if (attributeInstance == null) {
-            throw new java.lang.IllegalArgumentException("Can't find attribute " + net.minecraft.core.Registry.ATTRIBUTE.getKey((java.lang.Object)attribute));
+    public net.minecraft.world.entity.ai.attributes.AttributeInstance getAttributeInstance(net.minecraft.world.entity.ai.attributes.Attribute $$0) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$1 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.instances.get((java.lang.Object)$$0);
+        if ($$1 == null) {
+            throw new java.lang.IllegalArgumentException("Can't find attribute " + net.minecraft.core.Registry.ATTRIBUTE.getKey((java.lang.Object)$$0));
         }
-        return attributeInstance;
+        return $$1;
     }
 
-    public double getValue(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        return this.getAttributeInstance(attribute).getValue();
+    public double getValue(net.minecraft.world.entity.ai.attributes.Attribute $$0) {
+        return this.getAttributeInstance($$0).getValue();
     }
 
-    public double getBaseValue(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        return this.getAttributeInstance(attribute).getBaseValue();
+    public double getBaseValue(net.minecraft.world.entity.ai.attributes.Attribute $$0) {
+        return this.getAttributeInstance($$0).getBaseValue();
     }
 
-    public double getModifierValue(net.minecraft.world.entity.ai.attributes.Attribute attribute, java.util.UUID id) {
-        net.minecraft.world.entity.ai.attributes.AttributeModifier attributeModifier = this.getAttributeInstance(attribute).getModifier(id);
-        if (attributeModifier == null) {
-            throw new java.lang.IllegalArgumentException("Can't find modifier " + id + " on attribute " + net.minecraft.core.Registry.ATTRIBUTE.getKey((java.lang.Object)attribute));
+    public double getModifierValue(net.minecraft.world.entity.ai.attributes.Attribute $$0, java.util.UUID $$1) {
+        net.minecraft.world.entity.ai.attributes.AttributeModifier $$2 = this.getAttributeInstance($$0).getModifier($$1);
+        if ($$2 == null) {
+            throw new java.lang.IllegalArgumentException("Can't find modifier " + $$1 + " on attribute " + net.minecraft.core.Registry.ATTRIBUTE.getKey((java.lang.Object)$$0));
         }
-        return attributeModifier.getAmount();
+        return $$2.getAmount();
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.ai.attributes.AttributeInstance createInstance(java.util.function.Consumer<net.minecraft.world.entity.ai.attributes.AttributeInstance> onChangedCallback, net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.instances.get((java.lang.Object)attribute);
-        if (attributeInstance == null) {
+    public net.minecraft.world.entity.ai.attributes.AttributeInstance createInstance(java.util.function.Consumer<net.minecraft.world.entity.ai.attributes.AttributeInstance> $$0, net.minecraft.world.entity.ai.attributes.Attribute $$1) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$2 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.instances.get((java.lang.Object)$$1);
+        if ($$2 == null) {
             return null;
         }
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance2 = new net.minecraft.world.entity.ai.attributes.AttributeInstance(attribute, onChangedCallback);
-        attributeInstance2.replaceFrom(attributeInstance);
-        return attributeInstance2;
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$3 = new net.minecraft.world.entity.ai.attributes.AttributeInstance($$1, $$0);
+        $$3.replaceFrom($$2);
+        return $$3;
     }
 
     public static net.minecraft.world.entity.ai.attributes.AttributeSupplier$Builder builder() {
         return new net.minecraft.world.entity.ai.attributes.AttributeSupplier$Builder();
     }
 
-    public boolean hasAttribute(net.minecraft.world.entity.ai.attributes.Attribute attribute) {
-        return this.instances.containsKey((java.lang.Object)attribute);
+    public boolean hasAttribute(net.minecraft.world.entity.ai.attributes.Attribute $$0) {
+        return this.instances.containsKey((java.lang.Object)$$0);
     }
 
-    public boolean hasModifier(net.minecraft.world.entity.ai.attributes.Attribute attribute, java.util.UUID id) {
-        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeInstance = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.instances.get((java.lang.Object)attribute);
-        return attributeInstance != null && attributeInstance.getModifier(id) != null;
+    public boolean hasModifier(net.minecraft.world.entity.ai.attributes.Attribute $$0, java.util.UUID $$1) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance $$2 = (net.minecraft.world.entity.ai.attributes.AttributeInstance)this.instances.get((java.lang.Object)$$0);
+        return $$2 != null && $$2.getModifier($$1) != null;
     }
 }
 