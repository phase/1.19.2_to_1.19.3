--- net/minecraft/world/entity/ai/behavior/WorkAtPoi.java
+++ net/minecraft/world/entity/ai/behavior/WorkAtPoi.java
@@ -14,39 +14,39 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.REGISTERED));
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner) {
-        if (level.getGameTime() - this.lastCheck < 300L) {
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        if ($$0.getGameTime() - this.lastCheck < 300L) {
             return false;
         }
-        if (level.random.nextInt(2) != 0) {
+        if ($$0.random.nextInt(2) != 0) {
             return false;
         }
-        this.lastCheck = level.getGameTime();
-        net.minecraft.core.GlobalPos globalPos = (net.minecraft.core.GlobalPos)owner.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE).get();
-        return globalPos.dimension() == level.dimension() && globalPos.pos().closerToCenterThan((net.minecraft.core.Position)owner.position(), 1.73);
+        this.lastCheck = $$0.getGameTime();
+        net.minecraft.core.GlobalPos $$2 = (net.minecraft.core.GlobalPos)$$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE).get();
+        return $$2.dimension() == $$0.dimension() && $$2.pos().closerToCenterThan((net.minecraft.core.Position)$$1.position(), 1.73);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LAST_WORKED_AT_POI, (java.lang.Object)gameTime);
-        brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE).ifPresent($$1 -> brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.BlockPosTracker($$1.pos())));
-        entity.playWorkSound();
-        this.useWorkstation(level, entity);
-        if (entity.shouldRestock()) {
-            entity.restock();
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$12, long $$2) {
+        net.minecraft.world.entity.ai.Brain $$3 = $$12.getBrain();
+        $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LAST_WORKED_AT_POI, (java.lang.Object)$$2);
+        $$3.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE).ifPresent($$1 -> $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.BlockPosTracker($$1.pos())));
+        $$12.playWorkSound();
+        this.useWorkstation($$0, $$12);
+        if ($$12.shouldRestock()) {
+            $$12.restock();
         }
     }
 
-    public void useWorkstation(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager villager) {
+    public void useWorkstation(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        java.util.Optional optional = entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE);
-        if (!optional.isPresent()) {
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        java.util.Optional $$3 = $$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE);
+        if (!$$3.isPresent()) {
             return false;
         }
-        net.minecraft.core.GlobalPos globalPos = (net.minecraft.core.GlobalPos)optional.get();
-        return globalPos.dimension() == level.dimension() && globalPos.pos().closerToCenterThan((net.minecraft.core.Position)entity.position(), 1.73);
+        net.minecraft.core.GlobalPos $$4 = (net.minecraft.core.GlobalPos)$$3.get();
+        return $$4.dimension() == $$0.dimension() && $$4.pos().closerToCenterThan((net.minecraft.core.Position)$$1.position(), 1.73);
     }
 
     public /* synthetic */ boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.LivingEntity livingEntity) {