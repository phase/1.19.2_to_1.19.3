--- net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer.java
+++ net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer.java
@@ -20,43 +20,43 @@
         this.displayItems = com.google.common.collect.Lists.newArrayList();
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner) {
-        net.minecraft.world.entity.ai.Brain brain = owner.getBrain();
-        if (!brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET).isPresent()) {
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        net.minecraft.world.entity.ai.Brain $$2 = $$1.getBrain();
+        if (!$$2.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET).isPresent()) {
             return false;
         }
-        net.minecraft.world.entity.LivingEntity livingEntity = (net.minecraft.world.entity.LivingEntity)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET).get();
-        return livingEntity.getType() == net.minecraft.world.entity.EntityType.PLAYER && owner.isAlive() && livingEntity.isAlive() && !owner.isBaby() && owner.distanceToSqr((net.minecraft.world.entity.Entity)livingEntity) <= 17.0;
+        net.minecraft.world.entity.LivingEntity $$3 = (net.minecraft.world.entity.LivingEntity)$$2.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET).get();
+        return $$3.getType() == net.minecraft.world.entity.EntityType.PLAYER && $$1.isAlive() && $$3.isAlive() && !$$1.isBaby() && $$1.distanceToSqr((net.minecraft.world.entity.Entity)$$3) <= 17.0;
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        return this.checkExtraStartConditions(level, entity) && this.lookTime > 0 && entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET).isPresent();
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        return this.checkExtraStartConditions($$0, $$1) && this.lookTime > 0 && $$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET).isPresent();
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        super.start(level, (net.minecraft.world.entity.LivingEntity)entity, gameTime);
-        this.lookAtTarget(entity);
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        super.start($$0, (net.minecraft.world.entity.LivingEntity)$$1, $$2);
+        this.lookAtTarget($$1);
         this.cycleCounter = 0;
         this.displayIndex = 0;
         this.lookTime = 40;
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner, long gameTime) {
-        net.minecraft.world.entity.LivingEntity livingEntity = this.lookAtTarget(owner);
-        this.findItemsToDisplay(livingEntity, owner);
+    public void tick(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        net.minecraft.world.entity.LivingEntity $$3 = this.lookAtTarget($$1);
+        this.findItemsToDisplay($$3, $$1);
         if (!this.displayItems.isEmpty()) {
-            this.displayCyclingItems(owner);
+            this.displayCyclingItems($$1);
         } else {
-            net.minecraft.world.entity.ai.behavior.ShowTradesToPlayer.clearHeldItem((net.minecraft.world.entity.npc.Villager)owner);
+            net.minecraft.world.entity.ai.behavior.ShowTradesToPlayer.clearHeldItem((net.minecraft.world.entity.npc.Villager)$$1);
             this.lookTime = java.lang.Math.min((int)this.lookTime, (int)40);
         }
         --this.lookTime;
     }
 
-    public void stop(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        super.stop(level, (net.minecraft.world.entity.LivingEntity)entity, gameTime);
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
-        net.minecraft.world.entity.ai.behavior.ShowTradesToPlayer.clearHeldItem((net.minecraft.world.entity.npc.Villager)entity);
+    public void stop(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        super.stop($$0, (net.minecraft.world.entity.LivingEntity)$$1, $$2);
+        $$1.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
+        net.minecraft.world.entity.ai.behavior.ShowTradesToPlayer.clearHeldItem((net.minecraft.world.entity.npc.Villager)$$1);
         this.playerItemStack = null;
     }
 