--- net/minecraft/world/entity/ai/behavior/BackUpIfTooClose.java
+++ net/minecraft/world/entity/ai/behavior/BackUpIfTooClose.java
@@ -15,26 +15,26 @@
         this.strafeSpeed = $$1;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, E owner) {
-        return this.isTargetVisible(owner) && this.isTargetTooClose(owner);
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, E $$1) {
+        return this.isTargetVisible($$1) && this.isTargetTooClose($$1);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
-        entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)this.getTarget(entity), true));
-        entity.getMoveControl().strafe(-this.strafeSpeed, 0.0f);
-        entity.setYRot(net.minecraft.util.Mth.rotateIfNecessary((float)entity.getYRot(), (float)((net.minecraft.world.entity.Mob)entity).yHeadRot, (float)0.0f));
+    public void start(net.minecraft.server.level.ServerLevel $$0, E $$1, long $$2) {
+        $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)this.getTarget($$1), true));
+        $$1.getMoveControl().strafe(-this.strafeSpeed, 0.0f);
+        $$1.setYRot(net.minecraft.util.Mth.rotateIfNecessary((float)$$1.getYRot(), (float)((net.minecraft.world.entity.Mob)$$1).yHeadRot, (float)0.0f));
     }
 
-    public boolean isTargetVisible(E mob) {
-        return ((net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)mob.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).get()).contains(this.getTarget(mob));
+    public boolean isTargetVisible(E $$0) {
+        return ((net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)$$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).get()).contains(this.getTarget($$0));
     }
 
-    public boolean isTargetTooClose(E mob) {
-        return this.getTarget(mob).closerThan(mob, (double)this.tooCloseDistance);
+    public boolean isTargetTooClose(E $$0) {
+        return this.getTarget($$0).closerThan($$0, (double)this.tooCloseDistance);
     }
 
-    public net.minecraft.world.entity.LivingEntity getTarget(E mob) {
-        return (net.minecraft.world.entity.LivingEntity)mob.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET).get();
+    public net.minecraft.world.entity.LivingEntity getTarget(E $$0) {
+        return (net.minecraft.world.entity.LivingEntity)$$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET).get();
     }
 }
 