--- net/minecraft/world/entity/ai/behavior/Swim.java
+++ net/minecraft/world/entity/ai/behavior/Swim.java
@@ -13,17 +13,17 @@
         this.chance = $$0;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob owner) {
-        return owner.isInWater() && owner.getFluidHeight(net.minecraft.tags.FluidTags.WATER) > owner.getFluidJumpThreshold() || owner.isInLava();
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1) {
+        return $$1.isInWater() && $$1.getFluidHeight(net.minecraft.tags.FluidTags.WATER) > $$1.getFluidJumpThreshold() || $$1.isInLava();
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob entity, long gameTime) {
-        return this.checkExtraStartConditions(level, entity);
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        return this.checkExtraStartConditions($$0, $$1);
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob owner, long gameTime) {
-        if (owner.getRandom().nextFloat() < this.chance) {
-            owner.getJumpControl().jump();
+    public void tick(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        if ($$1.getRandom().nextFloat() < this.chance) {
+            $$1.getJumpControl().jump();
         }
     }
 