--- net/minecraft/world/entity/ai/behavior/GoToClosestVillage.java
+++ net/minecraft/world/entity/ai/behavior/GoToClosestVillage.java
@@ -15,27 +15,27 @@
         this.closeEnoughDistance = $$1;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner) {
-        return !level.isVillage(owner.blockPosition());
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        return !$$0.isVillage($$1.blockPosition());
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        net.minecraft.world.entity.ai.village.poi.PoiManager poiManager = level.getPoiManager();
-        int n = poiManager.sectionsToVillage(net.minecraft.core.SectionPos.of((net.minecraft.core.BlockPos)entity.blockPosition()));
-        net.minecraft.world.phys.Vec3 vec3 = null;
-        for (int i = 0; i < 5; ++i) {
-            net.minecraft.world.phys.Vec3 vec32 = net.minecraft.world.entity.ai.util.LandRandomPos.getPos((net.minecraft.world.entity.PathfinderMob)entity, (int)15, (int)7, $$1 -> -poiManager.sectionsToVillage(net.minecraft.core.SectionPos.of((net.minecraft.core.BlockPos)$$1)));
-            if (vec32 == null) continue;
-            int n2 = poiManager.sectionsToVillage(net.minecraft.core.SectionPos.of((net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos(vec32)));
-            if (n2 < n) {
-                vec3 = vec32;
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$12, long $$2) {
+        net.minecraft.world.entity.ai.village.poi.PoiManager $$3 = $$0.getPoiManager();
+        int $$4 = $$3.sectionsToVillage(net.minecraft.core.SectionPos.of((net.minecraft.core.BlockPos)$$12.blockPosition()));
+        net.minecraft.world.phys.Vec3 $$5 = null;
+        for (int $$6 = 0; $$6 < 5; ++$$6) {
+            net.minecraft.world.phys.Vec3 $$7 = net.minecraft.world.entity.ai.util.LandRandomPos.getPos((net.minecraft.world.entity.PathfinderMob)$$12, (int)15, (int)7, $$1 -> -$$3.sectionsToVillage(net.minecraft.core.SectionPos.of((net.minecraft.core.BlockPos)$$1)));
+            if ($$7 == null) continue;
+            int $$8 = $$3.sectionsToVillage(net.minecraft.core.SectionPos.of((net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos($$7)));
+            if ($$8 < $$4) {
+                $$5 = $$7;
                 break;
             }
-            if (n2 != n) continue;
-            vec3 = vec32;
+            if ($$8 != $$4) continue;
+            $$5 = $$7;
         }
-        if (vec3 != null) {
-            entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget(vec3, this.speedModifier, this.closeEnoughDistance));
+        if ($$5 != null) {
+            $$12.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$5, this.speedModifier, this.closeEnoughDistance));
         }
     }
 }