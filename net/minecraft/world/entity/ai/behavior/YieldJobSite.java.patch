--- net/minecraft/world/entity/ai/behavior/YieldJobSite.java
+++ net/minecraft/world/entity/ai/behavior/YieldJobSite.java
@@ -13,20 +13,20 @@
         this.speedModifier = $$0;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner) {
-        if (owner.isBaby()) {
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        if ($$1.isBaby()) {
             return false;
         }
-        return owner.getVillagerData().getProfession() == net.minecraft.world.entity.npc.VillagerProfession.NONE;
+        return $$1.getVillagerData().getProfession() == net.minecraft.world.entity.npc.VillagerProfession.NONE;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        net.minecraft.core.BlockPos blockPos = ((net.minecraft.core.GlobalPos)entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE).get()).pos();
-        java.util.Optional optional = level.getPoiManager().getType(blockPos);
-        if (!optional.isPresent()) {
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$22) {
+        net.minecraft.core.BlockPos $$32 = ((net.minecraft.core.GlobalPos)$$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE).get()).pos();
+        java.util.Optional $$4 = $$0.getPoiManager().getType($$32);
+        if (!$$4.isPresent()) {
             return;
         }
-        net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearbyVillagersWithCondition((net.minecraft.world.entity.npc.Villager)entity, $$2 -> this.nearbyWantsJobsite((net.minecraft.core.Holder)optional.get(), $$2, blockPos)).findFirst().ifPresent($$3 -> this.yieldJobSite(level, entity, $$3, blockPos, $$3.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE).isPresent()));
+        net.minecraft.world.entity.ai.behavior.BehaviorUtils.getNearbyVillagersWithCondition((net.minecraft.world.entity.npc.Villager)$$1, $$2 -> this.nearbyWantsJobsite((net.minecraft.core.Holder)$$4.get(), $$2, $$32)).findFirst().ifPresent($$3 -> this.yieldJobSite($$0, $$1, $$3, $$32, $$3.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE).isPresent()));
     }
 
     public boolean nearbyWantsJobsite(net.minecraft.core.Holder<net.minecraft.world.entity.ai.village.poi.PoiType> $$0, net.minecraft.world.entity.npc.Villager $$1, net.minecraft.core.BlockPos $$2) {