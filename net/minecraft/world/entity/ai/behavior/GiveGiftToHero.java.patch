--- net/minecraft/world/entity/ai/behavior/GiveGiftToHero.java
+++ net/minecraft/world/entity/ai/behavior/GiveGiftToHero.java
@@ -21,8 +21,8 @@
         this.timeUntilNextGift = 600;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner) {
-        if (!this.isHeroVisible(owner)) {
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        if (!this.isHeroVisible($$1)) {
             return false;
         }
         if (this.timeUntilNextGift > 0) {
@@ -32,78 +32,78 @@
         return true;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
         this.giftGivenDuringThisRun = false;
-        this.timeSinceStart = gameTime;
-        net.minecraft.world.entity.player.Player player = (net.minecraft.world.entity.player.Player)this.getNearestTargetableHero(entity).get();
-        entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET, (java.lang.Object)player);
-        net.minecraft.world.entity.ai.behavior.BehaviorUtils.lookAtEntity((net.minecraft.world.entity.LivingEntity)entity, (net.minecraft.world.entity.LivingEntity)player);
+        this.timeSinceStart = $$2;
+        net.minecraft.world.entity.player.Player $$3 = (net.minecraft.world.entity.player.Player)this.getNearestTargetableHero($$1).get();
+        $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET, (java.lang.Object)$$3);
+        net.minecraft.world.entity.ai.behavior.BehaviorUtils.lookAtEntity((net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.entity.LivingEntity)$$3);
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        return this.isHeroVisible(entity) && !this.giftGivenDuringThisRun;
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        return this.isHeroVisible($$1) && !this.giftGivenDuringThisRun;
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner, long gameTime) {
-        net.minecraft.world.entity.player.Player player = (net.minecraft.world.entity.player.Player)this.getNearestTargetableHero(owner).get();
-        net.minecraft.world.entity.ai.behavior.BehaviorUtils.lookAtEntity((net.minecraft.world.entity.LivingEntity)owner, (net.minecraft.world.entity.LivingEntity)player);
-        if (this.isWithinThrowingDistance(owner, player)) {
-            if (gameTime - this.timeSinceStart > 20L) {
-                this.throwGift(owner, (net.minecraft.world.entity.LivingEntity)player);
+    public void tick(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        net.minecraft.world.entity.player.Player $$3 = (net.minecraft.world.entity.player.Player)this.getNearestTargetableHero($$1).get();
+        net.minecraft.world.entity.ai.behavior.BehaviorUtils.lookAtEntity((net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.entity.LivingEntity)$$3);
+        if (this.isWithinThrowingDistance($$1, $$3)) {
+            if ($$2 - this.timeSinceStart > 20L) {
+                this.throwGift($$1, (net.minecraft.world.entity.LivingEntity)$$3);
                 this.giftGivenDuringThisRun = true;
             }
         } else {
-            net.minecraft.world.entity.ai.behavior.BehaviorUtils.setWalkAndLookTargetMemories((net.minecraft.world.entity.LivingEntity)owner, (net.minecraft.world.entity.Entity)player, (float)0.5f, (int)5);
+            net.minecraft.world.entity.ai.behavior.BehaviorUtils.setWalkAndLookTargetMemories((net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.entity.Entity)$$3, (float)0.5f, (int)5);
         }
     }
 
-    public void stop(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        this.timeUntilNextGift = net.minecraft.world.entity.ai.behavior.GiveGiftToHero.calculateTimeUntilNextGift((net.minecraft.server.level.ServerLevel)level);
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
+    public void stop(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        this.timeUntilNextGift = net.minecraft.world.entity.ai.behavior.GiveGiftToHero.calculateTimeUntilNextGift((net.minecraft.server.level.ServerLevel)$$0);
+        $$1.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
+        $$1.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
+        $$1.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
     }
 
-    public void throwGift(net.minecraft.world.entity.npc.Villager villager, net.minecraft.world.entity.LivingEntity hero) {
-        java.util.List list = this.getItemToThrow(villager);
-        for (net.minecraft.world.item.ItemStack itemStack : list) {
-            net.minecraft.world.entity.ai.behavior.BehaviorUtils.throwItem((net.minecraft.world.entity.LivingEntity)villager, (net.minecraft.world.item.ItemStack)itemStack, (net.minecraft.world.phys.Vec3)hero.position());
+    public void throwGift(net.minecraft.world.entity.npc.Villager $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        java.util.List $$2 = this.getItemToThrow($$0);
+        for (net.minecraft.world.item.ItemStack $$3 : $$2) {
+            net.minecraft.world.entity.ai.behavior.BehaviorUtils.throwItem((net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.item.ItemStack)$$3, (net.minecraft.world.phys.Vec3)$$1.position());
         }
     }
 
-    public java.util.List<net.minecraft.world.item.ItemStack> getItemToThrow(net.minecraft.world.entity.npc.Villager villager) {
-        if (villager.isBaby()) {
+    public java.util.List<net.minecraft.world.item.ItemStack> getItemToThrow(net.minecraft.world.entity.npc.Villager $$0) {
+        if ($$0.isBaby()) {
             return com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.POPPY));
         }
-        net.minecraft.world.entity.npc.VillagerProfession villagerProfession = villager.getVillagerData().getProfession();
-        if (GIFTS.containsKey((java.lang.Object)villagerProfession)) {
-            net.minecraft.world.level.storage.loot.LootTable lootTable = villager.level.getServer().getLootTables().get((net.minecraft.resources.ResourceLocation)GIFTS.get((java.lang.Object)villagerProfession));
-            net.minecraft.world.level.storage.loot.LootContext$Builder builder = new net.minecraft.world.level.storage.loot.LootContext$Builder((net.minecraft.server.level.ServerLevel)villager.level).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.ORIGIN, (java.lang.Object)villager.position()).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.THIS_ENTITY, (java.lang.Object)villager).withRandom(villager.getRandom());
-            return lootTable.getRandomItems(builder.create(net.minecraft.world.level.storage.loot.parameters.LootContextParamSets.GIFT));
+        net.minecraft.world.entity.npc.VillagerProfession $$1 = $$0.getVillagerData().getProfession();
+        if (GIFTS.containsKey((java.lang.Object)$$1)) {
+            net.minecraft.world.level.storage.loot.LootTable $$2 = $$0.level.getServer().getLootTables().get((net.minecraft.resources.ResourceLocation)GIFTS.get((java.lang.Object)$$1));
+            net.minecraft.world.level.storage.loot.LootContext$Builder $$3 = new net.minecraft.world.level.storage.loot.LootContext$Builder((net.minecraft.server.level.ServerLevel)$$0.level).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.ORIGIN, (java.lang.Object)$$0.position()).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.THIS_ENTITY, (java.lang.Object)$$0).withRandom($$0.getRandom());
+            return $$2.getRandomItems($$3.create(net.minecraft.world.level.storage.loot.parameters.LootContextParamSets.GIFT));
         }
         return com.google.common.collect.ImmutableList.of((java.lang.Object)new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.WHEAT_SEEDS));
     }
 
-    public boolean isHeroVisible(net.minecraft.world.entity.npc.Villager villager) {
-        return this.getNearestTargetableHero(villager).isPresent();
+    public boolean isHeroVisible(net.minecraft.world.entity.npc.Villager $$0) {
+        return this.getNearestTargetableHero($$0).isPresent();
     }
 
-    public java.util.Optional<net.minecraft.world.entity.player.Player> getNearestTargetableHero(net.minecraft.world.entity.npc.Villager villager) {
-        return villager.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_PLAYER).filter(arg_0 -> this.isHero(arg_0));
+    public java.util.Optional<net.minecraft.world.entity.player.Player> getNearestTargetableHero(net.minecraft.world.entity.npc.Villager $$0) {
+        return $$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_PLAYER).filter(arg_0 -> this.isHero(arg_0));
     }
 
-    public boolean isHero(net.minecraft.world.entity.player.Player player) {
-        return player.hasEffect(net.minecraft.world.effect.MobEffects.HERO_OF_THE_VILLAGE);
+    public boolean isHero(net.minecraft.world.entity.player.Player $$0) {
+        return $$0.hasEffect(net.minecraft.world.effect.MobEffects.HERO_OF_THE_VILLAGE);
     }
 
-    public boolean isWithinThrowingDistance(net.minecraft.world.entity.npc.Villager villager, net.minecraft.world.entity.player.Player hero) {
-        net.minecraft.core.BlockPos blockPos = hero.blockPosition();
-        net.minecraft.core.BlockPos blockPos2 = villager.blockPosition();
-        return blockPos2.closerThan((net.minecraft.core.Vec3i)blockPos, 5.0);
+    public boolean isWithinThrowingDistance(net.minecraft.world.entity.npc.Villager $$0, net.minecraft.world.entity.player.Player $$1) {
+        net.minecraft.core.BlockPos $$2 = $$1.blockPosition();
+        net.minecraft.core.BlockPos $$3 = $$0.blockPosition();
+        return $$3.closerThan((net.minecraft.core.Vec3i)$$2, 5.0);
     }
 
-    public static int calculateTimeUntilNextGift(net.minecraft.server.level.ServerLevel level) {
-        return 600 + level.random.nextInt(6001);
+    public static int calculateTimeUntilNextGift(net.minecraft.server.level.ServerLevel $$0) {
+        return 600 + $$0.random.nextInt(6001);
     }
 
     public /* synthetic */ void stop(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.LivingEntity livingEntity, long l) {