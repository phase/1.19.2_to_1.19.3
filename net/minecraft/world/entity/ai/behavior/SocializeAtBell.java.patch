--- net/minecraft/world/entity/ai/behavior/SocializeAtBell.java
+++ net/minecraft/world/entity/ai/behavior/SocializeAtBell.java
@@ -12,18 +12,18 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.REGISTERED, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.REGISTERED, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.MEETING_POINT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_ABSENT));
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity owner) {
-        net.minecraft.world.entity.ai.Brain brain = owner.getBrain();
-        java.util.Optional optional = brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.MEETING_POINT);
-        return level.getRandom().nextInt(100) == 0 && optional.isPresent() && level.dimension() == ((net.minecraft.core.GlobalPos)optional.get()).dimension() && ((net.minecraft.core.GlobalPos)optional.get()).pos().closerToCenterThan((net.minecraft.core.Position)owner.position(), 4.0) && ((net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).get()).contains($$0 -> net.minecraft.world.entity.EntityType.VILLAGER.equals((java.lang.Object)$$0.getType()));
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.LivingEntity $$1) {
+        net.minecraft.world.entity.ai.Brain $$2 = $$1.getBrain();
+        java.util.Optional $$3 = $$2.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.MEETING_POINT);
+        return $$02.getRandom().nextInt(100) == 0 && $$3.isPresent() && $$02.dimension() == ((net.minecraft.core.GlobalPos)$$3.get()).dimension() && ((net.minecraft.core.GlobalPos)$$3.get()).pos().closerToCenterThan((net.minecraft.core.Position)$$1.position(), 4.0) && ((net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)$$2.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).get()).contains($$0 -> net.minecraft.world.entity.EntityType.VILLAGER.equals((java.lang.Object)$$0.getType()));
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity entity, long gameTime) {
-        net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-        brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).flatMap($$12 -> $$12.findClosest($$1 -> net.minecraft.world.entity.EntityType.VILLAGER.equals((java.lang.Object)$$1.getType()) && $$1.distanceToSqr((net.minecraft.world.entity.Entity)entity) <= 32.0)).ifPresent($$1 -> {
-            brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET, $$1);
-            brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)$$1, true));
-            brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget((net.minecraft.world.entity.ai.behavior.PositionTracker)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)$$1, false), 0.3f, 1));
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$13, long $$2) {
+        net.minecraft.world.entity.ai.Brain $$3 = $$13.getBrain();
+        $$3.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).flatMap($$12 -> $$12.findClosest($$1 -> net.minecraft.world.entity.EntityType.VILLAGER.equals((java.lang.Object)$$1.getType()) && $$1.distanceToSqr((net.minecraft.world.entity.Entity)$$13) <= 32.0)).ifPresent($$1 -> {
+            $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET, $$1);
+            $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)$$1, true));
+            $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget((net.minecraft.world.entity.ai.behavior.PositionTracker)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)$$1, false), 0.3f, 1));
         });
     }
 }