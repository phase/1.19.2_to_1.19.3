--- net/minecraft/world/entity/ai/behavior/RandomLookAround.java
+++ net/minecraft/world/entity/ai/behavior/RandomLookAround.java
@@ -1,0 +1,34 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.world.entity.ai.behavior;
+
+public class net.minecraft.world.entity.ai.behavior.RandomLookAround
+extends net.minecraft.world.entity.ai.behavior.Behavior<net.minecraft.world.entity.Mob>
+ {
+    public net.minecraft.util.valueproviders.IntProvider interval;
+    public float maxYaw;
+    public float minPitch;
+    public float pitchRange;
+
+    public net.minecraft.world.entity.ai.behavior.RandomLookAround(net.minecraft.util.valueproviders.IntProvider $$0, float $$1, float $$2, float $$3) {
+        super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_ABSENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.GAZE_COOLDOWN_TICKS, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_ABSENT));
+        if ($$2 > $$3) {
+            throw new java.lang.IllegalArgumentException("Minimum pitch is larger than maximum pitch! " + $$2 + " > " + $$3);
+        }
+        this.interval = $$0;
+        this.maxYaw = $$1;
+        this.minPitch = $$2;
+        this.pitchRange = $$3 - $$2;
+    }
+
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        net.minecraft.util.RandomSource $$3 = $$1.getRandom();
+        float $$4 = net.minecraft.util.Mth.clamp((float)($$3.nextFloat() * this.pitchRange + this.minPitch), (float)-90.0f, (float)90.0f);
+        float $$5 = net.minecraft.util.Mth.wrapDegrees((float)($$1.getYRot() + 2.0f * $$3.nextFloat() * this.maxYaw - this.maxYaw));
+        net.minecraft.world.phys.Vec3 $$6 = net.minecraft.world.phys.Vec3.directionFromRotation((float)$$4, (float)$$5);
+        $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.BlockPosTracker($$1.getEyePosition().add($$6)));
+        $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.GAZE_COOLDOWN_TICKS, (java.lang.Object)this.interval.sample($$3));
+    }
+}
+