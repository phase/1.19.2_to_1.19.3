--- net/minecraft/world/entity/ai/behavior/StartAttacking.java
+++ net/minecraft/world/entity/ai/behavior/StartAttacking.java
@@ -23,19 +23,19 @@
         this($$0 -> true, $$02);
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, E owner) {
-        if (!this.canAttackPredicate.test(owner)) {
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, E $$1) {
+        if (!this.canAttackPredicate.test($$1)) {
             return false;
         }
-        java.util.Optional optional = (java.util.Optional)this.targetFinderFunction.apply(owner);
-        if (optional.isPresent()) {
-            return owner.canAttack((net.minecraft.world.entity.LivingEntity)optional.get());
+        java.util.Optional $$2 = (java.util.Optional)this.targetFinderFunction.apply($$1);
+        if ($$2.isPresent()) {
+            return $$1.canAttack((net.minecraft.world.entity.LivingEntity)$$2.get());
         }
         return false;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
-        ((java.util.Optional)this.targetFinderFunction.apply(entity)).ifPresent($$1 -> net.minecraft.world.entity.ai.behavior.StartAttacking.setAttackTarget((net.minecraft.world.entity.Mob)entity, (net.minecraft.world.entity.LivingEntity)$$1));
+    public void start(net.minecraft.server.level.ServerLevel $$0, E $$12, long $$2) {
+        ((java.util.Optional)this.targetFinderFunction.apply($$12)).ifPresent($$1 -> net.minecraft.world.entity.ai.behavior.StartAttacking.setAttackTarget((net.minecraft.world.entity.Mob)$$12, (net.minecraft.world.entity.LivingEntity)$$1));
     }
 
     public static <E extends net.minecraft.world.entity.Mob> void setAttackTarget(E $$0, net.minecraft.world.entity.LivingEntity $$1) {