--- net/minecraft/world/entity/ai/behavior/MeleeAttack.java
+++ net/minecraft/world/entity/ai/behavior/MeleeAttack.java
@@ -13,28 +13,28 @@
         this.cooldownBetweenAttacks = $$0;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob owner) {
-        net.minecraft.world.entity.LivingEntity livingEntity = this.getAttackTarget(owner);
-        return !this.isHoldingUsableProjectileWeapon(owner) && net.minecraft.world.entity.ai.behavior.BehaviorUtils.canSee((net.minecraft.world.entity.LivingEntity)owner, (net.minecraft.world.entity.LivingEntity)livingEntity) && owner.isWithinMeleeAttackRange(livingEntity);
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1) {
+        net.minecraft.world.entity.LivingEntity $$2 = this.getAttackTarget($$1);
+        return !this.isHoldingUsableProjectileWeapon($$1) && net.minecraft.world.entity.ai.behavior.BehaviorUtils.canSee((net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.entity.LivingEntity)$$2) && $$1.isWithinMeleeAttackRange($$2);
     }
 
-    public boolean isHoldingUsableProjectileWeapon(net.minecraft.world.entity.Mob mob) {
-        return mob.isHolding($$1 -> {
+    public boolean isHoldingUsableProjectileWeapon(net.minecraft.world.entity.Mob $$0) {
+        return $$0.isHolding($$1 -> {
             net.minecraft.world.item.Item $$2 = $$1.getItem();
-            return $$2 instanceof net.minecraft.world.item.ProjectileWeaponItem && mob.canFireProjectileWeapon((net.minecraft.world.item.ProjectileWeaponItem)$$2);
+            return $$2 instanceof net.minecraft.world.item.ProjectileWeaponItem && $$0.canFireProjectileWeapon((net.minecraft.world.item.ProjectileWeaponItem)$$2);
         });
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob entity, long gameTime) {
-        net.minecraft.world.entity.LivingEntity livingEntity = this.getAttackTarget(entity);
-        net.minecraft.world.entity.ai.behavior.BehaviorUtils.lookAtEntity((net.minecraft.world.entity.LivingEntity)entity, (net.minecraft.world.entity.LivingEntity)livingEntity);
-        entity.swing(net.minecraft.world.InteractionHand.MAIN_HAND);
-        entity.doHurtTarget((net.minecraft.world.entity.Entity)livingEntity);
-        entity.getBrain().setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_COOLING_DOWN, (java.lang.Object)true, (long)this.cooldownBetweenAttacks);
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        net.minecraft.world.entity.LivingEntity $$3 = this.getAttackTarget($$1);
+        net.minecraft.world.entity.ai.behavior.BehaviorUtils.lookAtEntity((net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.entity.LivingEntity)$$3);
+        $$1.swing(net.minecraft.world.InteractionHand.MAIN_HAND);
+        $$1.doHurtTarget((net.minecraft.world.entity.Entity)$$3);
+        $$1.getBrain().setMemoryWithExpiry(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_COOLING_DOWN, (java.lang.Object)true, (long)this.cooldownBetweenAttacks);
     }
 
-    public net.minecraft.world.entity.LivingEntity getAttackTarget(net.minecraft.world.entity.Mob mob) {
-        return (net.minecraft.world.entity.LivingEntity)mob.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET).get();
+    public net.minecraft.world.entity.LivingEntity getAttackTarget(net.minecraft.world.entity.Mob $$0) {
+        return (net.minecraft.world.entity.LivingEntity)$$0.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.ATTACK_TARGET).get();
     }
 }
 