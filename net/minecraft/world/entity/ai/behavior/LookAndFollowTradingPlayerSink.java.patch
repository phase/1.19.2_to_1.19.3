--- net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink.java
+++ net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink.java
@@ -13,37 +13,37 @@
         this.speedModifier = $$0;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner) {
-        net.minecraft.world.entity.player.Player player = owner.getTradingPlayer();
-        return owner.isAlive() && player != null && !owner.isInWater() && !owner.hurtMarked && owner.distanceToSqr((net.minecraft.world.entity.Entity)player) <= 16.0 && player.containerMenu != null;
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        net.minecraft.world.entity.player.Player $$2 = $$1.getTradingPlayer();
+        return $$1.isAlive() && $$2 != null && !$$1.isInWater() && !$$1.hurtMarked && $$1.distanceToSqr((net.minecraft.world.entity.Entity)$$2) <= 16.0 && $$2.containerMenu != null;
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        return this.checkExtraStartConditions(level, entity);
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        return this.checkExtraStartConditions($$0, $$1);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        this.followPlayer(entity);
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        this.followPlayer($$1);
     }
 
-    public void stop(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-        brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
-        brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
+    public void stop(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        net.minecraft.world.entity.ai.Brain $$3 = $$1.getBrain();
+        $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
+        $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner, long gameTime) {
-        this.followPlayer(owner);
+    public void tick(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        this.followPlayer($$1);
     }
 
-    public boolean timedOut(long gameTime) {
+    public boolean timedOut(long $$0) {
         return false;
     }
 
-    public void followPlayer(net.minecraft.world.entity.npc.Villager owner) {
-        net.minecraft.world.entity.ai.Brain brain = owner.getBrain();
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget((net.minecraft.world.entity.ai.behavior.PositionTracker)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)owner.getTradingPlayer(), false), this.speedModifier, 2));
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)owner.getTradingPlayer(), true));
+    public void followPlayer(net.minecraft.world.entity.npc.Villager $$0) {
+        net.minecraft.world.entity.ai.Brain $$1 = $$0.getBrain();
+        $$1.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget((net.minecraft.world.entity.ai.behavior.PositionTracker)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)$$0.getTradingPlayer(), false), this.speedModifier, 2));
+        $$1.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)$$0.getTradingPlayer(), true));
     }
 
     public /* synthetic */ boolean canStillUse(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.LivingEntity livingEntity, long l) {