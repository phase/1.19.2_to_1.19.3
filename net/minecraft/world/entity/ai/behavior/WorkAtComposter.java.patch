--- net/minecraft/world/entity/ai/behavior/WorkAtComposter.java
+++ net/minecraft/world/entity/ai/behavior/WorkAtComposter.java
@@ -11,70 +11,70 @@
     public net.minecraft.world.entity.ai.behavior.WorkAtComposter() {
     }
 
-    public void useWorkstation(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager villager) {
-        java.util.Optional optional = villager.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE);
-        if (!optional.isPresent()) {
+    public void useWorkstation(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        java.util.Optional $$2 = $$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE);
+        if (!$$2.isPresent()) {
             return;
         }
-        net.minecraft.core.GlobalPos globalPos = (net.minecraft.core.GlobalPos)optional.get();
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(globalPos.pos());
-        if (blockState.is(net.minecraft.world.level.block.Blocks.COMPOSTER)) {
-            this.makeBread(villager);
-            this.compostItems(level, villager, globalPos, blockState);
+        net.minecraft.core.GlobalPos $$3 = (net.minecraft.core.GlobalPos)$$2.get();
+        net.minecraft.world.level.block.state.BlockState $$4 = $$0.getBlockState($$3.pos());
+        if ($$4.is(net.minecraft.world.level.block.Blocks.COMPOSTER)) {
+            this.makeBread($$1);
+            this.compostItems($$0, $$1, $$3, $$4);
         }
     }
 
-    public void compostItems(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager villager, net.minecraft.core.GlobalPos globalPos, net.minecraft.world.level.block.state.BlockState state) {
-        net.minecraft.core.BlockPos blockPos = globalPos.pos();
-        if ((java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ComposterBlock.LEVEL) == 8) {
-            state = net.minecraft.world.level.block.ComposterBlock.extractProduce((net.minecraft.world.level.block.state.BlockState)state, (net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)blockPos);
+    public void compostItems(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, net.minecraft.core.GlobalPos $$2, net.minecraft.world.level.block.state.BlockState $$3) {
+        net.minecraft.core.BlockPos $$4 = $$2.pos();
+        if ((java.lang.Integer)$$3.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ComposterBlock.LEVEL) == 8) {
+            $$3 = net.minecraft.world.level.block.ComposterBlock.extractProduce((net.minecraft.world.level.block.state.BlockState)$$3, (net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$4);
         }
-        int n = 20;
-        int n2 = 10;
-        int[] nArray = new int[COMPOSTABLE_ITEMS.size()];
-        net.minecraft.world.SimpleContainer simpleContainer = villager.getInventory();
-        int n3 = simpleContainer.getContainerSize();
-        net.minecraft.world.level.block.state.BlockState blockState = state;
-        for (int i = n3 - 1; i >= 0 && n > 0; --i) {
-            int n4;
-            net.minecraft.world.item.ItemStack itemStack = simpleContainer.getItem(i);
-            int n5 = COMPOSTABLE_ITEMS.indexOf((java.lang.Object)itemStack.getItem());
-            if (n5 == -1) continue;
-            int n6 = itemStack.getCount();
-            nArray[n5] = n4 = nArray[n5] + n6;
-            int n7 = java.lang.Math.min((int)java.lang.Math.min((int)(n4 - 10), (int)n), (int)n6);
-            if (n7 <= 0) continue;
-            n -= n7;
-            for (int j = 0; j < n7; ++j) {
-                if ((java.lang.Integer)(blockState = net.minecraft.world.level.block.ComposterBlock.insertItem((net.minecraft.world.level.block.state.BlockState)blockState, (net.minecraft.server.level.ServerLevel)level, (net.minecraft.world.item.ItemStack)itemStack, (net.minecraft.core.BlockPos)blockPos)).getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ComposterBlock.LEVEL) != 7) continue;
-                this.spawnComposterFillEffects(level, state, blockPos, blockState);
+        int $$5 = 20;
+        int $$6 = 10;
+        int[] $$7 = new int[COMPOSTABLE_ITEMS.size()];
+        net.minecraft.world.SimpleContainer $$8 = $$1.getInventory();
+        int $$9 = $$8.getContainerSize();
+        net.minecraft.world.level.block.state.BlockState $$10 = $$3;
+        for (int $$11 = $$9 - 1; $$11 >= 0 && $$5 > 0; --$$11) {
+            int $$15;
+            net.minecraft.world.item.ItemStack $$12 = $$8.getItem($$11);
+            int $$13 = COMPOSTABLE_ITEMS.indexOf((java.lang.Object)$$12.getItem());
+            if ($$13 == -1) continue;
+            int $$14 = $$12.getCount();
+            $$7[$$13] = $$15 = $$7[$$13] + $$14;
+            int $$16 = java.lang.Math.min((int)java.lang.Math.min((int)($$15 - 10), (int)$$5), (int)$$14);
+            if ($$16 <= 0) continue;
+            $$5 -= $$16;
+            for (int $$17 = 0; $$17 < $$16; ++$$17) {
+                if ((java.lang.Integer)($$10 = net.minecraft.world.level.block.ComposterBlock.insertItem((net.minecraft.world.level.block.state.BlockState)$$10, (net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.world.item.ItemStack)$$12, (net.minecraft.core.BlockPos)$$4)).getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.ComposterBlock.LEVEL) != 7) continue;
+                this.spawnComposterFillEffects($$0, $$3, $$4, $$10);
                 return;
             }
         }
-        this.spawnComposterFillEffects(level, state, blockPos, blockState);
+        this.spawnComposterFillEffects($$0, $$3, $$4, $$10);
     }
 
     public void spawnComposterFillEffects(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.level.block.state.BlockState $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3) {
         $$0.levelEvent(1500, $$2, $$3 != $$1 ? 1 : 0);
     }
 
-    public void makeBread(net.minecraft.world.entity.npc.Villager villager) {
-        net.minecraft.world.SimpleContainer simpleContainer = villager.getInventory();
-        if (simpleContainer.countItem(net.minecraft.world.item.Items.BREAD) > 36) {
+    public void makeBread(net.minecraft.world.entity.npc.Villager $$0) {
+        net.minecraft.world.SimpleContainer $$1 = $$0.getInventory();
+        if ($$1.countItem(net.minecraft.world.item.Items.BREAD) > 36) {
             return;
         }
-        int n = simpleContainer.countItem(net.minecraft.world.item.Items.WHEAT);
-        int n2 = 3;
-        int n3 = 3;
-        int n4 = java.lang.Math.min((int)3, (int)(n / 3));
-        if (n4 == 0) {
+        int $$2 = $$1.countItem(net.minecraft.world.item.Items.WHEAT);
+        int $$3 = 3;
+        int $$4 = 3;
+        int $$5 = java.lang.Math.min((int)3, (int)($$2 / 3));
+        if ($$5 == 0) {
             return;
         }
-        int n5 = n4 * 3;
-        simpleContainer.removeItemType(net.minecraft.world.item.Items.WHEAT, n5);
-        net.minecraft.world.item.ItemStack itemStack = simpleContainer.addItem(new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.BREAD, n4));
-        if (!itemStack.isEmpty()) {
-            villager.spawnAtLocation(itemStack, 0.5f);
+        int $$6 = $$5 * 3;
+        $$1.removeItemType(net.minecraft.world.item.Items.WHEAT, $$6);
+        net.minecraft.world.item.ItemStack $$7 = $$1.addItem(new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.BREAD, $$5));
+        if (!$$7.isEmpty()) {
+            $$0.spawnAtLocation($$7, 0.5f);
         }
     }
 