--- net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot.java
+++ net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot.java
@@ -13,25 +13,25 @@
         this.speedModifier = $$0;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity entity, long gameTime) {
-        java.util.Optional optional = java.util.Optional.ofNullable((java.lang.Object)this.getOutdoorPosition(level, entity));
-        if (optional.isPresent()) {
-            entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, optional.map($$0 -> new net.minecraft.world.entity.ai.memory.WalkTarget($$0, this.speedModifier, 0)));
+    public void start(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.LivingEntity $$1, long $$2) {
+        java.util.Optional $$3 = java.util.Optional.ofNullable((java.lang.Object)this.getOutdoorPosition($$02, $$1));
+        if ($$3.isPresent()) {
+            $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, $$3.map($$0 -> new net.minecraft.world.entity.ai.memory.WalkTarget($$0, this.speedModifier, 0)));
         }
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity owner) {
-        return !level.canSeeSky(owner.blockPosition());
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        return !$$0.canSeeSky($$1.blockPosition());
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.phys.Vec3 getOutdoorPosition(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity walker) {
-        net.minecraft.util.RandomSource randomSource = walker.getRandom();
-        net.minecraft.core.BlockPos blockPos = walker.blockPosition();
-        for (int i = 0; i < 10; ++i) {
-            net.minecraft.core.BlockPos blockPos2 = blockPos.offset(randomSource.nextInt(20) - 10, randomSource.nextInt(6) - 3, randomSource.nextInt(20) - 10);
-            if (!net.minecraft.world.entity.ai.behavior.MoveToSkySeeingSpot.hasNoBlocksAbove((net.minecraft.server.level.ServerLevel)level, (net.minecraft.world.entity.LivingEntity)walker, (net.minecraft.core.BlockPos)blockPos2)) continue;
-            return net.minecraft.world.phys.Vec3.atBottomCenterOf((net.minecraft.core.Vec3i)blockPos2);
+    public net.minecraft.world.phys.Vec3 getOutdoorPosition(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        net.minecraft.util.RandomSource $$2 = $$1.getRandom();
+        net.minecraft.core.BlockPos $$3 = $$1.blockPosition();
+        for (int $$4 = 0; $$4 < 10; ++$$4) {
+            net.minecraft.core.BlockPos $$5 = $$3.offset($$2.nextInt(20) - 10, $$2.nextInt(6) - 3, $$2.nextInt(20) - 10);
+            if (!net.minecraft.world.entity.ai.behavior.MoveToSkySeeingSpot.hasNoBlocksAbove((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.core.BlockPos)$$5)) continue;
+            return net.minecraft.world.phys.Vec3.atBottomCenterOf((net.minecraft.core.Vec3i)$$5);
         }
         return null;
     }