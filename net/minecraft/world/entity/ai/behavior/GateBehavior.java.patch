--- net/minecraft/world/entity/ai/behavior/GateBehavior.java
+++ net/minecraft/world/entity/ai/behavior/GateBehavior.java
@@ -20,26 +20,26 @@
         $$4.forEach($$0 -> this.behaviors.add((java.lang.Object)((net.minecraft.world.entity.ai.behavior.Behavior)$$0.getFirst()), ((java.lang.Integer)$$0.getSecond()).intValue()));
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
-        return this.behaviors.stream().filter($$0 -> $$0.getStatus() == net.minecraft.world.entity.ai.behavior.Behavior$Status.RUNNING).anyMatch($$3 -> $$3.canStillUse(level, entity, gameTime));
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$02, E $$1, long $$2) {
+        return this.behaviors.stream().filter($$0 -> $$0.getStatus() == net.minecraft.world.entity.ai.behavior.Behavior$Status.RUNNING).anyMatch($$3 -> $$3.canStillUse($$02, $$1, $$2));
     }
 
-    public boolean timedOut(long gameTime) {
+    public boolean timedOut(long $$0) {
         return false;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
+    public void start(net.minecraft.server.level.ServerLevel $$0, E $$1, long $$2) {
         this.orderPolicy.apply(this.behaviors);
-        this.runningPolicy.apply(this.behaviors.stream(), level, entity, gameTime);
+        this.runningPolicy.apply(this.behaviors.stream(), $$0, $$1, $$2);
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, E owner, long gameTime) {
-        this.behaviors.stream().filter($$0 -> $$0.getStatus() == net.minecraft.world.entity.ai.behavior.Behavior$Status.RUNNING).forEach($$3 -> $$3.tickOrStop(level, owner, gameTime));
+    public void tick(net.minecraft.server.level.ServerLevel $$02, E $$1, long $$2) {
+        this.behaviors.stream().filter($$0 -> $$0.getStatus() == net.minecraft.world.entity.ai.behavior.Behavior$Status.RUNNING).forEach($$3 -> $$3.tickOrStop($$02, $$1, $$2));
     }
 
-    public void stop(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
-        this.behaviors.stream().filter($$0 -> $$0.getStatus() == net.minecraft.world.entity.ai.behavior.Behavior$Status.RUNNING).forEach($$3 -> $$3.doStop(level, entity, gameTime));
-        this.exitErasedMemories.forEach(arg_0 -> ((net.minecraft.world.entity.ai.Brain)entity.getBrain()).eraseMemory(arg_0));
+    public void stop(net.minecraft.server.level.ServerLevel $$02, E $$1, long $$2) {
+        this.behaviors.stream().filter($$0 -> $$0.getStatus() == net.minecraft.world.entity.ai.behavior.Behavior$Status.RUNNING).forEach($$3 -> $$3.doStop($$02, $$1, $$2));
+        this.exitErasedMemories.forEach(arg_0 -> ((net.minecraft.world.entity.ai.Brain)$$1.getBrain()).eraseMemory(arg_0));
     }
 
     public java.lang.String toString() {