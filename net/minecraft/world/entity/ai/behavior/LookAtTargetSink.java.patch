--- net/minecraft/world/entity/ai/behavior/LookAtTargetSink.java
+++ net/minecraft/world/entity/ai/behavior/LookAtTargetSink.java
@@ -10,16 +10,16 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT), $$0, $$1);
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob entity, long gameTime) {
-        return entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET).filter($$1 -> $$1.isVisibleBy((net.minecraft.world.entity.LivingEntity)entity)).isPresent();
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$12, long $$2) {
+        return $$12.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET).filter($$1 -> $$1.isVisibleBy((net.minecraft.world.entity.LivingEntity)$$12)).isPresent();
     }
 
-    public void stop(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob entity, long gameTime) {
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
+    public void stop(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        $$1.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob owner, long gameTime) {
-        owner.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET).ifPresent($$1 -> owner.getLookControl().setLookAt($$1.currentPosition()));
+    public void tick(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$12, long $$2) {
+        $$12.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET).ifPresent($$1 -> $$12.getLookControl().setLookAt($$1.currentPosition()));
     }
 
     public /* synthetic */ boolean canStillUse(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.LivingEntity livingEntity, long l) {