--- net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid.java
+++ net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid.java
@@ -36,26 +36,26 @@
 );
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, E entity, long gameTime) {
-        net.minecraft.world.entity.LivingEntity livingEntity = this.getAttackTarget(entity);
-        if (!entity.canAttack(livingEntity)) {
-            this.clearAttackTarget(entity);
+    public void start(net.minecraft.server.level.ServerLevel $$0, E $$1, long $$2) {
+        net.minecraft.world.entity.LivingEntity $$3 = this.getAttackTarget($$1);
+        if (!$$1.canAttack($$3)) {
+            this.clearAttackTarget($$1);
             return;
         }
-        if (this.canGrowTiredOfTryingToReachTarget && net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid.isTiredOfTryingToReachTarget(entity)) {
-            this.clearAttackTarget(entity);
+        if (this.canGrowTiredOfTryingToReachTarget && net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid.isTiredOfTryingToReachTarget($$1)) {
+            this.clearAttackTarget($$1);
             return;
         }
-        if (this.isCurrentTargetDeadOrRemoved(entity)) {
-            this.clearAttackTarget(entity);
+        if (this.isCurrentTargetDeadOrRemoved($$1)) {
+            this.clearAttackTarget($$1);
             return;
         }
-        if (this.isCurrentTargetInDifferentLevel(entity)) {
-            this.clearAttackTarget(entity);
+        if (this.isCurrentTargetInDifferentLevel($$1)) {
+            this.clearAttackTarget($$1);
             return;
         }
-        if (this.stopAttackingWhen.test((java.lang.Object)this.getAttackTarget(entity))) {
-            this.clearAttackTarget(entity);
+        if (this.stopAttackingWhen.test((java.lang.Object)this.getAttackTarget($$1))) {
+            this.clearAttackTarget($$1);
             return;
         }
     }