--- net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock.java
+++ net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock.java
@@ -11,7 +11,7 @@
     public java.util.List<net.minecraft.world.entity.ai.behavior.LongJumpToRandomPos$PossibleJump> notPrefferedJumpCandidates;
     public boolean currentlyWantingPreferredOnes;
 
-    public net.minecraft.world.entity.ai.behavior.LongJumpToPreferredBlock(net.minecraft.util.valueproviders.UniformInt $$0, int $$1, int $$2, float $$3, java.util.function.Function<E, net.minecraft.sounds.SoundEvent> $$4, net.minecraft.tags.TagKey<net.minecraft.world.level.block.Block> $$5, float $$6, java.util.function.Predicate<net.minecraft.world.level.block.state.BlockState> $$7) {
+    public net.minecraft.world.entity.ai.behavior.LongJumpToPreferredBlock(net.minecraft.util.valueproviders.UniformInt $$0, int $$1, int $$2, float $$3, java.util.function.Function<E, net.minecraft.sounds.SoundEvent> $$4, net.minecraft.tags.TagKey<net.minecraft.world.level.block.Block> $$5, float $$6, java.util.function.BiPredicate<E, net.minecraft.core.BlockPos> $$7) {
         super($$0, $$1, $$2, $$3, $$4, $$7);
         this.notPrefferedJumpCandidates = new java.util.ArrayList();
         this.preferredBlockTag = $$5;
@@ -43,13 +43,5 @@
         }
         return java.util.Optional.empty();
     }
-
-    public boolean isAcceptableLandingPosition(net.minecraft.server.level.ServerLevel $$0, E $$1, net.minecraft.core.BlockPos $$2) {
-        return super.isAcceptableLandingPosition($$0, $$1, $$2) && this.willNotLandInFluid($$0, $$2);
-    }
-
-    public boolean willNotLandInFluid(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1) {
-        return $$0.getFluidState($$1).isEmpty() && $$0.getFluidState($$1.below()).isEmpty();
-    }
 }
 