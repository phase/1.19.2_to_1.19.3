--- net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory.java
+++ net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory.java
@@ -28,26 +28,26 @@
         $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE, (java.lang.Object)$$1);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-        brain.getMemory(this.memoryType).ifPresent($$4 -> {
-            if (this.wrongDimension(level, $$4) || this.tiredOfTryingToFindTarget(level, entity)) {
-                this.dropPOI(entity, gameTime);
-            } else if (this.tooFar(entity, $$4)) {
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        net.minecraft.world.entity.ai.Brain $$3 = $$1.getBrain();
+        $$3.getMemory(this.memoryType).ifPresent($$4 -> {
+            if (this.wrongDimension($$0, $$4) || this.tiredOfTryingToFindTarget($$0, $$1)) {
+                this.dropPOI($$1, $$2);
+            } else if (this.tooFar($$1, $$4)) {
                 int $$6;
                 net.minecraft.world.phys.Vec3 $$5 = null;
                 int $$7 = 1000;
                 for ($$6 = 0;
- $$6 < 1000 && ($$5 == null || this.tooFar(entity, net.minecraft.core.GlobalPos.of((net.minecraft.resources.ResourceKey)level.dimension(), (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos($$5)))); ++$$6) {
-                    $$5 = net.minecraft.world.entity.ai.util.DefaultRandomPos.getPosTowards((net.minecraft.world.entity.PathfinderMob)entity, (int)15, (int)7, (net.minecraft.world.phys.Vec3)net.minecraft.world.phys.Vec3.atBottomCenterOf((net.minecraft.core.Vec3i)$$4.pos()), (double)1.5707963705062866);
+ $$6 < 1000 && ($$5 == null || this.tooFar($$1, net.minecraft.core.GlobalPos.of((net.minecraft.resources.ResourceKey)$$0.dimension(), (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos($$5)))); ++$$6) {
+                    $$5 = net.minecraft.world.entity.ai.util.DefaultRandomPos.getPosTowards((net.minecraft.world.entity.PathfinderMob)$$1, (int)15, (int)7, (net.minecraft.world.phys.Vec3)net.minecraft.world.phys.Vec3.atBottomCenterOf((net.minecraft.core.Vec3i)$$4.pos()), (double)1.5707963705062866);
                 }
                 if ($$6 == 1000) {
-                    this.dropPOI(entity, gameTime);
+                    this.dropPOI($$1, $$2);
                     return;
                 }
-                brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$5, this.speedModifier, this.closeEnoughDist));
-            } else if (!this.closeEnough(level, entity, $$4)) {
-                brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$4.pos(), this.speedModifier, this.closeEnoughDist));
+                $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$5, this.speedModifier, this.closeEnoughDist));
+            } else if (!this.closeEnough($$0, $$1, $$4)) {
+                $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$4.pos(), this.speedModifier, this.closeEnoughDist));
             }
         });
     }