--- net/minecraft/world/entity/ai/behavior/StrollToPoi.java
+++ net/minecraft/world/entity/ai/behavior/StrollToPoi.java
@@ -20,17 +20,17 @@
         this.maxDistanceFromPoi = $$3;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.PathfinderMob owner) {
-        java.util.Optional optional = owner.getBrain().getMemory(this.memoryType);
-        return optional.isPresent() && level.dimension() == ((net.minecraft.core.GlobalPos)optional.get()).dimension() && ((net.minecraft.core.GlobalPos)optional.get()).pos().closerToCenterThan((net.minecraft.core.Position)owner.position(), (double)this.maxDistanceFromPoi);
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.PathfinderMob $$1) {
+        java.util.Optional $$2 = $$1.getBrain().getMemory(this.memoryType);
+        return $$2.isPresent() && $$0.dimension() == ((net.minecraft.core.GlobalPos)$$2.get()).dimension() && ((net.minecraft.core.GlobalPos)$$2.get()).pos().closerToCenterThan((net.minecraft.core.Position)$$1.position(), (double)this.maxDistanceFromPoi);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.PathfinderMob entity, long gameTime) {
-        if (gameTime > this.nextOkStartTime) {
-            net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-            java.util.Optional optional = brain.getMemory(this.memoryType);
-            optional.ifPresent($$1 -> brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$1.pos(), this.speedModifier, this.closeEnoughDist)));
-            this.nextOkStartTime = gameTime + 80L;
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.PathfinderMob $$12, long $$2) {
+        if ($$2 > this.nextOkStartTime) {
+            net.minecraft.world.entity.ai.Brain $$3 = $$12.getBrain();
+            java.util.Optional $$4 = $$3.getMemory(this.memoryType);
+            $$4.ifPresent($$1 -> $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$1.pos(), this.speedModifier, this.closeEnoughDist)));
+            this.nextOkStartTime = $$2 + 80L;
         }
     }
 }