--- net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite.java
+++ net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite.java
@@ -10,23 +10,23 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT));
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner) {
-        net.minecraft.core.BlockPos blockPos = ((net.minecraft.core.GlobalPos)owner.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE).get()).pos();
-        return blockPos.closerToCenterThan((net.minecraft.core.Position)owner.position(), 2.0) || owner.assignProfessionWhenSpawned();
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1) {
+        net.minecraft.core.BlockPos $$2 = ((net.minecraft.core.GlobalPos)$$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE).get()).pos();
+        return $$2.closerToCenterThan((net.minecraft.core.Position)$$1.position(), 2.0) || $$1.assignProfessionWhenSpawned();
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        net.minecraft.core.GlobalPos globalPos = (net.minecraft.core.GlobalPos)entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE).get();
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE);
-        entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE, (java.lang.Object)globalPos);
-        level.broadcastEntityEvent((net.minecraft.world.entity.Entity)entity, (byte)14);
-        if (entity.getVillagerData().getProfession() != net.minecraft.world.entity.npc.VillagerProfession.NONE) {
+    public void start(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.npc.Villager $$12, long $$22) {
+        net.minecraft.core.GlobalPos $$3 = (net.minecraft.core.GlobalPos)$$12.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE).get();
+        $$12.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.POTENTIAL_JOB_SITE);
+        $$12.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.JOB_SITE, (java.lang.Object)$$3);
+        $$02.broadcastEntityEvent((net.minecraft.world.entity.Entity)$$12, (byte)14);
+        if ($$12.getVillagerData().getProfession() != net.minecraft.world.entity.npc.VillagerProfession.NONE) {
             return;
         }
-        net.minecraft.server.MinecraftServer minecraftServer = level.getServer();
-        java.util.Optional.ofNullable((java.lang.Object)minecraftServer.getLevel(globalPos.dimension())).flatMap($$1 -> $$1.getPoiManager().getType(globalPos.pos())).flatMap($$0 -> net.minecraft.core.Registry.VILLAGER_PROFESSION.stream().filter($$1 -> $$1.heldJobSite().test($$0)).findFirst()).ifPresent($$2 -> {
-            entity.setVillagerData(entity.getVillagerData().setProfession($$2));
-            entity.refreshBrain(level);
+        net.minecraft.server.MinecraftServer $$4 = $$02.getServer();
+        java.util.Optional.ofNullable((java.lang.Object)$$4.getLevel($$3.dimension())).flatMap($$1 -> $$1.getPoiManager().getType($$3.pos())).flatMap($$0 -> net.minecraft.core.Registry.VILLAGER_PROFESSION.stream().filter($$1 -> $$1.heldJobSite().test($$0)).findFirst()).ifPresent($$2 -> {
+            $$12.setVillagerData($$12.getVillagerData().setProfession($$2));
+            $$12.refreshBrain($$02);
         });
     }
 }