--- net/minecraft/world/entity/ai/behavior/MoveToTargetSink.java
+++ net/minecraft/world/entity/ai/behavior/MoveToTargetSink.java
@@ -22,63 +22,63 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.REGISTERED, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_ABSENT, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryStatus.VALUE_PRESENT), $$0, $$1);
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob owner) {
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1) {
         if (this.remainingCooldown > 0) {
             --this.remainingCooldown;
             return false;
         }
-        net.minecraft.world.entity.ai.Brain brain = owner.getBrain();
-        net.minecraft.world.entity.ai.memory.WalkTarget walkTarget = (net.minecraft.world.entity.ai.memory.WalkTarget)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET).get();
-        boolean bl = this.reachedTarget(owner, walkTarget);
-        if (!bl && this.tryComputePath(owner, walkTarget, level.getGameTime())) {
-            this.lastTargetPos = walkTarget.getTarget().currentBlockPosition();
+        net.minecraft.world.entity.ai.Brain $$2 = $$1.getBrain();
+        net.minecraft.world.entity.ai.memory.WalkTarget $$3 = (net.minecraft.world.entity.ai.memory.WalkTarget)$$2.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET).get();
+        boolean $$4 = this.reachedTarget($$1, $$3);
+        if (!$$4 && this.tryComputePath($$1, $$3, $$0.getGameTime())) {
+            this.lastTargetPos = $$3.getTarget().currentBlockPosition();
             return true;
         }
-        brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
-        if (bl) {
-            brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE);
+        $$2.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
+        if ($$4) {
+            $$2.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE);
         }
         return false;
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob entity, long gameTime) {
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
         if (this.path == null || this.lastTargetPos == null) {
             return false;
         }
-        java.util.Optional optional = entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
-        net.minecraft.world.entity.ai.navigation.PathNavigation pathNavigation = entity.getNavigation();
-        return !pathNavigation.isDone() && optional.isPresent() && !this.reachedTarget(entity, (net.minecraft.world.entity.ai.memory.WalkTarget)optional.get());
+        java.util.Optional $$3 = $$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
+        net.minecraft.world.entity.ai.navigation.PathNavigation $$4 = $$1.getNavigation();
+        return !$$4.isDone() && $$3.isPresent() && !this.reachedTarget($$1, (net.minecraft.world.entity.ai.memory.WalkTarget)$$3.get());
     }
 
-    public void stop(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob entity, long gameTime) {
-        if (entity.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET) && !this.reachedTarget(entity, (net.minecraft.world.entity.ai.memory.WalkTarget)entity.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET).get()) && entity.getNavigation().isStuck()) {
-            this.remainingCooldown = level.getRandom().nextInt(40);
+    public void stop(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        if ($$1.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET) && !this.reachedTarget($$1, (net.minecraft.world.entity.ai.memory.WalkTarget)$$1.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET).get()) && $$1.getNavigation().isStuck()) {
+            this.remainingCooldown = $$0.getRandom().nextInt(40);
         }
-        entity.getNavigation().stop();
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
-        entity.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH);
+        $$1.getNavigation().stop();
+        $$1.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
+        $$1.getBrain().eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH);
         this.path = null;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob entity, long gameTime) {
-        entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH, (java.lang.Object)this.path);
-        entity.getNavigation().moveTo(this.path, (double)this.speedModifier);
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH, (java.lang.Object)this.path);
+        $$1.getNavigation().moveTo(this.path, (double)this.speedModifier);
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.Mob owner, long gameTime) {
-        net.minecraft.world.level.pathfinder.Path path = owner.getNavigation().getPath();
-        net.minecraft.world.entity.ai.Brain brain = owner.getBrain();
-        if (this.path != path) {
-            this.path = path;
-            brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH, (java.lang.Object)path);
+    public void tick(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.Mob $$1, long $$2) {
+        net.minecraft.world.level.pathfinder.Path $$3 = $$1.getNavigation().getPath();
+        net.minecraft.world.entity.ai.Brain $$4 = $$1.getBrain();
+        if (this.path != $$3) {
+            this.path = $$3;
+            $$4.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH, (java.lang.Object)$$3);
         }
-        if (path == null || this.lastTargetPos == null) {
+        if ($$3 == null || this.lastTargetPos == null) {
             return;
         }
-        net.minecraft.world.entity.ai.memory.WalkTarget walkTarget = (net.minecraft.world.entity.ai.memory.WalkTarget)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET).get();
-        if (walkTarget.getTarget().currentBlockPosition().distSqr((net.minecraft.core.Vec3i)this.lastTargetPos) > 4.0 && this.tryComputePath(owner, walkTarget, level.getGameTime())) {
-            this.lastTargetPos = walkTarget.getTarget().currentBlockPosition();
-            this.start(level, owner, gameTime);
+        net.minecraft.world.entity.ai.memory.WalkTarget $$5 = (net.minecraft.world.entity.ai.memory.WalkTarget)$$4.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET).get();
+        if ($$5.getTarget().currentBlockPosition().distSqr((net.minecraft.core.Vec3i)this.lastTargetPos) > 4.0 && this.tryComputePath($$1, $$5, $$0.getGameTime())) {
+            this.lastTargetPos = $$5.getTarget().currentBlockPosition();
+            this.start($$0, $$1, $$2);
         }
     }
 