--- net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget.java
+++ net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget.java
@@ -21,23 +21,23 @@
         this.speedModifier = $$0;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity owner) {
-        if (level.getGameTime() - this.lastUpdate < 20L) {
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.LivingEntity $$1) {
+        if ($$02.getGameTime() - this.lastUpdate < 20L) {
             return false;
         }
-        net.minecraft.world.entity.PathfinderMob pathfinderMob = (net.minecraft.world.entity.PathfinderMob)owner;
-        net.minecraft.world.entity.ai.village.poi.PoiManager poiManager = level.getPoiManager();
-        java.util.Optional optional = poiManager.findClosest($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), owner.blockPosition(), 48, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY);
-        return optional.isPresent() && !(((net.minecraft.core.BlockPos)optional.get()).distSqr((net.minecraft.core.Vec3i)pathfinderMob.blockPosition()) <= 4.0);
+        net.minecraft.world.entity.PathfinderMob $$2 = (net.minecraft.world.entity.PathfinderMob)$$1;
+        net.minecraft.world.entity.ai.village.poi.PoiManager $$3 = $$02.getPoiManager();
+        java.util.Optional $$4 = $$3.findClosest($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), $$1.blockPosition(), 48, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY);
+        return $$4.isPresent() && !(((net.minecraft.core.BlockPos)$$4.get()).distSqr((net.minecraft.core.Vec3i)$$2.blockPosition()) <= 4.0);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity entity, long gameTime) {
-        java.util.function.Predicate predicate;
+    public void start(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.LivingEntity $$1, long $$2) {
+        java.util.function.Predicate $$5;
         this.triedCount = 0;
-        this.lastUpdate = level.getGameTime() + (long)level.getRandom().nextInt(20);
-        net.minecraft.world.entity.PathfinderMob pathfinderMob = (net.minecraft.world.entity.PathfinderMob)entity;
-        net.minecraft.world.entity.ai.village.poi.PoiManager poiManager = level.getPoiManager();
-        java.util.Set set = (java.util.Set)poiManager.findAllWithType($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), predicate = $$0 -> {
+        this.lastUpdate = $$02.getGameTime() + (long)$$02.getRandom().nextInt(20);
+        net.minecraft.world.entity.PathfinderMob $$3 = (net.minecraft.world.entity.PathfinderMob)$$1;
+        net.minecraft.world.entity.ai.village.poi.PoiManager $$4 = $$02.getPoiManager();
+        java.util.Set $$6 = (java.util.Set)$$4.findAllWithType($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), $$5 = $$0 -> {
             long $$1 = $$0.asLong();
             if (this.batchCache.containsKey($$1)) {
                 return false;
@@ -47,14 +47,14 @@
             }
             this.batchCache.put($$1, this.lastUpdate + 40L);
             return true;
-        }, entity.blockPosition(), 48, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY).collect(java.util.stream.Collectors.toSet());
-        net.minecraft.world.level.pathfinder.Path path = net.minecraft.world.entity.ai.behavior.AcquirePoi.findPathToPois((net.minecraft.world.entity.Mob)pathfinderMob, (java.util.Set)set);
-        if (path != null && path.canReach()) {
-            net.minecraft.core.BlockPos blockPos = path.getTarget();
-            java.util.Optional optional = poiManager.getType(blockPos);
-            if (optional.isPresent()) {
-                entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget(blockPos, this.speedModifier, 1));
-                net.minecraft.network.protocol.game.DebugPackets.sendPoiTicketCountPacket((net.minecraft.server.level.ServerLevel)level, (net.minecraft.core.BlockPos)blockPos);
+        }, $$1.blockPosition(), 48, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY).collect(java.util.stream.Collectors.toSet());
+        net.minecraft.world.level.pathfinder.Path $$7 = net.minecraft.world.entity.ai.behavior.AcquirePoi.findPathToPois((net.minecraft.world.entity.Mob)$$3, (java.util.Set)$$6);
+        if ($$7 != null && $$7.canReach()) {
+            net.minecraft.core.BlockPos $$8 = $$7.getTarget();
+            java.util.Optional $$9 = $$4.getType($$8);
+            if ($$9.isPresent()) {
+                $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget($$8, this.speedModifier, 1));
+                net.minecraft.network.protocol.game.DebugPackets.sendPoiTicketCountPacket((net.minecraft.server.level.ServerLevel)$$02, (net.minecraft.core.BlockPos)$$8);
             }
         } else if (this.triedCount < 5) {
             this.batchCache.long2LongEntrySet().removeIf($$0 -> $$0.getLongValue() < this.lastUpdate);