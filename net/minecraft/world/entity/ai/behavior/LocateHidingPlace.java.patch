--- net/minecraft/world/entity/ai/behavior/LocateHidingPlace.java
+++ net/minecraft/world/entity/ai/behavior/LocateHidingPlace.java
@@ -19,27 +19,27 @@
         this.closeEnoughDist = $$2;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity owner) {
-        java.util.Optional optional = level.getPoiManager().find($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), $$0 -> true, owner.blockPosition(), this.closeEnoughDist + 1, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY);
-        this.currentPos = optional.isPresent() && ((net.minecraft.core.BlockPos)optional.get()).closerToCenterThan((net.minecraft.core.Position)owner.position(), (double)this.closeEnoughDist) ? optional : java.util.Optional.empty();
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.LivingEntity $$1) {
+        java.util.Optional $$2 = $$02.getPoiManager().find($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), $$0 -> true, $$1.blockPosition(), this.closeEnoughDist + 1, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY);
+        this.currentPos = $$2.isPresent() && ((net.minecraft.core.BlockPos)$$2.get()).closerToCenterThan((net.minecraft.core.Position)$$1.position(), (double)this.closeEnoughDist) ? $$2 : java.util.Optional.empty();
         return true;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity entity, long gameTime) {
-        java.util.Optional optional;
-        net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-        java.util.Optional optional2 = this.currentPos;
-        if (optional2.isEmpty() && (optional2 = level.getPoiManager().getRandom($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), $$0 -> true, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY, entity.blockPosition(), this.radius, entity.getRandom())).isEmpty() && (optional = brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.HOME)).isPresent()) {
-            optional2 = java.util.Optional.of((java.lang.Object)((net.minecraft.core.GlobalPos)optional.get()).pos());
+    public void start(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.LivingEntity $$1, long $$2) {
+        java.util.Optional $$5;
+        net.minecraft.world.entity.ai.Brain $$3 = $$1.getBrain();
+        java.util.Optional $$4 = this.currentPos;
+        if ($$4.isEmpty() && ($$4 = $$02.getPoiManager().getRandom($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.HOME), $$0 -> true, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY, $$1.blockPosition(), this.radius, $$1.getRandom())).isEmpty() && ($$5 = $$3.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.HOME)).isPresent()) {
+            $$4 = java.util.Optional.of((java.lang.Object)((net.minecraft.core.GlobalPos)$$5.get()).pos());
         }
-        if (optional2.isPresent()) {
-            brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH);
-            brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
-            brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
-            brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
-            brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.HIDING_PLACE, (java.lang.Object)net.minecraft.core.GlobalPos.of((net.minecraft.resources.ResourceKey)level.dimension(), (net.minecraft.core.BlockPos)((net.minecraft.core.BlockPos)optional2.get())));
-            if (!((net.minecraft.core.BlockPos)optional2.get()).closerToCenterThan((net.minecraft.core.Position)entity.position(), (double)this.closeEnoughDist)) {
-                brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget((net.minecraft.core.BlockPos)optional2.get(), this.speedModifier, this.closeEnoughDist));
+        if ($$4.isPresent()) {
+            $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH);
+            $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
+            $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
+            $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
+            $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.HIDING_PLACE, (java.lang.Object)net.minecraft.core.GlobalPos.of((net.minecraft.resources.ResourceKey)$$02.dimension(), (net.minecraft.core.BlockPos)((net.minecraft.core.BlockPos)$$4.get())));
+            if (!((net.minecraft.core.BlockPos)$$4.get()).closerToCenterThan((net.minecraft.core.Position)$$1.position(), (double)this.closeEnoughDist)) {
+                $$3.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.memory.WalkTarget((net.minecraft.core.BlockPos)$$4.get(), this.speedModifier, this.closeEnoughDist));
             }
         }
     }