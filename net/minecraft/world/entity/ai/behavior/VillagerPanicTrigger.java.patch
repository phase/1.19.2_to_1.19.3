--- net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger.java
+++ net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger.java
@@ -10,36 +10,36 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of());
     }
 
-    public boolean canStillUse(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        return net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.isHurt((net.minecraft.world.entity.LivingEntity)entity) || net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.hasHostile((net.minecraft.world.entity.LivingEntity)entity);
+    public boolean canStillUse(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        return net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.isHurt((net.minecraft.world.entity.LivingEntity)$$1) || net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.hasHostile((net.minecraft.world.entity.LivingEntity)$$1);
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager entity, long gameTime) {
-        if (net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.isHurt((net.minecraft.world.entity.LivingEntity)entity) || net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.hasHostile((net.minecraft.world.entity.LivingEntity)entity)) {
-            net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-            if (!brain.isActive(net.minecraft.world.entity.schedule.Activity.PANIC)) {
-                brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH);
-                brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
-                brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
-                brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
-                brain.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        if (net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.isHurt((net.minecraft.world.entity.LivingEntity)$$1) || net.minecraft.world.entity.ai.behavior.VillagerPanicTrigger.hasHostile((net.minecraft.world.entity.LivingEntity)$$1)) {
+            net.minecraft.world.entity.ai.Brain $$3 = $$1.getBrain();
+            if (!$$3.isActive(net.minecraft.world.entity.schedule.Activity.PANIC)) {
+                $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.PATH);
+                $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.WALK_TARGET);
+                $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET);
+                $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.BREED_TARGET);
+                $$3.eraseMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.INTERACTION_TARGET);
             }
-            brain.setActiveActivityIfPossible(net.minecraft.world.entity.schedule.Activity.PANIC);
+            $$3.setActiveActivityIfPossible(net.minecraft.world.entity.schedule.Activity.PANIC);
         }
     }
 
-    public void tick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.npc.Villager owner, long gameTime) {
-        if (gameTime % 100L == 0L) {
-            owner.spawnGolemIfNeeded(level, gameTime, 3);
+    public void tick(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.Villager $$1, long $$2) {
+        if ($$2 % 100L == 0L) {
+            $$1.spawnGolemIfNeeded($$0, $$2, 3);
         }
     }
 
-    public static boolean hasHostile(net.minecraft.world.entity.LivingEntity entity) {
-        return entity.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_HOSTILE);
+    public static boolean hasHostile(net.minecraft.world.entity.LivingEntity $$0) {
+        return $$0.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_HOSTILE);
     }
 
-    public static boolean isHurt(net.minecraft.world.entity.LivingEntity entity) {
-        return entity.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.HURT_BY);
+    public static boolean isHurt(net.minecraft.world.entity.LivingEntity $$0) {
+        return $$0.getBrain().hasMemoryValue(net.minecraft.world.entity.ai.memory.MemoryModuleType.HURT_BY);
     }
 
     public /* synthetic */ boolean canStillUse(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.LivingEntity livingEntity, long l) {