--- net/minecraft/world/entity/ai/behavior/SetEntityLookTarget.java
+++ net/minecraft/world/entity/ai/behavior/SetEntityLookTarget.java
@@ -33,14 +33,14 @@
         this.maxDistSqr = $$1 * $$1;
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity owner) {
-        net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities nearestVisibleLivingEntities = (net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)owner.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).get();
-        this.nearestEntityMatchingTest = nearestVisibleLivingEntities.findClosest(this.predicate.and($$1 -> $$1.distanceToSqr((net.minecraft.world.entity.Entity)owner) <= (double)this.maxDistSqr));
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$12) {
+        net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities $$2 = (net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)$$12.getBrain().getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).get();
+        this.nearestEntityMatchingTest = $$2.findClosest(this.predicate.and($$1 -> $$1.distanceToSqr((net.minecraft.world.entity.Entity)$$12) <= (double)this.maxDistSqr && !$$12.hasPassenger((net.minecraft.world.entity.Entity)$$1)));
         return this.nearestEntityMatchingTest.isPresent();
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity entity, long gameTime) {
-        entity.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)this.nearestEntityMatchingTest.get(), true));
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$1, long $$2) {
+        $$1.getBrain().setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.LOOK_TARGET, (java.lang.Object)new net.minecraft.world.entity.ai.behavior.EntityTracker((net.minecraft.world.entity.Entity)this.nearestEntityMatchingTest.get(), true));
         this.nearestEntityMatchingTest = java.util.Optional.empty();
     }
 }