--- net/minecraft/world/entity/ai/behavior/ResetRaidStatus.java
+++ net/minecraft/world/entity/ai/behavior/ResetRaidStatus.java
@@ -10,16 +10,16 @@
         super((java.util.Map)com.google.common.collect.ImmutableMap.of());
     }
 
-    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity owner) {
-        return level.random.nextInt(20) == 0;
+    public boolean checkExtraStartConditions(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        return $$0.random.nextInt(20) == 0;
     }
 
-    public void start(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity entity, long gameTime) {
-        net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-        net.minecraft.world.entity.raid.Raid raid = level.getRaidAt(entity.blockPosition());
-        if (raid == null || raid.isStopped() || raid.isLoss()) {
-            brain.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
-            brain.updateActivityFromSchedule(level.getDayTime(), level.getGameTime());
+    public void start(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$1, long $$2) {
+        net.minecraft.world.entity.ai.Brain $$3 = $$1.getBrain();
+        net.minecraft.world.entity.raid.Raid $$4 = $$0.getRaidAt($$1.blockPosition());
+        if ($$4 == null || $$4.isStopped() || $$4.isLoss()) {
+            $$3.setDefaultActivity(net.minecraft.world.entity.schedule.Activity.IDLE);
+            $$3.updateActivityFromSchedule($$0.getDayTime(), $$0.getGameTime());
         }
     }
 }