--- net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor.java
+++ net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor.java
@@ -13,93 +13,93 @@
         return com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_LIVING_ENTITIES, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_NEMESIS, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_PLAYER_HOLDING_WANTED_ITEM, (java.lang.Object)net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_HUNTABLE_HOGLIN, (java.lang.Object[])new net.minecraft.world.entity.ai.memory.MemoryModuleType[]{net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_BABY_HOGLIN, net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLINS, net.minecraft.world.entity.ai.memory.MemoryModuleType.NEARBY_ADULT_PIGLINS, net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_PIGLIN_COUNT, net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_HOGLIN_COUNT, net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT});
     }
 
-    public void doTick(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity entity) {
-        net.minecraft.world.entity.monster.piglin.PiglinBrute piglinBrute;
-        net.minecraft.world.entity.ai.Brain brain = entity.getBrain();
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor.findNearestRepellent((net.minecraft.server.level.ServerLevel)level, (net.minecraft.world.entity.LivingEntity)entity));
-        java.util.Optional optional = java.util.Optional.empty();
-        java.util.Optional optional2 = java.util.Optional.empty();
-        java.util.Optional optional3 = java.util.Optional.empty();
-        java.util.Optional optional4 = java.util.Optional.empty();
-        java.util.Optional optional5 = java.util.Optional.empty();
-        java.util.Optional optional6 = java.util.Optional.empty();
-        java.util.Optional optional7 = java.util.Optional.empty();
-        int n = 0;
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        java.util.ArrayList arrayList2 = com.google.common.collect.Lists.newArrayList();
-        net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities nearestVisibleLivingEntities = (net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).orElse((java.lang.Object)net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities.empty());
-        for (net.minecraft.world.entity.LivingEntity livingEntity : nearestVisibleLivingEntities.findAll($$0 -> true)) {
-            if (livingEntity instanceof net.minecraft.world.entity.monster.hoglin.Hoglin) {
-                net.minecraft.world.entity.monster.hoglin.Hoglin hoglin = (net.minecraft.world.entity.monster.hoglin.Hoglin)livingEntity;
-                if (hoglin.isBaby() && optional3.isEmpty()) {
-                    optional3 = java.util.Optional.of((java.lang.Object)hoglin);
+    public void doTick(net.minecraft.server.level.ServerLevel $$02, net.minecraft.world.entity.LivingEntity $$1) {
+        net.minecraft.world.entity.ai.Brain $$2 = $$1.getBrain();
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_REPELLENT, net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor.findNearestRepellent((net.minecraft.server.level.ServerLevel)$$02, (net.minecraft.world.entity.LivingEntity)$$1));
+        java.util.Optional $$3 = java.util.Optional.empty();
+        java.util.Optional $$4 = java.util.Optional.empty();
+        java.util.Optional $$5 = java.util.Optional.empty();
+        java.util.Optional $$6 = java.util.Optional.empty();
+        java.util.Optional $$7 = java.util.Optional.empty();
+        java.util.Optional $$8 = java.util.Optional.empty();
+        java.util.Optional $$9 = java.util.Optional.empty();
+        int $$10 = 0;
+        java.util.ArrayList $$11 = com.google.common.collect.Lists.newArrayList();
+        java.util.ArrayList $$12 = com.google.common.collect.Lists.newArrayList();
+        net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities $$13 = (net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities)$$2.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).orElse((java.lang.Object)net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities.empty());
+        for (net.minecraft.world.entity.LivingEntity $$14 : $$13.findAll($$0 -> true)) {
+            if ($$14 instanceof net.minecraft.world.entity.monster.hoglin.Hoglin) {
+                net.minecraft.world.entity.monster.hoglin.Hoglin $$15 = (net.minecraft.world.entity.monster.hoglin.Hoglin)$$14;
+                if ($$15.isBaby() && $$5.isEmpty()) {
+                    $$5 = java.util.Optional.of((java.lang.Object)$$15);
                     continue;
                 }
-                if (!hoglin.isAdult()) continue;
-                ++n;
-                if (!optional2.isEmpty() || !hoglin.canBeHunted()) continue;
-                optional2 = java.util.Optional.of((java.lang.Object)hoglin);
+                if (!$$15.isAdult()) continue;
+                ++$$10;
+                if (!$$4.isEmpty() || !$$15.canBeHunted()) continue;
+                $$4 = java.util.Optional.of((java.lang.Object)$$15);
                 continue;
             }
-            if (livingEntity instanceof net.minecraft.world.entity.monster.piglin.PiglinBrute) {
-                piglinBrute = (net.minecraft.world.entity.monster.piglin.PiglinBrute)livingEntity;
-                arrayList.add((java.lang.Object)piglinBrute);
+            if ($$14 instanceof net.minecraft.world.entity.monster.piglin.PiglinBrute) {
+                net.minecraft.world.entity.monster.piglin.PiglinBrute $$16 = (net.minecraft.world.entity.monster.piglin.PiglinBrute)$$14;
+                $$11.add((java.lang.Object)$$16);
                 continue;
             }
-            if (livingEntity instanceof net.minecraft.world.entity.monster.piglin.Piglin) {
-                net.minecraft.world.entity.monster.piglin.Piglin piglin = (net.minecraft.world.entity.monster.piglin.Piglin)livingEntity;
-                if (piglin.isBaby() && optional4.isEmpty()) {
-                    optional4 = java.util.Optional.of((java.lang.Object)piglin);
+            if ($$14 instanceof net.minecraft.world.entity.monster.piglin.Piglin) {
+                net.minecraft.world.entity.monster.piglin.Piglin $$17 = (net.minecraft.world.entity.monster.piglin.Piglin)$$14;
+                if ($$17.isBaby() && $$6.isEmpty()) {
+                    $$6 = java.util.Optional.of((java.lang.Object)$$17);
                     continue;
                 }
-                if (!piglin.isAdult()) continue;
-                arrayList.add((java.lang.Object)piglin);
+                if (!$$17.isAdult()) continue;
+                $$11.add((java.lang.Object)$$17);
                 continue;
             }
-            if (livingEntity instanceof net.minecraft.world.entity.player.Player) {
-                net.minecraft.world.entity.player.Player player = (net.minecraft.world.entity.player.Player)livingEntity;
-                if (optional6.isEmpty() && !net.minecraft.world.entity.monster.piglin.PiglinAi.isWearingGold((net.minecraft.world.entity.LivingEntity)player) && entity.canAttack(livingEntity)) {
-                    optional6 = java.util.Optional.of((java.lang.Object)player);
+            if ($$14 instanceof net.minecraft.world.entity.player.Player) {
+                net.minecraft.world.entity.player.Player $$18 = (net.minecraft.world.entity.player.Player)$$14;
+                if ($$8.isEmpty() && !net.minecraft.world.entity.monster.piglin.PiglinAi.isWearingGold((net.minecraft.world.entity.LivingEntity)$$18) && $$1.canAttack($$14)) {
+                    $$8 = java.util.Optional.of((java.lang.Object)$$18);
                 }
-                if (!optional7.isEmpty() || player.isSpectator() || !net.minecraft.world.entity.monster.piglin.PiglinAi.isPlayerHoldingLovedItem((net.minecraft.world.entity.LivingEntity)player)) continue;
-                optional7 = java.util.Optional.of((java.lang.Object)player);
+                if (!$$9.isEmpty() || $$18.isSpectator() || !net.minecraft.world.entity.monster.piglin.PiglinAi.isPlayerHoldingLovedItem((net.minecraft.world.entity.LivingEntity)$$18)) continue;
+                $$9 = java.util.Optional.of((java.lang.Object)$$18);
                 continue;
             }
-            if (optional.isEmpty() && (livingEntity instanceof net.minecraft.world.entity.monster.WitherSkeleton || livingEntity instanceof net.minecraft.world.entity.boss.wither.WitherBoss)) {
-                optional = java.util.Optional.of((java.lang.Object)((net.minecraft.world.entity.Mob)livingEntity));
+            if ($$3.isEmpty() && ($$14 instanceof net.minecraft.world.entity.monster.WitherSkeleton || $$14 instanceof net.minecraft.world.entity.boss.wither.WitherBoss)) {
+                $$3 = java.util.Optional.of((java.lang.Object)((net.minecraft.world.entity.Mob)$$14));
                 continue;
             }
-            if (!optional5.isEmpty() || !net.minecraft.world.entity.monster.piglin.PiglinAi.isZombified((net.minecraft.world.entity.EntityType)livingEntity.getType())) continue;
-            optional5 = java.util.Optional.of((java.lang.Object)livingEntity);
+            if (!$$7.isEmpty() || !net.minecraft.world.entity.monster.piglin.PiglinAi.isZombified((net.minecraft.world.entity.EntityType)$$14.getType())) continue;
+            $$7 = java.util.Optional.of((java.lang.Object)$$14);
         }
-        java.util.Iterator iterator = (java.util.List)brain.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_LIVING_ENTITIES).orElse((java.lang.Object)com.google.common.collect.ImmutableList.of());
-        for (net.minecraft.world.entity.monster.hoglin.Hoglin hoglin : iterator) {
-            if (!(hoglin instanceof net.minecraft.world.entity.monster.piglin.AbstractPiglin) || !(piglinBrute = (net.minecraft.world.entity.monster.piglin.AbstractPiglin)hoglin).isAdult()) continue;
-            arrayList2.add((java.lang.Object)piglinBrute);
+        java.util.List $$19 = (java.util.List)$$2.getMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_LIVING_ENTITIES).orElse((java.lang.Object)com.google.common.collect.ImmutableList.of());
+        for (net.minecraft.world.entity.LivingEntity $$20 : $$19) {
+            net.minecraft.world.entity.monster.piglin.AbstractPiglin $$21;
+            if (!($$20 instanceof net.minecraft.world.entity.monster.piglin.AbstractPiglin) || !($$21 = (net.minecraft.world.entity.monster.piglin.AbstractPiglin)$$20).isAdult()) continue;
+            $$12.add((java.lang.Object)$$21);
         }
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_NEMESIS, optional);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_HUNTABLE_HOGLIN, optional2);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_BABY_HOGLIN, optional3);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ZOMBIFIED, optional5);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD, optional6);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_PLAYER_HOLDING_WANTED_ITEM, optional7);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEARBY_ADULT_PIGLINS, (java.lang.Object)arrayList2);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLINS, (java.lang.Object)arrayList);
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_PIGLIN_COUNT, (java.lang.Object)arrayList.size());
-        brain.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_HOGLIN_COUNT, (java.lang.Object)n);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_NEMESIS, $$3);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_HUNTABLE_HOGLIN, $$4);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_BABY_HOGLIN, $$5);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ZOMBIFIED, $$7);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD, $$8);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_PLAYER_HOLDING_WANTED_ITEM, $$9);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEARBY_ADULT_PIGLINS, (java.lang.Object)$$12);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLINS, (java.lang.Object)$$11);
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_PIGLIN_COUNT, (java.lang.Object)$$11.size());
+        $$2.setMemory(net.minecraft.world.entity.ai.memory.MemoryModuleType.VISIBLE_ADULT_HOGLIN_COUNT, (java.lang.Object)$$10);
     }
 
-    public static java.util.Optional<net.minecraft.core.BlockPos> findNearestRepellent(net.minecraft.server.level.ServerLevel level, net.minecraft.world.entity.LivingEntity livingEntity) {
-        return net.minecraft.core.BlockPos.findClosestMatch((net.minecraft.core.BlockPos)livingEntity.blockPosition(), (int)8, (int)4, $$1 -> net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor.isValidRepellent((net.minecraft.server.level.ServerLevel)level, (net.minecraft.core.BlockPos)$$1));
+    public static java.util.Optional<net.minecraft.core.BlockPos> findNearestRepellent(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.LivingEntity $$12) {
+        return net.minecraft.core.BlockPos.findClosestMatch((net.minecraft.core.BlockPos)$$12.blockPosition(), (int)8, (int)4, $$1 -> net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor.isValidRepellent((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.core.BlockPos)$$1));
     }
 
-    public static boolean isValidRepellent(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos);
-        boolean bl = blockState.is(net.minecraft.tags.BlockTags.PIGLIN_REPELLENTS);
-        if (bl && blockState.is(net.minecraft.world.level.block.Blocks.SOUL_CAMPFIRE)) {
-            return net.minecraft.world.level.block.CampfireBlock.isLitCampfire((net.minecraft.world.level.block.state.BlockState)blockState);
+    public static boolean isValidRepellent(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1) {
+        net.minecraft.world.level.block.state.BlockState $$2 = $$0.getBlockState($$1);
+        boolean $$3 = $$2.is(net.minecraft.tags.BlockTags.PIGLIN_REPELLENTS);
+        if ($$3 && $$2.is(net.minecraft.world.level.block.Blocks.SOUL_CAMPFIRE)) {
+            return net.minecraft.world.level.block.CampfireBlock.isLitCampfire((net.minecraft.world.level.block.state.BlockState)$$2);
         }
-        return bl;
+        return $$3;
     }
 }
 