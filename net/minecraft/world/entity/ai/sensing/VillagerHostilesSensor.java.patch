--- net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor.java
+++ net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor.java
@@ -15,17 +15,17 @@
         return this.isHostile($$1) && this.isClose($$0, $$1);
     }
 
-    public boolean isClose(net.minecraft.world.entity.LivingEntity livingEntity, net.minecraft.world.entity.LivingEntity target) {
-        float f = ((java.lang.Float)ACCEPTABLE_DISTANCE_FROM_HOSTILES.get((java.lang.Object)target.getType())).floatValue();
-        return target.distanceToSqr((net.minecraft.world.entity.Entity)livingEntity) <= (double)(f * f);
+    public boolean isClose(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        float $$2 = ((java.lang.Float)ACCEPTABLE_DISTANCE_FROM_HOSTILES.get((java.lang.Object)$$1.getType())).floatValue();
+        return $$1.distanceToSqr((net.minecraft.world.entity.Entity)$$0) <= (double)($$2 * $$2);
     }
 
     public net.minecraft.world.entity.ai.memory.MemoryModuleType<net.minecraft.world.entity.LivingEntity> getMemory() {
         return net.minecraft.world.entity.ai.memory.MemoryModuleType.NEAREST_HOSTILE;
     }
 
-    public boolean isHostile(net.minecraft.world.entity.LivingEntity livingEntity) {
-        return ACCEPTABLE_DISTANCE_FROM_HOSTILES.containsKey((java.lang.Object)livingEntity.getType());
+    public boolean isHostile(net.minecraft.world.entity.LivingEntity $$0) {
+        return ACCEPTABLE_DISTANCE_FROM_HOSTILES.containsKey((java.lang.Object)$$0.getType());
     }
 
     static {