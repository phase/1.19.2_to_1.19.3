--- net/minecraft/world/entity/ai/targeting/TargetingConditions.java
+++ net/minecraft/world/entity/ai/targeting/TargetingConditions.java
@@ -38,8 +38,8 @@
         return $$0;
     }
 
-    public net.minecraft.world.entity.ai.targeting.TargetingConditions range(double distance) {
-        this.range = distance;
+    public net.minecraft.world.entity.ai.targeting.TargetingConditions range(double $$0) {
+        this.range = $$0;
         return this;
     }
 
@@ -53,39 +53,39 @@
         return this;
     }
 
-    public net.minecraft.world.entity.ai.targeting.TargetingConditions selector(@javax.annotation.Nullable java.util.function.Predicate<net.minecraft.world.entity.LivingEntity> customPredicate) {
-        this.selector = customPredicate;
+    public net.minecraft.world.entity.ai.targeting.TargetingConditions selector(@javax.annotation.Nullable java.util.function.Predicate<net.minecraft.world.entity.LivingEntity> $$0) {
+        this.selector = $$0;
         return this;
     }
 
-    public boolean test(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity attacker, net.minecraft.world.entity.LivingEntity target) {
-        if (attacker == target) {
+    public boolean test(@javax.annotation.Nullable net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        if ($$0 == $$1) {
             return false;
         }
-        if (!target.canBeSeenByAnyone()) {
+        if (!$$1.canBeSeenByAnyone()) {
             return false;
         }
-        if (this.selector != null && !this.selector.test((java.lang.Object)target)) {
+        if (this.selector != null && !this.selector.test((java.lang.Object)$$1)) {
             return false;
         }
-        if (attacker == null) {
-            if (this.isCombat && (!target.canBeSeenAsEnemy() || target.level.getDifficulty() == net.minecraft.world.Difficulty.PEACEFUL)) {
+        if ($$0 == null) {
+            if (this.isCombat && (!$$1.canBeSeenAsEnemy() || $$1.level.getDifficulty() == net.minecraft.world.Difficulty.PEACEFUL)) {
                 return false;
             }
         } else {
-            net.minecraft.world.entity.Mob mob;
-            if (this.isCombat && (!attacker.canAttack(target) || !attacker.canAttackType(target.getType()) || attacker.isAlliedTo((net.minecraft.world.entity.Entity)target))) {
+            net.minecraft.world.entity.Mob $$5;
+            if (this.isCombat && (!$$0.canAttack($$1) || !$$0.canAttackType($$1.getType()) || $$0.isAlliedTo((net.minecraft.world.entity.Entity)$$1))) {
                 return false;
             }
             if (this.range > 0.0) {
-                double d = this.testInvisible ? target.getVisibilityPercent((net.minecraft.world.entity.Entity)attacker) : 1.0;
-                double d2 = java.lang.Math.max((double)(this.range * d), (double)2.0);
-                double d3 = attacker.distanceToSqr(target.getX(), target.getY(), target.getZ());
-                if (d3 > d2 * d2) {
+                double $$2 = this.testInvisible ? $$1.getVisibilityPercent((net.minecraft.world.entity.Entity)$$0) : 1.0;
+                double $$3 = java.lang.Math.max((double)(this.range * $$2), (double)2.0);
+                double $$4 = $$0.distanceToSqr($$1.getX(), $$1.getY(), $$1.getZ());
+                if ($$4 > $$3 * $$3) {
                     return false;
                 }
             }
-            if (this.checkLineOfSight && attacker instanceof net.minecraft.world.entity.Mob && !(mob = (net.minecraft.world.entity.Mob)attacker).getSensing().hasLineOfSight((net.minecraft.world.entity.Entity)target)) {
+            if (this.checkLineOfSight && $$0 instanceof net.minecraft.world.entity.Mob && !($$5 = (net.minecraft.world.entity.Mob)$$0).getSensing().hasLineOfSight((net.minecraft.world.entity.Entity)$$1)) {
                 return false;
             }
         }