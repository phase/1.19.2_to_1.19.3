--- net/minecraft/world/entity/npc/VillagerData.java
+++ net/minecraft/world/entity/npc/VillagerData.java
@@ -13,10 +13,10 @@
     public net.minecraft.world.entity.npc.VillagerProfession profession;
     public int level;
 
-    public net.minecraft.world.entity.npc.VillagerData(net.minecraft.world.entity.npc.VillagerType type, net.minecraft.world.entity.npc.VillagerProfession profession, int level) {
-        this.type = type;
-        this.profession = profession;
-        this.level = java.lang.Math.max((int)1, (int)level);
+    public net.minecraft.world.entity.npc.VillagerData(net.minecraft.world.entity.npc.VillagerType $$0, net.minecraft.world.entity.npc.VillagerProfession $$1, int $$2) {
+        this.type = $$0;
+        this.profession = $$1;
+        this.level = java.lang.Math.max((int)1, (int)$$2);
     }
 
     public net.minecraft.world.entity.npc.VillagerType getType() {
@@ -31,37 +31,37 @@
         return this.level;
     }
 
-    public net.minecraft.world.entity.npc.VillagerData setType(net.minecraft.world.entity.npc.VillagerType type) {
-        return new net.minecraft.world.entity.npc.VillagerData(type, this.profession, this.level);
+    public net.minecraft.world.entity.npc.VillagerData setType(net.minecraft.world.entity.npc.VillagerType $$0) {
+        return new net.minecraft.world.entity.npc.VillagerData($$0, this.profession, this.level);
     }
 
-    public net.minecraft.world.entity.npc.VillagerData setProfession(net.minecraft.world.entity.npc.VillagerProfession profession) {
-        return new net.minecraft.world.entity.npc.VillagerData(this.type, profession, this.level);
+    public net.minecraft.world.entity.npc.VillagerData setProfession(net.minecraft.world.entity.npc.VillagerProfession $$0) {
+        return new net.minecraft.world.entity.npc.VillagerData(this.type, $$0, this.level);
     }
 
-    public net.minecraft.world.entity.npc.VillagerData setLevel(int level) {
-        return new net.minecraft.world.entity.npc.VillagerData(this.type, this.profession, level);
+    public net.minecraft.world.entity.npc.VillagerData setLevel(int $$0) {
+        return new net.minecraft.world.entity.npc.VillagerData(this.type, this.profession, $$0);
     }
 
-    public static int getMinXpPerLevel(int level) {
-        return net.minecraft.world.entity.npc.VillagerData.canLevelUp((int)level) ? NEXT_LEVEL_XP_THRESHOLDS[level - 1] : 0;
+    public static int getMinXpPerLevel(int $$0) {
+        return net.minecraft.world.entity.npc.VillagerData.canLevelUp((int)$$0) ? NEXT_LEVEL_XP_THRESHOLDS[$$0 - 1] : 0;
     }
 
-    public static int getMaxXpPerLevel(int level) {
-        return net.minecraft.world.entity.npc.VillagerData.canLevelUp((int)level) ? NEXT_LEVEL_XP_THRESHOLDS[level] : 0;
+    public static int getMaxXpPerLevel(int $$0) {
+        return net.minecraft.world.entity.npc.VillagerData.canLevelUp((int)$$0) ? NEXT_LEVEL_XP_THRESHOLDS[$$0] : 0;
     }
 
-    public static boolean canLevelUp(int level) {
-        return level >= 1 && level < 5;
+    public static boolean canLevelUp(int $$0) {
+        return $$0 >= 1 && $$0 < 5;
     }
 
-    public static /* synthetic */ com.mojang.datafixers.kinds.App lambda$static$5(com.mojang.serialization.codecs.RecordCodecBuilder$Instance codecInstance) {
-        return codecInstance.group((com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_TYPE.byNameCodec().fieldOf("type").orElseGet(() -> net.minecraft.world.entity.npc.VillagerType.PLAINS).forGetter($$0 -> $$0.type), (com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_PROFESSION.byNameCodec().fieldOf("profession").orElseGet(() -> net.minecraft.world.entity.npc.VillagerProfession.NONE).forGetter($$0 -> $$0.profession), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.INT.fieldOf("level").orElse((java.lang.Object)1).forGetter($$0 -> $$0.level)).apply((com.mojang.datafixers.kinds.Applicative)codecInstance, net.minecraft.world.entity.npc.VillagerData::new);
+    public static /* synthetic */ com.mojang.datafixers.kinds.App lambda$static$5(com.mojang.serialization.codecs.RecordCodecBuilder$Instance $$02) {
+        return $$02.group((com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_TYPE.byNameCodec().fieldOf("type").orElseGet(() -> net.minecraft.world.entity.npc.VillagerType.PLAINS).forGetter($$0 -> $$0.type), (com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_PROFESSION.byNameCodec().fieldOf("profession").orElseGet(() -> net.minecraft.world.entity.npc.VillagerProfession.NONE).forGetter($$0 -> $$0.profession), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.INT.fieldOf("level").orElse((java.lang.Object)1).forGetter($$0 -> $$0.level)).apply((com.mojang.datafixers.kinds.Applicative)$$02, net.minecraft.world.entity.npc.VillagerData::new);
     }
 
     static {
         NEXT_LEVEL_XP_THRESHOLDS = new int[]{0, 10, 70, 150, 250};
-        CODEC = com.mojang.serialization.codecs.RecordCodecBuilder.create(codecInstance -> codecInstance.group((com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_TYPE.byNameCodec().fieldOf("type").orElseGet(() -> net.minecraft.world.entity.npc.VillagerType.PLAINS).forGetter($$0 -> $$0.type), (com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_PROFESSION.byNameCodec().fieldOf("profession").orElseGet(() -> net.minecraft.world.entity.npc.VillagerProfession.NONE).forGetter($$0 -> $$0.profession), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.INT.fieldOf("level").orElse((java.lang.Object)1).forGetter($$0 -> $$0.level)).apply((com.mojang.datafixers.kinds.Applicative)codecInstance, net.minecraft.world.entity.npc.VillagerData::new));
+        CODEC = com.mojang.serialization.codecs.RecordCodecBuilder.create($$02 -> $$02.group((com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_TYPE.byNameCodec().fieldOf("type").orElseGet(() -> net.minecraft.world.entity.npc.VillagerType.PLAINS).forGetter($$0 -> $$0.type), (com.mojang.datafixers.kinds.App)net.minecraft.core.Registry.VILLAGER_PROFESSION.byNameCodec().fieldOf("profession").orElseGet(() -> net.minecraft.world.entity.npc.VillagerProfession.NONE).forGetter($$0 -> $$0.profession), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.INT.fieldOf("level").orElse((java.lang.Object)1).forGetter($$0 -> $$0.level)).apply((com.mojang.datafixers.kinds.Applicative)$$02, net.minecraft.world.entity.npc.VillagerData::new));
     }
 }
 