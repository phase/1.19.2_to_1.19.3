--- net/minecraft/world/entity/npc/WanderingTraderSpawner.java
+++ net/minecraft/world/entity/npc/WanderingTraderSpawner.java
@@ -19,22 +19,22 @@
     public int spawnDelay;
     public int spawnChance;
 
-    public net.minecraft.world.entity.npc.WanderingTraderSpawner(net.minecraft.world.level.storage.ServerLevelData serverLevelData) {
+    public net.minecraft.world.entity.npc.WanderingTraderSpawner(net.minecraft.world.level.storage.ServerLevelData $$0) {
         this.random = net.minecraft.util.RandomSource.create();
-        this.serverLevelData = serverLevelData;
+        this.serverLevelData = $$0;
         this.tickDelay = 1200;
-        this.spawnDelay = serverLevelData.getWanderingTraderSpawnDelay();
-        this.spawnChance = serverLevelData.getWanderingTraderSpawnChance();
+        this.spawnDelay = $$0.getWanderingTraderSpawnDelay();
+        this.spawnChance = $$0.getWanderingTraderSpawnChance();
         if (this.spawnDelay == 0 && this.spawnChance == 0) {
             this.spawnDelay = 24000;
-            serverLevelData.setWanderingTraderSpawnDelay(this.spawnDelay);
+            $$0.setWanderingTraderSpawnDelay(this.spawnDelay);
             this.spawnChance = 25;
-            serverLevelData.setWanderingTraderSpawnChance(this.spawnChance);
+            $$0.setWanderingTraderSpawnChance(this.spawnChance);
         }
     }
 
-    public int tick(net.minecraft.server.level.ServerLevel level, boolean spawnHostiles, boolean spawnPassives) {
-        if (!level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DO_TRADER_SPAWNING)) {
+    public int tick(net.minecraft.server.level.ServerLevel $$0, boolean $$1, boolean $$2) {
+        if (!$$0.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DO_TRADER_SPAWNING)) {
             return 0;
         }
         if (--this.tickDelay > 0) {
@@ -47,85 +47,85 @@
             return 0;
         }
         this.spawnDelay = 24000;
-        if (!level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DOMOBSPAWNING)) {
+        if (!$$0.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DOMOBSPAWNING)) {
             return 0;
         }
-        int n = this.spawnChance;
+        int $$3 = this.spawnChance;
         this.spawnChance = net.minecraft.util.Mth.clamp((int)(this.spawnChance + 25), (int)25, (int)75);
         this.serverLevelData.setWanderingTraderSpawnChance(this.spawnChance);
-        if (this.random.nextInt(100) > n) {
+        if (this.random.nextInt(100) > $$3) {
             return 0;
         }
-        if (this.spawn(level)) {
+        if (this.spawn($$0)) {
             this.spawnChance = 25;
             return 1;
         }
         return 0;
     }
 
-    public boolean spawn(net.minecraft.server.level.ServerLevel serverLevel) {
-        net.minecraft.server.level.ServerPlayer serverPlayer = serverLevel.getRandomPlayer();
-        if (serverPlayer == null) {
+    public boolean spawn(net.minecraft.server.level.ServerLevel $$02) {
+        net.minecraft.server.level.ServerPlayer $$1 = $$02.getRandomPlayer();
+        if ($$1 == null) {
             return true;
         }
         if (this.random.nextInt(10) != 0) {
             return false;
         }
-        net.minecraft.core.BlockPos blockPos = serverPlayer.blockPosition();
-        int n = 48;
-        net.minecraft.world.entity.ai.village.poi.PoiManager poiManager = serverLevel.getPoiManager();
-        java.util.Optional optional = poiManager.find($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.MEETING), $$0 -> true, blockPos, 48, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY);
-        net.minecraft.core.BlockPos blockPos2 = (net.minecraft.core.BlockPos)optional.orElse((java.lang.Object)blockPos);
-        net.minecraft.core.BlockPos blockPos3 = this.findSpawnPositionNear((net.minecraft.world.level.LevelReader)serverLevel, blockPos2, 48);
-        if (blockPos3 != null && this.hasEnoughSpace((net.minecraft.world.level.BlockGetter)serverLevel, blockPos3)) {
-            if (serverLevel.getBiome(blockPos3).is(net.minecraft.tags.BiomeTags.WITHOUT_WANDERING_TRADER_SPAWNS)) {
+        net.minecraft.core.BlockPos $$2 = $$1.blockPosition();
+        int $$3 = 48;
+        net.minecraft.world.entity.ai.village.poi.PoiManager $$4 = $$02.getPoiManager();
+        java.util.Optional $$5 = $$4.find($$0 -> $$0.is(net.minecraft.world.entity.ai.village.poi.PoiTypes.MEETING), $$0 -> true, $$2, 48, net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy.ANY);
+        net.minecraft.core.BlockPos $$6 = (net.minecraft.core.BlockPos)$$5.orElse((java.lang.Object)$$2);
+        net.minecraft.core.BlockPos $$7 = this.findSpawnPositionNear((net.minecraft.world.level.LevelReader)$$02, $$6, 48);
+        if ($$7 != null && this.hasEnoughSpace((net.minecraft.world.level.BlockGetter)$$02, $$7)) {
+            if ($$02.getBiome($$7).is(net.minecraft.tags.BiomeTags.WITHOUT_WANDERING_TRADER_SPAWNS)) {
                 return false;
             }
-            net.minecraft.world.entity.npc.WanderingTrader wanderingTrader = (net.minecraft.world.entity.npc.WanderingTrader)net.minecraft.world.entity.EntityType.WANDERING_TRADER.spawn(serverLevel, null, null, null, blockPos3, net.minecraft.world.entity.MobSpawnType.EVENT, false, false);
-            if (wanderingTrader != null) {
-                for (int i = 0; i < 2; ++i) {
-                    this.tryToSpawnLlamaFor(serverLevel, wanderingTrader, 4);
+            net.minecraft.world.entity.npc.WanderingTrader $$8 = (net.minecraft.world.entity.npc.WanderingTrader)net.minecraft.world.entity.EntityType.WANDERING_TRADER.spawn($$02, null, null, null, $$7, net.minecraft.world.entity.MobSpawnType.EVENT, false, false);
+            if ($$8 != null) {
+                for (int $$9 = 0; $$9 < 2; ++$$9) {
+                    this.tryToSpawnLlamaFor($$02, $$8, 4);
                 }
-                this.serverLevelData.setWanderingTraderId(wanderingTrader.getUUID());
-                wanderingTrader.setDespawnDelay(48000);
-                wanderingTrader.setWanderTarget(blockPos2);
-                wanderingTrader.restrictTo(blockPos2, 16);
+                this.serverLevelData.setWanderingTraderId($$8.getUUID());
+                $$8.setDespawnDelay(48000);
+                $$8.setWanderTarget($$6);
+                $$8.restrictTo($$6, 16);
                 return true;
             }
         }
         return false;
     }
 
-    public void tryToSpawnLlamaFor(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.world.entity.npc.WanderingTrader trader, int maxDistance) {
-        net.minecraft.core.BlockPos blockPos = this.findSpawnPositionNear((net.minecraft.world.level.LevelReader)serverLevel, trader.blockPosition(), maxDistance);
-        if (blockPos == null) {
+    public void tryToSpawnLlamaFor(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.entity.npc.WanderingTrader $$1, int $$2) {
+        net.minecraft.core.BlockPos $$3 = this.findSpawnPositionNear((net.minecraft.world.level.LevelReader)$$0, $$1.blockPosition(), $$2);
+        if ($$3 == null) {
             return;
         }
-        net.minecraft.world.entity.animal.horse.TraderLlama traderLlama = (net.minecraft.world.entity.animal.horse.TraderLlama)net.minecraft.world.entity.EntityType.TRADER_LLAMA.spawn(serverLevel, null, null, null, blockPos, net.minecraft.world.entity.MobSpawnType.EVENT, false, false);
-        if (traderLlama == null) {
+        net.minecraft.world.entity.animal.horse.TraderLlama $$4 = (net.minecraft.world.entity.animal.horse.TraderLlama)net.minecraft.world.entity.EntityType.TRADER_LLAMA.spawn($$0, null, null, null, $$3, net.minecraft.world.entity.MobSpawnType.EVENT, false, false);
+        if ($$4 == null) {
             return;
         }
-        traderLlama.setLeashedTo((net.minecraft.world.entity.Entity)trader, true);
+        $$4.setLeashedTo((net.minecraft.world.entity.Entity)$$1, true);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.core.BlockPos findSpawnPositionNear(net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos, int maxDistance) {
-        net.minecraft.core.BlockPos blockPos = null;
-        for (int i = 0; i < 10; ++i) {
-            int n;
-            int n2;
-            int n3 = pos.getX() + this.random.nextInt(maxDistance * 2) - maxDistance;
-            net.minecraft.core.BlockPos blockPos2 = new net.minecraft.core.BlockPos(n3, n2 = level.getHeight(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, n3, n = pos.getZ() + this.random.nextInt(maxDistance * 2) - maxDistance), n);
-            if (!net.minecraft.world.level.NaturalSpawner.isSpawnPositionOk((net.minecraft.world.entity.SpawnPlacements$Type)net.minecraft.world.entity.SpawnPlacements$Type.ON_GROUND, (net.minecraft.world.level.LevelReader)level, (net.minecraft.core.BlockPos)blockPos2, (net.minecraft.world.entity.EntityType)net.minecraft.world.entity.EntityType.WANDERING_TRADER)) continue;
-            blockPos = blockPos2;
+    public net.minecraft.core.BlockPos findSpawnPositionNear(net.minecraft.world.level.LevelReader $$0, net.minecraft.core.BlockPos $$1, int $$2) {
+        net.minecraft.core.BlockPos $$3 = null;
+        for (int $$4 = 0; $$4 < 10; ++$$4) {
+            int $$6;
+            int $$7;
+            int $$5 = $$1.getX() + this.random.nextInt($$2 * 2) - $$2;
+            net.minecraft.core.BlockPos $$8 = new net.minecraft.core.BlockPos($$5, $$7 = $$0.getHeight(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, $$5, $$6 = $$1.getZ() + this.random.nextInt($$2 * 2) - $$2), $$6);
+            if (!net.minecraft.world.level.NaturalSpawner.isSpawnPositionOk((net.minecraft.world.entity.SpawnPlacements$Type)net.minecraft.world.entity.SpawnPlacements$Type.ON_GROUND, (net.minecraft.world.level.LevelReader)$$0, (net.minecraft.core.BlockPos)$$8, (net.minecraft.world.entity.EntityType)net.minecraft.world.entity.EntityType.WANDERING_TRADER)) continue;
+            $$3 = $$8;
             break;
         }
-        return blockPos;
+        return $$3;
     }
 
-    public boolean hasEnoughSpace(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        for (net.minecraft.core.BlockPos blockPos : net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)pos, (net.minecraft.core.BlockPos)pos.offset(1, 2, 1))) {
-            if (level.getBlockState(blockPos).getCollisionShape(level, blockPos).isEmpty()) continue;
+    public boolean hasEnoughSpace(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1) {
+        for (net.minecraft.core.BlockPos $$2 : net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)$$1, (net.minecraft.core.BlockPos)$$1.offset(1, 2, 1))) {
+            if ($$0.getBlockState($$2).getCollisionShape($$0, $$2).isEmpty()) continue;
             return false;
         }
         return true;