--- net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
+++ net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
@@ -87,22 +87,22 @@
         this.getEntityData().define(DATA_PHASE, (java.lang.Object)net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.HOVERING.getId());
     }
 
-    public double[] getLatencyPos(int bufferIndexOffset, float partialTicks) {
+    public double[] getLatencyPos(int $$0, float $$1) {
         if (this.isDeadOrDying()) {
-            partialTicks = 0.0f;
+            $$1 = 0.0f;
         }
-        partialTicks = 1.0f - partialTicks;
-        int n = this.posPointer - bufferIndexOffset & 0x3F;
-        int n2 = this.posPointer - bufferIndexOffset - 1 & 0x3F;
-        double[] dArray = new double[3];
-        double d = this.positions[n][0];
-        double d2 = net.minecraft.util.Mth.wrapDegrees((double)(this.positions[n2][0] - d));
-        dArray[0] = d + d2 * (double)partialTicks;
-        d = this.positions[n][1];
-        d2 = this.positions[n2][1] - d;
-        dArray[1] = d + d2 * (double)partialTicks;
-        dArray[2] = net.minecraft.util.Mth.lerp((double)partialTicks, (double)this.positions[n][2], (double)this.positions[n2][2]);
-        return dArray;
+        $$1 = 1.0f - $$1;
+        int $$2 = this.posPointer - $$0 & 0x3F;
+        int $$3 = this.posPointer - $$0 - 1 & 0x3F;
+        double[] $$4 = new double[3];
+        double $$5 = this.positions[$$2][0];
+        double $$6 = net.minecraft.util.Mth.wrapDegrees((double)(this.positions[$$3][0] - $$5));
+        $$4[0] = $$5 + $$6 * (double)$$1;
+        $$5 = this.positions[$$2][1];
+        $$6 = this.positions[$$3][1] - $$5;
+        $$4[1] = $$5 + $$6 * (double)$$1;
+        $$4[2] = net.minecraft.util.Mth.lerp((double)$$1, (double)this.positions[$$2][2], (double)this.positions[$$3][2]);
+        return $$4;
     }
 
     public void aiStep() {
@@ -258,8 +258,8 @@
         }
     }
 
-    public void tickPart(net.minecraft.world.entity.boss.EnderDragonPart part, double offsetX, double offsetY, double offsetZ) {
-        part.setPos(this.getX() + offsetX, this.getY() + offsetY, this.getZ() + offsetZ);
+    public void tickPart(net.minecraft.world.entity.boss.EnderDragonPart $$0, double $$1, double $$2, double $$3) {
+        $$0.setPos(this.getX() + $$1, this.getY() + $$2, this.getZ() + $$3);
     }
 
     public float getHeadYOffset() {
@@ -293,83 +293,83 @@
         }
     }
 
-    public void knockBack(java.util.List<net.minecraft.world.entity.Entity> entities) {
-        double d = (this.body.getBoundingBox().minX + this.body.getBoundingBox().maxX) / 2.0;
-        double d2 = (this.body.getBoundingBox().minZ + this.body.getBoundingBox().maxZ) / 2.0;
-        for (net.minecraft.world.entity.Entity entity : entities) {
-            if (!(entity instanceof net.minecraft.world.entity.LivingEntity)) continue;
-            double d3 = entity.getX() - d;
-            double d4 = entity.getZ() - d2;
-            double d5 = java.lang.Math.max((double)(d3 * d3 + d4 * d4), (double)0.1);
-            entity.push(d3 / d5 * 4.0, (double)0.2f, d4 / d5 * 4.0);
-            if (this.phaseManager.getCurrentPhase().isSitting() || ((net.minecraft.world.entity.LivingEntity)entity).getLastHurtByMobTimestamp() >= entity.tickCount - 2) continue;
-            entity.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), 5.0f);
-            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, entity);
+    public void knockBack(java.util.List<net.minecraft.world.entity.Entity> $$0) {
+        double $$1 = (this.body.getBoundingBox().minX + this.body.getBoundingBox().maxX) / 2.0;
+        double $$2 = (this.body.getBoundingBox().minZ + this.body.getBoundingBox().maxZ) / 2.0;
+        for (net.minecraft.world.entity.Entity $$3 : $$0) {
+            if (!($$3 instanceof net.minecraft.world.entity.LivingEntity)) continue;
+            double $$4 = $$3.getX() - $$1;
+            double $$5 = $$3.getZ() - $$2;
+            double $$6 = java.lang.Math.max((double)($$4 * $$4 + $$5 * $$5), (double)0.1);
+            $$3.push($$4 / $$6 * 4.0, (double)0.2f, $$5 / $$6 * 4.0);
+            if (this.phaseManager.getCurrentPhase().isSitting() || ((net.minecraft.world.entity.LivingEntity)$$3).getLastHurtByMobTimestamp() >= $$3.tickCount - 2) continue;
+            $$3.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), 5.0f);
+            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, $$3);
         }
     }
 
-    public void hurt(java.util.List<net.minecraft.world.entity.Entity> entities) {
-        for (net.minecraft.world.entity.Entity entity : entities) {
-            if (!(entity instanceof net.minecraft.world.entity.LivingEntity)) continue;
-            entity.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), 10.0f);
-            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, entity);
+    public void hurt(java.util.List<net.minecraft.world.entity.Entity> $$0) {
+        for (net.minecraft.world.entity.Entity $$1 : $$0) {
+            if (!($$1 instanceof net.minecraft.world.entity.LivingEntity)) continue;
+            $$1.hurt(net.minecraft.world.damagesource.DamageSource.mobAttack((net.minecraft.world.entity.LivingEntity)this), 10.0f);
+            this.doEnchantDamageEffects((net.minecraft.world.entity.LivingEntity)this, $$1);
         }
     }
 
-    public float rotWrap(double angle) {
-        return (float)net.minecraft.util.Mth.wrapDegrees((double)angle);
+    public float rotWrap(double $$0) {
+        return (float)net.minecraft.util.Mth.wrapDegrees((double)$$0);
     }
 
-    public boolean checkWalls(net.minecraft.world.phys.AABB area) {
-        int n = net.minecraft.util.Mth.floor((double)area.minX);
-        int n2 = net.minecraft.util.Mth.floor((double)area.minY);
-        int n3 = net.minecraft.util.Mth.floor((double)area.minZ);
-        int n4 = net.minecraft.util.Mth.floor((double)area.maxX);
-        int n5 = net.minecraft.util.Mth.floor((double)area.maxY);
-        int n6 = net.minecraft.util.Mth.floor((double)area.maxZ);
-        boolean bl = false;
-        boolean bl2 = false;
-        for (int i = n; i <= n4; ++i) {
-            for (int j = n2; j <= n5; ++j) {
-                for (int k = n3; k <= n6; ++k) {
-                    net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(i, j, k);
-                    net.minecraft.world.level.block.state.BlockState blockState = this.level.getBlockState(blockPos);
-                    if (blockState.isAir() || blockState.is(net.minecraft.tags.BlockTags.DRAGON_TRANSPARENT)) continue;
-                    if (!this.level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_MOBGRIEFING) || blockState.is(net.minecraft.tags.BlockTags.DRAGON_IMMUNE)) {
-                        bl = true;
+    public boolean checkWalls(net.minecraft.world.phys.AABB $$0) {
+        int $$1 = net.minecraft.util.Mth.floor((double)$$0.minX);
+        int $$2 = net.minecraft.util.Mth.floor((double)$$0.minY);
+        int $$3 = net.minecraft.util.Mth.floor((double)$$0.minZ);
+        int $$4 = net.minecraft.util.Mth.floor((double)$$0.maxX);
+        int $$5 = net.minecraft.util.Mth.floor((double)$$0.maxY);
+        int $$6 = net.minecraft.util.Mth.floor((double)$$0.maxZ);
+        boolean $$7 = false;
+        boolean $$8 = false;
+        for (int $$9 = $$1; $$9 <= $$4; ++$$9) {
+            for (int $$10 = $$2; $$10 <= $$5; ++$$10) {
+                for (int $$11 = $$3; $$11 <= $$6; ++$$11) {
+                    net.minecraft.core.BlockPos $$12 = new net.minecraft.core.BlockPos($$9, $$10, $$11);
+                    net.minecraft.world.level.block.state.BlockState $$13 = this.level.getBlockState($$12);
+                    if ($$13.isAir() || $$13.is(net.minecraft.tags.BlockTags.DRAGON_TRANSPARENT)) continue;
+                    if (!this.level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_MOBGRIEFING) || $$13.is(net.minecraft.tags.BlockTags.DRAGON_IMMUNE)) {
+                        $$7 = true;
                         continue;
                     }
-                    bl2 = this.level.removeBlock(blockPos, false) || bl2;
+                    $$8 = this.level.removeBlock($$12, false) || $$8;
                 }
             }
         }
-        if (bl2) {
-            net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(n + this.random.nextInt(n4 - n + 1), n2 + this.random.nextInt(n5 - n2 + 1), n3 + this.random.nextInt(n6 - n3 + 1));
-            this.level.levelEvent(2008, blockPos, 0);
+        if ($$8) {
+            net.minecraft.core.BlockPos $$14 = new net.minecraft.core.BlockPos($$1 + this.random.nextInt($$4 - $$1 + 1), $$2 + this.random.nextInt($$5 - $$2 + 1), $$3 + this.random.nextInt($$6 - $$3 + 1));
+            this.level.levelEvent(2008, $$14, 0);
         }
-        return bl;
+        return $$7;
     }
 
-    public boolean hurt(net.minecraft.world.entity.boss.EnderDragonPart part, net.minecraft.world.damagesource.DamageSource source, float damage) {
+    public boolean hurt(net.minecraft.world.entity.boss.EnderDragonPart $$0, net.minecraft.world.damagesource.DamageSource $$1, float $$2) {
         if (this.phaseManager.getCurrentPhase().getPhase() == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.DYING) {
             return false;
         }
-        damage = this.phaseManager.getCurrentPhase().onHurt(source, damage);
-        if (part != this.head) {
-            damage = damage / 4.0f + java.lang.Math.min((float)damage, (float)1.0f);
+        $$2 = this.phaseManager.getCurrentPhase().onHurt($$1, $$2);
+        if ($$0 != this.head) {
+            $$2 = $$2 / 4.0f + java.lang.Math.min((float)$$2, (float)1.0f);
         }
-        if (damage < 0.01f) {
+        if ($$2 < 0.01f) {
             return false;
         }
-        if (source.getEntity() instanceof net.minecraft.world.entity.player.Player || source.isExplosion()) {
-            float f = this.getHealth();
-            this.reallyHurt(source, damage);
+        if ($$1.getEntity() instanceof net.minecraft.world.entity.player.Player || $$1.isExplosion()) {
+            float $$3 = this.getHealth();
+            this.reallyHurt($$1, $$2);
             if (this.isDeadOrDying() && !this.phaseManager.getCurrentPhase().isSitting()) {
                 this.setHealth(1.0f);
                 this.phaseManager.setPhase(net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.DYING);
             }
             if (this.phaseManager.getCurrentPhase().isSitting()) {
-                this.sittingDamageReceived = this.sittingDamageReceived + f - this.getHealth();
+                this.sittingDamageReceived = this.sittingDamageReceived + $$3 - this.getHealth();
                 if (this.sittingDamageReceived > 0.25f * this.getMaxHealth()) {
                     this.sittingDamageReceived = 0.0f;
                     this.phaseManager.setPhase(net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.TAKEOFF);
@@ -379,15 +379,15 @@
         return true;
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
         if (!this.level.isClientSide) {
-            return this.hurt(this.body, source, amount);
+            return this.hurt(this.body, $$0, $$1);
         }
         return false;
     }
 
-    public boolean reallyHurt(net.minecraft.world.damagesource.DamageSource damageSource, float amount) {
-        return super.hurt(damageSource, amount);
+    public boolean reallyHurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        return super.hurt($$0, $$1);
     }
 
     public void kill() {
@@ -487,120 +487,116 @@
         return this.findClosestNode(this.getX(), this.getY(), this.getZ());
     }
 
-    public int findClosestNode(double x, double y, double z) {
-        float f = 10000.0f;
-        int n = 0;
-        net.minecraft.world.level.pathfinder.Node node = new net.minecraft.world.level.pathfinder.Node(net.minecraft.util.Mth.floor((double)x), net.minecraft.util.Mth.floor((double)y), net.minecraft.util.Mth.floor((double)z));
-        int n2 = 0;
+    public int findClosestNode(double $$0, double $$1, double $$2) {
+        float $$3 = 10000.0f;
+        int $$4 = 0;
+        net.minecraft.world.level.pathfinder.Node $$5 = new net.minecraft.world.level.pathfinder.Node(net.minecraft.util.Mth.floor((double)$$0), net.minecraft.util.Mth.floor((double)$$1), net.minecraft.util.Mth.floor((double)$$2));
+        int $$6 = 0;
         if (this.dragonFight == null || this.dragonFight.getCrystalsAlive() == 0) {
-            n2 = 12;
+            $$6 = 12;
         }
-        for (int i = n2; i < 24; ++i) {
-            float f2;
-            if (this.nodes[i] == null || !((f2 = this.nodes[i].distanceToSqr(node)) < f)) continue;
-            f = f2;
-            n = i;
+        for (int $$7 = $$6; $$7 < 24; ++$$7) {
+            float $$8;
+            if (this.nodes[$$7] == null || !(($$8 = this.nodes[$$7].distanceToSqr($$5)) < $$3)) continue;
+            $$3 = $$8;
+            $$4 = $$7;
         }
-        return n;
+        return $$4;
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.pathfinder.Path findPath(int startIndex, int finishIndex, @javax.annotation.Nullable net.minecraft.world.level.pathfinder.Node andThen) {
-        net.minecraft.world.level.pathfinder.Node node;
-        for (int i = 0; i < 24; ++i) {
-            node = this.nodes[i];
-            node.closed = false;
-            node.f = 0.0f;
-            node.g = 0.0f;
-            node.h = 0.0f;
-            node.cameFrom = null;
-            node.heapIdx = -1;
+    public net.minecraft.world.level.pathfinder.Path findPath(int $$0, int $$1, @javax.annotation.Nullable net.minecraft.world.level.pathfinder.Node $$2) {
+        for (int $$3 = 0; $$3 < 24; ++$$3) {
+            net.minecraft.world.level.pathfinder.Node $$4 = this.nodes[$$3];
+            $$4.closed = false;
+            $$4.f = 0.0f;
+            $$4.g = 0.0f;
+            $$4.h = 0.0f;
+            $$4.cameFrom = null;
+            $$4.heapIdx = -1;
         }
-        net.minecraft.world.level.pathfinder.Node node2 = this.nodes[startIndex];
-        node = this.nodes[finishIndex];
-        node2.g = 0.0f;
-        node2.f = node2.h = node2.distanceTo(node);
+        net.minecraft.world.level.pathfinder.Node $$5 = this.nodes[$$0];
+        net.minecraft.world.level.pathfinder.Node $$6 = this.nodes[$$1];
+        $$5.g = 0.0f;
+        $$5.f = $$5.h = $$5.distanceTo($$6);
         this.openSet.clear();
-        this.openSet.insert(node2);
-        net.minecraft.world.level.pathfinder.Node node3 = node2;
-        int n = 0;
+        this.openSet.insert($$5);
+        net.minecraft.world.level.pathfinder.Node $$7 = $$5;
+        int $$8 = 0;
         if (this.dragonFight == null || this.dragonFight.getCrystalsAlive() == 0) {
-            n = 12;
+            $$8 = 12;
         }
         while (!this.openSet.isEmpty()) {
-            int n2;
-            net.minecraft.world.level.pathfinder.Node node4 = this.openSet.pop();
-            if (node4.equals((java.lang.Object)node)) {
-                if (andThen != null) {
-                    andThen.cameFrom = node;
-                    node = andThen;
+            net.minecraft.world.level.pathfinder.Node $$9 = this.openSet.pop();
+            if ($$9.equals((java.lang.Object)$$6)) {
+                if ($$2 != null) {
+                    $$2.cameFrom = $$6;
+                    $$6 = $$2;
                 }
-                return this.reconstructPath(node2, node);
+                return this.reconstructPath($$5, $$6);
             }
-            if (node4.distanceTo(node) < node3.distanceTo(node)) {
-                node3 = node4;
+            if ($$9.distanceTo($$6) < $$7.distanceTo($$6)) {
+                $$7 = $$9;
             }
-            node4.closed = true;
-            int n3 = 0;
-            for (n2 = 0;
- n2 < 24; ++n2) {
-                if (this.nodes[n2] != node4) continue;
-                n3 = n2;
+            $$9.closed = true;
+            int $$10 = 0;
+            for (int $$11 = 0; $$11 < 24; ++$$11) {
+                if (this.nodes[$$11] != $$9) continue;
+                $$10 = $$11;
                 break;
             }
-            for (n2 = n;
- n2 < 24; ++n2) {
-                if ((this.nodeAdjacency[n3] & 1 << n2) <= 0) continue;
-                net.minecraft.world.level.pathfinder.Node node5 = this.nodes[n2];
-                if (node5.closed) continue;
-                float f = node4.g + node4.distanceTo(node5);
-                if (node5.inOpenSet() && !(f < node5.g)) continue;
-                node5.cameFrom = node4;
-                node5.g = f;
-                node5.h = node5.distanceTo(node);
-                if (node5.inOpenSet()) {
-                    this.openSet.changeCost(node5, node5.g + node5.h);
+            for (int $$12 = $$8; $$12 < 24; ++$$12) {
+                if ((this.nodeAdjacency[$$10] & 1 << $$12) <= 0) continue;
+                net.minecraft.world.level.pathfinder.Node $$13 = this.nodes[$$12];
+                if ($$13.closed) continue;
+                float $$14 = $$9.g + $$9.distanceTo($$13);
+                if ($$13.inOpenSet() && !($$14 < $$13.g)) continue;
+                $$13.cameFrom = $$9;
+                $$13.g = $$14;
+                $$13.h = $$13.distanceTo($$6);
+                if ($$13.inOpenSet()) {
+                    this.openSet.changeCost($$13, $$13.g + $$13.h);
                     continue;
                 }
-                node5.f = node5.g + node5.h;
-                this.openSet.insert(node5);
+                $$13.f = $$13.g + $$13.h;
+                this.openSet.insert($$13);
             }
         }
-        if (node3 == node2) {
+        if ($$7 == $$5) {
             return null;
         }
-        LOGGER.debug("Failed to find path from {} to {}", (java.lang.Object)startIndex, (java.lang.Object)finishIndex);
-        if (andThen != null) {
-            andThen.cameFrom = node3;
-            node3 = andThen;
+        LOGGER.debug("Failed to find path from {} to {}", (java.lang.Object)$$0, (java.lang.Object)$$1);
+        if ($$2 != null) {
+            $$2.cameFrom = $$7;
+            $$7 = $$2;
         }
-        return this.reconstructPath(node2, node3);
+        return this.reconstructPath($$5, $$7);
     }
 
-    public net.minecraft.world.level.pathfinder.Path reconstructPath(net.minecraft.world.level.pathfinder.Node start, net.minecraft.world.level.pathfinder.Node finish) {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        net.minecraft.world.level.pathfinder.Node node = finish;
-        arrayList.add(0, (java.lang.Object)node);
-        while (node.cameFrom != null) {
-            node = node.cameFrom;
-            arrayList.add(0, (java.lang.Object)node);
+    public net.minecraft.world.level.pathfinder.Path reconstructPath(net.minecraft.world.level.pathfinder.Node $$0, net.minecraft.world.level.pathfinder.Node $$1) {
+        java.util.ArrayList $$2 = com.google.common.collect.Lists.newArrayList();
+        net.minecraft.world.level.pathfinder.Node $$3 = $$1;
+        $$2.add(0, (java.lang.Object)$$3);
+        while ($$3.cameFrom != null) {
+            $$3 = $$3.cameFrom;
+            $$2.add(0, (java.lang.Object)$$3);
         }
-        return new net.minecraft.world.level.pathfinder.Path((java.util.List)arrayList, new net.minecraft.core.BlockPos(finish.x, finish.y, finish.z), true);
+        return new net.minecraft.world.level.pathfinder.Path((java.util.List)$$2, new net.minecraft.core.BlockPos($$1.x, $$1.y, $$1.z), true);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putInt("DragonPhase", this.phaseManager.getCurrentPhase().getPhase().getId());
-        compound.putInt("DragonDeathTime", this.dragonDeathTime);
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putInt("DragonPhase", this.phaseManager.getCurrentPhase().getPhase().getId());
+        $$0.putInt("DragonDeathTime", this.dragonDeathTime);
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        if (compound.contains("DragonPhase")) {
-            this.phaseManager.setPhase(net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.getById((int)compound.getInt("DragonPhase")));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        if ($$0.contains("DragonPhase")) {
+            this.phaseManager.setPhase(net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.getById((int)$$0.getInt("DragonPhase")));
         }
-        if (compound.contains("DragonDeathTime")) {
-            this.dragonDeathTime = compound.getInt("DragonDeathTime");
+        if ($$0.contains("DragonDeathTime")) {
+            this.dragonDeathTime = $$0.getInt("DragonDeathTime");
         }
     }
 
@@ -623,7 +619,7 @@
         return net.minecraft.sounds.SoundEvents.ENDER_DRAGON_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.ENDER_DRAGON_HURT;
     }
 
@@ -631,58 +627,67 @@
         return 5.0f;
     }
 
-    public float getHeadPartYOffset(int partIndex, double[] spineEndOffsets, double[] headPartOffsets) {
-        double d;
-        net.minecraft.world.entity.boss.enderdragon.phases.DragonPhaseInstance dragonPhaseInstance = this.phaseManager.getCurrentPhase();
-        net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase enderDragonPhase = dragonPhaseInstance.getPhase();
-        if (enderDragonPhase == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.LANDING || enderDragonPhase == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.TAKEOFF) {
-            net.minecraft.core.BlockPos blockPos = this.level.getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.MOTION_BLOCKING_NO_LEAVES, net.minecraft.world.level.levelgen.feature.EndPodiumFeature.END_PODIUM_LOCATION);
-            double d2 = java.lang.Math.max((double)(java.lang.Math.sqrt((double)blockPos.distToCenterSqr((net.minecraft.core.Position)this.position())) / 4.0), (double)1.0);
-            d = (double)partIndex / d2;
+    public float getHeadPartYOffset(int $$0, double[] $$1, double[] $$2) {
+        double $$10;
+        net.minecraft.world.entity.boss.enderdragon.phases.DragonPhaseInstance $$3 = this.phaseManager.getCurrentPhase();
+        net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase $$4 = $$3.getPhase();
+        if ($$4 == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.LANDING || $$4 == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.TAKEOFF) {
+            net.minecraft.core.BlockPos $$5 = this.level.getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.MOTION_BLOCKING_NO_LEAVES, net.minecraft.world.level.levelgen.feature.EndPodiumFeature.END_PODIUM_LOCATION);
+            double $$6 = java.lang.Math.max((double)(java.lang.Math.sqrt((double)$$5.distToCenterSqr((net.minecraft.core.Position)this.position())) / 4.0), (double)1.0);
+            double $$7 = (double)$$0 / $$6;
+        } else if ($$3.isSitting()) {
+            double $$8 = $$0;
+        } else if ($$0 == 6) {
+            double $$9 = 0.0;
         } else {
-            d = dragonPhaseInstance.isSitting() ? (double)partIndex : (partIndex == 6 ? 0.0 : headPartOffsets[1] - spineEndOffsets[1]);
+            $$10 = $$2[1] - $$1[1];
         }
-        return (float)d;
+        return (float)$$10;
     }
 
-    public net.minecraft.world.phys.Vec3 getHeadLookVector(float partialTicks) {
-        net.minecraft.world.phys.Vec3 vec3;
-        net.minecraft.world.entity.boss.enderdragon.phases.DragonPhaseInstance dragonPhaseInstance = this.phaseManager.getCurrentPhase();
-        net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase enderDragonPhase = dragonPhaseInstance.getPhase();
-        if (enderDragonPhase == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.LANDING || enderDragonPhase == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.TAKEOFF) {
-            net.minecraft.core.BlockPos blockPos = this.level.getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.MOTION_BLOCKING_NO_LEAVES, net.minecraft.world.level.levelgen.feature.EndPodiumFeature.END_PODIUM_LOCATION);
-            float f = java.lang.Math.max((float)((float)java.lang.Math.sqrt((double)blockPos.distToCenterSqr((net.minecraft.core.Position)this.position())) / 4.0f), (float)1.0f);
-            float f2 = 6.0f / f;
-            float f3 = this.getXRot();
-            float f4 = 1.5f;
-            this.setXRot(-f2 * 1.5f * 5.0f);
-            vec3 = this.getViewVector(partialTicks);
-            this.setXRot(f3);
-        } else if (dragonPhaseInstance.isSitting()) {
-            float f = this.getXRot();
-            float f5 = 1.5f;
+    public net.minecraft.world.phys.Vec3 getHeadLookVector(float $$0) {
+        net.minecraft.world.phys.Vec3 $$12;
+        net.minecraft.world.entity.boss.enderdragon.phases.DragonPhaseInstance $$1 = this.phaseManager.getCurrentPhase();
+        net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase $$2 = $$1.getPhase();
+        if ($$2 == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.LANDING || $$2 == net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.TAKEOFF) {
+            net.minecraft.core.BlockPos $$3 = this.level.getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.MOTION_BLOCKING_NO_LEAVES, net.minecraft.world.level.levelgen.feature.EndPodiumFeature.END_PODIUM_LOCATION);
+            float $$4 = java.lang.Math.max((float)((float)java.lang.Math.sqrt((double)$$3.distToCenterSqr((net.minecraft.core.Position)this.position())) / 4.0f), (float)1.0f);
+            float $$5 = 6.0f / $$4;
+            float $$6 = this.getXRot();
+            float $$7 = 1.5f;
+            this.setXRot(-$$5 * 1.5f * 5.0f);
+            net.minecraft.world.phys.Vec3 $$8 = this.getViewVector($$0);
+            this.setXRot($$6);
+        } else if ($$1.isSitting()) {
+            float $$9 = this.getXRot();
+            float $$10 = 1.5f;
             this.setXRot(-45.0f);
-            vec3 = this.getViewVector(partialTicks);
-            this.setXRot(f);
+            net.minecraft.world.phys.Vec3 $$11 = this.getViewVector($$0);
+            this.setXRot($$9);
         } else {
-            vec3 = this.getViewVector(partialTicks);
+            $$12 = this.getViewVector($$0);
         }
-        return vec3;
+        return $$12;
     }
 
-    public void onCrystalDestroyed(net.minecraft.world.entity.boss.enderdragon.EndCrystal crystal, net.minecraft.core.BlockPos pos, net.minecraft.world.damagesource.DamageSource damageSource) {
-        net.minecraft.world.entity.player.Player player = damageSource.getEntity() instanceof net.minecraft.world.entity.player.Player ? (net.minecraft.world.entity.player.Player)damageSource.getEntity() : this.level.getNearestPlayer(CRYSTAL_DESTROY_TARGETING, (double)pos.getX(), (double)pos.getY(), (double)pos.getZ());
-        if (crystal == this.nearestCrystal) {
-            this.hurt(this.head, net.minecraft.world.damagesource.DamageSource.explosion((net.minecraft.world.entity.LivingEntity)player), 10.0f);
+    public void onCrystalDestroyed(net.minecraft.world.entity.boss.enderdragon.EndCrystal $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.damagesource.DamageSource $$2) {
+        net.minecraft.world.entity.player.Player $$4;
+        if ($$2.getEntity() instanceof net.minecraft.world.entity.player.Player) {
+            net.minecraft.world.entity.player.Player $$3 = (net.minecraft.world.entity.player.Player)$$2.getEntity();
+        } else {
+            $$4 = this.level.getNearestPlayer(CRYSTAL_DESTROY_TARGETING, (double)$$1.getX(), (double)$$1.getY(), (double)$$1.getZ());
         }
-        this.phaseManager.getCurrentPhase().onCrystalDestroyed(crystal, pos, damageSource, player);
+        if ($$0 == this.nearestCrystal) {
+            this.hurt(this.head, net.minecraft.world.damagesource.DamageSource.explosion((net.minecraft.world.entity.LivingEntity)$$4), 10.0f);
+        }
+        this.phaseManager.getCurrentPhase().onCrystalDestroyed($$0, $$1, $$2, $$4);
     }
 
-    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> key) {
-        if (DATA_PHASE.equals(key) && this.level.isClientSide) {
+    public void onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor<?> $$0) {
+        if (DATA_PHASE.equals($$0) && this.level.isClientSide) {
             this.phaseManager.setPhase(net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase.getById((int)((java.lang.Integer)this.getEntityData().get(DATA_PHASE))));
         }
-        super.onSyncedDataUpdated(key);
+        super.onSyncedDataUpdated($$0);
     }
 
     public net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhaseManager getPhaseManager() {
@@ -698,7 +703,7 @@
         return false;
     }
 
-    public boolean canRide(net.minecraft.world.entity.Entity entity) {
+    public boolean canRide(net.minecraft.world.entity.Entity $$0) {
         return false;
     }
 