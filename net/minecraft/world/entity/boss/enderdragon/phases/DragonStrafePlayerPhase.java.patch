--- net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase.java
+++ net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase.java
@@ -125,19 +125,19 @@
         this.attackTarget = null;
     }
 
-    public void setTarget(net.minecraft.world.entity.LivingEntity attackTarget) {
-        this.attackTarget = attackTarget;
-        int n = this.dragon.findClosestNode();
-        int n2 = this.dragon.findClosestNode(this.attackTarget.getX(), this.attackTarget.getY(), this.attackTarget.getZ());
-        int n3 = this.attackTarget.getBlockX();
-        int n4 = this.attackTarget.getBlockZ();
-        double d = (double)n3 - this.dragon.getX();
-        double d2 = (double)n4 - this.dragon.getZ();
-        double d3 = java.lang.Math.sqrt((double)(d * d + d2 * d2));
-        double d4 = java.lang.Math.min((double)((double)0.4f + d3 / 80.0 - 1.0), (double)10.0);
-        int n5 = net.minecraft.util.Mth.floor((double)(this.attackTarget.getY() + d4));
-        net.minecraft.world.level.pathfinder.Node node = new net.minecraft.world.level.pathfinder.Node(n3, n5, n4);
-        this.currentPath = this.dragon.findPath(n, n2, node);
+    public void setTarget(net.minecraft.world.entity.LivingEntity $$0) {
+        this.attackTarget = $$0;
+        int $$1 = this.dragon.findClosestNode();
+        int $$2 = this.dragon.findClosestNode(this.attackTarget.getX(), this.attackTarget.getY(), this.attackTarget.getZ());
+        int $$3 = this.attackTarget.getBlockX();
+        int $$4 = this.attackTarget.getBlockZ();
+        double $$5 = (double)$$3 - this.dragon.getX();
+        double $$6 = (double)$$4 - this.dragon.getZ();
+        double $$7 = java.lang.Math.sqrt((double)($$5 * $$5 + $$6 * $$6));
+        double $$8 = java.lang.Math.min((double)((double)0.4f + $$7 / 80.0 - 1.0), (double)10.0);
+        int $$9 = net.minecraft.util.Mth.floor((double)(this.attackTarget.getY() + $$8));
+        net.minecraft.world.level.pathfinder.Node $$10 = new net.minecraft.world.level.pathfinder.Node($$3, $$9, $$4);
+        this.currentPath = this.dragon.findPath($$1, $$2, $$10);
         if (this.currentPath != null) {
             this.currentPath.advance();
             this.navigateToNextPathNode();