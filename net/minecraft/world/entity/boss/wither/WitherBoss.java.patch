--- net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -65,21 +65,21 @@
         this.entityData.define(DATA_ID_INV, (java.lang.Object)0);
     }
 
-    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.addAdditionalSaveData(compound);
-        compound.putInt("Invul", this.getInvulnerableTicks());
+    public void addAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.addAdditionalSaveData($$0);
+        $$0.putInt("Invul", this.getInvulnerableTicks());
     }
 
-    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag compound) {
-        super.readAdditionalSaveData(compound);
-        this.setInvulnerableTicks(compound.getInt("Invul"));
+    public void readAdditionalSaveData(net.minecraft.nbt.CompoundTag $$0) {
+        super.readAdditionalSaveData($$0);
+        this.setInvulnerableTicks($$0.getInt("Invul"));
         if (this.hasCustomName()) {
             this.bossEvent.setName(this.getDisplayName());
         }
     }
 
-    public void setCustomName(@javax.annotation.Nullable net.minecraft.network.chat.Component name) {
-        super.setCustomName(name);
+    public void setCustomName(@javax.annotation.Nullable net.minecraft.network.chat.Component $$0) {
+        super.setCustomName($$0);
         this.bossEvent.setName(this.getDisplayName());
     }
 
@@ -87,7 +87,7 @@
         return net.minecraft.sounds.SoundEvents.WITHER_AMBIENT;
     }
 
-    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource damageSource) {
+    public net.minecraft.sounds.SoundEvent getHurtSound(net.minecraft.world.damagesource.DamageSource $$0) {
         return net.minecraft.sounds.SoundEvents.WITHER_HURT;
     }
 
@@ -246,8 +246,8 @@
         this.bossEvent.setProgress(this.getHealth() / this.getMaxHealth());
     }
 
-    public static boolean canDestroy(net.minecraft.world.level.block.state.BlockState state) {
-        return !state.isAir() && !state.is(net.minecraft.tags.BlockTags.WITHER_IMMUNE);
+    public static boolean canDestroy(net.minecraft.world.level.block.state.BlockState $$0) {
+        return !$$0.isAir() && !$$0.is(net.minecraft.tags.BlockTags.WITHER_IMMUNE);
     }
 
     public void makeInvulnerable() {
@@ -256,116 +256,116 @@
         this.setHealth(this.getMaxHealth() / 3.0f);
     }
 
-    public void makeStuckInBlock(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.phys.Vec3 motionMultiplier) {
+    public void makeStuckInBlock(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.phys.Vec3 $$1) {
     }
 
-    public void startSeenByPlayer(net.minecraft.server.level.ServerPlayer player) {
-        super.startSeenByPlayer(player);
-        this.bossEvent.addPlayer(player);
+    public void startSeenByPlayer(net.minecraft.server.level.ServerPlayer $$0) {
+        super.startSeenByPlayer($$0);
+        this.bossEvent.addPlayer($$0);
     }
 
-    public void stopSeenByPlayer(net.minecraft.server.level.ServerPlayer player) {
-        super.stopSeenByPlayer(player);
-        this.bossEvent.removePlayer(player);
+    public void stopSeenByPlayer(net.minecraft.server.level.ServerPlayer $$0) {
+        super.stopSeenByPlayer($$0);
+        this.bossEvent.removePlayer($$0);
     }
 
-    public double getHeadX(int head) {
-        if (head <= 0) {
+    public double getHeadX(int $$0) {
+        if ($$0 <= 0) {
             return this.getX();
         }
-        float f = (this.yBodyRot + (float)(180 * (head - 1))) * ((float)java.lang.Math.PI / 180);
-        float f2 = net.minecraft.util.Mth.cos((float)f);
-        return this.getX() + (double)f2 * 1.3;
+        float $$1 = (this.yBodyRot + (float)(180 * ($$0 - 1))) * ((float)java.lang.Math.PI / 180);
+        float $$2 = net.minecraft.util.Mth.cos((float)$$1);
+        return this.getX() + (double)$$2 * 1.3;
     }
 
-    public double getHeadY(int head) {
-        if (head <= 0) {
+    public double getHeadY(int $$0) {
+        if ($$0 <= 0) {
             return this.getY() + 3.0;
         }
         return this.getY() + 2.2;
     }
 
-    public double getHeadZ(int head) {
-        if (head <= 0) {
+    public double getHeadZ(int $$0) {
+        if ($$0 <= 0) {
             return this.getZ();
         }
-        float f = (this.yBodyRot + (float)(180 * (head - 1))) * ((float)java.lang.Math.PI / 180);
-        float f2 = net.minecraft.util.Mth.sin((float)f);
-        return this.getZ() + (double)f2 * 1.3;
+        float $$1 = (this.yBodyRot + (float)(180 * ($$0 - 1))) * ((float)java.lang.Math.PI / 180);
+        float $$2 = net.minecraft.util.Mth.sin((float)$$1);
+        return this.getZ() + (double)$$2 * 1.3;
     }
 
-    public float rotlerp(float angle, float f, float f2) {
-        float f3 = net.minecraft.util.Mth.wrapDegrees((float)(f - angle));
-        if (f3 > f2) {
-            f3 = f2;
+    public float rotlerp(float $$0, float $$1, float $$2) {
+        float $$3 = net.minecraft.util.Mth.wrapDegrees((float)($$1 - $$0));
+        if ($$3 > $$2) {
+            $$3 = $$2;
         }
-        if (f3 < -f2) {
-            f3 = -f2;
+        if ($$3 < -$$2) {
+            $$3 = -$$2;
         }
-        return angle + f3;
+        return $$0 + $$3;
     }
 
-    public void performRangedAttack(int head, net.minecraft.world.entity.LivingEntity target) {
-        this.performRangedAttack(head, target.getX(), target.getY() + (double)target.getEyeHeight() * 0.5, target.getZ(), head == 0 && this.random.nextFloat() < 0.001f);
+    public void performRangedAttack(int $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        this.performRangedAttack($$0, $$1.getX(), $$1.getY() + (double)$$1.getEyeHeight() * 0.5, $$1.getZ(), $$0 == 0 && this.random.nextFloat() < 0.001f);
     }
 
-    public void performRangedAttack(int head, double x, double y, double z, boolean isDangerous) {
+    public void performRangedAttack(int $$0, double $$1, double $$2, double $$3, boolean $$4) {
         if (!this.isSilent()) {
             this.level.levelEvent(null, 1024, this.blockPosition(), 0);
         }
-        double d = this.getHeadX(head);
-        double d2 = this.getHeadY(head);
-        double d3 = this.getHeadZ(head);
-        double d4 = x - d;
-        double d5 = y - d2;
-        double d6 = z - d3;
-        net.minecraft.world.entity.projectile.WitherSkull witherSkull = new net.minecraft.world.entity.projectile.WitherSkull(this.level, (net.minecraft.world.entity.LivingEntity)this, d4, d5, d6);
-        witherSkull.setOwner((net.minecraft.world.entity.Entity)this);
-        if (isDangerous) {
-            witherSkull.setDangerous(true);
+        double $$5 = this.getHeadX($$0);
+        double $$6 = this.getHeadY($$0);
+        double $$7 = this.getHeadZ($$0);
+        double $$8 = $$1 - $$5;
+        double $$9 = $$2 - $$6;
+        double $$10 = $$3 - $$7;
+        net.minecraft.world.entity.projectile.WitherSkull $$11 = new net.minecraft.world.entity.projectile.WitherSkull(this.level, (net.minecraft.world.entity.LivingEntity)this, $$8, $$9, $$10);
+        $$11.setOwner((net.minecraft.world.entity.Entity)this);
+        if ($$4) {
+            $$11.setDangerous(true);
         }
-        witherSkull.setPosRaw(d, d2, d3);
-        this.level.addFreshEntity((net.minecraft.world.entity.Entity)witherSkull);
+        $$11.setPosRaw($$5, $$6, $$7);
+        this.level.addFreshEntity((net.minecraft.world.entity.Entity)$$11);
     }
 
-    public void performRangedAttack(net.minecraft.world.entity.LivingEntity target, float distanceFactor) {
-        this.performRangedAttack(0, target);
+    public void performRangedAttack(net.minecraft.world.entity.LivingEntity $$0, float $$1) {
+        this.performRangedAttack(0, $$0);
     }
 
-    public boolean hurt(net.minecraft.world.damagesource.DamageSource source, float amount) {
-        net.minecraft.world.entity.Entity entity;
-        if (this.isInvulnerableTo(source)) {
+    public boolean hurt(net.minecraft.world.damagesource.DamageSource $$0, float $$1) {
+        net.minecraft.world.entity.Entity $$2;
+        if (this.isInvulnerableTo($$0)) {
             return false;
         }
-        if (source == net.minecraft.world.damagesource.DamageSource.DROWN || source.getEntity() instanceof net.minecraft.world.entity.boss.wither.WitherBoss) {
+        if ($$0 == net.minecraft.world.damagesource.DamageSource.DROWN || $$0.getEntity() instanceof net.minecraft.world.entity.boss.wither.WitherBoss) {
             return false;
         }
-        if (this.getInvulnerableTicks() > 0 && source != net.minecraft.world.damagesource.DamageSource.OUT_OF_WORLD) {
+        if (this.getInvulnerableTicks() > 0 && $$0 != net.minecraft.world.damagesource.DamageSource.OUT_OF_WORLD) {
             return false;
         }
-        if (this.isPowered() && (entity = source.getDirectEntity()) instanceof net.minecraft.world.entity.projectile.AbstractArrow) {
+        if (this.isPowered() && ($$2 = $$0.getDirectEntity()) instanceof net.minecraft.world.entity.projectile.AbstractArrow) {
             return false;
         }
-        entity = source.getEntity();
-        if (entity != null && !(entity instanceof net.minecraft.world.entity.player.Player) && entity instanceof net.minecraft.world.entity.LivingEntity && ((net.minecraft.world.entity.LivingEntity)entity).getMobType() == this.getMobType()) {
+        net.minecraft.world.entity.Entity $$3 = $$0.getEntity();
+        if ($$3 != null && !($$3 instanceof net.minecraft.world.entity.player.Player) && $$3 instanceof net.minecraft.world.entity.LivingEntity && ((net.minecraft.world.entity.LivingEntity)$$3).getMobType() == this.getMobType()) {
             return false;
         }
         if (this.destroyBlocksTick <= 0) {
             this.destroyBlocksTick = 20;
         }
-        int n = 0;
-        while (n < this.idleHeadUpdates.length) {
-            int n2 = n++;
-            this.idleHeadUpdates[n2] = this.idleHeadUpdates[n2] + 3;
+        int $$4 = 0;
+        while ($$4 < this.idleHeadUpdates.length) {
+            int n = $$4++;
+            this.idleHeadUpdates[n] = this.idleHeadUpdates[n] + 3;
         }
-        return super.hurt(source, amount);
+        return super.hurt($$0, $$1);
     }
 
-    public void dropCustomDeathLoot(net.minecraft.world.damagesource.DamageSource source, int looting, boolean recentlyHit) {
-        super.dropCustomDeathLoot(source, looting, recentlyHit);
-        net.minecraft.world.entity.item.ItemEntity itemEntity = this.spawnAtLocation((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.NETHER_STAR);
-        if (itemEntity != null) {
-            itemEntity.setExtendedLifetime();
+    public void dropCustomDeathLoot(net.minecraft.world.damagesource.DamageSource $$0, int $$1, boolean $$2) {
+        super.dropCustomDeathLoot($$0, $$1, $$2);
+        net.minecraft.world.entity.item.ItemEntity $$3 = this.spawnAtLocation((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.NETHER_STAR);
+        if ($$3 != null) {
+            $$3.setExtendedLifetime();
         }
     }
 
@@ -389,28 +389,28 @@
         return net.minecraft.world.entity.monster.Monster.createMonsterAttributes().add(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH, 300.0).add(net.minecraft.world.entity.ai.attributes.Attributes.MOVEMENT_SPEED, (double)0.6f).add(net.minecraft.world.entity.ai.attributes.Attributes.FLYING_SPEED, (double)0.6f).add(net.minecraft.world.entity.ai.attributes.Attributes.FOLLOW_RANGE, 40.0).add(net.minecraft.world.entity.ai.attributes.Attributes.ARMOR, 4.0);
     }
 
-    public float getHeadYRot(int head) {
-        return this.yRotHeads[head];
+    public float getHeadYRot(int $$0) {
+        return this.yRotHeads[$$0];
     }
 
-    public float getHeadXRot(int head) {
-        return this.xRotHeads[head];
+    public float getHeadXRot(int $$0) {
+        return this.xRotHeads[$$0];
     }
 
     public int getInvulnerableTicks() {
         return (java.lang.Integer)this.entityData.get(DATA_ID_INV);
     }
 
-    public void setInvulnerableTicks(int invulnerableTicks) {
-        this.entityData.set(DATA_ID_INV, (java.lang.Object)invulnerableTicks);
+    public void setInvulnerableTicks(int $$0) {
+        this.entityData.set(DATA_ID_INV, (java.lang.Object)$$0);
     }
 
-    public int getAlternativeTarget(int head) {
-        return (java.lang.Integer)this.entityData.get((net.minecraft.network.syncher.EntityDataAccessor)DATA_TARGETS.get(head));
+    public int getAlternativeTarget(int $$0) {
+        return (java.lang.Integer)this.entityData.get((net.minecraft.network.syncher.EntityDataAccessor)DATA_TARGETS.get($$0));
     }
 
-    public void setAlternativeTarget(int targetOffset, int newId) {
-        this.entityData.set((net.minecraft.network.syncher.EntityDataAccessor)DATA_TARGETS.get(targetOffset), (java.lang.Object)newId);
+    public void setAlternativeTarget(int $$0, int $$1) {
+        this.entityData.set((net.minecraft.network.syncher.EntityDataAccessor)DATA_TARGETS.get($$0), (java.lang.Object)$$1);
     }
 
     public boolean isPowered() {
@@ -421,7 +421,7 @@
         return net.minecraft.world.entity.MobType.UNDEAD;
     }
 
-    public boolean canRide(net.minecraft.world.entity.Entity entity) {
+    public boolean canRide(net.minecraft.world.entity.Entity $$0) {
         return false;
     }
 
@@ -429,15 +429,15 @@
         return false;
     }
 
-    public boolean canBeAffected(net.minecraft.world.effect.MobEffectInstance potioneffect) {
-        if (potioneffect.getEffect() == net.minecraft.world.effect.MobEffects.WITHER) {
+    public boolean canBeAffected(net.minecraft.world.effect.MobEffectInstance $$0) {
+        if ($$0.getEffect() == net.minecraft.world.effect.MobEffects.WITHER) {
             return false;
         }
-        return super.canBeAffected(potioneffect);
+        return super.canBeAffected($$0);
     }
 
-    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.LivingEntity entity) {
-        return entity.getMobType() != net.minecraft.world.entity.MobType.UNDEAD && entity.attackable();
+    public static /* synthetic */ boolean lambda$static$0(net.minecraft.world.entity.LivingEntity $$0) {
+        return $$0.getMobType() != net.minecraft.world.entity.MobType.UNDEAD && $$0.attackable();
     }
 
     static {
@@ -446,7 +446,7 @@
         DATA_TARGET_C = net.minecraft.network.syncher.SynchedEntityData.defineId(net.minecraft.world.entity.boss.wither.WitherBoss.class, (net.minecraft.network.syncher.EntityDataSerializer)net.minecraft.network.syncher.EntityDataSerializers.INT);
         DATA_TARGETS = com.google.common.collect.ImmutableList.of((java.lang.Object)DATA_TARGET_A, (java.lang.Object)DATA_TARGET_B, (java.lang.Object)DATA_TARGET_C);
         DATA_ID_INV = net.minecraft.network.syncher.SynchedEntityData.defineId(net.minecraft.world.entity.boss.wither.WitherBoss.class, (net.minecraft.network.syncher.EntityDataSerializer)net.minecraft.network.syncher.EntityDataSerializers.INT);
-        LIVING_ENTITY_SELECTOR = entity -> entity.getMobType() != net.minecraft.world.entity.MobType.UNDEAD && entity.attackable();
+        LIVING_ENTITY_SELECTOR = $$0 -> $$0.getMobType() != net.minecraft.world.entity.MobType.UNDEAD && $$0.attackable();
         TARGETING_CONDITIONS = net.minecraft.world.entity.ai.targeting.TargetingConditions.forCombat().range(20.0).selector(LIVING_ENTITY_SELECTOR);
     }
 }