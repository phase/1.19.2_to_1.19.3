--- net/minecraft/world/item/ArmorItem.java
+++ net/minecraft/world/item/ArmorItem.java
@@ -16,39 +16,39 @@
     public net.minecraft.world.item.ArmorMaterial material;
     public com.google.common.collect.Multimap<net.minecraft.world.entity.ai.attributes.Attribute, net.minecraft.world.entity.ai.attributes.AttributeModifier> defaultModifiers;
 
-    public static boolean dispenseArmor(net.minecraft.core.BlockSource source, net.minecraft.world.item.ItemStack stack) {
-        net.minecraft.core.BlockPos blockPos = source.getPos().relative((net.minecraft.core.Direction)source.getBlockState().getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.DispenserBlock.FACING));
-        java.util.List list = source.getLevel().getEntitiesOfClass(net.minecraft.world.entity.LivingEntity.class, new net.minecraft.world.phys.AABB(blockPos), net.minecraft.world.entity.EntitySelector.NO_SPECTATORS.and((java.util.function.Predicate)new net.minecraft.world.entity.EntitySelector$MobCanWearArmorEntitySelector(stack)));
-        if (list.isEmpty()) {
+    public static boolean dispenseArmor(net.minecraft.core.BlockSource $$0, net.minecraft.world.item.ItemStack $$1) {
+        net.minecraft.core.BlockPos $$2 = $$0.getPos().relative((net.minecraft.core.Direction)$$0.getBlockState().getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.DispenserBlock.FACING));
+        java.util.List $$3 = $$0.getLevel().getEntitiesOfClass(net.minecraft.world.entity.LivingEntity.class, new net.minecraft.world.phys.AABB($$2), net.minecraft.world.entity.EntitySelector.NO_SPECTATORS.and((java.util.function.Predicate)new net.minecraft.world.entity.EntitySelector$MobCanWearArmorEntitySelector($$1)));
+        if ($$3.isEmpty()) {
             return false;
         }
-        net.minecraft.world.entity.LivingEntity livingEntity = (net.minecraft.world.entity.LivingEntity)list.get(0);
-        net.minecraft.world.entity.EquipmentSlot equipmentSlot = net.minecraft.world.entity.Mob.getEquipmentSlotForItem((net.minecraft.world.item.ItemStack)stack);
-        net.minecraft.world.item.ItemStack itemStack = stack.split(1);
-        livingEntity.setItemSlot(equipmentSlot, itemStack);
-        if (livingEntity instanceof net.minecraft.world.entity.Mob) {
-            ((net.minecraft.world.entity.Mob)livingEntity).setDropChance(equipmentSlot, 2.0f);
-            ((net.minecraft.world.entity.Mob)livingEntity).setPersistenceRequired();
+        net.minecraft.world.entity.LivingEntity $$4 = (net.minecraft.world.entity.LivingEntity)$$3.get(0);
+        net.minecraft.world.entity.EquipmentSlot $$5 = net.minecraft.world.entity.Mob.getEquipmentSlotForItem((net.minecraft.world.item.ItemStack)$$1);
+        net.minecraft.world.item.ItemStack $$6 = $$1.split(1);
+        $$4.setItemSlot($$5, $$6);
+        if ($$4 instanceof net.minecraft.world.entity.Mob) {
+            ((net.minecraft.world.entity.Mob)$$4).setDropChance($$5, 2.0f);
+            ((net.minecraft.world.entity.Mob)$$4).setPersistenceRequired();
         }
         return true;
     }
 
-    public net.minecraft.world.item.ArmorItem(net.minecraft.world.item.ArmorMaterial material, net.minecraft.world.entity.EquipmentSlot slot, net.minecraft.world.item.Item$Properties properties) {
-        super(properties.defaultDurability(material.getDurabilityForSlot(slot)));
-        this.material = material;
-        this.slot = slot;
-        this.defense = material.getDefenseForSlot(slot);
-        this.toughness = material.getToughness();
-        this.knockbackResistance = material.getKnockbackResistance();
+    public net.minecraft.world.item.ArmorItem(net.minecraft.world.item.ArmorMaterial $$0, net.minecraft.world.entity.EquipmentSlot $$1, net.minecraft.world.item.Item$Properties $$2) {
+        super($$2.defaultDurability($$0.getDurabilityForSlot($$1)));
+        this.material = $$0;
+        this.slot = $$1;
+        this.defense = $$0.getDefenseForSlot($$1);
+        this.toughness = $$0.getToughness();
+        this.knockbackResistance = $$0.getKnockbackResistance();
         net.minecraft.world.level.block.DispenserBlock.registerBehavior((net.minecraft.world.level.ItemLike)this, (net.minecraft.core.dispenser.DispenseItemBehavior)DISPENSE_ITEM_BEHAVIOR);
-        com.google.common.collect.ImmutableMultimap$Builder builder = com.google.common.collect.ImmutableMultimap.builder();
-        java.util.UUID uUID = ARMOR_MODIFIER_UUID_PER_SLOT[slot.getIndex()];
-        builder.put((java.lang.Object)net.minecraft.world.entity.ai.attributes.Attributes.ARMOR, (java.lang.Object)new net.minecraft.world.entity.ai.attributes.AttributeModifier(uUID, "Armor modifier", (double)this.defense, net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation.ADDITION));
-        builder.put((java.lang.Object)net.minecraft.world.entity.ai.attributes.Attributes.ARMOR_TOUGHNESS, (java.lang.Object)new net.minecraft.world.entity.ai.attributes.AttributeModifier(uUID, "Armor toughness", (double)this.toughness, net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation.ADDITION));
-        if (material == net.minecraft.world.item.ArmorMaterials.NETHERITE) {
-            builder.put((java.lang.Object)net.minecraft.world.entity.ai.attributes.Attributes.KNOCKBACK_RESISTANCE, (java.lang.Object)new net.minecraft.world.entity.ai.attributes.AttributeModifier(uUID, "Armor knockback resistance", (double)this.knockbackResistance, net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation.ADDITION));
+        com.google.common.collect.ImmutableMultimap$Builder $$3 = com.google.common.collect.ImmutableMultimap.builder();
+        java.util.UUID $$4 = ARMOR_MODIFIER_UUID_PER_SLOT[$$1.getIndex()];
+        $$3.put((java.lang.Object)net.minecraft.world.entity.ai.attributes.Attributes.ARMOR, (java.lang.Object)new net.minecraft.world.entity.ai.attributes.AttributeModifier($$4, "Armor modifier", (double)this.defense, net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation.ADDITION));
+        $$3.put((java.lang.Object)net.minecraft.world.entity.ai.attributes.Attributes.ARMOR_TOUGHNESS, (java.lang.Object)new net.minecraft.world.entity.ai.attributes.AttributeModifier($$4, "Armor toughness", (double)this.toughness, net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation.ADDITION));
+        if ($$0 == net.minecraft.world.item.ArmorMaterials.NETHERITE) {
+            $$3.put((java.lang.Object)net.minecraft.world.entity.ai.attributes.Attributes.KNOCKBACK_RESISTANCE, (java.lang.Object)new net.minecraft.world.entity.ai.attributes.AttributeModifier($$4, "Armor knockback resistance", (double)this.knockbackResistance, net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation.ADDITION));
         }
-        this.defaultModifiers = builder.build();
+        this.defaultModifiers = $$3.build();
     }
 
     public net.minecraft.world.entity.EquipmentSlot getSlot() {
@@ -63,30 +63,30 @@
         return this.material;
     }
 
-    public boolean isValidRepairItem(net.minecraft.world.item.ItemStack toRepair, net.minecraft.world.item.ItemStack repair) {
-        return this.material.getRepairIngredient().test(repair) || super.isValidRepairItem(toRepair, repair);
+    public boolean isValidRepairItem(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.item.ItemStack $$1) {
+        return this.material.getRepairIngredient().test($$1) || super.isValidRepairItem($$0, $$1);
     }
 
-    public net.minecraft.world.InteractionResultHolder<net.minecraft.world.item.ItemStack> use(net.minecraft.world.level.Level level, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        net.minecraft.world.entity.EquipmentSlot equipmentSlot = net.minecraft.world.entity.Mob.getEquipmentSlotForItem((net.minecraft.world.item.ItemStack)itemStack);
-        net.minecraft.world.item.ItemStack itemStack2 = player.getItemBySlot(equipmentSlot);
-        if (itemStack2.isEmpty()) {
-            player.setItemSlot(equipmentSlot, itemStack.copy());
-            if (!level.isClientSide()) {
-                player.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)this));
+    public net.minecraft.world.InteractionResultHolder<net.minecraft.world.item.ItemStack> use(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.player.Player $$1, net.minecraft.world.InteractionHand $$2) {
+        net.minecraft.world.item.ItemStack $$3 = $$1.getItemInHand($$2);
+        net.minecraft.world.entity.EquipmentSlot $$4 = net.minecraft.world.entity.Mob.getEquipmentSlotForItem((net.minecraft.world.item.ItemStack)$$3);
+        net.minecraft.world.item.ItemStack $$5 = $$1.getItemBySlot($$4);
+        if ($$5.isEmpty()) {
+            $$1.setItemSlot($$4, $$3.copy());
+            if (!$$0.isClientSide()) {
+                $$1.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)this));
             }
-            itemStack.setCount(0);
-            return net.minecraft.world.InteractionResultHolder.sidedSuccess((java.lang.Object)itemStack, (boolean)level.isClientSide());
+            $$3.setCount(0);
+            return net.minecraft.world.InteractionResultHolder.sidedSuccess((java.lang.Object)$$3, (boolean)$$0.isClientSide());
         }
-        return net.minecraft.world.InteractionResultHolder.fail((java.lang.Object)itemStack);
+        return net.minecraft.world.InteractionResultHolder.fail((java.lang.Object)$$3);
     }
 
-    public com.google.common.collect.Multimap<net.minecraft.world.entity.ai.attributes.Attribute, net.minecraft.world.entity.ai.attributes.AttributeModifier> getDefaultAttributeModifiers(net.minecraft.world.entity.EquipmentSlot equipmentSlot) {
-        if (equipmentSlot == this.slot) {
+    public com.google.common.collect.Multimap<net.minecraft.world.entity.ai.attributes.Attribute, net.minecraft.world.entity.ai.attributes.AttributeModifier> getDefaultAttributeModifiers(net.minecraft.world.entity.EquipmentSlot $$0) {
+        if ($$0 == this.slot) {
             return this.defaultModifiers;
         }
-        return super.getDefaultAttributeModifiers(equipmentSlot);
+        return super.getDefaultAttributeModifiers($$0);
     }
 
     public int getDefense() {