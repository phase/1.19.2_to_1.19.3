--- net/minecraft/world/item/crafting/SingleItemRecipe$Serializer.java
+++ net/minecraft/world/item/crafting/SingleItemRecipe$Serializer.java
@@ -8,30 +8,35 @@
  {
     public net.minecraft.world.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker<T> factory;
 
-    public net.minecraft.world.item.crafting.SingleItemRecipe$Serializer(net.minecraft.world.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker<T> factory) {
-        this.factory = factory;
+    public net.minecraft.world.item.crafting.SingleItemRecipe$Serializer(net.minecraft.world.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker<T> $$0) {
+        this.factory = $$0;
     }
 
-    public T fromJson(net.minecraft.resources.ResourceLocation recipeId, com.google.gson.JsonObject json) {
-        java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)json, (java.lang.String)"group", (java.lang.String)"");
-        net.minecraft.world.item.crafting.Ingredient ingredient = net.minecraft.util.GsonHelper.isArrayNode((com.google.gson.JsonObject)json, (java.lang.String)"ingredient") ? net.minecraft.world.item.crafting.Ingredient.fromJson((com.google.gson.JsonElement)net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)json, (java.lang.String)"ingredient")) : net.minecraft.world.item.crafting.Ingredient.fromJson((com.google.gson.JsonElement)net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)json, (java.lang.String)"ingredient"));
-        java.lang.String string2 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)json, (java.lang.String)"result");
-        int n = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)json, (java.lang.String)"count");
-        net.minecraft.world.item.ItemStack itemStack = new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.core.Registry.ITEM.get(new net.minecraft.resources.ResourceLocation(string2)), n);
-        return (T)this.factory.create(recipeId, string, ingredient, itemStack);
+    public T fromJson(net.minecraft.resources.ResourceLocation $$0, com.google.gson.JsonObject $$1) {
+        net.minecraft.world.item.crafting.Ingredient $$4;
+        java.lang.String $$2 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$1, (java.lang.String)"group", (java.lang.String)"");
+        if (net.minecraft.util.GsonHelper.isArrayNode((com.google.gson.JsonObject)$$1, (java.lang.String)"ingredient")) {
+            net.minecraft.world.item.crafting.Ingredient $$3 = net.minecraft.world.item.crafting.Ingredient.fromJson((com.google.gson.JsonElement)net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$1, (java.lang.String)"ingredient"));
+        } else {
+            $$4 = net.minecraft.world.item.crafting.Ingredient.fromJson((com.google.gson.JsonElement)net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$1, (java.lang.String)"ingredient"));
+        }
+        java.lang.String $$5 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$1, (java.lang.String)"result");
+        int $$6 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$1, (java.lang.String)"count");
+        net.minecraft.world.item.ItemStack $$7 = new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.core.Registry.ITEM.get(new net.minecraft.resources.ResourceLocation($$5)), $$6);
+        return (T)this.factory.create($$0, $$2, $$4, $$7);
     }
 
-    public T fromNetwork(net.minecraft.resources.ResourceLocation recipeId, net.minecraft.network.FriendlyByteBuf buffer) {
-        java.lang.String string = buffer.readUtf();
-        net.minecraft.world.item.crafting.Ingredient ingredient = net.minecraft.world.item.crafting.Ingredient.fromNetwork((net.minecraft.network.FriendlyByteBuf)buffer);
-        net.minecraft.world.item.ItemStack itemStack = buffer.readItem();
-        return (T)this.factory.create(recipeId, string, ingredient, itemStack);
+    public T fromNetwork(net.minecraft.resources.ResourceLocation $$0, net.minecraft.network.FriendlyByteBuf $$1) {
+        java.lang.String $$2 = $$1.readUtf();
+        net.minecraft.world.item.crafting.Ingredient $$3 = net.minecraft.world.item.crafting.Ingredient.fromNetwork((net.minecraft.network.FriendlyByteBuf)$$1);
+        net.minecraft.world.item.ItemStack $$4 = $$1.readItem();
+        return (T)this.factory.create($$0, $$2, $$3, $$4);
     }
 
-    public void toNetwork(net.minecraft.network.FriendlyByteBuf buffer, T recipe) {
-        buffer.writeUtf(((net.minecraft.world.item.crafting.SingleItemRecipe)recipe).group);
-        ((net.minecraft.world.item.crafting.SingleItemRecipe)recipe).ingredient.toNetwork(buffer);
-        buffer.writeItem(((net.minecraft.world.item.crafting.SingleItemRecipe)recipe).result);
+    public void toNetwork(net.minecraft.network.FriendlyByteBuf $$0, T $$1) {
+        $$0.writeUtf(((net.minecraft.world.item.crafting.SingleItemRecipe)$$1).group);
+        ((net.minecraft.world.item.crafting.SingleItemRecipe)$$1).ingredient.toNetwork($$0);
+        $$0.writeItem(((net.minecraft.world.item.crafting.SingleItemRecipe)$$1).result);
     }
 
     public /* synthetic */ net.minecraft.world.item.crafting.Recipe fromNetwork(net.minecraft.resources.ResourceLocation resourceLocation, net.minecraft.network.FriendlyByteBuf friendlyByteBuf) {