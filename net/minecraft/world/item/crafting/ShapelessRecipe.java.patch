--- net/minecraft/world/item/crafting/ShapelessRecipe.java
+++ net/minecraft/world/item/crafting/ShapelessRecipe.java
@@ -8,14 +8,16 @@
  {
     public net.minecraft.resources.ResourceLocation id;
     public java.lang.String group;
+    public net.minecraft.world.item.crafting.CraftingBookCategory category;
     public net.minecraft.world.item.ItemStack result;
     public net.minecraft.core.NonNullList<net.minecraft.world.item.crafting.Ingredient> ingredients;
 
-    public net.minecraft.world.item.crafting.ShapelessRecipe(net.minecraft.resources.ResourceLocation id, java.lang.String group, net.minecraft.world.item.ItemStack result, net.minecraft.core.NonNullList<net.minecraft.world.item.crafting.Ingredient> ingredients) {
-        this.id = id;
-        this.group = group;
-        this.result = result;
-        this.ingredients = ingredients;
+    public net.minecraft.world.item.crafting.ShapelessRecipe(net.minecraft.resources.ResourceLocation $$0, java.lang.String $$1, net.minecraft.world.item.crafting.CraftingBookCategory $$2, net.minecraft.world.item.ItemStack $$3, net.minecraft.core.NonNullList<net.minecraft.world.item.crafting.Ingredient> $$4) {
+        this.id = $$0;
+        this.group = $$1;
+        this.category = $$2;
+        this.result = $$3;
+        this.ingredients = $$4;
     }
 
     public net.minecraft.resources.ResourceLocation getId() {
@@ -30,6 +32,10 @@
         return this.group;
     }
 
+    public net.minecraft.world.item.crafting.CraftingBookCategory category() {
+        return this.category;
+    }
+
     public net.minecraft.world.item.ItemStack getResultItem() {
         return this.result;
     }
@@ -38,24 +44,24 @@
         return this.ingredients;
     }
 
-    public boolean matches(net.minecraft.world.inventory.CraftingContainer inv, net.minecraft.world.level.Level level) {
-        net.minecraft.world.entity.player.StackedContents stackedContents = new net.minecraft.world.entity.player.StackedContents();
-        int n = 0;
-        for (int i = 0; i < inv.getContainerSize(); ++i) {
-            net.minecraft.world.item.ItemStack itemStack = inv.getItem(i);
-            if (itemStack.isEmpty()) continue;
-            ++n;
-            stackedContents.accountStack(itemStack, 1);
+    public boolean matches(net.minecraft.world.inventory.CraftingContainer $$0, net.minecraft.world.level.Level $$1) {
+        net.minecraft.world.entity.player.StackedContents $$2 = new net.minecraft.world.entity.player.StackedContents();
+        int $$3 = 0;
+        for (int $$4 = 0; $$4 < $$0.getContainerSize(); ++$$4) {
+            net.minecraft.world.item.ItemStack $$5 = $$0.getItem($$4);
+            if ($$5.isEmpty()) continue;
+            ++$$3;
+            $$2.accountStack($$5, 1);
         }
-        return n == this.ingredients.size() && stackedContents.canCraft((net.minecraft.world.item.crafting.Recipe)this, null);
+        return $$3 == this.ingredients.size() && $$2.canCraft((net.minecraft.world.item.crafting.Recipe)this, null);
     }
 
-    public net.minecraft.world.item.ItemStack assemble(net.minecraft.world.inventory.CraftingContainer inv) {
+    public net.minecraft.world.item.ItemStack assemble(net.minecraft.world.inventory.CraftingContainer $$0) {
         return this.result.copy();
     }
 
-    public boolean canCraftInDimensions(int width, int height) {
-        return width * height >= this.ingredients.size();
+    public boolean canCraftInDimensions(int $$0, int $$1) {
+        return $$0 * $$1 >= this.ingredients.size();
     }
 }
 