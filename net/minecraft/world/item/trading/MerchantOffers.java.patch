--- net/minecraft/world/item/trading/MerchantOffers.java
+++ net/minecraft/world/item/trading/MerchantOffers.java
@@ -13,32 +13,32 @@
         super($$0);
     }
 
-    public net.minecraft.world.item.trading.MerchantOffers(net.minecraft.nbt.CompoundTag compoundTag) {
-        net.minecraft.nbt.ListTag listTag = compoundTag.getList("Recipes", 10);
-        for (int i = 0; i < listTag.size(); ++i) {
-            this.add((java.lang.Object)new net.minecraft.world.item.trading.MerchantOffer(listTag.getCompound(i)));
+    public net.minecraft.world.item.trading.MerchantOffers(net.minecraft.nbt.CompoundTag $$0) {
+        net.minecraft.nbt.ListTag $$1 = $$0.getList("Recipes", 10);
+        for (int $$2 = 0; $$2 < $$1.size(); ++$$2) {
+            this.add((java.lang.Object)new net.minecraft.world.item.trading.MerchantOffer($$1.getCompound($$2)));
         }
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.item.trading.MerchantOffer getRecipeFor(net.minecraft.world.item.ItemStack stackA, net.minecraft.world.item.ItemStack stackB, int index) {
-        if (index > 0 && index < this.size()) {
-            net.minecraft.world.item.trading.MerchantOffer merchantOffer = (net.minecraft.world.item.trading.MerchantOffer)this.get(index);
-            if (merchantOffer.satisfiedBy(stackA, stackB)) {
-                return merchantOffer;
+    public net.minecraft.world.item.trading.MerchantOffer getRecipeFor(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.item.ItemStack $$1, int $$2) {
+        if ($$2 > 0 && $$2 < this.size()) {
+            net.minecraft.world.item.trading.MerchantOffer $$3 = (net.minecraft.world.item.trading.MerchantOffer)this.get($$2);
+            if ($$3.satisfiedBy($$0, $$1)) {
+                return $$3;
             }
             return null;
         }
-        for (int i = 0; i < this.size(); ++i) {
-            net.minecraft.world.item.trading.MerchantOffer merchantOffer = (net.minecraft.world.item.trading.MerchantOffer)this.get(i);
-            if (!merchantOffer.satisfiedBy(stackA, stackB)) continue;
-            return merchantOffer;
+        for (int $$4 = 0; $$4 < this.size(); ++$$4) {
+            net.minecraft.world.item.trading.MerchantOffer $$5 = (net.minecraft.world.item.trading.MerchantOffer)this.get($$4);
+            if (!$$5.satisfiedBy($$0, $$1)) continue;
+            return $$5;
         }
         return null;
     }
 
-    public void writeToStream(net.minecraft.network.FriendlyByteBuf buffer) {
-        buffer.writeCollection((java.util.Collection)this, ($$0, $$1) -> {
+    public void writeToStream(net.minecraft.network.FriendlyByteBuf $$02) {
+        $$02.writeCollection((java.util.Collection)this, ($$0, $$1) -> {
             $$0.writeItem($$1.getBaseCostA());
             $$0.writeItem($$1.getResult());
             $$0.writeItem($$1.getCostB());
@@ -52,8 +52,8 @@
         });
     }
 
-    public static net.minecraft.world.item.trading.MerchantOffers createFromStream(net.minecraft.network.FriendlyByteBuf buffer) {
-        return (net.minecraft.world.item.trading.MerchantOffers)buffer.readCollection(net.minecraft.world.item.trading.MerchantOffers::new, $$0 -> {
+    public static net.minecraft.world.item.trading.MerchantOffers createFromStream(net.minecraft.network.FriendlyByteBuf $$02) {
+        return (net.minecraft.world.item.trading.MerchantOffers)$$02.readCollection(net.minecraft.world.item.trading.MerchantOffers::new, $$0 -> {
             net.minecraft.world.item.ItemStack $$1 = $$0.readItem();
             net.minecraft.world.item.ItemStack $$2 = $$0.readItem();
             net.minecraft.world.item.ItemStack $$3 = $$0.readItem();