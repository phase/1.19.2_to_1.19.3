--- net/minecraft/world/item/ShearsItem.java
+++ net/minecraft/world/item/ShearsItem.java
@@ -10,31 +10,31 @@
         super($$0);
     }
 
-    public boolean mineBlock(net.minecraft.world.item.ItemStack stack, net.minecraft.world.level.Level level, net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.LivingEntity entityLiving) {
-        if (!level.isClientSide && !state.is(net.minecraft.tags.BlockTags.FIRE)) {
-            stack.hurtAndBreak(1, entityLiving, contextEntity -> contextEntity.broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot.MAINHAND));
+    public boolean mineBlock(net.minecraft.world.item.ItemStack $$02, net.minecraft.world.level.Level $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.core.BlockPos $$3, net.minecraft.world.entity.LivingEntity $$4) {
+        if (!$$1.isClientSide && !$$2.is(net.minecraft.tags.BlockTags.FIRE)) {
+            $$02.hurtAndBreak(1, $$4, $$0 -> $$0.broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot.MAINHAND));
         }
-        if (state.is(net.minecraft.tags.BlockTags.LEAVES) || state.is(net.minecraft.world.level.block.Blocks.COBWEB) || state.is(net.minecraft.world.level.block.Blocks.GRASS) || state.is(net.minecraft.world.level.block.Blocks.FERN) || state.is(net.minecraft.world.level.block.Blocks.DEAD_BUSH) || state.is(net.minecraft.world.level.block.Blocks.HANGING_ROOTS) || state.is(net.minecraft.world.level.block.Blocks.VINE) || state.is(net.minecraft.world.level.block.Blocks.TRIPWIRE) || state.is(net.minecraft.tags.BlockTags.WOOL)) {
+        if ($$2.is(net.minecraft.tags.BlockTags.LEAVES) || $$2.is(net.minecraft.world.level.block.Blocks.COBWEB) || $$2.is(net.minecraft.world.level.block.Blocks.GRASS) || $$2.is(net.minecraft.world.level.block.Blocks.FERN) || $$2.is(net.minecraft.world.level.block.Blocks.DEAD_BUSH) || $$2.is(net.minecraft.world.level.block.Blocks.HANGING_ROOTS) || $$2.is(net.minecraft.world.level.block.Blocks.VINE) || $$2.is(net.minecraft.world.level.block.Blocks.TRIPWIRE) || $$2.is(net.minecraft.tags.BlockTags.WOOL)) {
             return true;
         }
-        return super.mineBlock(stack, level, state, pos, entityLiving);
+        return super.mineBlock($$02, $$1, $$2, $$3, $$4);
     }
 
-    public boolean isCorrectToolForDrops(net.minecraft.world.level.block.state.BlockState block) {
-        return block.is(net.minecraft.world.level.block.Blocks.COBWEB) || block.is(net.minecraft.world.level.block.Blocks.REDSTONE_WIRE) || block.is(net.minecraft.world.level.block.Blocks.TRIPWIRE);
+    public boolean isCorrectToolForDrops(net.minecraft.world.level.block.state.BlockState $$0) {
+        return $$0.is(net.minecraft.world.level.block.Blocks.COBWEB) || $$0.is(net.minecraft.world.level.block.Blocks.REDSTONE_WIRE) || $$0.is(net.minecraft.world.level.block.Blocks.TRIPWIRE);
     }
 
-    public float getDestroySpeed(net.minecraft.world.item.ItemStack stack, net.minecraft.world.level.block.state.BlockState state) {
-        if (state.is(net.minecraft.world.level.block.Blocks.COBWEB) || state.is(net.minecraft.tags.BlockTags.LEAVES)) {
+    public float getDestroySpeed(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.level.block.state.BlockState $$1) {
+        if ($$1.is(net.minecraft.world.level.block.Blocks.COBWEB) || $$1.is(net.minecraft.tags.BlockTags.LEAVES)) {
             return 15.0f;
         }
-        if (state.is(net.minecraft.tags.BlockTags.WOOL)) {
+        if ($$1.is(net.minecraft.tags.BlockTags.WOOL)) {
             return 5.0f;
         }
-        if (state.is(net.minecraft.world.level.block.Blocks.VINE) || state.is(net.minecraft.world.level.block.Blocks.GLOW_LICHEN)) {
+        if ($$1.is(net.minecraft.world.level.block.Blocks.VINE) || $$1.is(net.minecraft.world.level.block.Blocks.GLOW_LICHEN)) {
             return 2.0f;
         }
-        return super.getDestroySpeed(stack, state);
+        return super.getDestroySpeed($$0, $$1);
     }
 
     public net.minecraft.world.InteractionResult useOn(net.minecraft.world.item.context.UseOnContext $$0) {