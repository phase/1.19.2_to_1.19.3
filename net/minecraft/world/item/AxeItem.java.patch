--- net/minecraft/world/item/AxeItem.java
+++ net/minecraft/world/item/AxeItem.java
@@ -8,42 +8,42 @@
  {
     public static java.util.Map<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.Block> STRIPPABLES;
 
-    public net.minecraft.world.item.AxeItem(net.minecraft.world.item.Tier tier, float attackDamageModifier, float attackSpeedModifier, net.minecraft.world.item.Item$Properties properties) {
-        super(attackDamageModifier, attackSpeedModifier, tier, net.minecraft.tags.BlockTags.MINEABLE_WITH_AXE, properties);
+    public net.minecraft.world.item.AxeItem(net.minecraft.world.item.Tier $$0, float $$1, float $$2, net.minecraft.world.item.Item$Properties $$3) {
+        super($$1, $$2, $$0, net.minecraft.tags.BlockTags.MINEABLE_WITH_AXE, $$3);
     }
 
-    public net.minecraft.world.InteractionResult useOn(net.minecraft.world.item.context.UseOnContext context) {
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        net.minecraft.world.entity.player.Player player = context.getPlayer();
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos);
-        java.util.Optional optional = this.getStripped(blockState);
-        java.util.Optional optional2 = net.minecraft.world.level.block.WeatheringCopper.getPrevious((net.minecraft.world.level.block.state.BlockState)blockState);
-        java.util.Optional optional3 = java.util.Optional.ofNullable((java.lang.Object)((net.minecraft.world.level.block.Block)((com.google.common.collect.BiMap)net.minecraft.world.item.HoneycombItem.WAX_OFF_BY_BLOCK.get()).get((java.lang.Object)blockState.getBlock()))).map($$1 -> $$1.withPropertiesOf(blockState));
-        net.minecraft.world.item.ItemStack itemStack = context.getItemInHand();
-        java.util.Optional optional4 = java.util.Optional.empty();
-        if (optional.isPresent()) {
-            level.playSound(player, blockPos, net.minecraft.sounds.SoundEvents.AXE_STRIP, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
-            optional4 = optional;
-        } else if (optional2.isPresent()) {
-            level.playSound(player, blockPos, net.minecraft.sounds.SoundEvents.AXE_SCRAPE, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
-            level.levelEvent(player, 3005, blockPos, 0);
-            optional4 = optional2;
-        } else if (optional3.isPresent()) {
-            level.playSound(player, blockPos, net.minecraft.sounds.SoundEvents.AXE_WAX_OFF, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
-            level.levelEvent(player, 3004, blockPos, 0);
-            optional4 = optional3;
+    public net.minecraft.world.InteractionResult useOn(net.minecraft.world.item.context.UseOnContext $$0) {
+        net.minecraft.world.level.Level $$12 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$2 = $$0.getClickedPos();
+        net.minecraft.world.entity.player.Player $$3 = $$0.getPlayer();
+        net.minecraft.world.level.block.state.BlockState $$4 = $$12.getBlockState($$2);
+        java.util.Optional $$5 = this.getStripped($$4);
+        java.util.Optional $$6 = net.minecraft.world.level.block.WeatheringCopper.getPrevious((net.minecraft.world.level.block.state.BlockState)$$4);
+        java.util.Optional $$7 = java.util.Optional.ofNullable((java.lang.Object)((net.minecraft.world.level.block.Block)((com.google.common.collect.BiMap)net.minecraft.world.item.HoneycombItem.WAX_OFF_BY_BLOCK.get()).get((java.lang.Object)$$4.getBlock()))).map($$1 -> $$1.withPropertiesOf($$4));
+        net.minecraft.world.item.ItemStack $$8 = $$0.getItemInHand();
+        java.util.Optional $$9 = java.util.Optional.empty();
+        if ($$5.isPresent()) {
+            $$12.playSound($$3, $$2, net.minecraft.sounds.SoundEvents.AXE_STRIP, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
+            $$9 = $$5;
+        } else if ($$6.isPresent()) {
+            $$12.playSound($$3, $$2, net.minecraft.sounds.SoundEvents.AXE_SCRAPE, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
+            $$12.levelEvent($$3, 3005, $$2, 0);
+            $$9 = $$6;
+        } else if ($$7.isPresent()) {
+            $$12.playSound($$3, $$2, net.minecraft.sounds.SoundEvents.AXE_WAX_OFF, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
+            $$12.levelEvent($$3, 3004, $$2, 0);
+            $$9 = $$7;
         }
-        if (optional4.isPresent()) {
-            if (player instanceof net.minecraft.server.level.ServerPlayer) {
-                net.minecraft.advancements.CriteriaTriggers.ITEM_USED_ON_BLOCK.trigger((net.minecraft.server.level.ServerPlayer)player, blockPos, itemStack);
+        if ($$9.isPresent()) {
+            if ($$3 instanceof net.minecraft.server.level.ServerPlayer) {
+                net.minecraft.advancements.CriteriaTriggers.ITEM_USED_ON_BLOCK.trigger((net.minecraft.server.level.ServerPlayer)$$3, $$2, $$8);
             }
-            level.setBlock(blockPos, (net.minecraft.world.level.block.state.BlockState)optional4.get(), 11);
-            level.gameEvent(net.minecraft.world.level.gameevent.GameEvent.BLOCK_CHANGE, blockPos, net.minecraft.world.level.gameevent.GameEvent$Context.of((net.minecraft.world.entity.Entity)player, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)optional4.get())));
-            if (player != null) {
-                itemStack.hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)player, $$1 -> $$1.broadcastBreakEvent(context.getHand()));
+            $$12.setBlock($$2, (net.minecraft.world.level.block.state.BlockState)$$9.get(), 11);
+            $$12.gameEvent(net.minecraft.world.level.gameevent.GameEvent.BLOCK_CHANGE, $$2, net.minecraft.world.level.gameevent.GameEvent$Context.of((net.minecraft.world.entity.Entity)$$3, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$9.get())));
+            if ($$3 != null) {
+                $$8.hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)$$3, $$1 -> $$1.broadcastBreakEvent($$0.getHand()));
             }
-            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$12.isClientSide);
         }
         return net.minecraft.world.InteractionResult.PASS;
     }