--- net/minecraft/world/item/Item$Properties.java
+++ net/minecraft/world/item/Item$Properties.java
@@ -9,58 +9,58 @@
     public int maxDamage;
     @javax.annotation.Nullable
     public net.minecraft.world.item.Item craftingRemainingItem;
-    @javax.annotation.Nullable
-    public net.minecraft.world.item.CreativeModeTab category;
     public net.minecraft.world.item.Rarity rarity;
     @javax.annotation.Nullable
     public net.minecraft.world.food.FoodProperties foodProperties;
     public boolean isFireResistant;
+    public net.minecraft.world.flag.FeatureFlagSet requiredFeatures;
 
     public net.minecraft.world.item.Item$Properties() {
         this.maxStackSize = 64;
         this.rarity = net.minecraft.world.item.Rarity.COMMON;
+        this.requiredFeatures = net.minecraft.world.flag.FeatureFlags.VANILLA_SET;
     }
 
-    public net.minecraft.world.item.Item$Properties food(net.minecraft.world.food.FoodProperties food) {
-        this.foodProperties = food;
+    public net.minecraft.world.item.Item$Properties food(net.minecraft.world.food.FoodProperties $$0) {
+        this.foodProperties = $$0;
         return this;
     }
 
-    public net.minecraft.world.item.Item$Properties stacksTo(int maxStackSize) {
+    public net.minecraft.world.item.Item$Properties stacksTo(int $$0) {
         if (this.maxDamage > 0) {
             throw new java.lang.RuntimeException("Unable to have damage AND stack.");
         }
-        this.maxStackSize = maxStackSize;
+        this.maxStackSize = $$0;
         return this;
     }
 
-    public net.minecraft.world.item.Item$Properties defaultDurability(int maxDamage) {
-        return this.maxDamage == 0 ? this.durability(maxDamage) : this;
+    public net.minecraft.world.item.Item$Properties defaultDurability(int $$0) {
+        return this.maxDamage == 0 ? this.durability($$0) : this;
     }
 
-    public net.minecraft.world.item.Item$Properties durability(int maxDamage) {
-        this.maxDamage = maxDamage;
+    public net.minecraft.world.item.Item$Properties durability(int $$0) {
+        this.maxDamage = $$0;
         this.maxStackSize = 1;
         return this;
     }
 
-    public net.minecraft.world.item.Item$Properties craftRemainder(net.minecraft.world.item.Item craftingRemainingItem) {
-        this.craftingRemainingItem = craftingRemainingItem;
+    public net.minecraft.world.item.Item$Properties craftRemainder(net.minecraft.world.item.Item $$0) {
+        this.craftingRemainingItem = $$0;
         return this;
     }
 
-    public net.minecraft.world.item.Item$Properties tab(net.minecraft.world.item.CreativeModeTab category) {
-        this.category = category;
+    public net.minecraft.world.item.Item$Properties rarity(net.minecraft.world.item.Rarity $$0) {
+        this.rarity = $$0;
         return this;
     }
 
-    public net.minecraft.world.item.Item$Properties rarity(net.minecraft.world.item.Rarity rarity) {
-        this.rarity = rarity;
+    public net.minecraft.world.item.Item$Properties fireResistant() {
+        this.isFireResistant = true;
         return this;
     }
 
-    public net.minecraft.world.item.Item$Properties fireResistant() {
-        this.isFireResistant = true;
+    public net.minecraft.world.item.Item$Properties requiredFeatures(net.minecraft.world.flag.FeatureFlag ... $$0) {
+        this.requiredFeatures = net.minecraft.world.flag.FeatureFlags.REGISTRY.subset($$0);
         return this;
     }
 }