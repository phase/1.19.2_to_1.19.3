--- net/minecraft/world/item/EnderEyeItem.java
+++ net/minecraft/world/item/EnderEyeItem.java
@@ -10,63 +10,63 @@
         super($$0);
     }
 
-    public net.minecraft.world.InteractionResult useOn(net.minecraft.world.item.context.UseOnContext context) {
-        net.minecraft.core.BlockPos blockPos;
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos = context.getClickedPos());
-        if (!blockState.is(net.minecraft.world.level.block.Blocks.END_PORTAL_FRAME) || ((java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.EndPortalFrameBlock.HAS_EYE)).booleanValue()) {
+    public net.minecraft.world.InteractionResult useOn(net.minecraft.world.item.context.UseOnContext $$0) {
+        net.minecraft.core.BlockPos $$2;
+        net.minecraft.world.level.Level $$1 = $$0.getLevel();
+        net.minecraft.world.level.block.state.BlockState $$3 = $$1.getBlockState($$2 = $$0.getClickedPos());
+        if (!$$3.is(net.minecraft.world.level.block.Blocks.END_PORTAL_FRAME) || ((java.lang.Boolean)$$3.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.EndPortalFrameBlock.HAS_EYE)).booleanValue()) {
             return net.minecraft.world.InteractionResult.PASS;
         }
-        if (level.isClientSide) {
+        if ($$1.isClientSide) {
             return net.minecraft.world.InteractionResult.SUCCESS;
         }
-        net.minecraft.world.level.block.state.BlockState blockState2 = (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.EndPortalFrameBlock.HAS_EYE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
-        net.minecraft.world.level.block.Block.pushEntitiesUp((net.minecraft.world.level.block.state.BlockState)blockState, (net.minecraft.world.level.block.state.BlockState)blockState2, (net.minecraft.world.level.LevelAccessor)level, (net.minecraft.core.BlockPos)blockPos);
-        level.setBlock(blockPos, blockState2, 2);
-        level.updateNeighbourForOutputSignal(blockPos, net.minecraft.world.level.block.Blocks.END_PORTAL_FRAME);
-        context.getItemInHand().shrink(1);
-        level.levelEvent(1503, blockPos, 0);
-        net.minecraft.world.level.block.state.pattern.BlockPattern$BlockPatternMatch blockPatternMatch = net.minecraft.world.level.block.EndPortalFrameBlock.getOrCreatePortalShape().find((net.minecraft.world.level.LevelReader)level, blockPos);
-        if (blockPatternMatch != null) {
-            net.minecraft.core.BlockPos blockPos2 = blockPatternMatch.getFrontTopLeft().offset(-3, 0, -3);
-            for (int i = 0; i < 3; ++i) {
-                for (int j = 0; j < 3; ++j) {
-                    level.setBlock(blockPos2.offset(i, 0, j), net.minecraft.world.level.block.Blocks.END_PORTAL.defaultBlockState(), 2);
+        net.minecraft.world.level.block.state.BlockState $$4 = (net.minecraft.world.level.block.state.BlockState)$$3.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.EndPortalFrameBlock.HAS_EYE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
+        net.minecraft.world.level.block.Block.pushEntitiesUp((net.minecraft.world.level.block.state.BlockState)$$3, (net.minecraft.world.level.block.state.BlockState)$$4, (net.minecraft.world.level.LevelAccessor)$$1, (net.minecraft.core.BlockPos)$$2);
+        $$1.setBlock($$2, $$4, 2);
+        $$1.updateNeighbourForOutputSignal($$2, net.minecraft.world.level.block.Blocks.END_PORTAL_FRAME);
+        $$0.getItemInHand().shrink(1);
+        $$1.levelEvent(1503, $$2, 0);
+        net.minecraft.world.level.block.state.pattern.BlockPattern$BlockPatternMatch $$5 = net.minecraft.world.level.block.EndPortalFrameBlock.getOrCreatePortalShape().find((net.minecraft.world.level.LevelReader)$$1, $$2);
+        if ($$5 != null) {
+            net.minecraft.core.BlockPos $$6 = $$5.getFrontTopLeft().offset(-3, 0, -3);
+            for (int $$7 = 0; $$7 < 3; ++$$7) {
+                for (int $$8 = 0; $$8 < 3; ++$$8) {
+                    $$1.setBlock($$6.offset($$7, 0, $$8), net.minecraft.world.level.block.Blocks.END_PORTAL.defaultBlockState(), 2);
                 }
             }
-            level.globalLevelEvent(1038, blockPos2.offset(1, 0, 1), 0);
+            $$1.globalLevelEvent(1038, $$6.offset(1, 0, 1), 0);
         }
         return net.minecraft.world.InteractionResult.CONSUME;
     }
 
-    public net.minecraft.world.InteractionResultHolder<net.minecraft.world.item.ItemStack> use(net.minecraft.world.level.Level level, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        net.minecraft.server.level.ServerLevel serverLevel;
-        net.minecraft.core.BlockPos blockPos;
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        net.minecraft.world.phys.BlockHitResult blockHitResult = net.minecraft.world.item.EnderEyeItem.getPlayerPOVHitResult((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.player.Player)player, (net.minecraft.world.level.ClipContext$Fluid)net.minecraft.world.level.ClipContext$Fluid.NONE);
-        if (blockHitResult.getType() == net.minecraft.world.phys.HitResult$Type.BLOCK && level.getBlockState(blockHitResult.getBlockPos()).is(net.minecraft.world.level.block.Blocks.END_PORTAL_FRAME)) {
-            return net.minecraft.world.InteractionResultHolder.pass((java.lang.Object)itemStack);
+    public net.minecraft.world.InteractionResultHolder<net.minecraft.world.item.ItemStack> use(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.player.Player $$1, net.minecraft.world.InteractionHand $$2) {
+        net.minecraft.server.level.ServerLevel $$5;
+        net.minecraft.core.BlockPos $$6;
+        net.minecraft.world.item.ItemStack $$3 = $$1.getItemInHand($$2);
+        net.minecraft.world.phys.BlockHitResult $$4 = net.minecraft.world.item.EnderEyeItem.getPlayerPOVHitResult((net.minecraft.world.level.Level)$$0, (net.minecraft.world.entity.player.Player)$$1, (net.minecraft.world.level.ClipContext$Fluid)net.minecraft.world.level.ClipContext$Fluid.NONE);
+        if ($$4.getType() == net.minecraft.world.phys.HitResult$Type.BLOCK && $$0.getBlockState($$4.getBlockPos()).is(net.minecraft.world.level.block.Blocks.END_PORTAL_FRAME)) {
+            return net.minecraft.world.InteractionResultHolder.pass((java.lang.Object)$$3);
         }
-        player.startUsingItem(hand);
-        if (level instanceof net.minecraft.server.level.ServerLevel && (blockPos = (serverLevel = (net.minecraft.server.level.ServerLevel)level).findNearestMapStructure(net.minecraft.tags.StructureTags.EYE_OF_ENDER_LOCATED, player.blockPosition(), 100, false)) != null) {
-            net.minecraft.world.entity.projectile.EyeOfEnder eyeOfEnder = new net.minecraft.world.entity.projectile.EyeOfEnder(level, player.getX(), player.getY(0.5), player.getZ());
-            eyeOfEnder.setItem(itemStack);
-            eyeOfEnder.signalTo(blockPos);
-            level.gameEvent(net.minecraft.world.level.gameevent.GameEvent.PROJECTILE_SHOOT, eyeOfEnder.position(), net.minecraft.world.level.gameevent.GameEvent$Context.of((net.minecraft.world.entity.Entity)player));
-            level.addFreshEntity((net.minecraft.world.entity.Entity)eyeOfEnder);
-            if (player instanceof net.minecraft.server.level.ServerPlayer) {
-                net.minecraft.advancements.CriteriaTriggers.USED_ENDER_EYE.trigger((net.minecraft.server.level.ServerPlayer)player, blockPos);
+        $$1.startUsingItem($$2);
+        if ($$0 instanceof net.minecraft.server.level.ServerLevel && ($$6 = ($$5 = (net.minecraft.server.level.ServerLevel)$$0).findNearestMapStructure(net.minecraft.tags.StructureTags.EYE_OF_ENDER_LOCATED, $$1.blockPosition(), 100, false)) != null) {
+            net.minecraft.world.entity.projectile.EyeOfEnder $$7 = new net.minecraft.world.entity.projectile.EyeOfEnder($$0, $$1.getX(), $$1.getY(0.5), $$1.getZ());
+            $$7.setItem($$3);
+            $$7.signalTo($$6);
+            $$0.gameEvent(net.minecraft.world.level.gameevent.GameEvent.PROJECTILE_SHOOT, $$7.position(), net.minecraft.world.level.gameevent.GameEvent$Context.of((net.minecraft.world.entity.Entity)$$1));
+            $$0.addFreshEntity((net.minecraft.world.entity.Entity)$$7);
+            if ($$1 instanceof net.minecraft.server.level.ServerPlayer) {
+                net.minecraft.advancements.CriteriaTriggers.USED_ENDER_EYE.trigger((net.minecraft.server.level.ServerPlayer)$$1, $$6);
             }
-            level.playSound(null, player.getX(), player.getY(), player.getZ(), net.minecraft.sounds.SoundEvents.ENDER_EYE_LAUNCH, net.minecraft.sounds.SoundSource.NEUTRAL, 0.5f, 0.4f / (level.getRandom().nextFloat() * 0.4f + 0.8f));
-            level.levelEvent(null, 1003, player.blockPosition(), 0);
-            if (!player.getAbilities().instabuild) {
-                itemStack.shrink(1);
+            $$0.playSound(null, $$1.getX(), $$1.getY(), $$1.getZ(), net.minecraft.sounds.SoundEvents.ENDER_EYE_LAUNCH, net.minecraft.sounds.SoundSource.NEUTRAL, 0.5f, 0.4f / ($$0.getRandom().nextFloat() * 0.4f + 0.8f));
+            $$0.levelEvent(null, 1003, $$1.blockPosition(), 0);
+            if (!$$1.getAbilities().instabuild) {
+                $$3.shrink(1);
             }
-            player.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)this));
-            player.swing(hand, true);
-            return net.minecraft.world.InteractionResultHolder.success((java.lang.Object)itemStack);
+            $$1.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)this));
+            $$1.swing($$2, true);
+            return net.minecraft.world.InteractionResultHolder.success((java.lang.Object)$$3);
         }
-        return net.minecraft.world.InteractionResultHolder.consume((java.lang.Object)itemStack);
+        return net.minecraft.world.InteractionResultHolder.consume((java.lang.Object)$$3);
     }
 }
 