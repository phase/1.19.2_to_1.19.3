--- net/minecraft/world/item/enchantment/ThornsEnchantment.java
+++ net/minecraft/world/item/enchantment/ThornsEnchantment.java
@@ -8,38 +8,38 @@
  {
     public static float CHANCE_PER_LEVEL = 0.15f;
 
-    public net.minecraft.world.item.enchantment.ThornsEnchantment(net.minecraft.world.item.enchantment.Enchantment$Rarity rarity, net.minecraft.world.entity.EquipmentSlot ... applicableSlots) {
-        super(rarity, net.minecraft.world.item.enchantment.EnchantmentCategory.ARMOR_CHEST, applicableSlots);
+    public net.minecraft.world.item.enchantment.ThornsEnchantment(net.minecraft.world.item.enchantment.Enchantment$Rarity $$0, net.minecraft.world.entity.EquipmentSlot ... $$1) {
+        super($$0, net.minecraft.world.item.enchantment.EnchantmentCategory.ARMOR_CHEST, $$1);
     }
 
-    public int getMinCost(int enchantmentLevel) {
-        return 10 + 20 * (enchantmentLevel - 1);
+    public int getMinCost(int $$0) {
+        return 10 + 20 * ($$0 - 1);
     }
 
-    public int getMaxCost(int enchantmentLevel) {
-        return super.getMinCost(enchantmentLevel) + 50;
+    public int getMaxCost(int $$0) {
+        return super.getMinCost($$0) + 50;
     }
 
     public int getMaxLevel() {
         return 3;
     }
 
-    public boolean canEnchant(net.minecraft.world.item.ItemStack stack) {
-        if (stack.getItem() instanceof net.minecraft.world.item.ArmorItem) {
+    public boolean canEnchant(net.minecraft.world.item.ItemStack $$0) {
+        if ($$0.getItem() instanceof net.minecraft.world.item.ArmorItem) {
             return true;
         }
-        return super.canEnchant(stack);
+        return super.canEnchant($$0);
     }
 
-    public void doPostHurt(net.minecraft.world.entity.LivingEntity user, net.minecraft.world.entity.Entity attacker, int level) {
-        net.minecraft.util.RandomSource randomSource = user.getRandom();
-        java.util.Map$Entry entry = net.minecraft.world.item.enchantment.EnchantmentHelper.getRandomItemWith((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.THORNS, (net.minecraft.world.entity.LivingEntity)user);
-        if (net.minecraft.world.item.enchantment.ThornsEnchantment.shouldHit((int)level, (net.minecraft.util.RandomSource)randomSource)) {
-            if (attacker != null) {
-                attacker.hurt(net.minecraft.world.damagesource.DamageSource.thorns((net.minecraft.world.entity.Entity)user), (float)net.minecraft.world.item.enchantment.ThornsEnchantment.getDamage((int)level, (net.minecraft.util.RandomSource)randomSource));
+    public void doPostHurt(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.Entity $$12, int $$2) {
+        net.minecraft.util.RandomSource $$3 = $$0.getRandom();
+        java.util.Map$Entry $$4 = net.minecraft.world.item.enchantment.EnchantmentHelper.getRandomItemWith((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.THORNS, (net.minecraft.world.entity.LivingEntity)$$0);
+        if (net.minecraft.world.item.enchantment.ThornsEnchantment.shouldHit((int)$$2, (net.minecraft.util.RandomSource)$$3)) {
+            if ($$12 != null) {
+                $$12.hurt(net.minecraft.world.damagesource.DamageSource.thorns((net.minecraft.world.entity.Entity)$$0), (float)net.minecraft.world.item.enchantment.ThornsEnchantment.getDamage((int)$$2, (net.minecraft.util.RandomSource)$$3));
             }
-            if (entry != null) {
-                ((net.minecraft.world.item.ItemStack)entry.getValue()).hurtAndBreak(2, user, $$1 -> $$1.broadcastBreakEvent((net.minecraft.world.entity.EquipmentSlot)entry.getKey()));
+            if ($$4 != null) {
+                ((net.minecraft.world.item.ItemStack)$$4.getValue()).hurtAndBreak(2, $$0, $$1 -> $$1.broadcastBreakEvent((net.minecraft.world.entity.EquipmentSlot)$$4.getKey()));
             }
         }
     }