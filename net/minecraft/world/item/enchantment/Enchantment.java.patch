--- net/minecraft/world/item/enchantment/Enchantment.java
+++ net/minecraft/world/item/enchantment/Enchantment.java
@@ -12,24 +12,24 @@
     public java.lang.String descriptionId;
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.item.enchantment.Enchantment byId(int id) {
-        return (net.minecraft.world.item.enchantment.Enchantment)net.minecraft.core.Registry.ENCHANTMENT.byId(id);
+    public static net.minecraft.world.item.enchantment.Enchantment byId(int $$0) {
+        return (net.minecraft.world.item.enchantment.Enchantment)net.minecraft.core.Registry.ENCHANTMENT.byId($$0);
     }
 
-    public net.minecraft.world.item.enchantment.Enchantment(net.minecraft.world.item.enchantment.Enchantment$Rarity rarity, net.minecraft.world.item.enchantment.EnchantmentCategory category, net.minecraft.world.entity.EquipmentSlot[] applicableSlots) {
-        this.rarity = rarity;
-        this.category = category;
-        this.slots = applicableSlots;
+    public net.minecraft.world.item.enchantment.Enchantment(net.minecraft.world.item.enchantment.Enchantment$Rarity $$0, net.minecraft.world.item.enchantment.EnchantmentCategory $$1, net.minecraft.world.entity.EquipmentSlot[] $$2) {
+        this.rarity = $$0;
+        this.category = $$1;
+        this.slots = $$2;
     }
 
-    public java.util.Map<net.minecraft.world.entity.EquipmentSlot, net.minecraft.world.item.ItemStack> getSlotItems(net.minecraft.world.entity.LivingEntity entity) {
-        java.util.EnumMap enumMap = com.google.common.collect.Maps.newEnumMap(net.minecraft.world.entity.EquipmentSlot.class);
-        for (net.minecraft.world.entity.EquipmentSlot equipmentSlot : this.slots) {
-            net.minecraft.world.item.ItemStack itemStack = entity.getItemBySlot(equipmentSlot);
-            if (itemStack.isEmpty()) continue;
-            enumMap.put((java.lang.Object)equipmentSlot, (java.lang.Object)itemStack);
+    public java.util.Map<net.minecraft.world.entity.EquipmentSlot, net.minecraft.world.item.ItemStack> getSlotItems(net.minecraft.world.entity.LivingEntity $$0) {
+        java.util.EnumMap $$1 = com.google.common.collect.Maps.newEnumMap(net.minecraft.world.entity.EquipmentSlot.class);
+        for (net.minecraft.world.entity.EquipmentSlot $$2 : this.slots) {
+            net.minecraft.world.item.ItemStack $$3 = $$0.getItemBySlot($$2);
+            if ($$3.isEmpty()) continue;
+            $$1.put((java.lang.Object)$$2, (java.lang.Object)$$3);
         }
-        return enumMap;
+        return $$1;
     }
 
     public net.minecraft.world.item.enchantment.Enchantment$Rarity getRarity() {
@@ -44,28 +44,28 @@
         return 1;
     }
 
-    public int getMinCost(int level) {
-        return 1 + level * 10;
+    public int getMinCost(int $$0) {
+        return 1 + $$0 * 10;
     }
 
-    public int getMaxCost(int level) {
-        return this.getMinCost(level) + 5;
+    public int getMaxCost(int $$0) {
+        return this.getMinCost($$0) + 5;
     }
 
-    public int getDamageProtection(int level, net.minecraft.world.damagesource.DamageSource source) {
+    public int getDamageProtection(int $$0, net.minecraft.world.damagesource.DamageSource $$1) {
         return 0;
     }
 
-    public float getDamageBonus(int level, net.minecraft.world.entity.MobType type) {
+    public float getDamageBonus(int $$0, net.minecraft.world.entity.MobType $$1) {
         return 0.0f;
     }
 
-    public boolean isCompatibleWith(net.minecraft.world.item.enchantment.Enchantment other) {
-        return this.checkCompatibility(other) && other.checkCompatibility(this);
+    public boolean isCompatibleWith(net.minecraft.world.item.enchantment.Enchantment $$0) {
+        return this.checkCompatibility($$0) && $$0.checkCompatibility(this);
     }
 
-    public boolean checkCompatibility(net.minecraft.world.item.enchantment.Enchantment other) {
-        return this != other;
+    public boolean checkCompatibility(net.minecraft.world.item.enchantment.Enchantment $$0) {
+        return this != $$0;
     }
 
     public java.lang.String getOrCreateDescriptionId() {
@@ -79,27 +79,27 @@
         return this.getOrCreateDescriptionId();
     }
 
-    public net.minecraft.network.chat.Component getFullname(int level) {
-        net.minecraft.network.chat.MutableComponent mutableComponent = net.minecraft.network.chat.Component.translatable((java.lang.String)this.getDescriptionId());
+    public net.minecraft.network.chat.Component getFullname(int $$0) {
+        net.minecraft.network.chat.MutableComponent $$1 = net.minecraft.network.chat.Component.translatable((java.lang.String)this.getDescriptionId());
         if (this.isCurse()) {
-            mutableComponent.withStyle(net.minecraft.ChatFormatting.RED);
+            $$1.withStyle(net.minecraft.ChatFormatting.RED);
         } else {
-            mutableComponent.withStyle(net.minecraft.ChatFormatting.GRAY);
+            $$1.withStyle(net.minecraft.ChatFormatting.GRAY);
         }
-        if (level != 1 || this.getMaxLevel() != 1) {
-            mutableComponent.append(" ").append((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("enchantment.level." + level)));
+        if ($$0 != 1 || this.getMaxLevel() != 1) {
+            $$1.append(" ").append((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.translatable((java.lang.String)("enchantment.level." + $$0)));
         }
-        return mutableComponent;
+        return $$1;
     }
 
-    public boolean canEnchant(net.minecraft.world.item.ItemStack stack) {
-        return this.category.canEnchant(stack.getItem());
+    public boolean canEnchant(net.minecraft.world.item.ItemStack $$0) {
+        return this.category.canEnchant($$0.getItem());
     }
 
-    public void doPostAttack(net.minecraft.world.entity.LivingEntity attacker, net.minecraft.world.entity.Entity target, int level) {
+    public void doPostAttack(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.Entity $$1, int $$2) {
     }
 
-    public void doPostHurt(net.minecraft.world.entity.LivingEntity user, net.minecraft.world.entity.Entity attacker, int level) {
+    public void doPostHurt(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.Entity $$1, int $$2) {
     }
 
     public boolean isTreasureOnly() {