--- net/minecraft/world/item/enchantment/DigDurabilityEnchantment.java
+++ net/minecraft/world/item/enchantment/DigDurabilityEnchantment.java
@@ -6,27 +6,27 @@
 public class net.minecraft.world.item.enchantment.DigDurabilityEnchantment
 extends net.minecraft.world.item.enchantment.Enchantment
  {
-    public net.minecraft.world.item.enchantment.DigDurabilityEnchantment(net.minecraft.world.item.enchantment.Enchantment$Rarity rarity, net.minecraft.world.entity.EquipmentSlot ... applicableSlots) {
-        super(rarity, net.minecraft.world.item.enchantment.EnchantmentCategory.BREAKABLE, applicableSlots);
+    public net.minecraft.world.item.enchantment.DigDurabilityEnchantment(net.minecraft.world.item.enchantment.Enchantment$Rarity $$0, net.minecraft.world.entity.EquipmentSlot ... $$1) {
+        super($$0, net.minecraft.world.item.enchantment.EnchantmentCategory.BREAKABLE, $$1);
     }
 
-    public int getMinCost(int enchantmentLevel) {
-        return 5 + (enchantmentLevel - 1) * 8;
+    public int getMinCost(int $$0) {
+        return 5 + ($$0 - 1) * 8;
     }
 
-    public int getMaxCost(int enchantmentLevel) {
-        return super.getMinCost(enchantmentLevel) + 50;
+    public int getMaxCost(int $$0) {
+        return super.getMinCost($$0) + 50;
     }
 
     public int getMaxLevel() {
         return 3;
     }
 
-    public boolean canEnchant(net.minecraft.world.item.ItemStack stack) {
-        if (stack.isDamageableItem()) {
+    public boolean canEnchant(net.minecraft.world.item.ItemStack $$0) {
+        if ($$0.isDamageableItem()) {
             return true;
         }
-        return super.canEnchant(stack);
+        return super.canEnchant($$0);
     }
 
     public static boolean shouldIgnoreDurabilityDrop(net.minecraft.world.item.ItemStack $$0, int $$1, net.minecraft.util.RandomSource $$2) {