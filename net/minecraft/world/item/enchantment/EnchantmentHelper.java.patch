--- net/minecraft/world/item/enchantment/EnchantmentHelper.java
+++ net/minecraft/world/item/enchantment/EnchantmentHelper.java
@@ -37,209 +37,209 @@
         return net.minecraft.core.Registry.ENCHANTMENT.getKey((java.lang.Object)$$0);
     }
 
-    public static int getItemEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantment enchantment, net.minecraft.world.item.ItemStack stack) {
-        if (stack.isEmpty()) {
+    public static int getItemEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantment $$0, net.minecraft.world.item.ItemStack $$1) {
+        if ($$1.isEmpty()) {
             return 0;
         }
-        net.minecraft.resources.ResourceLocation resourceLocation = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.world.item.enchantment.Enchantment)enchantment);
-        net.minecraft.nbt.ListTag listTag = stack.getEnchantmentTags();
-        for (int i = 0; i < listTag.size(); ++i) {
-            net.minecraft.nbt.CompoundTag compoundTag = listTag.getCompound(i);
-            net.minecraft.resources.ResourceLocation resourceLocation2 = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.nbt.CompoundTag)compoundTag);
-            if (resourceLocation2 == null || !resourceLocation2.equals((java.lang.Object)resourceLocation)) continue;
-            return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.nbt.CompoundTag)compoundTag);
+        net.minecraft.resources.ResourceLocation $$2 = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.world.item.enchantment.Enchantment)$$0);
+        net.minecraft.nbt.ListTag $$3 = $$1.getEnchantmentTags();
+        for (int $$4 = 0; $$4 < $$3.size(); ++$$4) {
+            net.minecraft.nbt.CompoundTag $$5 = $$3.getCompound($$4);
+            net.minecraft.resources.ResourceLocation $$6 = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.nbt.CompoundTag)$$5);
+            if ($$6 == null || !$$6.equals((java.lang.Object)$$2)) continue;
+            return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.nbt.CompoundTag)$$5);
         }
         return 0;
     }
 
-    public static java.util.Map<net.minecraft.world.item.enchantment.Enchantment, java.lang.Integer> getEnchantments(net.minecraft.world.item.ItemStack stack) {
-        net.minecraft.nbt.ListTag listTag = stack.is(net.minecraft.world.item.Items.ENCHANTED_BOOK) ? net.minecraft.world.item.EnchantedBookItem.getEnchantments((net.minecraft.world.item.ItemStack)stack) : stack.getEnchantmentTags();
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.deserializeEnchantments((net.minecraft.nbt.ListTag)listTag);
+    public static java.util.Map<net.minecraft.world.item.enchantment.Enchantment, java.lang.Integer> getEnchantments(net.minecraft.world.item.ItemStack $$0) {
+        net.minecraft.nbt.ListTag $$1 = $$0.is(net.minecraft.world.item.Items.ENCHANTED_BOOK) ? net.minecraft.world.item.EnchantedBookItem.getEnchantments((net.minecraft.world.item.ItemStack)$$0) : $$0.getEnchantmentTags();
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.deserializeEnchantments((net.minecraft.nbt.ListTag)$$1);
     }
 
-    public static java.util.Map<net.minecraft.world.item.enchantment.Enchantment, java.lang.Integer> deserializeEnchantments(net.minecraft.nbt.ListTag serialized) {
-        java.util.LinkedHashMap linkedHashMap = com.google.common.collect.Maps.newLinkedHashMap();
-        for (int i = 0; i < serialized.size(); ++i) {
-            net.minecraft.nbt.CompoundTag compoundTag = serialized.getCompound(i);
-            net.minecraft.core.Registry.ENCHANTMENT.getOptional(net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.nbt.CompoundTag)compoundTag)).ifPresent(arg_0 -> net.minecraft.world.item.enchantment.EnchantmentHelper.lambda$deserializeEnchantments$0((java.util.Map)linkedHashMap, compoundTag, arg_0));
+    public static java.util.Map<net.minecraft.world.item.enchantment.Enchantment, java.lang.Integer> deserializeEnchantments(net.minecraft.nbt.ListTag $$0) {
+        java.util.LinkedHashMap $$1 = com.google.common.collect.Maps.newLinkedHashMap();
+        for (int $$2 = 0; $$2 < $$0.size(); ++$$2) {
+            net.minecraft.nbt.CompoundTag $$3 = $$0.getCompound($$2);
+            net.minecraft.core.Registry.ENCHANTMENT.getOptional(net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.nbt.CompoundTag)$$3)).ifPresent(arg_0 -> net.minecraft.world.item.enchantment.EnchantmentHelper.lambda$deserializeEnchantments$0((java.util.Map)$$1, $$3, arg_0));
         }
-        return linkedHashMap;
+        return $$1;
     }
 
-    public static void setEnchantments(java.util.Map<net.minecraft.world.item.enchantment.Enchantment, java.lang.Integer> enchantmentsMap, net.minecraft.world.item.ItemStack stack) {
-        net.minecraft.nbt.ListTag listTag = new net.minecraft.nbt.ListTag();
-        for (java.util.Map$Entry entry : enchantmentsMap.entrySet()) {
-            net.minecraft.world.item.enchantment.Enchantment enchantment = (net.minecraft.world.item.enchantment.Enchantment)entry.getKey();
-            if (enchantment == null) continue;
-            int n = (java.lang.Integer)entry.getValue();
-            listTag.add((java.lang.Object)net.minecraft.world.item.enchantment.EnchantmentHelper.storeEnchantment((net.minecraft.resources.ResourceLocation)net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.world.item.enchantment.Enchantment)enchantment), (int)n));
-            if (!stack.is(net.minecraft.world.item.Items.ENCHANTED_BOOK)) continue;
-            net.minecraft.world.item.EnchantedBookItem.addEnchantment((net.minecraft.world.item.ItemStack)stack, (net.minecraft.world.item.enchantment.EnchantmentInstance)new net.minecraft.world.item.enchantment.EnchantmentInstance(enchantment, n));
+    public static void setEnchantments(java.util.Map<net.minecraft.world.item.enchantment.Enchantment, java.lang.Integer> $$0, net.minecraft.world.item.ItemStack $$1) {
+        net.minecraft.nbt.ListTag $$2 = new net.minecraft.nbt.ListTag();
+        for (java.util.Map$Entry $$3 : $$0.entrySet()) {
+            net.minecraft.world.item.enchantment.Enchantment $$4 = (net.minecraft.world.item.enchantment.Enchantment)$$3.getKey();
+            if ($$4 == null) continue;
+            int $$5 = (java.lang.Integer)$$3.getValue();
+            $$2.add((java.lang.Object)net.minecraft.world.item.enchantment.EnchantmentHelper.storeEnchantment((net.minecraft.resources.ResourceLocation)net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.world.item.enchantment.Enchantment)$$4), (int)$$5));
+            if (!$$1.is(net.minecraft.world.item.Items.ENCHANTED_BOOK)) continue;
+            net.minecraft.world.item.EnchantedBookItem.addEnchantment((net.minecraft.world.item.ItemStack)$$1, (net.minecraft.world.item.enchantment.EnchantmentInstance)new net.minecraft.world.item.enchantment.EnchantmentInstance($$4, $$5));
         }
-        if (listTag.isEmpty()) {
-            stack.removeTagKey("Enchantments");
-        } else if (!stack.is(net.minecraft.world.item.Items.ENCHANTED_BOOK)) {
-            stack.addTagElement("Enchantments", (net.minecraft.nbt.Tag)listTag);
+        if ($$2.isEmpty()) {
+            $$1.removeTagKey("Enchantments");
+        } else if (!$$1.is(net.minecraft.world.item.Items.ENCHANTED_BOOK)) {
+            $$1.addTagElement("Enchantments", (net.minecraft.nbt.Tag)$$2);
         }
     }
 
-    public static void runIterationOnItem(net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor visitor, net.minecraft.world.item.ItemStack stack) {
-        if (stack.isEmpty()) {
+    public static void runIterationOnItem(net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor $$0, net.minecraft.world.item.ItemStack $$1) {
+        if ($$1.isEmpty()) {
             return;
         }
-        net.minecraft.nbt.ListTag listTag = stack.getEnchantmentTags();
-        for (int i = 0; i < listTag.size(); ++i) {
-            net.minecraft.nbt.CompoundTag compoundTag = listTag.getCompound(i);
-            net.minecraft.core.Registry.ENCHANTMENT.getOptional(net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.nbt.CompoundTag)compoundTag)).ifPresent($$2 -> visitor.accept($$2, net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.nbt.CompoundTag)compoundTag)));
+        net.minecraft.nbt.ListTag $$22 = $$1.getEnchantmentTags();
+        for (int $$3 = 0; $$3 < $$22.size(); ++$$3) {
+            net.minecraft.nbt.CompoundTag $$4 = $$22.getCompound($$3);
+            net.minecraft.core.Registry.ENCHANTMENT.getOptional(net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentId((net.minecraft.nbt.CompoundTag)$$4)).ifPresent($$2 -> $$0.accept($$2, net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.nbt.CompoundTag)$$4)));
         }
     }
 
-    public static void runIterationOnInventory(net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor visitor, java.lang.Iterable<net.minecraft.world.item.ItemStack> stacks) {
-        for (net.minecraft.world.item.ItemStack itemStack : stacks) {
-            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)visitor, (net.minecraft.world.item.ItemStack)itemStack);
+    public static void runIterationOnInventory(net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor $$0, java.lang.Iterable<net.minecraft.world.item.ItemStack> $$1) {
+        for (net.minecraft.world.item.ItemStack $$2 : $$1) {
+            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)$$0, (net.minecraft.world.item.ItemStack)$$2);
         }
     }
 
-    public static int getDamageProtection(java.lang.Iterable<net.minecraft.world.item.ItemStack> stacks, net.minecraft.world.damagesource.DamageSource source) {
-        org.apache.commons.lang3.mutable.MutableInt mutableInt = new org.apache.commons.lang3.mutable.MutableInt();
-        net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnInventory((enchantment, level) -> mutableInt.add(enchantment.getDamageProtection(level, source)), stacks);
-        return mutableInt.intValue();
+    public static int getDamageProtection(java.lang.Iterable<net.minecraft.world.item.ItemStack> $$0, net.minecraft.world.damagesource.DamageSource $$1) {
+        org.apache.commons.lang3.mutable.MutableInt $$22 = new org.apache.commons.lang3.mutable.MutableInt();
+        net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnInventory(($$2, $$3) -> $$22.add($$2.getDamageProtection($$3, $$1)), $$0);
+        return $$22.intValue();
     }
 
-    public static float getDamageBonus(net.minecraft.world.item.ItemStack stack, net.minecraft.world.entity.MobType creatureAttribute) {
-        org.apache.commons.lang3.mutable.MutableFloat mutableFloat = new org.apache.commons.lang3.mutable.MutableFloat();
-        net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem((enchantment, level) -> mutableFloat.add(enchantment.getDamageBonus(level, creatureAttribute)), (net.minecraft.world.item.ItemStack)stack);
-        return mutableFloat.floatValue();
+    public static float getDamageBonus(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.entity.MobType $$1) {
+        org.apache.commons.lang3.mutable.MutableFloat $$22 = new org.apache.commons.lang3.mutable.MutableFloat();
+        net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem(($$2, $$3) -> $$22.add($$2.getDamageBonus($$3, $$1)), (net.minecraft.world.item.ItemStack)$$0);
+        return $$22.floatValue();
     }
 
-    public static float getSweepingDamageRatio(net.minecraft.world.entity.LivingEntity entity) {
-        int n = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.SWEEPING_EDGE, (net.minecraft.world.entity.LivingEntity)entity);
-        if (n > 0) {
-            return net.minecraft.world.item.enchantment.SweepingEdgeEnchantment.getSweepingDamageRatio((int)n);
+    public static float getSweepingDamageRatio(net.minecraft.world.entity.LivingEntity $$0) {
+        int $$1 = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.SWEEPING_EDGE, (net.minecraft.world.entity.LivingEntity)$$0);
+        if ($$1 > 0) {
+            return net.minecraft.world.item.enchantment.SweepingEdgeEnchantment.getSweepingDamageRatio((int)$$1);
         }
         return 0.0f;
     }
 
-    public static void doPostHurtEffects(net.minecraft.world.entity.LivingEntity user, net.minecraft.world.entity.Entity attacker) {
-        net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor enchantmentVisitor = (enchantment, level) -> enchantment.doPostHurt(user, attacker, level);
-        if (user != null) {
-            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnInventory((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)enchantmentVisitor, (java.lang.Iterable)user.getAllSlots());
+    public static void doPostHurtEffects(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.Entity $$1) {
+        net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor $$22 = ($$2, $$3) -> $$2.doPostHurt($$0, $$1, $$3);
+        if ($$0 != null) {
+            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnInventory((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)$$22, (java.lang.Iterable)$$0.getAllSlots());
         }
-        if (attacker instanceof net.minecraft.world.entity.player.Player) {
-            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)enchantmentVisitor, (net.minecraft.world.item.ItemStack)user.getMainHandItem());
+        if ($$1 instanceof net.minecraft.world.entity.player.Player) {
+            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)$$22, (net.minecraft.world.item.ItemStack)$$0.getMainHandItem());
         }
     }
 
-    public static void doPostDamageEffects(net.minecraft.world.entity.LivingEntity user, net.minecraft.world.entity.Entity target) {
-        net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor enchantmentVisitor = (enchantment, level) -> enchantment.doPostAttack(user, target, level);
-        if (user != null) {
-            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnInventory((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)enchantmentVisitor, (java.lang.Iterable)user.getAllSlots());
+    public static void doPostDamageEffects(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.entity.Entity $$1) {
+        net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor $$22 = ($$2, $$3) -> $$2.doPostAttack($$0, $$1, $$3);
+        if ($$0 != null) {
+            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnInventory((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)$$22, (java.lang.Iterable)$$0.getAllSlots());
         }
-        if (user instanceof net.minecraft.world.entity.player.Player) {
-            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)enchantmentVisitor, (net.minecraft.world.item.ItemStack)user.getMainHandItem());
+        if ($$0 instanceof net.minecraft.world.entity.player.Player) {
+            net.minecraft.world.item.enchantment.EnchantmentHelper.runIterationOnItem((net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor)$$22, (net.minecraft.world.item.ItemStack)$$0.getMainHandItem());
         }
     }
 
-    public static int getEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantment enchantment, net.minecraft.world.entity.LivingEntity entity) {
-        java.util.Collection collection = enchantment.getSlotItems(entity).values();
-        if (collection == null) {
+    public static int getEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantment $$0, net.minecraft.world.entity.LivingEntity $$1) {
+        java.util.Collection $$2 = $$0.getSlotItems($$1).values();
+        if ($$2 == null) {
             return 0;
         }
-        int n = 0;
-        for (net.minecraft.world.item.ItemStack itemStack : collection) {
-            int n2 = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)enchantment, (net.minecraft.world.item.ItemStack)itemStack);
-            if (n2 <= n) continue;
-            n = n2;
+        int $$3 = 0;
+        for (net.minecraft.world.item.ItemStack $$4 : $$2) {
+            int $$5 = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)$$0, (net.minecraft.world.item.ItemStack)$$4);
+            if ($$5 <= $$3) continue;
+            $$3 = $$5;
         }
-        return n;
+        return $$3;
     }
 
     public static float getSneakingSpeedBonus(net.minecraft.world.entity.LivingEntity $$0) {
         return (float)net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.SWIFT_SNEAK, (net.minecraft.world.entity.LivingEntity)$$0) * 0.15f;
     }
 
-    public static int getKnockbackBonus(net.minecraft.world.entity.LivingEntity player) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.KNOCKBACK, (net.minecraft.world.entity.LivingEntity)player);
+    public static int getKnockbackBonus(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.KNOCKBACK, (net.minecraft.world.entity.LivingEntity)$$0);
     }
 
-    public static int getFireAspect(net.minecraft.world.entity.LivingEntity player) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FIRE_ASPECT, (net.minecraft.world.entity.LivingEntity)player);
+    public static int getFireAspect(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FIRE_ASPECT, (net.minecraft.world.entity.LivingEntity)$$0);
     }
 
-    public static int getRespiration(net.minecraft.world.entity.LivingEntity entity) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.RESPIRATION, (net.minecraft.world.entity.LivingEntity)entity);
+    public static int getRespiration(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.RESPIRATION, (net.minecraft.world.entity.LivingEntity)$$0);
     }
 
-    public static int getDepthStrider(net.minecraft.world.entity.LivingEntity entity) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.DEPTH_STRIDER, (net.minecraft.world.entity.LivingEntity)entity);
+    public static int getDepthStrider(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.DEPTH_STRIDER, (net.minecraft.world.entity.LivingEntity)$$0);
     }
 
-    public static int getBlockEfficiency(net.minecraft.world.entity.LivingEntity entity) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.BLOCK_EFFICIENCY, (net.minecraft.world.entity.LivingEntity)entity);
+    public static int getBlockEfficiency(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.BLOCK_EFFICIENCY, (net.minecraft.world.entity.LivingEntity)$$0);
     }
 
-    public static int getFishingLuckBonus(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FISHING_LUCK, (net.minecraft.world.item.ItemStack)stack);
+    public static int getFishingLuckBonus(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FISHING_LUCK, (net.minecraft.world.item.ItemStack)$$0);
     }
 
-    public static int getFishingSpeedBonus(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FISHING_SPEED, (net.minecraft.world.item.ItemStack)stack);
+    public static int getFishingSpeedBonus(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FISHING_SPEED, (net.minecraft.world.item.ItemStack)$$0);
     }
 
-    public static int getMobLooting(net.minecraft.world.entity.LivingEntity entity) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.MOB_LOOTING, (net.minecraft.world.entity.LivingEntity)entity);
+    public static int getMobLooting(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.MOB_LOOTING, (net.minecraft.world.entity.LivingEntity)$$0);
     }
 
-    public static boolean hasAquaAffinity(net.minecraft.world.entity.LivingEntity entity) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.AQUA_AFFINITY, (net.minecraft.world.entity.LivingEntity)entity) > 0;
+    public static boolean hasAquaAffinity(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.AQUA_AFFINITY, (net.minecraft.world.entity.LivingEntity)$$0) > 0;
     }
 
-    public static boolean hasFrostWalker(net.minecraft.world.entity.LivingEntity player) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FROST_WALKER, (net.minecraft.world.entity.LivingEntity)player) > 0;
+    public static boolean hasFrostWalker(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.FROST_WALKER, (net.minecraft.world.entity.LivingEntity)$$0) > 0;
     }
 
-    public static boolean hasSoulSpeed(net.minecraft.world.entity.LivingEntity entity) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.SOUL_SPEED, (net.minecraft.world.entity.LivingEntity)entity) > 0;
+    public static boolean hasSoulSpeed(net.minecraft.world.entity.LivingEntity $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.SOUL_SPEED, (net.minecraft.world.entity.LivingEntity)$$0) > 0;
     }
 
-    public static boolean hasBindingCurse(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.BINDING_CURSE, (net.minecraft.world.item.ItemStack)stack) > 0;
+    public static boolean hasBindingCurse(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.BINDING_CURSE, (net.minecraft.world.item.ItemStack)$$0) > 0;
     }
 
-    public static boolean hasVanishingCurse(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.VANISHING_CURSE, (net.minecraft.world.item.ItemStack)stack) > 0;
+    public static boolean hasVanishingCurse(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.VANISHING_CURSE, (net.minecraft.world.item.ItemStack)$$0) > 0;
     }
 
-    public static int getLoyalty(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.LOYALTY, (net.minecraft.world.item.ItemStack)stack);
+    public static int getLoyalty(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.LOYALTY, (net.minecraft.world.item.ItemStack)$$0);
     }
 
-    public static int getRiptide(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.RIPTIDE, (net.minecraft.world.item.ItemStack)stack);
+    public static int getRiptide(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.RIPTIDE, (net.minecraft.world.item.ItemStack)$$0);
     }
 
-    public static boolean hasChanneling(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.CHANNELING, (net.minecraft.world.item.ItemStack)stack) > 0;
+    public static boolean hasChanneling(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.CHANNELING, (net.minecraft.world.item.ItemStack)$$0) > 0;
     }
 
     @javax.annotation.Nullable
-    public static java.util.Map$Entry<net.minecraft.world.entity.EquipmentSlot, net.minecraft.world.item.ItemStack> getRandomItemWith(net.minecraft.world.item.enchantment.Enchantment targetEnchantment, net.minecraft.world.entity.LivingEntity entity) {
-        return net.minecraft.world.item.enchantment.EnchantmentHelper.getRandomItemWith((net.minecraft.world.item.enchantment.Enchantment)targetEnchantment, (net.minecraft.world.entity.LivingEntity)entity, stack -> true);
+    public static java.util.Map$Entry<net.minecraft.world.entity.EquipmentSlot, net.minecraft.world.item.ItemStack> getRandomItemWith(net.minecraft.world.item.enchantment.Enchantment $$02, net.minecraft.world.entity.LivingEntity $$1) {
+        return net.minecraft.world.item.enchantment.EnchantmentHelper.getRandomItemWith((net.minecraft.world.item.enchantment.Enchantment)$$02, (net.minecraft.world.entity.LivingEntity)$$1, $$0 -> true);
     }
 
     @javax.annotation.Nullable
-    public static java.util.Map$Entry<net.minecraft.world.entity.EquipmentSlot, net.minecraft.world.item.ItemStack> getRandomItemWith(net.minecraft.world.item.enchantment.Enchantment enchantment, net.minecraft.world.entity.LivingEntity livingEntity, java.util.function.Predicate<net.minecraft.world.item.ItemStack> stackCondition) {
-        java.util.Map map = enchantment.getSlotItems(livingEntity);
-        if (map.isEmpty()) {
+    public static java.util.Map$Entry<net.minecraft.world.entity.EquipmentSlot, net.minecraft.world.item.ItemStack> getRandomItemWith(net.minecraft.world.item.enchantment.Enchantment $$0, net.minecraft.world.entity.LivingEntity $$1, java.util.function.Predicate<net.minecraft.world.item.ItemStack> $$2) {
+        java.util.Map $$3 = $$0.getSlotItems($$1);
+        if ($$3.isEmpty()) {
             return null;
         }
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        for (java.util.Map$Entry entry : map.entrySet()) {
-            net.minecraft.world.item.ItemStack itemStack = (net.minecraft.world.item.ItemStack)entry.getValue();
-            if (itemStack.isEmpty() || net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)enchantment, (net.minecraft.world.item.ItemStack)itemStack) <= 0 || !stackCondition.test((java.lang.Object)itemStack)) continue;
-            arrayList.add((java.lang.Object)entry);
+        java.util.ArrayList $$4 = com.google.common.collect.Lists.newArrayList();
+        for (java.util.Map$Entry $$5 : $$3.entrySet()) {
+            net.minecraft.world.item.ItemStack $$6 = (net.minecraft.world.item.ItemStack)$$5.getValue();
+            if ($$6.isEmpty() || net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)$$0, (net.minecraft.world.item.ItemStack)$$6) <= 0 || !$$2.test((java.lang.Object)$$6)) continue;
+            $$4.add((java.lang.Object)$$5);
         }
-        return arrayList.isEmpty() ? null : (java.util.Map$Entry)arrayList.get(livingEntity.getRandom().nextInt(arrayList.size()));
+        return $$4.isEmpty() ? null : (java.util.Map$Entry)$$4.get($$1.getRandom().nextInt($$4.size()));
     }
 
     public static int getEnchantmentCost(net.minecraft.util.RandomSource $$0, int $$1, int $$2, net.minecraft.world.item.ItemStack $$3) {
@@ -301,39 +301,39 @@
         return $$4;
     }
 
-    public static void filterCompatibleEnchantments(java.util.List<net.minecraft.world.item.enchantment.EnchantmentInstance> dataList, net.minecraft.world.item.enchantment.EnchantmentInstance data) {
-        java.util.Iterator iterator = dataList.iterator();
-        while (iterator.hasNext()) {
-            if (data.enchantment.isCompatibleWith(((net.minecraft.world.item.enchantment.EnchantmentInstance)iterator.next()).enchantment)) continue;
-            iterator.remove();
+    public static void filterCompatibleEnchantments(java.util.List<net.minecraft.world.item.enchantment.EnchantmentInstance> $$0, net.minecraft.world.item.enchantment.EnchantmentInstance $$1) {
+        java.util.Iterator $$2 = $$0.iterator();
+        while ($$2.hasNext()) {
+            if ($$1.enchantment.isCompatibleWith(((net.minecraft.world.item.enchantment.EnchantmentInstance)$$2.next()).enchantment)) continue;
+            $$2.remove();
         }
     }
 
-    public static boolean isEnchantmentCompatible(java.util.Collection<net.minecraft.world.item.enchantment.Enchantment> enchantments, net.minecraft.world.item.enchantment.Enchantment enchantment) {
-        for (net.minecraft.world.item.enchantment.Enchantment enchantment2 : enchantments) {
-            if (enchantment2.isCompatibleWith(enchantment)) continue;
+    public static boolean isEnchantmentCompatible(java.util.Collection<net.minecraft.world.item.enchantment.Enchantment> $$0, net.minecraft.world.item.enchantment.Enchantment $$1) {
+        for (net.minecraft.world.item.enchantment.Enchantment $$2 : $$0) {
+            if ($$2.isCompatibleWith($$1)) continue;
             return false;
         }
         return true;
     }
 
-    public static java.util.List<net.minecraft.world.item.enchantment.EnchantmentInstance> getAvailableEnchantmentResults(int level, net.minecraft.world.item.ItemStack stack, boolean allowTreasure) {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        net.minecraft.world.item.Item item = stack.getItem();
-        boolean bl = stack.is(net.minecraft.world.item.Items.BOOK);
-block0:        for (net.minecraft.world.item.enchantment.Enchantment enchantment : net.minecraft.core.Registry.ENCHANTMENT) {
-            if (enchantment.isTreasureOnly() && !allowTreasure || !enchantment.isDiscoverable() || !enchantment.category.canEnchant(item) && !bl) continue;
-            for (int i = enchantment.getMaxLevel(); i > enchantment.getMinLevel() - 1; --i) {
-                if (level < enchantment.getMinCost(i) || level > enchantment.getMaxCost(i)) continue;
-                arrayList.add((java.lang.Object)new net.minecraft.world.item.enchantment.EnchantmentInstance(enchantment, i));
+    public static java.util.List<net.minecraft.world.item.enchantment.EnchantmentInstance> getAvailableEnchantmentResults(int $$0, net.minecraft.world.item.ItemStack $$1, boolean $$2) {
+        java.util.ArrayList $$3 = com.google.common.collect.Lists.newArrayList();
+        net.minecraft.world.item.Item $$4 = $$1.getItem();
+        boolean $$5 = $$1.is(net.minecraft.world.item.Items.BOOK);
+block0:        for (net.minecraft.world.item.enchantment.Enchantment $$6 : net.minecraft.core.Registry.ENCHANTMENT) {
+            if ($$6.isTreasureOnly() && !$$2 || !$$6.isDiscoverable() || !$$6.category.canEnchant($$4) && !$$5) continue;
+            for (int $$7 = $$6.getMaxLevel(); $$7 > $$6.getMinLevel() - 1; --$$7) {
+                if ($$0 < $$6.getMinCost($$7) || $$0 > $$6.getMaxCost($$7)) continue;
+                $$3.add((java.lang.Object)new net.minecraft.world.item.enchantment.EnchantmentInstance($$6, $$7));
                 continue block0;
             }
         }
-        return arrayList;
+        return $$3;
     }
 
-    public static /* synthetic */ void lambda$deserializeEnchantments$0(java.util.Map map, net.minecraft.nbt.CompoundTag compoundTag, net.minecraft.world.item.enchantment.Enchantment enchantment) {
-        map.put((java.lang.Object)enchantment, (java.lang.Object)net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.nbt.CompoundTag)compoundTag));
+    public static /* synthetic */ void lambda$deserializeEnchantments$0(java.util.Map $$0, net.minecraft.nbt.CompoundTag $$1, net.minecraft.world.item.enchantment.Enchantment $$2) {
+        $$0.put((java.lang.Object)$$2, (java.lang.Object)net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantmentLevel((net.minecraft.nbt.CompoundTag)$$1));
     }
 }
 