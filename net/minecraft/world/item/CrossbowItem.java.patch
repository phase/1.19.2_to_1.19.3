--- net/minecraft/world/item/CrossbowItem.java
+++ net/minecraft/world/item/CrossbowItem.java
@@ -32,190 +32,195 @@
         return ARROW_ONLY;
     }
 
-    public net.minecraft.world.InteractionResultHolder<net.minecraft.world.item.ItemStack> use(net.minecraft.world.level.Level level, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        if (net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)itemStack)) {
-            net.minecraft.world.item.CrossbowItem.performShooting((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.LivingEntity)player, (net.minecraft.world.InteractionHand)hand, (net.minecraft.world.item.ItemStack)itemStack, (float)net.minecraft.world.item.CrossbowItem.getShootingPower((net.minecraft.world.item.ItemStack)itemStack), (float)1.0f);
-            net.minecraft.world.item.CrossbowItem.setCharged((net.minecraft.world.item.ItemStack)itemStack, (boolean)false);
-            return net.minecraft.world.InteractionResultHolder.consume((java.lang.Object)itemStack);
+    public net.minecraft.world.InteractionResultHolder<net.minecraft.world.item.ItemStack> use(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.player.Player $$1, net.minecraft.world.InteractionHand $$2) {
+        net.minecraft.world.item.ItemStack $$3 = $$1.getItemInHand($$2);
+        if (net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)$$3)) {
+            net.minecraft.world.item.CrossbowItem.performShooting((net.minecraft.world.level.Level)$$0, (net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.InteractionHand)$$2, (net.minecraft.world.item.ItemStack)$$3, (float)net.minecraft.world.item.CrossbowItem.getShootingPower((net.minecraft.world.item.ItemStack)$$3), (float)1.0f);
+            net.minecraft.world.item.CrossbowItem.setCharged((net.minecraft.world.item.ItemStack)$$3, (boolean)false);
+            return net.minecraft.world.InteractionResultHolder.consume((java.lang.Object)$$3);
         }
-        if (!player.getProjectile(itemStack).isEmpty()) {
-            if (!net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)itemStack)) {
+        if (!$$1.getProjectile($$3).isEmpty()) {
+            if (!net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)$$3)) {
                 this.startSoundPlayed = false;
                 this.midLoadSoundPlayed = false;
-                player.startUsingItem(hand);
+                $$1.startUsingItem($$2);
             }
-            return net.minecraft.world.InteractionResultHolder.consume((java.lang.Object)itemStack);
+            return net.minecraft.world.InteractionResultHolder.consume((java.lang.Object)$$3);
         }
-        return net.minecraft.world.InteractionResultHolder.fail((java.lang.Object)itemStack);
+        return net.minecraft.world.InteractionResultHolder.fail((java.lang.Object)$$3);
     }
 
-    public static float getShootingPower(net.minecraft.world.item.ItemStack crossbowStack) {
-        if (net.minecraft.world.item.CrossbowItem.containsChargedProjectile((net.minecraft.world.item.ItemStack)crossbowStack, (net.minecraft.world.item.Item)net.minecraft.world.item.Items.FIREWORK_ROCKET)) {
+    public static float getShootingPower(net.minecraft.world.item.ItemStack $$0) {
+        if (net.minecraft.world.item.CrossbowItem.containsChargedProjectile((net.minecraft.world.item.ItemStack)$$0, (net.minecraft.world.item.Item)net.minecraft.world.item.Items.FIREWORK_ROCKET)) {
             return 1.6f;
         }
         return 3.15f;
     }
 
-    public void releaseUsing(net.minecraft.world.item.ItemStack stack, net.minecraft.world.level.Level level, net.minecraft.world.entity.LivingEntity entityLiving, int timeLeft) {
-        int n = this.getUseDuration(stack) - timeLeft;
-        float f = net.minecraft.world.item.CrossbowItem.getPowerForTime((int)n, (net.minecraft.world.item.ItemStack)stack);
-        if (f >= 1.0f && !net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)stack) && net.minecraft.world.item.CrossbowItem.tryLoadProjectiles((net.minecraft.world.entity.LivingEntity)entityLiving, (net.minecraft.world.item.ItemStack)stack)) {
-            net.minecraft.world.item.CrossbowItem.setCharged((net.minecraft.world.item.ItemStack)stack, (boolean)true);
-            net.minecraft.sounds.SoundSource soundSource = entityLiving instanceof net.minecraft.world.entity.player.Player ? net.minecraft.sounds.SoundSource.PLAYERS : net.minecraft.sounds.SoundSource.HOSTILE;
-            level.playSound(null, entityLiving.getX(), entityLiving.getY(), entityLiving.getZ(), net.minecraft.sounds.SoundEvents.CROSSBOW_LOADING_END, soundSource, 1.0f, 1.0f / (level.getRandom().nextFloat() * 0.5f + 1.0f) + 0.2f);
+    public void releaseUsing(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.level.Level $$1, net.minecraft.world.entity.LivingEntity $$2, int $$3) {
+        int $$4 = this.getUseDuration($$0) - $$3;
+        float $$5 = net.minecraft.world.item.CrossbowItem.getPowerForTime((int)$$4, (net.minecraft.world.item.ItemStack)$$0);
+        if ($$5 >= 1.0f && !net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)$$0) && net.minecraft.world.item.CrossbowItem.tryLoadProjectiles((net.minecraft.world.entity.LivingEntity)$$2, (net.minecraft.world.item.ItemStack)$$0)) {
+            net.minecraft.world.item.CrossbowItem.setCharged((net.minecraft.world.item.ItemStack)$$0, (boolean)true);
+            net.minecraft.sounds.SoundSource $$6 = $$2 instanceof net.minecraft.world.entity.player.Player ? net.minecraft.sounds.SoundSource.PLAYERS : net.minecraft.sounds.SoundSource.HOSTILE;
+            $$1.playSound(null, $$2.getX(), $$2.getY(), $$2.getZ(), net.minecraft.sounds.SoundEvents.CROSSBOW_LOADING_END, $$6, 1.0f, 1.0f / ($$1.getRandom().nextFloat() * 0.5f + 1.0f) + 0.2f);
         }
     }
 
-    public static boolean tryLoadProjectiles(net.minecraft.world.entity.LivingEntity shooter, net.minecraft.world.item.ItemStack crossbowStack) {
-        int n = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.MULTISHOT, (net.minecraft.world.item.ItemStack)crossbowStack);
-        int n2 = n == 0 ? 1 : 3;
-        boolean bl = shooter instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)shooter).getAbilities().instabuild;
-        net.minecraft.world.item.ItemStack itemStack = shooter.getProjectile(crossbowStack);
-        net.minecraft.world.item.ItemStack itemStack2 = itemStack.copy();
-        for (int i = 0; i < n2; ++i) {
-            if (i > 0) {
-                itemStack = itemStack2.copy();
+    public static boolean tryLoadProjectiles(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.item.ItemStack $$1) {
+        int $$2 = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.MULTISHOT, (net.minecraft.world.item.ItemStack)$$1);
+        int $$3 = $$2 == 0 ? 1 : 3;
+        boolean $$4 = $$0 instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)$$0).getAbilities().instabuild;
+        net.minecraft.world.item.ItemStack $$5 = $$0.getProjectile($$1);
+        net.minecraft.world.item.ItemStack $$6 = $$5.copy();
+        for (int $$7 = 0; $$7 < $$3; ++$$7) {
+            if ($$7 > 0) {
+                $$5 = $$6.copy();
             }
-            if (itemStack.isEmpty() && bl) {
-                itemStack = new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.ARROW);
-                itemStack2 = itemStack.copy();
+            if ($$5.isEmpty() && $$4) {
+                $$5 = new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.ARROW);
+                $$6 = $$5.copy();
             }
-            if (net.minecraft.world.item.CrossbowItem.loadProjectile((net.minecraft.world.entity.LivingEntity)shooter, (net.minecraft.world.item.ItemStack)crossbowStack, (net.minecraft.world.item.ItemStack)itemStack, (i > 0 ? 1 : 0) != 0, (boolean)bl)) continue;
+            if (net.minecraft.world.item.CrossbowItem.loadProjectile((net.minecraft.world.entity.LivingEntity)$$0, (net.minecraft.world.item.ItemStack)$$1, (net.minecraft.world.item.ItemStack)$$5, ($$7 > 0 ? 1 : 0) != 0, (boolean)$$4)) continue;
             return false;
         }
         return true;
     }
 
-    public static boolean loadProjectile(net.minecraft.world.entity.LivingEntity shooter, net.minecraft.world.item.ItemStack crossbowStack, net.minecraft.world.item.ItemStack ammoStack, boolean hasAmmo, boolean isCreative) {
-        net.minecraft.world.item.ItemStack itemStack;
-        boolean bl;
-        if (ammoStack.isEmpty()) {
+    public static boolean loadProjectile(net.minecraft.world.entity.LivingEntity $$0, net.minecraft.world.item.ItemStack $$1, net.minecraft.world.item.ItemStack $$2, boolean $$3, boolean $$4) {
+        net.minecraft.world.item.ItemStack $$7;
+        boolean $$5;
+        if ($$2.isEmpty()) {
             return false;
         }
-        boolean bl2 = bl = isCreative && ammoStack.getItem() instanceof net.minecraft.world.item.ArrowItem;
-        if (!(bl || isCreative || hasAmmo)) {
-            itemStack = ammoStack.split(1);
-            if (ammoStack.isEmpty() && shooter instanceof net.minecraft.world.entity.player.Player) {
-                ((net.minecraft.world.entity.player.Player)shooter).getInventory().removeItem(ammoStack);
+        boolean bl = $$5 = $$4 && $$2.getItem() instanceof net.minecraft.world.item.ArrowItem;
+        if (!($$5 || $$4 || $$3)) {
+            net.minecraft.world.item.ItemStack $$6 = $$2.split(1);
+            if ($$2.isEmpty() && $$0 instanceof net.minecraft.world.entity.player.Player) {
+                ((net.minecraft.world.entity.player.Player)$$0).getInventory().removeItem($$2);
             }
         } else {
-            itemStack = ammoStack.copy();
+            $$7 = $$2.copy();
         }
-        net.minecraft.world.item.CrossbowItem.addChargedProjectile((net.minecraft.world.item.ItemStack)crossbowStack, (net.minecraft.world.item.ItemStack)itemStack);
+        net.minecraft.world.item.CrossbowItem.addChargedProjectile((net.minecraft.world.item.ItemStack)$$1, (net.minecraft.world.item.ItemStack)$$7);
         return true;
     }
 
-    public static boolean isCharged(net.minecraft.world.item.ItemStack crossbowStack) {
-        net.minecraft.nbt.CompoundTag compoundTag = crossbowStack.getTag();
-        return compoundTag != null && compoundTag.getBoolean("Charged");
+    public static boolean isCharged(net.minecraft.world.item.ItemStack $$0) {
+        net.minecraft.nbt.CompoundTag $$1 = $$0.getTag();
+        return $$1 != null && $$1.getBoolean("Charged");
     }
 
-    public static void setCharged(net.minecraft.world.item.ItemStack crossbowStack, boolean isCharged) {
-        net.minecraft.nbt.CompoundTag compoundTag = crossbowStack.getOrCreateTag();
-        compoundTag.putBoolean("Charged", isCharged);
+    public static void setCharged(net.minecraft.world.item.ItemStack $$0, boolean $$1) {
+        net.minecraft.nbt.CompoundTag $$2 = $$0.getOrCreateTag();
+        $$2.putBoolean("Charged", $$1);
     }
 
-    public static void addChargedProjectile(net.minecraft.world.item.ItemStack crossbowStack, net.minecraft.world.item.ItemStack ammoStack) {
-        net.minecraft.nbt.CompoundTag compoundTag = crossbowStack.getOrCreateTag();
-        net.minecraft.nbt.ListTag listTag = compoundTag.contains("ChargedProjectiles", 9) ? compoundTag.getList("ChargedProjectiles", 10) : new net.minecraft.nbt.ListTag();
-        net.minecraft.nbt.CompoundTag compoundTag2 = new net.minecraft.nbt.CompoundTag();
-        ammoStack.save(compoundTag2);
-        listTag.add((java.lang.Object)compoundTag2);
-        compoundTag.put("ChargedProjectiles", (net.minecraft.nbt.Tag)listTag);
+    public static void addChargedProjectile(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.item.ItemStack $$1) {
+        net.minecraft.nbt.ListTag $$4;
+        net.minecraft.nbt.CompoundTag $$2 = $$0.getOrCreateTag();
+        if ($$2.contains("ChargedProjectiles", 9)) {
+            net.minecraft.nbt.ListTag $$3 = $$2.getList("ChargedProjectiles", 10);
+        } else {
+            $$4 = new net.minecraft.nbt.ListTag();
+        }
+        net.minecraft.nbt.CompoundTag $$5 = new net.minecraft.nbt.CompoundTag();
+        $$1.save($$5);
+        $$4.add((java.lang.Object)$$5);
+        $$2.put("ChargedProjectiles", (net.minecraft.nbt.Tag)$$4);
     }
 
-    public static java.util.List<net.minecraft.world.item.ItemStack> getChargedProjectiles(net.minecraft.world.item.ItemStack crossbowStack) {
-        net.minecraft.nbt.ListTag listTag;
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-        net.minecraft.nbt.CompoundTag compoundTag = crossbowStack.getTag();
-        if (compoundTag != null && compoundTag.contains("ChargedProjectiles", 9) && (listTag = compoundTag.getList("ChargedProjectiles", 10)) != null) {
-            for (int i = 0; i < listTag.size(); ++i) {
-                net.minecraft.nbt.CompoundTag compoundTag2 = listTag.getCompound(i);
-                arrayList.add((java.lang.Object)net.minecraft.world.item.ItemStack.of((net.minecraft.nbt.CompoundTag)compoundTag2));
+    public static java.util.List<net.minecraft.world.item.ItemStack> getChargedProjectiles(net.minecraft.world.item.ItemStack $$0) {
+        net.minecraft.nbt.ListTag $$3;
+        java.util.ArrayList $$1 = com.google.common.collect.Lists.newArrayList();
+        net.minecraft.nbt.CompoundTag $$2 = $$0.getTag();
+        if ($$2 != null && $$2.contains("ChargedProjectiles", 9) && ($$3 = $$2.getList("ChargedProjectiles", 10)) != null) {
+            for (int $$4 = 0; $$4 < $$3.size(); ++$$4) {
+                net.minecraft.nbt.CompoundTag $$5 = $$3.getCompound($$4);
+                $$1.add((java.lang.Object)net.minecraft.world.item.ItemStack.of((net.minecraft.nbt.CompoundTag)$$5));
             }
         }
-        return arrayList;
+        return $$1;
     }
 
-    public static void clearChargedProjectiles(net.minecraft.world.item.ItemStack crossbowStack) {
-        net.minecraft.nbt.CompoundTag compoundTag = crossbowStack.getTag();
-        if (compoundTag != null) {
-            net.minecraft.nbt.ListTag listTag = compoundTag.getList("ChargedProjectiles", 9);
-            listTag.clear();
-            compoundTag.put("ChargedProjectiles", (net.minecraft.nbt.Tag)listTag);
+    public static void clearChargedProjectiles(net.minecraft.world.item.ItemStack $$0) {
+        net.minecraft.nbt.CompoundTag $$1 = $$0.getTag();
+        if ($$1 != null) {
+            net.minecraft.nbt.ListTag $$2 = $$1.getList("ChargedProjectiles", 9);
+            $$2.clear();
+            $$1.put("ChargedProjectiles", (net.minecraft.nbt.Tag)$$2);
         }
     }
 
-    public static boolean containsChargedProjectile(net.minecraft.world.item.ItemStack crossbowStack, net.minecraft.world.item.Item ammoItem) {
-        return net.minecraft.world.item.CrossbowItem.getChargedProjectiles((net.minecraft.world.item.ItemStack)crossbowStack).stream().anyMatch(stackToCheck -> stackToCheck.is(ammoItem));
+    public static boolean containsChargedProjectile(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.item.Item $$12) {
+        return net.minecraft.world.item.CrossbowItem.getChargedProjectiles((net.minecraft.world.item.ItemStack)$$0).stream().anyMatch($$1 -> $$1.is($$12));
     }
 
-    public static void shootProjectile(net.minecraft.world.level.Level level, net.minecraft.world.entity.LivingEntity shooter, net.minecraft.world.InteractionHand hand, net.minecraft.world.item.ItemStack crossbowStack, net.minecraft.world.item.ItemStack ammoStack, float soundPitch, boolean isCreativeMode, float velocity, float inaccuracy, float projectileAngle) {
-        net.minecraft.world.entity.projectile.AbstractArrow abstractArrow;
-        if (level.isClientSide) {
+    public static void shootProjectile(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.LivingEntity $$12, net.minecraft.world.InteractionHand $$2, net.minecraft.world.item.ItemStack $$3, net.minecraft.world.item.ItemStack $$4, float $$5, boolean $$6, float $$7, float $$8, float $$9) {
+        net.minecraft.world.entity.projectile.AbstractArrow $$122;
+        if ($$0.isClientSide) {
             return;
         }
-        boolean bl = ammoStack.is(net.minecraft.world.item.Items.FIREWORK_ROCKET);
-        if (bl) {
-            abstractArrow = new net.minecraft.world.entity.projectile.FireworkRocketEntity(level, ammoStack, (net.minecraft.world.entity.Entity)shooter, shooter.getX(), shooter.getEyeY() - (double)0.15f, shooter.getZ(), true);
+        boolean $$10 = $$4.is(net.minecraft.world.item.Items.FIREWORK_ROCKET);
+        if ($$10) {
+            net.minecraft.world.entity.projectile.FireworkRocketEntity $$11 = new net.minecraft.world.entity.projectile.FireworkRocketEntity($$0, $$4, (net.minecraft.world.entity.Entity)$$12, $$12.getX(), $$12.getEyeY() - (double)0.15f, $$12.getZ(), true);
         } else {
-            abstractArrow = net.minecraft.world.item.CrossbowItem.getArrow((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.LivingEntity)shooter, (net.minecraft.world.item.ItemStack)crossbowStack, (net.minecraft.world.item.ItemStack)ammoStack);
-            if (isCreativeMode || projectileAngle != 0.0f) {
-                abstractArrow.pickup = net.minecraft.world.entity.projectile.AbstractArrow$Pickup.CREATIVE_ONLY;
+            $$122 = net.minecraft.world.item.CrossbowItem.getArrow((net.minecraft.world.level.Level)$$0, (net.minecraft.world.entity.LivingEntity)$$12, (net.minecraft.world.item.ItemStack)$$3, (net.minecraft.world.item.ItemStack)$$4);
+            if ($$6 || $$9 != 0.0f) {
+                $$122.pickup = net.minecraft.world.entity.projectile.AbstractArrow$Pickup.CREATIVE_ONLY;
             }
         }
-        if (shooter instanceof net.minecraft.world.entity.monster.CrossbowAttackMob) {
-            net.minecraft.world.entity.monster.CrossbowAttackMob crossbowAttackMob = (net.minecraft.world.entity.monster.CrossbowAttackMob)shooter;
-            crossbowAttackMob.shootCrossbowProjectile(crossbowAttackMob.getTarget(), crossbowStack, (net.minecraft.world.entity.projectile.Projectile)abstractArrow, projectileAngle);
+        if ($$12 instanceof net.minecraft.world.entity.monster.CrossbowAttackMob) {
+            net.minecraft.world.entity.monster.CrossbowAttackMob $$13 = (net.minecraft.world.entity.monster.CrossbowAttackMob)$$12;
+            $$13.shootCrossbowProjectile($$13.getTarget(), $$3, (net.minecraft.world.entity.projectile.Projectile)$$122, $$9);
         } else {
-            net.minecraft.world.phys.Vec3 vec3 = shooter.getUpVector(1.0f);
-            com.mojang.math.Quaternion quaternion = new com.mojang.math.Quaternion(new com.mojang.math.Vector3f(vec3), projectileAngle, true);
-            net.minecraft.world.phys.Vec3 vec32 = shooter.getViewVector(1.0f);
-            com.mojang.math.Vector3f vector3f = new com.mojang.math.Vector3f(vec32);
-            vector3f.transform(quaternion);
-            abstractArrow.shoot((double)vector3f.x(), (double)vector3f.y(), (double)vector3f.z(), velocity, inaccuracy);
+            net.minecraft.world.phys.Vec3 $$14 = $$12.getUpVector(1.0f);
+            com.mojang.math.Quaternion $$15 = new com.mojang.math.Quaternion(new com.mojang.math.Vector3f($$14), $$9, true);
+            net.minecraft.world.phys.Vec3 $$16 = $$12.getViewVector(1.0f);
+            com.mojang.math.Vector3f $$17 = new com.mojang.math.Vector3f($$16);
+            $$17.transform($$15);
+            $$122.shoot((double)$$17.x(), (double)$$17.y(), (double)$$17.z(), $$7, $$8);
         }
-        crossbowStack.hurtAndBreak(bl ? 3 : 1, shooter, contextEntity -> contextEntity.broadcastBreakEvent(hand));
-        level.addFreshEntity((net.minecraft.world.entity.Entity)abstractArrow);
-        level.playSound(null, shooter.getX(), shooter.getY(), shooter.getZ(), net.minecraft.sounds.SoundEvents.CROSSBOW_SHOOT, net.minecraft.sounds.SoundSource.PLAYERS, 1.0f, soundPitch);
+        $$3.hurtAndBreak($$10 ? 3 : 1, $$12, $$1 -> $$1.broadcastBreakEvent($$2));
+        $$0.addFreshEntity((net.minecraft.world.entity.Entity)$$122);
+        $$0.playSound(null, $$12.getX(), $$12.getY(), $$12.getZ(), net.minecraft.sounds.SoundEvents.CROSSBOW_SHOOT, net.minecraft.sounds.SoundSource.PLAYERS, 1.0f, $$5);
     }
 
-    public static net.minecraft.world.entity.projectile.AbstractArrow getArrow(net.minecraft.world.level.Level level, net.minecraft.world.entity.LivingEntity livingEntity, net.minecraft.world.item.ItemStack crossbowStack, net.minecraft.world.item.ItemStack ammoStack) {
-        net.minecraft.world.item.ArrowItem arrowItem = (net.minecraft.world.item.ArrowItem)(ammoStack.getItem() instanceof net.minecraft.world.item.ArrowItem ? ammoStack.getItem() : net.minecraft.world.item.Items.ARROW);
-        net.minecraft.world.entity.projectile.AbstractArrow abstractArrow = arrowItem.createArrow(level, ammoStack, livingEntity);
-        if (livingEntity instanceof net.minecraft.world.entity.player.Player) {
-            abstractArrow.setCritArrow(true);
+    public static net.minecraft.world.entity.projectile.AbstractArrow getArrow(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.LivingEntity $$1, net.minecraft.world.item.ItemStack $$2, net.minecraft.world.item.ItemStack $$3) {
+        net.minecraft.world.item.ArrowItem $$4 = (net.minecraft.world.item.ArrowItem)($$3.getItem() instanceof net.minecraft.world.item.ArrowItem ? $$3.getItem() : net.minecraft.world.item.Items.ARROW);
+        net.minecraft.world.entity.projectile.AbstractArrow $$5 = $$4.createArrow($$0, $$3, $$1);
+        if ($$1 instanceof net.minecraft.world.entity.player.Player) {
+            $$5.setCritArrow(true);
         }
-        abstractArrow.setSoundEvent(net.minecraft.sounds.SoundEvents.CROSSBOW_HIT);
-        abstractArrow.setShotFromCrossbow(true);
-        int n = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.PIERCING, (net.minecraft.world.item.ItemStack)crossbowStack);
-        if (n > 0) {
-            abstractArrow.setPierceLevel((byte)n);
+        $$5.setSoundEvent(net.minecraft.sounds.SoundEvents.CROSSBOW_HIT);
+        $$5.setShotFromCrossbow(true);
+        int $$6 = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.PIERCING, (net.minecraft.world.item.ItemStack)$$2);
+        if ($$6 > 0) {
+            $$5.setPierceLevel((byte)$$6);
         }
-        return abstractArrow;
+        return $$5;
     }
 
-    public static void performShooting(net.minecraft.world.level.Level level, net.minecraft.world.entity.LivingEntity shooter, net.minecraft.world.InteractionHand usedHand, net.minecraft.world.item.ItemStack crossbowStack, float velocity, float inaccuracy) {
-        java.util.List list = net.minecraft.world.item.CrossbowItem.getChargedProjectiles((net.minecraft.world.item.ItemStack)crossbowStack);
-        float[] fArray = net.minecraft.world.item.CrossbowItem.getShotPitches((net.minecraft.util.RandomSource)shooter.getRandom());
-        for (int i = 0; i < list.size(); ++i) {
-            boolean bl;
-            net.minecraft.world.item.ItemStack itemStack = (net.minecraft.world.item.ItemStack)list.get(i);
-            boolean bl2 = bl = shooter instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)shooter).getAbilities().instabuild;
-            if (itemStack.isEmpty()) continue;
-            if (i == 0) {
-                net.minecraft.world.item.CrossbowItem.shootProjectile((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.LivingEntity)shooter, (net.minecraft.world.InteractionHand)usedHand, (net.minecraft.world.item.ItemStack)crossbowStack, (net.minecraft.world.item.ItemStack)itemStack, (float)fArray[i], (boolean)bl, (float)velocity, (float)inaccuracy, (float)0.0f);
+    public static void performShooting(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.LivingEntity $$1, net.minecraft.world.InteractionHand $$2, net.minecraft.world.item.ItemStack $$3, float $$4, float $$5) {
+        java.util.List $$6 = net.minecraft.world.item.CrossbowItem.getChargedProjectiles((net.minecraft.world.item.ItemStack)$$3);
+        float[] $$7 = net.minecraft.world.item.CrossbowItem.getShotPitches((net.minecraft.util.RandomSource)$$1.getRandom());
+        for (int $$8 = 0; $$8 < $$6.size(); ++$$8) {
+            boolean $$10;
+            net.minecraft.world.item.ItemStack $$9 = (net.minecraft.world.item.ItemStack)$$6.get($$8);
+            boolean bl = $$10 = $$1 instanceof net.minecraft.world.entity.player.Player && ((net.minecraft.world.entity.player.Player)$$1).getAbilities().instabuild;
+            if ($$9.isEmpty()) continue;
+            if ($$8 == 0) {
+                net.minecraft.world.item.CrossbowItem.shootProjectile((net.minecraft.world.level.Level)$$0, (net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.InteractionHand)$$2, (net.minecraft.world.item.ItemStack)$$3, (net.minecraft.world.item.ItemStack)$$9, (float)$$7[$$8], (boolean)$$10, (float)$$4, (float)$$5, (float)0.0f);
                 continue;
             }
-            if (i == 1) {
-                net.minecraft.world.item.CrossbowItem.shootProjectile((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.LivingEntity)shooter, (net.minecraft.world.InteractionHand)usedHand, (net.minecraft.world.item.ItemStack)crossbowStack, (net.minecraft.world.item.ItemStack)itemStack, (float)fArray[i], (boolean)bl, (float)velocity, (float)inaccuracy, (float)-10.0f);
+            if ($$8 == 1) {
+                net.minecraft.world.item.CrossbowItem.shootProjectile((net.minecraft.world.level.Level)$$0, (net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.InteractionHand)$$2, (net.minecraft.world.item.ItemStack)$$3, (net.minecraft.world.item.ItemStack)$$9, (float)$$7[$$8], (boolean)$$10, (float)$$4, (float)$$5, (float)-10.0f);
                 continue;
             }
-            if (i != 2) continue;
-            net.minecraft.world.item.CrossbowItem.shootProjectile((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.LivingEntity)shooter, (net.minecraft.world.InteractionHand)usedHand, (net.minecraft.world.item.ItemStack)crossbowStack, (net.minecraft.world.item.ItemStack)itemStack, (float)fArray[i], (boolean)bl, (float)velocity, (float)inaccuracy, (float)10.0f);
+            if ($$8 != 2) continue;
+            net.minecraft.world.item.CrossbowItem.shootProjectile((net.minecraft.world.level.Level)$$0, (net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.InteractionHand)$$2, (net.minecraft.world.item.ItemStack)$$3, (net.minecraft.world.item.ItemStack)$$9, (float)$$7[$$8], (boolean)$$10, (float)$$4, (float)$$5, (float)10.0f);
         }
-        net.minecraft.world.item.CrossbowItem.onCrossbowShot((net.minecraft.world.level.Level)level, (net.minecraft.world.entity.LivingEntity)shooter, (net.minecraft.world.item.ItemStack)crossbowStack);
+        net.minecraft.world.item.CrossbowItem.onCrossbowShot((net.minecraft.world.level.Level)$$0, (net.minecraft.world.entity.LivingEntity)$$1, (net.minecraft.world.item.ItemStack)$$3);
     }
 
     public static float[] getShotPitches(net.minecraft.util.RandomSource $$0) {
@@ -228,53 +233,53 @@
         return 1.0f / ($$1.nextFloat() * 0.5f + 1.8f) + $$2;
     }
 
-    public static void onCrossbowShot(net.minecraft.world.level.Level level, net.minecraft.world.entity.LivingEntity shooter, net.minecraft.world.item.ItemStack crossbowStack) {
-        if (shooter instanceof net.minecraft.server.level.ServerPlayer) {
-            net.minecraft.server.level.ServerPlayer serverPlayer = (net.minecraft.server.level.ServerPlayer)shooter;
-            if (!level.isClientSide) {
-                net.minecraft.advancements.CriteriaTriggers.SHOT_CROSSBOW.trigger(serverPlayer, crossbowStack);
+    public static void onCrossbowShot(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.LivingEntity $$1, net.minecraft.world.item.ItemStack $$2) {
+        if ($$1 instanceof net.minecraft.server.level.ServerPlayer) {
+            net.minecraft.server.level.ServerPlayer $$3 = (net.minecraft.server.level.ServerPlayer)$$1;
+            if (!$$0.isClientSide) {
+                net.minecraft.advancements.CriteriaTriggers.SHOT_CROSSBOW.trigger($$3, $$2);
             }
-            serverPlayer.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)crossbowStack.getItem()));
+            $$3.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)$$2.getItem()));
         }
-        net.minecraft.world.item.CrossbowItem.clearChargedProjectiles((net.minecraft.world.item.ItemStack)crossbowStack);
+        net.minecraft.world.item.CrossbowItem.clearChargedProjectiles((net.minecraft.world.item.ItemStack)$$2);
     }
 
-    public void onUseTick(net.minecraft.world.level.Level level, net.minecraft.world.entity.LivingEntity livingEntity, net.minecraft.world.item.ItemStack stack, int count) {
-        if (!level.isClientSide) {
-            int n = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.QUICK_CHARGE, (net.minecraft.world.item.ItemStack)stack);
-            net.minecraft.sounds.SoundEvent soundEvent = this.getStartSound(n);
-            net.minecraft.sounds.SoundEvent soundEvent2 = n == 0 ? net.minecraft.sounds.SoundEvents.CROSSBOW_LOADING_MIDDLE : null;
-            float f = (float)(stack.getUseDuration() - count) / (float)net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)stack);
-            if (f < 0.2f) {
+    public void onUseTick(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.LivingEntity $$1, net.minecraft.world.item.ItemStack $$2, int $$3) {
+        if (!$$0.isClientSide) {
+            int $$4 = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.QUICK_CHARGE, (net.minecraft.world.item.ItemStack)$$2);
+            net.minecraft.sounds.SoundEvent $$5 = this.getStartSound($$4);
+            net.minecraft.sounds.SoundEvent $$6 = $$4 == 0 ? net.minecraft.sounds.SoundEvents.CROSSBOW_LOADING_MIDDLE : null;
+            float $$7 = (float)($$2.getUseDuration() - $$3) / (float)net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)$$2);
+            if ($$7 < 0.2f) {
                 this.startSoundPlayed = false;
                 this.midLoadSoundPlayed = false;
             }
-            if (f >= 0.2f && !this.startSoundPlayed) {
+            if ($$7 >= 0.2f && !this.startSoundPlayed) {
                 this.startSoundPlayed = true;
-                level.playSound(null, livingEntity.getX(), livingEntity.getY(), livingEntity.getZ(), soundEvent, net.minecraft.sounds.SoundSource.PLAYERS, 0.5f, 1.0f);
+                $$0.playSound(null, $$1.getX(), $$1.getY(), $$1.getZ(), $$5, net.minecraft.sounds.SoundSource.PLAYERS, 0.5f, 1.0f);
             }
-            if (f >= 0.5f && soundEvent2 != null && !this.midLoadSoundPlayed) {
+            if ($$7 >= 0.5f && $$6 != null && !this.midLoadSoundPlayed) {
                 this.midLoadSoundPlayed = true;
-                level.playSound(null, livingEntity.getX(), livingEntity.getY(), livingEntity.getZ(), soundEvent2, net.minecraft.sounds.SoundSource.PLAYERS, 0.5f, 1.0f);
+                $$0.playSound(null, $$1.getX(), $$1.getY(), $$1.getZ(), $$6, net.minecraft.sounds.SoundSource.PLAYERS, 0.5f, 1.0f);
             }
         }
     }
 
-    public int getUseDuration(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)stack) + 3;
+    public int getUseDuration(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)$$0) + 3;
     }
 
-    public static int getChargeDuration(net.minecraft.world.item.ItemStack crossbowStack) {
-        int n = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.QUICK_CHARGE, (net.minecraft.world.item.ItemStack)crossbowStack);
-        return n == 0 ? 25 : 25 - 5 * n;
+    public static int getChargeDuration(net.minecraft.world.item.ItemStack $$0) {
+        int $$1 = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)net.minecraft.world.item.enchantment.Enchantments.QUICK_CHARGE, (net.minecraft.world.item.ItemStack)$$0);
+        return $$1 == 0 ? 25 : 25 - 5 * $$1;
     }
 
-    public net.minecraft.world.item.UseAnim getUseAnimation(net.minecraft.world.item.ItemStack stack) {
+    public net.minecraft.world.item.UseAnim getUseAnimation(net.minecraft.world.item.ItemStack $$0) {
         return net.minecraft.world.item.UseAnim.CROSSBOW;
     }
 
-    public net.minecraft.sounds.SoundEvent getStartSound(int enchantmentLevel) {
-        switch (enchantmentLevel) {
+    public net.minecraft.sounds.SoundEvent getStartSound(int $$0) {
+        switch ($$0) {
             case 1: {
                 return net.minecraft.sounds.SoundEvents.CROSSBOW_QUICK_CHARGE_1;
             }
@@ -288,29 +293,29 @@
         return net.minecraft.sounds.SoundEvents.CROSSBOW_LOADING_START;
     }
 
-    public static float getPowerForTime(int useTime, net.minecraft.world.item.ItemStack crossbowStack) {
-        float f = (float)useTime / (float)net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)crossbowStack);
-        if (f > 1.0f) {
-            f = 1.0f;
+    public static float getPowerForTime(int $$0, net.minecraft.world.item.ItemStack $$1) {
+        float $$2 = (float)$$0 / (float)net.minecraft.world.item.CrossbowItem.getChargeDuration((net.minecraft.world.item.ItemStack)$$1);
+        if ($$2 > 1.0f) {
+            $$2 = 1.0f;
         }
-        return f;
+        return $$2;
     }
 
-    public void appendHoverText(net.minecraft.world.item.ItemStack stack, @javax.annotation.Nullable net.minecraft.world.level.Level level, java.util.List<net.minecraft.network.chat.Component> tooltip, net.minecraft.world.item.TooltipFlag flag) {
-        java.util.List list = net.minecraft.world.item.CrossbowItem.getChargedProjectiles((net.minecraft.world.item.ItemStack)stack);
-        if (!net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)stack) || list.isEmpty()) {
+    public void appendHoverText(net.minecraft.world.item.ItemStack $$0, @javax.annotation.Nullable net.minecraft.world.level.Level $$1, java.util.List<net.minecraft.network.chat.Component> $$2, net.minecraft.world.item.TooltipFlag $$3) {
+        java.util.List $$4 = net.minecraft.world.item.CrossbowItem.getChargedProjectiles((net.minecraft.world.item.ItemStack)$$0);
+        if (!net.minecraft.world.item.CrossbowItem.isCharged((net.minecraft.world.item.ItemStack)$$0) || $$4.isEmpty()) {
             return;
         }
-        net.minecraft.world.item.ItemStack itemStack = (net.minecraft.world.item.ItemStack)list.get(0);
-        tooltip.add((java.lang.Object)net.minecraft.network.chat.Component.translatable((java.lang.String)"item.minecraft.crossbow.projectile").append(" ").append(itemStack.getDisplayName()));
-        if (flag.isAdvanced() && itemStack.is(net.minecraft.world.item.Items.FIREWORK_ROCKET)) {
-            java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
-            net.minecraft.world.item.Items.FIREWORK_ROCKET.appendHoverText(itemStack, level, (java.util.List)arrayList, flag);
-            if (!arrayList.isEmpty()) {
-                for (int i = 0; i < arrayList.size(); ++i) {
-                    arrayList.set(i, (java.lang.Object)net.minecraft.network.chat.Component.literal((java.lang.String)"  ").append((net.minecraft.network.chat.Component)arrayList.get(i)).withStyle(net.minecraft.ChatFormatting.GRAY));
+        net.minecraft.world.item.ItemStack $$5 = (net.minecraft.world.item.ItemStack)$$4.get(0);
+        $$2.add((java.lang.Object)net.minecraft.network.chat.Component.translatable((java.lang.String)"item.minecraft.crossbow.projectile").append(" ").append($$5.getDisplayName()));
+        if ($$3.isAdvanced() && $$5.is(net.minecraft.world.item.Items.FIREWORK_ROCKET)) {
+            java.util.ArrayList $$6 = com.google.common.collect.Lists.newArrayList();
+            net.minecraft.world.item.Items.FIREWORK_ROCKET.appendHoverText($$5, $$1, (java.util.List)$$6, $$3);
+            if (!$$6.isEmpty()) {
+                for (int $$7 = 0; $$7 < $$6.size(); ++$$7) {
+                    $$6.set($$7, (java.lang.Object)net.minecraft.network.chat.Component.literal((java.lang.String)"  ").append((net.minecraft.network.chat.Component)$$6.get($$7)).withStyle(net.minecraft.ChatFormatting.GRAY));
                 }
-                tooltip.addAll((java.util.Collection)arrayList);
+                $$2.addAll((java.util.Collection)$$6);
             }
         }
     }