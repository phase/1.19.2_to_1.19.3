--- net/minecraft/world/item/ShovelItem.java
+++ net/minecraft/world/item/ShovelItem.java
@@ -8,37 +8,37 @@
  {
     public static java.util.Map<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> FLATTENABLES;
 
-    public net.minecraft.world.item.ShovelItem(net.minecraft.world.item.Tier tier, float attackDamageModifier, float attackSpeedModifier, net.minecraft.world.item.Item$Properties properties) {
-        super(attackDamageModifier, attackSpeedModifier, tier, net.minecraft.tags.BlockTags.MINEABLE_WITH_SHOVEL, properties);
+    public net.minecraft.world.item.ShovelItem(net.minecraft.world.item.Tier $$0, float $$1, float $$2, net.minecraft.world.item.Item$Properties $$3) {
+        super($$1, $$2, $$0, net.minecraft.tags.BlockTags.MINEABLE_WITH_SHOVEL, $$3);
     }
 
-    public net.minecraft.world.InteractionResult useOn(net.minecraft.world.item.context.UseOnContext context) {
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos);
-        if (context.getClickedFace() != net.minecraft.core.Direction.DOWN) {
-            net.minecraft.world.entity.player.Player player = context.getPlayer();
-            net.minecraft.world.level.block.state.BlockState blockState2 = (net.minecraft.world.level.block.state.BlockState)FLATTENABLES.get((java.lang.Object)blockState.getBlock());
-            net.minecraft.world.level.block.state.BlockState blockState3 = null;
-            if (blockState2 != null && level.getBlockState(blockPos.above()).isAir()) {
-                level.playSound(player, blockPos, net.minecraft.sounds.SoundEvents.SHOVEL_FLATTEN, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
-                blockState3 = blockState2;
-            } else if (blockState.getBlock() instanceof net.minecraft.world.level.block.CampfireBlock && ((java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.CampfireBlock.LIT)).booleanValue()) {
-                if (!level.isClientSide()) {
-                    level.levelEvent(null, 1009, blockPos, 0);
+    public net.minecraft.world.InteractionResult useOn(net.minecraft.world.item.context.UseOnContext $$0) {
+        net.minecraft.world.level.Level $$12 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$2 = $$0.getClickedPos();
+        net.minecraft.world.level.block.state.BlockState $$3 = $$12.getBlockState($$2);
+        if ($$0.getClickedFace() != net.minecraft.core.Direction.DOWN) {
+            net.minecraft.world.entity.player.Player $$4 = $$0.getPlayer();
+            net.minecraft.world.level.block.state.BlockState $$5 = (net.minecraft.world.level.block.state.BlockState)FLATTENABLES.get((java.lang.Object)$$3.getBlock());
+            net.minecraft.world.level.block.state.BlockState $$6 = null;
+            if ($$5 != null && $$12.getBlockState($$2.above()).isAir()) {
+                $$12.playSound($$4, $$2, net.minecraft.sounds.SoundEvents.SHOVEL_FLATTEN, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
+                $$6 = $$5;
+            } else if ($$3.getBlock() instanceof net.minecraft.world.level.block.CampfireBlock && ((java.lang.Boolean)$$3.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.CampfireBlock.LIT)).booleanValue()) {
+                if (!$$12.isClientSide()) {
+                    $$12.levelEvent(null, 1009, $$2, 0);
                 }
-                net.minecraft.world.level.block.CampfireBlock.dowse((net.minecraft.world.entity.Entity)context.getPlayer(), (net.minecraft.world.level.LevelAccessor)level, (net.minecraft.core.BlockPos)blockPos, (net.minecraft.world.level.block.state.BlockState)blockState);
-                blockState3 = (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.CampfireBlock.LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false));
+                net.minecraft.world.level.block.CampfireBlock.dowse((net.minecraft.world.entity.Entity)$$0.getPlayer(), (net.minecraft.world.level.LevelAccessor)$$12, (net.minecraft.core.BlockPos)$$2, (net.minecraft.world.level.block.state.BlockState)$$3);
+                $$6 = (net.minecraft.world.level.block.state.BlockState)$$3.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.CampfireBlock.LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false));
             }
-            if (blockState3 != null) {
-                if (!level.isClientSide) {
-                    level.setBlock(blockPos, blockState3, 11);
-                    level.gameEvent(net.minecraft.world.level.gameevent.GameEvent.BLOCK_CHANGE, blockPos, net.minecraft.world.level.gameevent.GameEvent$Context.of((net.minecraft.world.entity.Entity)player, (net.minecraft.world.level.block.state.BlockState)blockState3));
-                    if (player != null) {
-                        context.getItemInHand().hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)player, contextEntity -> contextEntity.broadcastBreakEvent(context.getHand()));
+            if ($$6 != null) {
+                if (!$$12.isClientSide) {
+                    $$12.setBlock($$2, $$6, 11);
+                    $$12.gameEvent(net.minecraft.world.level.gameevent.GameEvent.BLOCK_CHANGE, $$2, net.minecraft.world.level.gameevent.GameEvent$Context.of((net.minecraft.world.entity.Entity)$$4, (net.minecraft.world.level.block.state.BlockState)$$6));
+                    if ($$4 != null) {
+                        $$0.getItemInHand().hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)$$4, $$1 -> $$1.broadcastBreakEvent($$0.getHand()));
                     }
                 }
-                return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+                return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$12.isClientSide);
             }
             return net.minecraft.world.InteractionResult.PASS;
         }