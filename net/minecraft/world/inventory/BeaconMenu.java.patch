--- net/minecraft/world/inventory/BeaconMenu.java
+++ net/minecraft/world/inventory/BeaconMenu.java
@@ -18,79 +18,76 @@
     public net.minecraft.world.inventory.ContainerLevelAccess access;
     public net.minecraft.world.inventory.ContainerData beaconData;
 
-    public net.minecraft.world.inventory.BeaconMenu(int containerId, net.minecraft.world.Container container) {
-        this(containerId, container, (net.minecraft.world.inventory.ContainerData)new net.minecraft.world.inventory.SimpleContainerData(3), net.minecraft.world.inventory.ContainerLevelAccess.NULL);
+    public net.minecraft.world.inventory.BeaconMenu(int $$0, net.minecraft.world.Container $$1) {
+        this($$0, $$1, (net.minecraft.world.inventory.ContainerData)new net.minecraft.world.inventory.SimpleContainerData(3), net.minecraft.world.inventory.ContainerLevelAccess.NULL);
     }
 
-    public net.minecraft.world.inventory.BeaconMenu(int containerId, net.minecraft.world.Container container, net.minecraft.world.inventory.ContainerData beaconData, net.minecraft.world.inventory.ContainerLevelAccess access) {
-        super(net.minecraft.world.inventory.MenuType.BEACON, containerId);
-        int n;
+    public net.minecraft.world.inventory.BeaconMenu(int $$0, net.minecraft.world.Container $$1, net.minecraft.world.inventory.ContainerData $$2, net.minecraft.world.inventory.ContainerLevelAccess $$3) {
+        super(net.minecraft.world.inventory.MenuType.BEACON, $$0);
         this.beacon = new /* Unavailable Anonymous Inner Class!! */;
-        net.minecraft.world.inventory.BeaconMenu.checkContainerDataCount((net.minecraft.world.inventory.ContainerData)beaconData, (int)3);
-        this.beaconData = beaconData;
-        this.access = access;
+        net.minecraft.world.inventory.BeaconMenu.checkContainerDataCount((net.minecraft.world.inventory.ContainerData)$$2, (int)3);
+        this.beaconData = $$2;
+        this.access = $$3;
         this.paymentSlot = new net.minecraft.world.inventory.BeaconMenu$PaymentSlot(this, this.beacon, 0, 136, 110);
         this.addSlot((net.minecraft.world.inventory.Slot)this.paymentSlot);
-        this.addDataSlots(beaconData);
-        int n2 = 36;
-        int n3 = 137;
-        for (n = 0;
- n < 3; ++n) {
-            for (int i = 0; i < 9; ++i) {
-                this.addSlot(new net.minecraft.world.inventory.Slot(container, i + n * 9 + 9, 36 + i * 18, 137 + n * 18));
+        this.addDataSlots($$2);
+        int $$4 = 36;
+        int $$5 = 137;
+        for (int $$6 = 0; $$6 < 3; ++$$6) {
+            for (int $$7 = 0; $$7 < 9; ++$$7) {
+                this.addSlot(new net.minecraft.world.inventory.Slot($$1, $$7 + $$6 * 9 + 9, 36 + $$7 * 18, 137 + $$6 * 18));
             }
         }
-        for (n = 0;
- n < 9; ++n) {
-            this.addSlot(new net.minecraft.world.inventory.Slot(container, n, 36 + n * 18, 195));
+        for (int $$8 = 0; $$8 < 9; ++$$8) {
+            this.addSlot(new net.minecraft.world.inventory.Slot($$1, $$8, 36 + $$8 * 18, 195));
         }
     }
 
-    public void removed(net.minecraft.world.entity.player.Player player) {
-        super.removed(player);
-        if (player.level.isClientSide) {
+    public void removed(net.minecraft.world.entity.player.Player $$0) {
+        super.removed($$0);
+        if ($$0.level.isClientSide) {
             return;
         }
-        net.minecraft.world.item.ItemStack itemStack = this.paymentSlot.remove(this.paymentSlot.getMaxStackSize());
-        if (!itemStack.isEmpty()) {
-            player.drop(itemStack, false);
+        net.minecraft.world.item.ItemStack $$1 = this.paymentSlot.remove(this.paymentSlot.getMaxStackSize());
+        if (!$$1.isEmpty()) {
+            $$0.drop($$1, false);
         }
     }
 
-    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
-        return net.minecraft.world.inventory.BeaconMenu.stillValid((net.minecraft.world.inventory.ContainerLevelAccess)this.access, (net.minecraft.world.entity.player.Player)player, (net.minecraft.world.level.block.Block)net.minecraft.world.level.block.Blocks.BEACON);
+    public boolean stillValid(net.minecraft.world.entity.player.Player $$0) {
+        return net.minecraft.world.inventory.BeaconMenu.stillValid((net.minecraft.world.inventory.ContainerLevelAccess)this.access, (net.minecraft.world.entity.player.Player)$$0, (net.minecraft.world.level.block.Block)net.minecraft.world.level.block.Blocks.BEACON);
     }
 
-    public void setData(int id, int data) {
-        super.setData(id, data);
+    public void setData(int $$0, int $$1) {
+        super.setData($$0, $$1);
         this.broadcastChanges();
     }
 
-    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player player, int index) {
-        net.minecraft.world.item.ItemStack itemStack = net.minecraft.world.item.ItemStack.EMPTY;
-        net.minecraft.world.inventory.Slot slot = (net.minecraft.world.inventory.Slot)this.slots.get(index);
-        if (slot != null && slot.hasItem()) {
-            net.minecraft.world.item.ItemStack itemStack2 = slot.getItem();
-            itemStack = itemStack2.copy();
-            if (index == 0) {
-                if (!this.moveItemStackTo(itemStack2, 1, 37, true)) {
+    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player $$0, int $$1) {
+        net.minecraft.world.item.ItemStack $$2 = net.minecraft.world.item.ItemStack.EMPTY;
+        net.minecraft.world.inventory.Slot $$3 = (net.minecraft.world.inventory.Slot)this.slots.get($$1);
+        if ($$3 != null && $$3.hasItem()) {
+            net.minecraft.world.item.ItemStack $$4 = $$3.getItem();
+            $$2 = $$4.copy();
+            if ($$1 == 0) {
+                if (!this.moveItemStackTo($$4, 1, 37, true)) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
-                slot.onQuickCraft(itemStack2, itemStack);
-            } else if (!this.paymentSlot.hasItem() && this.paymentSlot.mayPlace(itemStack2) && itemStack2.getCount() == 1 ? !this.moveItemStackTo(itemStack2, 0, 1, false) : (index >= 1 && index < 28 ? !this.moveItemStackTo(itemStack2, 28, 37, false) : (index >= 28 && index < 37 ? !this.moveItemStackTo(itemStack2, 1, 28, false) : !this.moveItemStackTo(itemStack2, 1, 37, false)))) {
+                $$3.onQuickCraft($$4, $$2);
+            } else if (!this.paymentSlot.hasItem() && this.paymentSlot.mayPlace($$4) && $$4.getCount() == 1 ? !this.moveItemStackTo($$4, 0, 1, false) : ($$1 >= 1 && $$1 < 28 ? !this.moveItemStackTo($$4, 28, 37, false) : ($$1 >= 28 && $$1 < 37 ? !this.moveItemStackTo($$4, 1, 28, false) : !this.moveItemStackTo($$4, 1, 37, false)))) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            if (itemStack2.isEmpty()) {
-                slot.set(net.minecraft.world.item.ItemStack.EMPTY);
+            if ($$4.isEmpty()) {
+                $$3.set(net.minecraft.world.item.ItemStack.EMPTY);
             } else {
-                slot.setChanged();
+                $$3.setChanged();
             }
-            if (itemStack2.getCount() == itemStack.getCount()) {
+            if ($$4.getCount() == $$2.getCount()) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            slot.onTake(player, itemStack2);
+            $$3.onTake($$0, $$4);
         }
-        return itemStack;
+        return $$2;
     }
 
     public int getLevels() {