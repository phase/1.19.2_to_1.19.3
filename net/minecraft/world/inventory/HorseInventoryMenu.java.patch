--- net/minecraft/world/inventory/HorseInventoryMenu.java
+++ net/minecraft/world/inventory/HorseInventoryMenu.java
@@ -9,88 +9,81 @@
     public net.minecraft.world.Container horseContainer;
     public net.minecraft.world.entity.animal.horse.AbstractHorse horse;
 
-    public net.minecraft.world.inventory.HorseInventoryMenu(int containerId, net.minecraft.world.entity.player.Inventory playerInventory, net.minecraft.world.Container container, net.minecraft.world.entity.animal.horse.AbstractHorse horse) {
-        super(null, containerId);
-        int n;
-        int n2;
-        this.horseContainer = container;
-        this.horse = horse;
-        int n3 = 3;
-        container.startOpen(playerInventory.player);
-        int n4 = -18;
+    public net.minecraft.world.inventory.HorseInventoryMenu(int $$0, net.minecraft.world.entity.player.Inventory $$1, net.minecraft.world.Container $$2, net.minecraft.world.entity.animal.horse.AbstractHorse $$3) {
+        super(null, $$0);
+        this.horseContainer = $$2;
+        this.horse = $$3;
+        int $$4 = 3;
+        $$2.startOpen($$1.player);
+        int $$5 = -18;
         this.addSlot((net.minecraft.world.inventory.Slot)new /* Unavailable Anonymous Inner Class!! */);
         this.addSlot((net.minecraft.world.inventory.Slot)new /* Unavailable Anonymous Inner Class!! */);
-        if (this.hasChest(horse)) {
-            for (n2 = 0;
- n2 < 3; ++n2) {
-                for (n = 0;
- n < ((net.minecraft.world.entity.animal.horse.AbstractChestedHorse)horse).getInventoryColumns(); ++n) {
-                    this.addSlot(new net.minecraft.world.inventory.Slot(container, 2 + n + n2 * ((net.minecraft.world.entity.animal.horse.AbstractChestedHorse)horse).getInventoryColumns(), 80 + n * 18, 18 + n2 * 18));
+        if (this.hasChest($$3)) {
+            for (int $$6 = 0; $$6 < 3; ++$$6) {
+                for (int $$7 = 0; $$7 < ((net.minecraft.world.entity.animal.horse.AbstractChestedHorse)$$3).getInventoryColumns(); ++$$7) {
+                    this.addSlot(new net.minecraft.world.inventory.Slot($$2, 2 + $$7 + $$6 * ((net.minecraft.world.entity.animal.horse.AbstractChestedHorse)$$3).getInventoryColumns(), 80 + $$7 * 18, 18 + $$6 * 18));
                 }
             }
         }
-        for (n2 = 0;
- n2 < 3; ++n2) {
-            for (n = 0;
- n < 9; ++n) {
-                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, n + n2 * 9 + 9, 8 + n * 18, 102 + n2 * 18 + -18));
+        for (int $$8 = 0; $$8 < 3; ++$$8) {
+            for (int $$9 = 0; $$9 < 9; ++$$9) {
+                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$1, $$9 + $$8 * 9 + 9, 8 + $$9 * 18, 102 + $$8 * 18 + -18));
             }
         }
-        for (n2 = 0;
- n2 < 9; ++n2) {
-            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, n2, 8 + n2 * 18, 142));
+        for (int $$10 = 0; $$10 < 9; ++$$10) {
+            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$1, $$10, 8 + $$10 * 18, 142));
         }
     }
 
-    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
-        return !this.horse.hasInventoryChanged(this.horseContainer) && this.horseContainer.stillValid(player) && this.horse.isAlive() && this.horse.distanceTo((net.minecraft.world.entity.Entity)player) < 8.0f;
+    public boolean stillValid(net.minecraft.world.entity.player.Player $$0) {
+        return !this.horse.hasInventoryChanged(this.horseContainer) && this.horseContainer.stillValid($$0) && this.horse.isAlive() && this.horse.distanceTo((net.minecraft.world.entity.Entity)$$0) < 8.0f;
     }
 
     public boolean hasChest(net.minecraft.world.entity.animal.horse.AbstractHorse $$0) {
         return $$0 instanceof net.minecraft.world.entity.animal.horse.AbstractChestedHorse && ((net.minecraft.world.entity.animal.horse.AbstractChestedHorse)$$0).hasChest();
     }
 
-    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player player, int index) {
-        net.minecraft.world.item.ItemStack itemStack = net.minecraft.world.item.ItemStack.EMPTY;
-        net.minecraft.world.inventory.Slot slot = (net.minecraft.world.inventory.Slot)this.slots.get(index);
-        if (slot != null && slot.hasItem()) {
-            net.minecraft.world.item.ItemStack itemStack2 = slot.getItem();
-            itemStack = itemStack2.copy();
-            int n = this.horseContainer.getContainerSize();
-            if (index < n) {
-                if (!this.moveItemStackTo(itemStack2, n, this.slots.size(), true)) {
+    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player $$0, int $$1) {
+        net.minecraft.world.item.ItemStack $$2 = net.minecraft.world.item.ItemStack.EMPTY;
+        net.minecraft.world.inventory.Slot $$3 = (net.minecraft.world.inventory.Slot)this.slots.get($$1);
+        if ($$3 != null && $$3.hasItem()) {
+            net.minecraft.world.item.ItemStack $$4 = $$3.getItem();
+            $$2 = $$4.copy();
+            int $$5 = this.horseContainer.getContainerSize();
+            if ($$1 < $$5) {
+                if (!this.moveItemStackTo($$4, $$5, this.slots.size(), true)) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
-            } else if (this.getSlot(1).mayPlace(itemStack2) && !this.getSlot(1).hasItem()) {
-                if (!this.moveItemStackTo(itemStack2, 1, 2, false)) {
+            } else if (this.getSlot(1).mayPlace($$4) && !this.getSlot(1).hasItem()) {
+                if (!this.moveItemStackTo($$4, 1, 2, false)) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
-            } else if (this.getSlot(0).mayPlace(itemStack2)) {
-                if (!this.moveItemStackTo(itemStack2, 0, 1, false)) {
+            } else if (this.getSlot(0).mayPlace($$4)) {
+                if (!this.moveItemStackTo($$4, 0, 1, false)) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
-            } else if (n <= 2 || !this.moveItemStackTo(itemStack2, 2, n, false)) {
-                int n2;
-                int n3 = n;
-                int n4 = n2 = n3 + 27;
-                int n5 = n4 + 9;
-                if (index >= n4 && index < n5 ? !this.moveItemStackTo(itemStack2, n3, n2, false) : (index >= n3 && index < n2 ? !this.moveItemStackTo(itemStack2, n4, n5, false) : !this.moveItemStackTo(itemStack2, n4, n2, false))) {
+            } else if ($$5 <= 2 || !this.moveItemStackTo($$4, 2, $$5, false)) {
+                int $$7;
+                int $$6 = $$5;
+                int $$8 = $$7 = $$6 + 27;
+                int $$9 = $$8 + 9;
+                if ($$1 >= $$8 && $$1 < $$9 ? !this.moveItemStackTo($$4, $$6, $$7, false) : ($$1 >= $$6 && $$1 < $$7 ? !this.moveItemStackTo($$4, $$8, $$9, false) : !this.moveItemStackTo($$4, $$8, $$7, false))) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            if (itemStack2.isEmpty()) {
-                slot.set(net.minecraft.world.item.ItemStack.EMPTY);
+            if ($$4.isEmpty()) {
+                $$3.set(net.minecraft.world.item.ItemStack.EMPTY);
             } else {
-                slot.setChanged();
+                $$3.setChanged();
             }
         }
-        return itemStack;
+        return $$2;
     }
 
-    public void removed(net.minecraft.world.entity.player.Player player) {
-        super.removed(player);
-        this.horseContainer.stopOpen(player);
+    public void removed(net.minecraft.world.entity.player.Player $$0) {
+        super.removed($$0);
+        this.horseContainer.stopOpen($$0);
     }
 }
 