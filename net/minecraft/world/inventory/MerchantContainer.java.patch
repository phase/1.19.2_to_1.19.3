--- net/minecraft/world/inventory/MerchantContainer.java
+++ net/minecraft/world/inventory/MerchantContainer.java
@@ -13,9 +13,9 @@
     public int selectionHint;
     public int futureXp;
 
-    public net.minecraft.world.inventory.MerchantContainer(net.minecraft.world.item.trading.Merchant merchant) {
+    public net.minecraft.world.inventory.MerchantContainer(net.minecraft.world.item.trading.Merchant $$0) {
         this.itemStacks = net.minecraft.core.NonNullList.withSize((int)3, (java.lang.Object)net.minecraft.world.item.ItemStack.EMPTY);
-        this.merchant = merchant;
+        this.merchant = $$0;
     }
 
     public int getContainerSize() {
@@ -30,42 +30,42 @@
         return true;
     }
 
-    public net.minecraft.world.item.ItemStack getItem(int index) {
-        return (net.minecraft.world.item.ItemStack)this.itemStacks.get(index);
+    public net.minecraft.world.item.ItemStack getItem(int $$0) {
+        return (net.minecraft.world.item.ItemStack)this.itemStacks.get($$0);
     }
 
-    public net.minecraft.world.item.ItemStack removeItem(int index, int count) {
-        net.minecraft.world.item.ItemStack itemStack = (net.minecraft.world.item.ItemStack)this.itemStacks.get(index);
-        if (index == 2 && !itemStack.isEmpty()) {
-            return net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.itemStacks, (int)index, (int)itemStack.getCount());
+    public net.minecraft.world.item.ItemStack removeItem(int $$0, int $$1) {
+        net.minecraft.world.item.ItemStack $$2 = (net.minecraft.world.item.ItemStack)this.itemStacks.get($$0);
+        if ($$0 == 2 && !$$2.isEmpty()) {
+            return net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.itemStacks, (int)$$0, (int)$$2.getCount());
         }
-        net.minecraft.world.item.ItemStack itemStack2 = net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.itemStacks, (int)index, (int)count);
-        if (!itemStack2.isEmpty() && this.isPaymentSlot(index)) {
+        net.minecraft.world.item.ItemStack $$3 = net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.itemStacks, (int)$$0, (int)$$1);
+        if (!$$3.isEmpty() && this.isPaymentSlot($$0)) {
             this.updateSellItem();
         }
-        return itemStack2;
+        return $$3;
     }
 
-    public boolean isPaymentSlot(int slot) {
-        return slot == 0 || slot == 1;
+    public boolean isPaymentSlot(int $$0) {
+        return $$0 == 0 || $$0 == 1;
     }
 
-    public net.minecraft.world.item.ItemStack removeItemNoUpdate(int index) {
-        return net.minecraft.world.ContainerHelper.takeItem((java.util.List)this.itemStacks, (int)index);
+    public net.minecraft.world.item.ItemStack removeItemNoUpdate(int $$0) {
+        return net.minecraft.world.ContainerHelper.takeItem((java.util.List)this.itemStacks, (int)$$0);
     }
 
-    public void setItem(int index, net.minecraft.world.item.ItemStack stack) {
-        this.itemStacks.set(index, (java.lang.Object)stack);
-        if (!stack.isEmpty() && stack.getCount() > this.getMaxStackSize()) {
-            stack.setCount(this.getMaxStackSize());
+    public void setItem(int $$0, net.minecraft.world.item.ItemStack $$1) {
+        this.itemStacks.set($$0, (java.lang.Object)$$1);
+        if (!$$1.isEmpty() && $$1.getCount() > this.getMaxStackSize()) {
+            $$1.setCount(this.getMaxStackSize());
         }
-        if (this.isPaymentSlot(index)) {
+        if (this.isPaymentSlot($$0)) {
             this.updateSellItem();
         }
     }
 
-    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
-        return this.merchant.getTradingPlayer() == player;
+    public boolean stillValid(net.minecraft.world.entity.player.Player $$0) {
+        return this.merchant.getTradingPlayer() == $$0;
     }
 
     public void setChanged() {
@@ -112,8 +112,8 @@
         return this.activeOffer;
     }
 
-    public void setSelectionHint(int currentRecipeIndex) {
-        this.selectionHint = currentRecipeIndex;
+    public void setSelectionHint(int $$0) {
+        this.selectionHint = $$0;
         this.updateSellItem();
     }
 