--- net/minecraft/world/inventory/MerchantMenu.java
+++ net/minecraft/world/inventory/MerchantMenu.java
@@ -23,45 +23,42 @@
     public boolean showProgressBar;
     public boolean canRestock;
 
-    public net.minecraft.world.inventory.MerchantMenu(int containerId, net.minecraft.world.entity.player.Inventory playerInventory) {
-        this(containerId, playerInventory, (net.minecraft.world.item.trading.Merchant)new net.minecraft.world.entity.npc.ClientSideMerchant(playerInventory.player));
+    public net.minecraft.world.inventory.MerchantMenu(int $$0, net.minecraft.world.entity.player.Inventory $$1) {
+        this($$0, $$1, (net.minecraft.world.item.trading.Merchant)new net.minecraft.world.entity.npc.ClientSideMerchant($$1.player));
     }
 
-    public net.minecraft.world.inventory.MerchantMenu(int containerId, net.minecraft.world.entity.player.Inventory playerInventory, net.minecraft.world.item.trading.Merchant trader) {
-        super(net.minecraft.world.inventory.MenuType.MERCHANT, containerId);
-        int n;
-        this.trader = trader;
-        this.tradeContainer = new net.minecraft.world.inventory.MerchantContainer(trader);
+    public net.minecraft.world.inventory.MerchantMenu(int $$0, net.minecraft.world.entity.player.Inventory $$1, net.minecraft.world.item.trading.Merchant $$2) {
+        super(net.minecraft.world.inventory.MenuType.MERCHANT, $$0);
+        this.trader = $$2;
+        this.tradeContainer = new net.minecraft.world.inventory.MerchantContainer($$2);
         this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)this.tradeContainer, 0, 136, 37));
         this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)this.tradeContainer, 1, 162, 37));
-        this.addSlot((net.minecraft.world.inventory.Slot)new net.minecraft.world.inventory.MerchantResultSlot(playerInventory.player, trader, this.tradeContainer, 2, 220, 37));
-        for (n = 0;
- n < 3; ++n) {
-            for (int i = 0; i < 9; ++i) {
-                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, i + n * 9 + 9, 108 + i * 18, 84 + n * 18));
+        this.addSlot((net.minecraft.world.inventory.Slot)new net.minecraft.world.inventory.MerchantResultSlot($$1.player, $$2, this.tradeContainer, 2, 220, 37));
+        for (int $$3 = 0; $$3 < 3; ++$$3) {
+            for (int $$4 = 0; $$4 < 9; ++$$4) {
+                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$1, $$4 + $$3 * 9 + 9, 108 + $$4 * 18, 84 + $$3 * 18));
             }
         }
-        for (n = 0;
- n < 9; ++n) {
-            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, n, 108 + n * 18, 142));
+        for (int $$5 = 0; $$5 < 9; ++$$5) {
+            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$1, $$5, 108 + $$5 * 18, 142));
         }
     }
 
-    public void setShowProgressBar(boolean showProgressBar) {
-        this.showProgressBar = showProgressBar;
+    public void setShowProgressBar(boolean $$0) {
+        this.showProgressBar = $$0;
     }
 
-    public void slotsChanged(net.minecraft.world.Container inventory) {
+    public void slotsChanged(net.minecraft.world.Container $$0) {
         this.tradeContainer.updateSellItem();
-        super.slotsChanged(inventory);
+        super.slotsChanged($$0);
     }
 
-    public void setSelectionHint(int currentRecipeIndex) {
-        this.tradeContainer.setSelectionHint(currentRecipeIndex);
+    public void setSelectionHint(int $$0) {
+        this.tradeContainer.setSelectionHint($$0);
     }
 
-    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
-        return this.trader.getTradingPlayer() == player;
+    public boolean stillValid(net.minecraft.world.entity.player.Player $$0) {
+        return this.trader.getTradingPlayer() == $$0;
     }
 
     public int getTraderXp() {
@@ -72,56 +69,56 @@
         return this.tradeContainer.getFutureXp();
     }
 
-    public void setXp(int xp) {
-        this.trader.overrideXp(xp);
+    public void setXp(int $$0) {
+        this.trader.overrideXp($$0);
     }
 
     public int getTraderLevel() {
         return this.merchantLevel;
     }
 
-    public void setMerchantLevel(int level) {
-        this.merchantLevel = level;
+    public void setMerchantLevel(int $$0) {
+        this.merchantLevel = $$0;
     }
 
-    public void setCanRestock(boolean canRestock) {
-        this.canRestock = canRestock;
+    public void setCanRestock(boolean $$0) {
+        this.canRestock = $$0;
     }
 
     public boolean canRestock() {
         return this.canRestock;
     }
 
-    public boolean canTakeItemForPickAll(net.minecraft.world.item.ItemStack stack, net.minecraft.world.inventory.Slot slot) {
+    public boolean canTakeItemForPickAll(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.inventory.Slot $$1) {
         return false;
     }
 
-    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player player, int index) {
-        net.minecraft.world.item.ItemStack itemStack = net.minecraft.world.item.ItemStack.EMPTY;
-        net.minecraft.world.inventory.Slot slot = (net.minecraft.world.inventory.Slot)this.slots.get(index);
-        if (slot != null && slot.hasItem()) {
-            net.minecraft.world.item.ItemStack itemStack2 = slot.getItem();
-            itemStack = itemStack2.copy();
-            if (index == 2) {
-                if (!this.moveItemStackTo(itemStack2, 3, 39, true)) {
+    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player $$0, int $$1) {
+        net.minecraft.world.item.ItemStack $$2 = net.minecraft.world.item.ItemStack.EMPTY;
+        net.minecraft.world.inventory.Slot $$3 = (net.minecraft.world.inventory.Slot)this.slots.get($$1);
+        if ($$3 != null && $$3.hasItem()) {
+            net.minecraft.world.item.ItemStack $$4 = $$3.getItem();
+            $$2 = $$4.copy();
+            if ($$1 == 2) {
+                if (!this.moveItemStackTo($$4, 3, 39, true)) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
-                slot.onQuickCraft(itemStack2, itemStack);
+                $$3.onQuickCraft($$4, $$2);
                 this.playTradeSound();
-            } else if (index == 0 || index == 1 ? !this.moveItemStackTo(itemStack2, 3, 39, false) : (index >= 3 && index < 30 ? !this.moveItemStackTo(itemStack2, 30, 39, false) : index >= 30 && index < 39 && !this.moveItemStackTo(itemStack2, 3, 30, false))) {
+            } else if ($$1 == 0 || $$1 == 1 ? !this.moveItemStackTo($$4, 3, 39, false) : ($$1 >= 3 && $$1 < 30 ? !this.moveItemStackTo($$4, 30, 39, false) : $$1 >= 30 && $$1 < 39 && !this.moveItemStackTo($$4, 3, 30, false))) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            if (itemStack2.isEmpty()) {
-                slot.set(net.minecraft.world.item.ItemStack.EMPTY);
+            if ($$4.isEmpty()) {
+                $$3.set(net.minecraft.world.item.ItemStack.EMPTY);
             } else {
-                slot.setChanged();
+                $$3.setChanged();
             }
-            if (itemStack2.getCount() == itemStack.getCount()) {
+            if ($$4.getCount() == $$2.getCount()) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            slot.onTake(player, itemStack2);
+            $$3.onTake($$0, $$4);
         }
-        return itemStack;
+        return $$2;
     }
 
     public void playTradeSound() {
@@ -131,72 +128,72 @@
         }
     }
 
-    public void removed(net.minecraft.world.entity.player.Player player) {
-        super.removed(player);
+    public void removed(net.minecraft.world.entity.player.Player $$0) {
+        super.removed($$0);
         this.trader.setTradingPlayer(null);
         if (this.trader.isClientSide()) {
             return;
         }
-        if (!player.isAlive() || player instanceof net.minecraft.server.level.ServerPlayer && ((net.minecraft.server.level.ServerPlayer)player).hasDisconnected()) {
-            net.minecraft.world.item.ItemStack itemStack = this.tradeContainer.removeItemNoUpdate(0);
-            if (!itemStack.isEmpty()) {
-                player.drop(itemStack, false);
+        if (!$$0.isAlive() || $$0 instanceof net.minecraft.server.level.ServerPlayer && ((net.minecraft.server.level.ServerPlayer)$$0).hasDisconnected()) {
+            net.minecraft.world.item.ItemStack $$1 = this.tradeContainer.removeItemNoUpdate(0);
+            if (!$$1.isEmpty()) {
+                $$0.drop($$1, false);
             }
-            if (!(itemStack = this.tradeContainer.removeItemNoUpdate(1)).isEmpty()) {
-                player.drop(itemStack, false);
+            if (!($$1 = this.tradeContainer.removeItemNoUpdate(1)).isEmpty()) {
+                $$0.drop($$1, false);
             }
-        } else if (player instanceof net.minecraft.server.level.ServerPlayer) {
-            player.getInventory().placeItemBackInInventory(this.tradeContainer.removeItemNoUpdate(0));
-            player.getInventory().placeItemBackInInventory(this.tradeContainer.removeItemNoUpdate(1));
+        } else if ($$0 instanceof net.minecraft.server.level.ServerPlayer) {
+            $$0.getInventory().placeItemBackInInventory(this.tradeContainer.removeItemNoUpdate(0));
+            $$0.getInventory().placeItemBackInInventory(this.tradeContainer.removeItemNoUpdate(1));
         }
     }
 
-    public void tryMoveItems(int selectedMerchantRecipe) {
-        net.minecraft.world.item.ItemStack itemStack;
-        if (this.getOffers().size() <= selectedMerchantRecipe) {
+    public void tryMoveItems(int $$0) {
+        net.minecraft.world.item.ItemStack $$2;
+        if (this.getOffers().size() <= $$0) {
             return;
         }
-        net.minecraft.world.item.ItemStack itemStack2 = this.tradeContainer.getItem(0);
-        if (!itemStack2.isEmpty()) {
-            if (!this.moveItemStackTo(itemStack2, 3, 39, true)) {
+        net.minecraft.world.item.ItemStack $$1 = this.tradeContainer.getItem(0);
+        if (!$$1.isEmpty()) {
+            if (!this.moveItemStackTo($$1, 3, 39, true)) {
                 return;
             }
-            this.tradeContainer.setItem(0, itemStack2);
+            this.tradeContainer.setItem(0, $$1);
         }
-        if (!(itemStack = this.tradeContainer.getItem(1)).isEmpty()) {
-            if (!this.moveItemStackTo(itemStack, 3, 39, true)) {
+        if (!($$2 = this.tradeContainer.getItem(1)).isEmpty()) {
+            if (!this.moveItemStackTo($$2, 3, 39, true)) {
                 return;
             }
-            this.tradeContainer.setItem(1, itemStack);
+            this.tradeContainer.setItem(1, $$2);
         }
         if (this.tradeContainer.getItem(0).isEmpty() && this.tradeContainer.getItem(1).isEmpty()) {
-            net.minecraft.world.item.ItemStack itemStack3 = ((net.minecraft.world.item.trading.MerchantOffer)this.getOffers().get(selectedMerchantRecipe)).getCostA();
-            this.moveFromInventoryToPaymentSlot(0, itemStack3);
-            net.minecraft.world.item.ItemStack itemStack4 = ((net.minecraft.world.item.trading.MerchantOffer)this.getOffers().get(selectedMerchantRecipe)).getCostB();
-            this.moveFromInventoryToPaymentSlot(1, itemStack4);
+            net.minecraft.world.item.ItemStack $$3 = ((net.minecraft.world.item.trading.MerchantOffer)this.getOffers().get($$0)).getCostA();
+            this.moveFromInventoryToPaymentSlot(0, $$3);
+            net.minecraft.world.item.ItemStack $$4 = ((net.minecraft.world.item.trading.MerchantOffer)this.getOffers().get($$0)).getCostB();
+            this.moveFromInventoryToPaymentSlot(1, $$4);
         }
     }
 
-    public void moveFromInventoryToPaymentSlot(int paymentSlotIndex, net.minecraft.world.item.ItemStack paymentSlot) {
-        if (!paymentSlot.isEmpty()) {
-            for (int i = 3; i < 39; ++i) {
-                net.minecraft.world.item.ItemStack itemStack = ((net.minecraft.world.inventory.Slot)this.slots.get(i)).getItem();
-                if (itemStack.isEmpty() || !net.minecraft.world.item.ItemStack.isSameItemSameTags((net.minecraft.world.item.ItemStack)paymentSlot, (net.minecraft.world.item.ItemStack)itemStack)) continue;
-                net.minecraft.world.item.ItemStack itemStack2 = this.tradeContainer.getItem(paymentSlotIndex);
-                int n = itemStack2.isEmpty() ? 0 : itemStack2.getCount();
-                int n2 = java.lang.Math.min((int)(paymentSlot.getMaxStackSize() - n), (int)itemStack.getCount());
-                net.minecraft.world.item.ItemStack itemStack3 = itemStack.copy();
-                int n3 = n + n2;
-                itemStack.shrink(n2);
-                itemStack3.setCount(n3);
-                this.tradeContainer.setItem(paymentSlotIndex, itemStack3);
-                if (n3 >= paymentSlot.getMaxStackSize()) break;
+    public void moveFromInventoryToPaymentSlot(int $$0, net.minecraft.world.item.ItemStack $$1) {
+        if (!$$1.isEmpty()) {
+            for (int $$2 = 3; $$2 < 39; ++$$2) {
+                net.minecraft.world.item.ItemStack $$3 = ((net.minecraft.world.inventory.Slot)this.slots.get($$2)).getItem();
+                if ($$3.isEmpty() || !net.minecraft.world.item.ItemStack.isSameItemSameTags((net.minecraft.world.item.ItemStack)$$1, (net.minecraft.world.item.ItemStack)$$3)) continue;
+                net.minecraft.world.item.ItemStack $$4 = this.tradeContainer.getItem($$0);
+                int $$5 = $$4.isEmpty() ? 0 : $$4.getCount();
+                int $$6 = java.lang.Math.min((int)($$1.getMaxStackSize() - $$5), (int)$$3.getCount());
+                net.minecraft.world.item.ItemStack $$7 = $$3.copy();
+                int $$8 = $$5 + $$6;
+                $$3.shrink($$6);
+                $$7.setCount($$8);
+                this.tradeContainer.setItem($$0, $$7);
+                if ($$8 >= $$1.getMaxStackSize()) break;
             }
         }
     }
 
-    public void setOffers(net.minecraft.world.item.trading.MerchantOffers offers) {
-        this.trader.overrideOffers(offers);
+    public void setOffers(net.minecraft.world.item.trading.MerchantOffers $$0) {
+        this.trader.overrideOffers($$0);
     }
 
     public net.minecraft.world.item.trading.MerchantOffers getOffers() {