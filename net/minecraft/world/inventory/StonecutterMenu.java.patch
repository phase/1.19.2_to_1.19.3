--- net/minecraft/world/inventory/StonecutterMenu.java
+++ net/minecraft/world/inventory/StonecutterMenu.java
@@ -24,13 +24,12 @@
     public net.minecraft.world.Container container;
     public net.minecraft.world.inventory.ResultContainer resultContainer;
 
-    public net.minecraft.world.inventory.StonecutterMenu(int containerId, net.minecraft.world.entity.player.Inventory playerInventory) {
-        this(containerId, playerInventory, net.minecraft.world.inventory.ContainerLevelAccess.NULL);
+    public net.minecraft.world.inventory.StonecutterMenu(int $$0, net.minecraft.world.entity.player.Inventory $$1) {
+        this($$0, $$1, net.minecraft.world.inventory.ContainerLevelAccess.NULL);
     }
 
-    public net.minecraft.world.inventory.StonecutterMenu(int containerId, net.minecraft.world.entity.player.Inventory playerInventory, net.minecraft.world.inventory.ContainerLevelAccess access) {
-        super(net.minecraft.world.inventory.MenuType.STONECUTTER, containerId);
-        int n;
+    public net.minecraft.world.inventory.StonecutterMenu(int $$0, net.minecraft.world.entity.player.Inventory $$1, net.minecraft.world.inventory.ContainerLevelAccess $$2) {
+        super(net.minecraft.world.inventory.MenuType.STONECUTTER, $$0);
         this.selectedRecipeIndex = net.minecraft.world.inventory.DataSlot.standalone();
         this.recipes = com.google.common.collect.Lists.newArrayList();
         this.input = net.minecraft.world.item.ItemStack.EMPTY;
@@ -38,19 +37,17 @@
 ;
         this.container = new /* Unavailable Anonymous Inner Class!! */;
         this.resultContainer = new net.minecraft.world.inventory.ResultContainer();
-        this.access = access;
-        this.level = playerInventory.player.level;
+        this.access = $$2;
+        this.level = $$1.player.level;
         this.inputSlot = this.addSlot(new net.minecraft.world.inventory.Slot(this.container, 0, 20, 33));
         this.resultSlot = this.addSlot((net.minecraft.world.inventory.Slot)new /* Unavailable Anonymous Inner Class!! */);
-        for (n = 0;
- n < 3; ++n) {
-            for (int i = 0; i < 9; ++i) {
-                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, i + n * 9 + 9, 8 + i * 18, 84 + n * 18));
+        for (int $$3 = 0; $$3 < 3; ++$$3) {
+            for (int $$4 = 0; $$4 < 9; ++$$4) {
+                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$1, $$4 + $$3 * 9 + 9, 8 + $$4 * 18, 84 + $$3 * 18));
             }
         }
-        for (n = 0;
- n < 9; ++n) {
-            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, n, 8 + n * 18, 142));
+        for (int $$5 = 0; $$5 < 9; ++$$5) {
+            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$1, $$5, 8 + $$5 * 18, 142));
         }
         this.addDataSlot(this.selectedRecipeIndex);
     }
@@ -71,44 +68,49 @@
         return this.inputSlot.hasItem() && !this.recipes.isEmpty();
     }
 
-    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
-        return net.minecraft.world.inventory.StonecutterMenu.stillValid((net.minecraft.world.inventory.ContainerLevelAccess)this.access, (net.minecraft.world.entity.player.Player)player, (net.minecraft.world.level.block.Block)net.minecraft.world.level.block.Blocks.STONECUTTER);
+    public boolean stillValid(net.minecraft.world.entity.player.Player $$0) {
+        return net.minecraft.world.inventory.StonecutterMenu.stillValid((net.minecraft.world.inventory.ContainerLevelAccess)this.access, (net.minecraft.world.entity.player.Player)$$0, (net.minecraft.world.level.block.Block)net.minecraft.world.level.block.Blocks.STONECUTTER);
     }
 
-    public boolean clickMenuButton(net.minecraft.world.entity.player.Player player, int id) {
-        if (this.isValidRecipeIndex(id)) {
-            this.selectedRecipeIndex.set(id);
+    public boolean clickMenuButton(net.minecraft.world.entity.player.Player $$0, int $$1) {
+        if (this.isValidRecipeIndex($$1)) {
+            this.selectedRecipeIndex.set($$1);
             this.setupResultSlot();
         }
         return true;
     }
 
-    public boolean isValidRecipeIndex(int recipeIndex) {
-        return recipeIndex >= 0 && recipeIndex < this.recipes.size();
+    public boolean isValidRecipeIndex(int $$0) {
+        return $$0 >= 0 && $$0 < this.recipes.size();
     }
 
-    public void slotsChanged(net.minecraft.world.Container inventory) {
-        net.minecraft.world.item.ItemStack itemStack = this.inputSlot.getItem();
-        if (!itemStack.is(this.input.getItem())) {
-            this.input = itemStack.copy();
-            this.setupRecipeList(inventory, itemStack);
+    public void slotsChanged(net.minecraft.world.Container $$0) {
+        net.minecraft.world.item.ItemStack $$1 = this.inputSlot.getItem();
+        if (!$$1.is(this.input.getItem())) {
+            this.input = $$1.copy();
+            this.setupRecipeList($$0, $$1);
         }
     }
 
-    public void setupRecipeList(net.minecraft.world.Container inventory, net.minecraft.world.item.ItemStack stack) {
+    public void setupRecipeList(net.minecraft.world.Container $$0, net.minecraft.world.item.ItemStack $$1) {
         this.recipes.clear();
         this.selectedRecipeIndex.set(-1);
         this.resultSlot.set(net.minecraft.world.item.ItemStack.EMPTY);
-        if (!stack.isEmpty()) {
-            this.recipes = this.level.getRecipeManager().getRecipesFor(net.minecraft.world.item.crafting.RecipeType.STONECUTTING, inventory, this.level);
+        if (!$$1.isEmpty()) {
+            this.recipes = this.level.getRecipeManager().getRecipesFor(net.minecraft.world.item.crafting.RecipeType.STONECUTTING, $$0, this.level);
         }
     }
 
     public void setupResultSlot() {
         if (!this.recipes.isEmpty() && this.isValidRecipeIndex(this.selectedRecipeIndex.get())) {
             net.minecraft.world.item.crafting.StonecutterRecipe $$0 = (net.minecraft.world.item.crafting.StonecutterRecipe)this.recipes.get(this.selectedRecipeIndex.get());
-            this.resultContainer.setRecipeUsed((net.minecraft.world.item.crafting.Recipe)$$0);
-            this.resultSlot.set($$0.assemble(this.container));
+            net.minecraft.world.item.ItemStack $$1 = $$0.assemble(this.container);
+            if ($$1.isItemEnabled(this.level.enabledFeatures())) {
+                this.resultContainer.setRecipeUsed((net.minecraft.world.item.crafting.Recipe)$$0);
+                this.resultSlot.set($$1);
+            } else {
+                this.resultSlot.set(net.minecraft.world.item.ItemStack.EMPTY);
+            }
         } else {
             this.resultSlot.set(net.minecraft.world.item.ItemStack.EMPTY);
         }
@@ -119,47 +121,47 @@
         return net.minecraft.world.inventory.MenuType.STONECUTTER;
     }
 
-    public void registerUpdateListener(java.lang.Runnable listener) {
-        this.slotUpdateListener = listener;
+    public void registerUpdateListener(java.lang.Runnable $$0) {
+        this.slotUpdateListener = $$0;
     }
 
-    public boolean canTakeItemForPickAll(net.minecraft.world.item.ItemStack stack, net.minecraft.world.inventory.Slot slot) {
-        return slot.container != this.resultContainer && super.canTakeItemForPickAll(stack, slot);
+    public boolean canTakeItemForPickAll(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.inventory.Slot $$1) {
+        return $$1.container != this.resultContainer && super.canTakeItemForPickAll($$0, $$1);
     }
 
-    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player player, int index) {
-        net.minecraft.world.item.ItemStack itemStack = net.minecraft.world.item.ItemStack.EMPTY;
-        net.minecraft.world.inventory.Slot slot = (net.minecraft.world.inventory.Slot)this.slots.get(index);
-        if (slot != null && slot.hasItem()) {
-            net.minecraft.world.item.ItemStack itemStack2 = slot.getItem();
-            net.minecraft.world.item.Item item = itemStack2.getItem();
-            itemStack = itemStack2.copy();
-            if (index == 1) {
-                item.onCraftedBy(itemStack2, player.level, player);
-                if (!this.moveItemStackTo(itemStack2, 2, 38, true)) {
+    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player $$0, int $$1) {
+        net.minecraft.world.item.ItemStack $$2 = net.minecraft.world.item.ItemStack.EMPTY;
+        net.minecraft.world.inventory.Slot $$3 = (net.minecraft.world.inventory.Slot)this.slots.get($$1);
+        if ($$3 != null && $$3.hasItem()) {
+            net.minecraft.world.item.ItemStack $$4 = $$3.getItem();
+            net.minecraft.world.item.Item $$5 = $$4.getItem();
+            $$2 = $$4.copy();
+            if ($$1 == 1) {
+                $$5.onCraftedBy($$4, $$0.level, $$0);
+                if (!this.moveItemStackTo($$4, 2, 38, true)) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
-                slot.onQuickCraft(itemStack2, itemStack);
-            } else if (index == 0 ? !this.moveItemStackTo(itemStack2, 2, 38, false) : (this.level.getRecipeManager().getRecipeFor(net.minecraft.world.item.crafting.RecipeType.STONECUTTING, (net.minecraft.world.Container)new net.minecraft.world.SimpleContainer(new net.minecraft.world.item.ItemStack[]{itemStack2}), this.level).isPresent() ? !this.moveItemStackTo(itemStack2, 0, 1, false) : (index >= 2 && index < 29 ? !this.moveItemStackTo(itemStack2, 29, 38, false) : index >= 29 && index < 38 && !this.moveItemStackTo(itemStack2, 2, 29, false)))) {
+                $$3.onQuickCraft($$4, $$2);
+            } else if ($$1 == 0 ? !this.moveItemStackTo($$4, 2, 38, false) : (this.level.getRecipeManager().getRecipeFor(net.minecraft.world.item.crafting.RecipeType.STONECUTTING, (net.minecraft.world.Container)new net.minecraft.world.SimpleContainer(new net.minecraft.world.item.ItemStack[]{$$4}), this.level).isPresent() ? !this.moveItemStackTo($$4, 0, 1, false) : ($$1 >= 2 && $$1 < 29 ? !this.moveItemStackTo($$4, 29, 38, false) : $$1 >= 29 && $$1 < 38 && !this.moveItemStackTo($$4, 2, 29, false)))) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            if (itemStack2.isEmpty()) {
-                slot.set(net.minecraft.world.item.ItemStack.EMPTY);
+            if ($$4.isEmpty()) {
+                $$3.set(net.minecraft.world.item.ItemStack.EMPTY);
             }
-            slot.setChanged();
-            if (itemStack2.getCount() == itemStack.getCount()) {
+            $$3.setChanged();
+            if ($$4.getCount() == $$2.getCount()) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            slot.onTake(player, itemStack2);
+            $$3.onTake($$0, $$4);
             this.broadcastChanges();
         }
-        return itemStack;
+        return $$2;
     }
 
-    public void removed(net.minecraft.world.entity.player.Player player) {
-        super.removed(player);
+    public void removed(net.minecraft.world.entity.player.Player $$0) {
+        super.removed($$0);
         this.resultContainer.removeItemNoUpdate(1);
-        this.access.execute((level, blockPos) -> this.clearContainer(player, this.container));
+        this.access.execute(($$1, $$2) -> this.clearContainer($$0, this.container));
     }
 }
 