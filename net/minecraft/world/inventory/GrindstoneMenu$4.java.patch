--- net/minecraft/world/inventory/GrindstoneMenu$4.java
+++ net/minecraft/world/inventory/GrindstoneMenu$4.java
@@ -15,41 +15,41 @@
         super($$1, $$2, $$3, $$4);
     }
 
-    public boolean mayPlace(net.minecraft.world.item.ItemStack stack) {
+    public boolean mayPlace(net.minecraft.world.item.ItemStack $$0) {
         return false;
     }
 
-    public void onTake(net.minecraft.world.entity.player.Player $$0, net.minecraft.world.item.ItemStack $$1) {
-        this.val$access.execute((level, blockPos) -> {
-            if (level instanceof net.minecraft.server.level.ServerLevel) {
-                net.minecraft.world.entity.ExperienceOrb.award((net.minecraft.server.level.ServerLevel)((net.minecraft.server.level.ServerLevel)level), (net.minecraft.world.phys.Vec3)net.minecraft.world.phys.Vec3.atCenterOf((net.minecraft.core.Vec3i)blockPos), (int)this.getExperienceAmount(level));
+    public void onTake(net.minecraft.world.entity.player.Player $$02, net.minecraft.world.item.ItemStack $$12) {
+        this.val$access.execute(($$0, $$1) -> {
+            if ($$0 instanceof net.minecraft.server.level.ServerLevel) {
+                net.minecraft.world.entity.ExperienceOrb.award((net.minecraft.server.level.ServerLevel)((net.minecraft.server.level.ServerLevel)$$0), (net.minecraft.world.phys.Vec3)net.minecraft.world.phys.Vec3.atCenterOf((net.minecraft.core.Vec3i)$$1), (int)this.getExperienceAmount($$0));
             }
-            level.levelEvent(1042, blockPos, 0);
+            $$0.levelEvent(1042, $$1, 0);
         });
         this.this$0.repairSlots.setItem(0, net.minecraft.world.item.ItemStack.EMPTY);
         this.this$0.repairSlots.setItem(1, net.minecraft.world.item.ItemStack.EMPTY);
     }
 
-    public int getExperienceAmount(net.minecraft.world.level.Level level) {
-        int n = 0;
-        n += this.getExperienceFromItem(this.this$0.repairSlots.getItem(0));
-        if ((n += this.getExperienceFromItem(this.this$0.repairSlots.getItem(1))) > 0) {
-            int n2 = (int)java.lang.Math.ceil((double)((double)n / 2.0));
-            return n2 + level.random.nextInt(n2);
+    public int getExperienceAmount(net.minecraft.world.level.Level $$0) {
+        int $$1 = 0;
+        $$1 += this.getExperienceFromItem(this.this$0.repairSlots.getItem(0));
+        if (($$1 += this.getExperienceFromItem(this.this$0.repairSlots.getItem(1))) > 0) {
+            int $$2 = (int)java.lang.Math.ceil((double)((double)$$1 / 2.0));
+            return $$2 + $$0.random.nextInt($$2);
         }
         return 0;
     }
 
-    public int getExperienceFromItem(net.minecraft.world.item.ItemStack stack) {
-        int n = 0;
-        java.util.Map map = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantments((net.minecraft.world.item.ItemStack)stack);
-        for (java.util.Map$Entry entry : map.entrySet()) {
-            net.minecraft.world.item.enchantment.Enchantment enchantment = (net.minecraft.world.item.enchantment.Enchantment)entry.getKey();
-            java.lang.Integer n2 = (java.lang.Integer)entry.getValue();
-            if (enchantment.isCurse()) continue;
-            n += enchantment.getMinCost(n2.intValue());
+    public int getExperienceFromItem(net.minecraft.world.item.ItemStack $$0) {
+        int $$1 = 0;
+        java.util.Map $$2 = net.minecraft.world.item.enchantment.EnchantmentHelper.getEnchantments((net.minecraft.world.item.ItemStack)$$0);
+        for (java.util.Map$Entry $$3 : $$2.entrySet()) {
+            net.minecraft.world.item.enchantment.Enchantment $$4 = (net.minecraft.world.item.enchantment.Enchantment)$$3.getKey();
+            java.lang.Integer $$5 = (java.lang.Integer)$$3.getValue();
+            if ($$4.isCurse()) continue;
+            $$1 += $$4.getMinCost($$5.intValue());
         }
-        return n;
+        return $$1;
     }
 }
 