--- net/minecraft/world/inventory/InventoryMenu.java
+++ net/minecraft/world/inventory/InventoryMenu.java
@@ -30,34 +30,29 @@
     public boolean active;
     public net.minecraft.world.entity.player.Player owner;
 
-    public net.minecraft.world.inventory.InventoryMenu(net.minecraft.world.entity.player.Inventory playerInventory, boolean active, net.minecraft.world.entity.player.Player owner) {
+    public net.minecraft.world.inventory.InventoryMenu(net.minecraft.world.entity.player.Inventory $$0, boolean $$1, net.minecraft.world.entity.player.Player $$2) {
         super(null, 0);
-        int n;
         this.craftSlots = new net.minecraft.world.inventory.CraftingContainer((net.minecraft.world.inventory.AbstractContainerMenu)this, 2, 2);
         this.resultSlots = new net.minecraft.world.inventory.ResultContainer();
-        this.active = active;
-        this.owner = owner;
-        this.addSlot((net.minecraft.world.inventory.Slot)new net.minecraft.world.inventory.ResultSlot(playerInventory.player, this.craftSlots, (net.minecraft.world.Container)this.resultSlots, 0, 154, 28));
-        for (n = 0;
- n < 2; ++n) {
-            for (int i = 0; i < 2; ++i) {
-                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)this.craftSlots, i + n * 2, 98 + i * 18, 18 + n * 18));
+        this.active = $$1;
+        this.owner = $$2;
+        this.addSlot((net.minecraft.world.inventory.Slot)new net.minecraft.world.inventory.ResultSlot($$0.player, this.craftSlots, (net.minecraft.world.Container)this.resultSlots, 0, 154, 28));
+        for (int $$3 = 0; $$3 < 2; ++$$3) {
+            for (int $$4 = 0; $$4 < 2; ++$$4) {
+                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)this.craftSlots, $$4 + $$3 * 2, 98 + $$4 * 18, 18 + $$3 * 18));
             }
         }
-        for (n = 0;
- n < 4; ++n) {
-            net.minecraft.world.entity.EquipmentSlot equipmentSlot = SLOT_IDS[n];
+        for (int $$5 = 0; $$5 < 4; ++$$5) {
+            net.minecraft.world.entity.EquipmentSlot $$6 = SLOT_IDS[$$5];
             this.addSlot((net.minecraft.world.inventory.Slot)new /* Unavailable Anonymous Inner Class!! */);
         }
-        for (n = 0;
- n < 3; ++n) {
-            for (int i = 0; i < 9; ++i) {
-                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, i + (n + 1) * 9, 8 + i * 18, 84 + n * 18));
+        for (int $$7 = 0; $$7 < 3; ++$$7) {
+            for (int $$8 = 0; $$8 < 9; ++$$8) {
+                this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$0, $$8 + ($$7 + 1) * 9, 8 + $$8 * 18, 84 + $$7 * 18));
             }
         }
-        for (n = 0;
- n < 9; ++n) {
-            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)playerInventory, n, 8 + n * 18, 142));
+        for (int $$9 = 0; $$9 < 9; ++$$9) {
+            this.addSlot(new net.minecraft.world.inventory.Slot((net.minecraft.world.Container)$$0, $$9, 8 + $$9 * 18, 142));
         }
         this.addSlot((net.minecraft.world.inventory.Slot)new /* Unavailable Anonymous Inner Class!! */);
     }
@@ -66,8 +61,8 @@
         return $$0 >= 36 && $$0 < 45 || $$0 == 45;
     }
 
-    public void fillCraftSlotsStackedContents(net.minecraft.world.entity.player.StackedContents itemHelper) {
-        this.craftSlots.fillStackedContents(itemHelper);
+    public void fillCraftSlotsStackedContents(net.minecraft.world.entity.player.StackedContents $$0) {
+        this.craftSlots.fillStackedContents($$0);
     }
 
     public void clearCraftingContent() {
@@ -75,61 +70,61 @@
         this.craftSlots.clearContent();
     }
 
-    public boolean recipeMatches(net.minecraft.world.item.crafting.Recipe<? super net.minecraft.world.inventory.CraftingContainer> recipe) {
-        return recipe.matches((net.minecraft.world.Container)this.craftSlots, this.owner.level);
+    public boolean recipeMatches(net.minecraft.world.item.crafting.Recipe<? super net.minecraft.world.inventory.CraftingContainer> $$0) {
+        return $$0.matches((net.minecraft.world.Container)this.craftSlots, this.owner.level);
     }
 
-    public void slotsChanged(net.minecraft.world.Container inventory) {
+    public void slotsChanged(net.minecraft.world.Container $$0) {
         net.minecraft.world.inventory.CraftingMenu.slotChangedCraftingGrid((net.minecraft.world.inventory.AbstractContainerMenu)this, (net.minecraft.world.level.Level)this.owner.level, (net.minecraft.world.entity.player.Player)this.owner, (net.minecraft.world.inventory.CraftingContainer)this.craftSlots, (net.minecraft.world.inventory.ResultContainer)this.resultSlots);
     }
 
-    public void removed(net.minecraft.world.entity.player.Player player) {
-        super.removed(player);
+    public void removed(net.minecraft.world.entity.player.Player $$0) {
+        super.removed($$0);
         this.resultSlots.clearContent();
-        if (player.level.isClientSide) {
+        if ($$0.level.isClientSide) {
             return;
         }
-        this.clearContainer(player, (net.minecraft.world.Container)this.craftSlots);
+        this.clearContainer($$0, (net.minecraft.world.Container)this.craftSlots);
     }
 
-    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
+    public boolean stillValid(net.minecraft.world.entity.player.Player $$0) {
         return true;
     }
 
-    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player player, int index) {
-        net.minecraft.world.item.ItemStack itemStack = net.minecraft.world.item.ItemStack.EMPTY;
-        net.minecraft.world.inventory.Slot slot = (net.minecraft.world.inventory.Slot)this.slots.get(index);
-        if (slot != null && slot.hasItem()) {
-            int n;
-            net.minecraft.world.item.ItemStack itemStack2 = slot.getItem();
-            itemStack = itemStack2.copy();
-            net.minecraft.world.entity.EquipmentSlot equipmentSlot = net.minecraft.world.entity.Mob.getEquipmentSlotForItem((net.minecraft.world.item.ItemStack)itemStack);
-            if (index == 0) {
-                if (!this.moveItemStackTo(itemStack2, 9, 45, true)) {
+    public net.minecraft.world.item.ItemStack quickMoveStack(net.minecraft.world.entity.player.Player $$0, int $$1) {
+        net.minecraft.world.item.ItemStack $$2 = net.minecraft.world.item.ItemStack.EMPTY;
+        net.minecraft.world.inventory.Slot $$3 = (net.minecraft.world.inventory.Slot)this.slots.get($$1);
+        if ($$3 != null && $$3.hasItem()) {
+            int $$6;
+            net.minecraft.world.item.ItemStack $$4 = $$3.getItem();
+            $$2 = $$4.copy();
+            net.minecraft.world.entity.EquipmentSlot $$5 = net.minecraft.world.entity.Mob.getEquipmentSlotForItem((net.minecraft.world.item.ItemStack)$$2);
+            if ($$1 == 0) {
+                if (!this.moveItemStackTo($$4, 9, 45, true)) {
                     return net.minecraft.world.item.ItemStack.EMPTY;
                 }
-                slot.onQuickCraft(itemStack2, itemStack);
-            } else if (index >= 1 && index < 5 ? !this.moveItemStackTo(itemStack2, 9, 45, false) : (index >= 5 && index < 9 ? !this.moveItemStackTo(itemStack2, 9, 45, false) : (equipmentSlot.getType() == net.minecraft.world.entity.EquipmentSlot$Type.ARMOR && !((net.minecraft.world.inventory.Slot)this.slots.get(8 - equipmentSlot.getIndex())).hasItem() ? !this.moveItemStackTo(itemStack2, n = 8 - equipmentSlot.getIndex(), n + 1, false) : (equipmentSlot == net.minecraft.world.entity.EquipmentSlot.OFFHAND && !((net.minecraft.world.inventory.Slot)this.slots.get(45)).hasItem() ? !this.moveItemStackTo(itemStack2, 45, 46, false) : (index >= 9 && index < 36 ? !this.moveItemStackTo(itemStack2, 36, 45, false) : (index >= 36 && index < 45 ? !this.moveItemStackTo(itemStack2, 9, 36, false) : !this.moveItemStackTo(itemStack2, 9, 45, false))))))) {
+                $$3.onQuickCraft($$4, $$2);
+            } else if ($$1 >= 1 && $$1 < 5 ? !this.moveItemStackTo($$4, 9, 45, false) : ($$1 >= 5 && $$1 < 9 ? !this.moveItemStackTo($$4, 9, 45, false) : ($$5.getType() == net.minecraft.world.entity.EquipmentSlot$Type.ARMOR && !((net.minecraft.world.inventory.Slot)this.slots.get(8 - $$5.getIndex())).hasItem() ? !this.moveItemStackTo($$4, $$6 = 8 - $$5.getIndex(), $$6 + 1, false) : ($$5 == net.minecraft.world.entity.EquipmentSlot.OFFHAND && !((net.minecraft.world.inventory.Slot)this.slots.get(45)).hasItem() ? !this.moveItemStackTo($$4, 45, 46, false) : ($$1 >= 9 && $$1 < 36 ? !this.moveItemStackTo($$4, 36, 45, false) : ($$1 >= 36 && $$1 < 45 ? !this.moveItemStackTo($$4, 9, 36, false) : !this.moveItemStackTo($$4, 9, 45, false))))))) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            if (itemStack2.isEmpty()) {
-                slot.set(net.minecraft.world.item.ItemStack.EMPTY);
+            if ($$4.isEmpty()) {
+                $$3.set(net.minecraft.world.item.ItemStack.EMPTY);
             } else {
-                slot.setChanged();
+                $$3.setChanged();
             }
-            if (itemStack2.getCount() == itemStack.getCount()) {
+            if ($$4.getCount() == $$2.getCount()) {
                 return net.minecraft.world.item.ItemStack.EMPTY;
             }
-            slot.onTake(player, itemStack2);
-            if (index == 0) {
-                player.drop(itemStack2, false);
+            $$3.onTake($$0, $$4);
+            if ($$1 == 0) {
+                $$0.drop($$4, false);
             }
         }
-        return itemStack;
+        return $$2;
     }
 
-    public boolean canTakeItemForPickAll(net.minecraft.world.item.ItemStack stack, net.minecraft.world.inventory.Slot slot) {
-        return slot.container != this.resultSlots && super.canTakeItemForPickAll(stack, slot);
+    public boolean canTakeItemForPickAll(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.inventory.Slot $$1) {
+        return $$1.container != this.resultSlots && super.canTakeItemForPickAll($$0, $$1);
     }
 
     public int getResultSlotIndex() {