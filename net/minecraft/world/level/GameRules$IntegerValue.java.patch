--- net/minecraft/world/level/GameRules$IntegerValue.java
+++ net/minecraft/world/level/GameRules$IntegerValue.java
@@ -8,22 +8,22 @@
  {
     public int value;
 
-    public static net.minecraft.world.level.GameRules$Type<net.minecraft.world.level.GameRules$IntegerValue> create(int defaultValue, java.util.function.BiConsumer<net.minecraft.server.MinecraftServer, net.minecraft.world.level.GameRules$IntegerValue> changeListener) {
-        return new net.minecraft.world.level.GameRules$Type(com.mojang.brigadier.arguments.IntegerArgumentType::integer, $$1 -> new net.minecraft.world.level.GameRules$IntegerValue($$1, defaultValue), changeListener, net.minecraft.world.level.GameRules$GameRuleTypeVisitor::visitInteger);
+    public static net.minecraft.world.level.GameRules$Type<net.minecraft.world.level.GameRules$IntegerValue> create(int $$0, java.util.function.BiConsumer<net.minecraft.server.MinecraftServer, net.minecraft.world.level.GameRules$IntegerValue> $$12) {
+        return new net.minecraft.world.level.GameRules$Type(com.mojang.brigadier.arguments.IntegerArgumentType::integer, $$1 -> new net.minecraft.world.level.GameRules$IntegerValue($$1, $$0), $$12, net.minecraft.world.level.GameRules$GameRuleTypeVisitor::visitInteger);
     }
 
-    public static net.minecraft.world.level.GameRules$Type<net.minecraft.world.level.GameRules$IntegerValue> create(int defaultValue) {
-        return net.minecraft.world.level.GameRules$IntegerValue.create((int)defaultValue, ($$0, $$1) -> {}
+    public static net.minecraft.world.level.GameRules$Type<net.minecraft.world.level.GameRules$IntegerValue> create(int $$02) {
+        return net.minecraft.world.level.GameRules$IntegerValue.create((int)$$02, ($$0, $$1) -> {}
 );
     }
 
-    public net.minecraft.world.level.GameRules$IntegerValue(net.minecraft.world.level.GameRules$Type<net.minecraft.world.level.GameRules$IntegerValue> type, int value) {
-        super(type);
-        this.value = value;
+    public net.minecraft.world.level.GameRules$IntegerValue(net.minecraft.world.level.GameRules$Type<net.minecraft.world.level.GameRules$IntegerValue> $$0, int $$1) {
+        super($$0);
+        this.value = $$1;
     }
 
-    public void updateFromArgument(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String paramName) {
-        this.value = com.mojang.brigadier.arguments.IntegerArgumentType.getInteger(context, (java.lang.String)paramName);
+    public void updateFromArgument(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) {
+        this.value = com.mojang.brigadier.arguments.IntegerArgumentType.getInteger($$0, (java.lang.String)$$1);
     }
 
     public int get() {
@@ -39,13 +39,13 @@
         return java.lang.Integer.toString((int)this.value);
     }
 
-    public void deserialize(java.lang.String value) {
-        this.value = net.minecraft.world.level.GameRules$IntegerValue.safeParse((java.lang.String)value);
+    public void deserialize(java.lang.String $$0) {
+        this.value = net.minecraft.world.level.GameRules$IntegerValue.safeParse((java.lang.String)$$0);
     }
 
-    public boolean tryDeserialize(java.lang.String name) {
+    public boolean tryDeserialize(java.lang.String $$0) {
         try {
-            this.value = java.lang.Integer.parseInt((java.lang.String)name);
+            this.value = java.lang.Integer.parseInt((java.lang.String)$$0);
             return true;
         }
         catch (java.lang.NumberFormatException numberFormatException) {
@@ -53,13 +53,13 @@
         }
     }
 
-    public static int safeParse(java.lang.String strValue) {
-        if (!strValue.isEmpty()) {
+    public static int safeParse(java.lang.String $$0) {
+        if (!$$0.isEmpty()) {
             try {
-                return java.lang.Integer.parseInt((java.lang.String)strValue);
+                return java.lang.Integer.parseInt((java.lang.String)$$0);
             }
-            catch (java.lang.NumberFormatException numberFormatException) {
-                net.minecraft.world.level.GameRules.LOGGER.warn("Failed to parse integer {}", (java.lang.Object)strValue);
+            catch (java.lang.NumberFormatException $$1) {
+                net.minecraft.world.level.GameRules.LOGGER.warn("Failed to parse integer {}", (java.lang.Object)$$0);
             }
         }
         return 0;
@@ -77,9 +77,9 @@
         return new net.minecraft.world.level.GameRules$IntegerValue(this.type, this.value);
     }
 
-    public void setFrom(net.minecraft.world.level.GameRules$IntegerValue value, @javax.annotation.Nullable net.minecraft.server.MinecraftServer server) {
-        this.value = value.value;
-        this.onChanged(server);
+    public void setFrom(net.minecraft.world.level.GameRules$IntegerValue $$0, @javax.annotation.Nullable net.minecraft.server.MinecraftServer $$1) {
+        this.value = $$0.value;
+        this.onChanged($$1);
     }
 
     public /* synthetic */ net.minecraft.world.level.GameRules$Value copy() {