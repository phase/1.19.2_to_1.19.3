--- net/minecraft/world/level/ChunkPos.java
+++ net/minecraft/world/level/ChunkPos.java
@@ -20,14 +20,14 @@
     public static int HASH_C = 1013904223;
     public static int HASH_Z_XOR = -559038737;
 
-    public net.minecraft.world.level.ChunkPos(int x, int y) {
-        this.x = x;
-        this.z = y;
+    public net.minecraft.world.level.ChunkPos(int $$0, int $$1) {
+        this.x = $$0;
+        this.z = $$1;
     }
 
-    public net.minecraft.world.level.ChunkPos(net.minecraft.core.BlockPos pos) {
-        this.x = net.minecraft.core.SectionPos.blockToSectionCoord((int)pos.getX());
-        this.z = net.minecraft.core.SectionPos.blockToSectionCoord((int)pos.getZ());
+    public net.minecraft.world.level.ChunkPos(net.minecraft.core.BlockPos $$0) {
+        this.x = net.minecraft.core.SectionPos.blockToSectionCoord((int)$$0.getX());
+        this.z = net.minecraft.core.SectionPos.blockToSectionCoord((int)$$0.getZ());
     }
 
     public net.minecraft.world.level.ChunkPos(long $$0) {
@@ -47,20 +47,20 @@
         return net.minecraft.world.level.ChunkPos.asLong((int)this.x, (int)this.z);
     }
 
-    public static long asLong(int x, int z) {
-        return (long)x & 0xFFFFFFFFL | ((long)z & 0xFFFFFFFFL) << 32;
+    public static long asLong(int $$0, int $$1) {
+        return (long)$$0 & 0xFFFFFFFFL | ((long)$$1 & 0xFFFFFFFFL) << 32;
     }
 
     public static long asLong(net.minecraft.core.BlockPos $$0) {
         return net.minecraft.world.level.ChunkPos.asLong((int)net.minecraft.core.SectionPos.blockToSectionCoord((int)$$0.getX()), (int)net.minecraft.core.SectionPos.blockToSectionCoord((int)$$0.getZ()));
     }
 
-    public static int getX(long chunkAsLong) {
-        return (int)(chunkAsLong & 0xFFFFFFFFL);
+    public static int getX(long $$0) {
+        return (int)($$0 & 0xFFFFFFFFL);
     }
 
-    public static int getZ(long chunkAsLong) {
-        return (int)(chunkAsLong >>> 32 & 0xFFFFFFFFL);
+    public static int getZ(long $$0) {
+        return (int)($$0 >>> 32 & 0xFFFFFFFFL);
     }
 
     public int hashCode() {
@@ -73,13 +73,13 @@
         return $$2 ^ $$3;
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        if (other instanceof net.minecraft.world.level.ChunkPos) {
-            net.minecraft.world.level.ChunkPos chunkPos = (net.minecraft.world.level.ChunkPos)other;
-            return this.x == chunkPos.x && this.z == chunkPos.z;
+        if ($$0 instanceof net.minecraft.world.level.ChunkPos) {
+            net.minecraft.world.level.ChunkPos $$1 = (net.minecraft.world.level.ChunkPos)$$0;
+            return this.x == $$1.x && this.z == $$1.z;
         }
         return false;
     }
@@ -148,19 +148,19 @@
         return new net.minecraft.core.BlockPos(this.getMinBlockX(), 0, this.getMinBlockZ());
     }
 
-    public int getChessboardDistance(net.minecraft.world.level.ChunkPos chunkPos) {
-        return java.lang.Math.max((int)java.lang.Math.abs((int)(this.x - chunkPos.x)), (int)java.lang.Math.abs((int)(this.z - chunkPos.z)));
+    public int getChessboardDistance(net.minecraft.world.level.ChunkPos $$0) {
+        return java.lang.Math.max((int)java.lang.Math.abs((int)(this.x - $$0.x)), (int)java.lang.Math.abs((int)(this.z - $$0.z)));
     }
 
-    public static java.util.stream.Stream<net.minecraft.world.level.ChunkPos> rangeClosed(net.minecraft.world.level.ChunkPos center, int radius) {
-        return net.minecraft.world.level.ChunkPos.rangeClosed((net.minecraft.world.level.ChunkPos)new net.minecraft.world.level.ChunkPos(center.x - radius, center.z - radius), (net.minecraft.world.level.ChunkPos)new net.minecraft.world.level.ChunkPos(center.x + radius, center.z + radius));
+    public static java.util.stream.Stream<net.minecraft.world.level.ChunkPos> rangeClosed(net.minecraft.world.level.ChunkPos $$0, int $$1) {
+        return net.minecraft.world.level.ChunkPos.rangeClosed((net.minecraft.world.level.ChunkPos)new net.minecraft.world.level.ChunkPos($$0.x - $$1, $$0.z - $$1), (net.minecraft.world.level.ChunkPos)new net.minecraft.world.level.ChunkPos($$0.x + $$1, $$0.z + $$1));
     }
 
-    public static java.util.stream.Stream<net.minecraft.world.level.ChunkPos> rangeClosed(net.minecraft.world.level.ChunkPos start, net.minecraft.world.level.ChunkPos end) {
-        int n = java.lang.Math.abs((int)(start.x - end.x)) + 1;
-        int n2 = java.lang.Math.abs((int)(start.z - end.z)) + 1;
-        int n3 = start.x < end.x ? 1 : -1;
-        int n4 = start.z < end.z ? 1 : -1;
+    public static java.util.stream.Stream<net.minecraft.world.level.ChunkPos> rangeClosed(net.minecraft.world.level.ChunkPos $$0, net.minecraft.world.level.ChunkPos $$1) {
+        int $$2 = java.lang.Math.abs((int)($$0.x - $$1.x)) + 1;
+        int $$3 = java.lang.Math.abs((int)($$0.z - $$1.z)) + 1;
+        int $$4 = $$0.x < $$1.x ? 1 : -1;
+        int $$5 = $$0.z < $$1.z ? 1 : -1;
         return java.util.stream.StreamSupport.stream((java.util.Spliterator)new /* Unavailable Anonymous Inner Class!! */, (boolean)false);
     }
 