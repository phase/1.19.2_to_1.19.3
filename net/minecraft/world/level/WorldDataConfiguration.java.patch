--- net/minecraft/world/level/WorldDataConfiguration.java
+++ net/minecraft/world/level/WorldDataConfiguration.java
@@ -1,0 +1,53 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.world.level;
+
+public class net.minecraft.world.level.WorldDataConfiguration
+extends java.lang.Record
+ {
+    public net.minecraft.world.level.DataPackConfig dataPacks;
+    public net.minecraft.world.flag.FeatureFlagSet enabledFeatures;
+    public static java.lang.String ENABLED_FEATURES_ID = "enabled_features";
+    public static com.mojang.serialization.Codec<net.minecraft.world.level.WorldDataConfiguration> CODEC;
+    public static net.minecraft.world.level.WorldDataConfiguration DEFAULT;
+
+    public net.minecraft.world.level.WorldDataConfiguration(net.minecraft.world.level.DataPackConfig $$0, net.minecraft.world.flag.FeatureFlagSet $$1) {
+        this.dataPacks = $$0;
+        this.enabledFeatures = $$1;
+    }
+
+    public net.minecraft.world.level.WorldDataConfiguration expandFeatures(net.minecraft.world.flag.FeatureFlagSet $$0) {
+        return new net.minecraft.world.level.WorldDataConfiguration(this.dataPacks, this.enabledFeatures.join($$0));
+    }
+
+    public java.lang.String toString() {
+        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.world.level.WorldDataConfiguration.class, "dataPacks;enabledFeatures", "dataPacks", "enabledFeatures"}, this);
+    }
+
+    public int hashCode() {
+        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.world.level.WorldDataConfiguration.class, "dataPacks;enabledFeatures", "dataPacks", "enabledFeatures"}, this);
+    }
+
+    public boolean equals(java.lang.Object $$0) {
+        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.world.level.WorldDataConfiguration.class, "dataPacks;enabledFeatures", "dataPacks", "enabledFeatures"}, this, $$0);
+    }
+
+    public net.minecraft.world.level.DataPackConfig dataPacks() {
+        return this.dataPacks;
+    }
+
+    public net.minecraft.world.flag.FeatureFlagSet enabledFeatures() {
+        return this.enabledFeatures;
+    }
+
+    public static /* synthetic */ com.mojang.datafixers.kinds.App lambda$static$0(com.mojang.serialization.codecs.RecordCodecBuilder$Instance $$0) {
+        return $$0.group((com.mojang.datafixers.kinds.App)net.minecraft.world.level.DataPackConfig.CODEC.optionalFieldOf("DataPacks", (java.lang.Object)net.minecraft.world.level.DataPackConfig.DEFAULT).forGetter(net.minecraft.world.level.WorldDataConfiguration::dataPacks), (com.mojang.datafixers.kinds.App)net.minecraft.world.flag.FeatureFlags.CODEC.optionalFieldOf("enabled_features", (java.lang.Object)net.minecraft.world.flag.FeatureFlags.DEFAULT_FLAGS).forGetter(net.minecraft.world.level.WorldDataConfiguration::enabledFeatures)).apply((com.mojang.datafixers.kinds.Applicative)$$0, net.minecraft.world.level.WorldDataConfiguration::new);
+    }
+
+    static {
+        CODEC = com.mojang.serialization.codecs.RecordCodecBuilder.create($$0 -> $$0.group((com.mojang.datafixers.kinds.App)net.minecraft.world.level.DataPackConfig.CODEC.optionalFieldOf("DataPacks", (java.lang.Object)net.minecraft.world.level.DataPackConfig.DEFAULT).forGetter(net.minecraft.world.level.WorldDataConfiguration::dataPacks), (com.mojang.datafixers.kinds.App)net.minecraft.world.flag.FeatureFlags.CODEC.optionalFieldOf("enabled_features", (java.lang.Object)net.minecraft.world.flag.FeatureFlags.DEFAULT_FLAGS).forGetter(net.minecraft.world.level.WorldDataConfiguration::enabledFeatures)).apply((com.mojang.datafixers.kinds.Applicative)$$0, net.minecraft.world.level.WorldDataConfiguration::new));
+        DEFAULT = new net.minecraft.world.level.WorldDataConfiguration(net.minecraft.world.level.DataPackConfig.DEFAULT, net.minecraft.world.flag.FeatureFlags.DEFAULT_FLAGS);
+    }
+}
+