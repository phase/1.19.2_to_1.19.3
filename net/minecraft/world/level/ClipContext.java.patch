--- net/minecraft/world/level/ClipContext.java
+++ net/minecraft/world/level/ClipContext.java
@@ -11,12 +11,12 @@
     public net.minecraft.world.level.ClipContext$Fluid fluid;
     public net.minecraft.world.phys.shapes.CollisionContext collisionContext;
 
-    public net.minecraft.world.level.ClipContext(net.minecraft.world.phys.Vec3 from, net.minecraft.world.phys.Vec3 to, net.minecraft.world.level.ClipContext$Block block, net.minecraft.world.level.ClipContext$Fluid fluid, net.minecraft.world.entity.Entity entity) {
-        this.from = from;
-        this.to = to;
-        this.block = block;
-        this.fluid = fluid;
-        this.collisionContext = net.minecraft.world.phys.shapes.CollisionContext.of((net.minecraft.world.entity.Entity)entity);
+    public net.minecraft.world.level.ClipContext(net.minecraft.world.phys.Vec3 $$0, net.minecraft.world.phys.Vec3 $$1, net.minecraft.world.level.ClipContext$Block $$2, net.minecraft.world.level.ClipContext$Fluid $$3, net.minecraft.world.entity.Entity $$4) {
+        this.from = $$0;
+        this.to = $$1;
+        this.block = $$2;
+        this.fluid = $$3;
+        this.collisionContext = net.minecraft.world.phys.shapes.CollisionContext.of((net.minecraft.world.entity.Entity)$$4);
     }
 
     public net.minecraft.world.phys.Vec3 getTo() {
@@ -27,12 +27,12 @@
         return this.from;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getBlockShape(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        return this.block.get(blockState, level, pos, this.collisionContext);
+    public net.minecraft.world.phys.shapes.VoxelShape getBlockShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
+        return this.block.get($$0, $$1, $$2, this.collisionContext);
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getFluidShape(net.minecraft.world.level.material.FluidState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        return this.fluid.canPick(state) ? state.getShape(level, pos) : net.minecraft.world.phys.shapes.Shapes.empty();
+    public net.minecraft.world.phys.shapes.VoxelShape getFluidShape(net.minecraft.world.level.material.FluidState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
+        return this.fluid.canPick($$0) ? $$0.getShape($$1, $$2) : net.minecraft.world.phys.shapes.Shapes.empty();
     }
 }
 