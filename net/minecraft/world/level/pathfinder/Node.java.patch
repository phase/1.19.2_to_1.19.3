--- net/minecraft/world/level/pathfinder/Node.java
+++ net/minecraft/world/level/pathfinder/Node.java
@@ -29,29 +29,29 @@
         this.hash = net.minecraft.world.level.pathfinder.Node.createHash((int)$$0, (int)$$1, (int)$$2);
     }
 
-    public net.minecraft.world.level.pathfinder.Node cloneAndMove(int x, int y, int z) {
-        net.minecraft.world.level.pathfinder.Node node = new net.minecraft.world.level.pathfinder.Node(x, y, z);
-        node.heapIdx = this.heapIdx;
-        node.g = this.g;
-        node.h = this.h;
-        node.f = this.f;
-        node.cameFrom = this.cameFrom;
-        node.closed = this.closed;
-        node.walkedDistance = this.walkedDistance;
-        node.costMalus = this.costMalus;
-        node.type = this.type;
-        return node;
+    public net.minecraft.world.level.pathfinder.Node cloneAndMove(int $$0, int $$1, int $$2) {
+        net.minecraft.world.level.pathfinder.Node $$3 = new net.minecraft.world.level.pathfinder.Node($$0, $$1, $$2);
+        $$3.heapIdx = this.heapIdx;
+        $$3.g = this.g;
+        $$3.h = this.h;
+        $$3.f = this.f;
+        $$3.cameFrom = this.cameFrom;
+        $$3.closed = this.closed;
+        $$3.walkedDistance = this.walkedDistance;
+        $$3.costMalus = this.costMalus;
+        $$3.type = this.type;
+        return $$3;
     }
 
-    public static int createHash(int x, int y, int z) {
-        return y & 0xFF | (x & java.lang.Short.MAX_VALUE) << 8 | (z & java.lang.Short.MAX_VALUE) << 24 | (x < 0 ? java.lang.Integer.MIN_VALUE : 0) | (z < 0 ? 32768 : 0);
+    public static int createHash(int $$0, int $$1, int $$2) {
+        return $$1 & 0xFF | ($$0 & java.lang.Short.MAX_VALUE) << 8 | ($$2 & java.lang.Short.MAX_VALUE) << 24 | ($$0 < 0 ? java.lang.Integer.MIN_VALUE : 0) | ($$2 < 0 ? 32768 : 0);
     }
 
-    public float distanceTo(net.minecraft.world.level.pathfinder.Node pathpoint) {
-        float f = pathpoint.x - this.x;
-        float f2 = pathpoint.y - this.y;
-        float f3 = pathpoint.z - this.z;
-        return net.minecraft.util.Mth.sqrt((float)(f * f + f2 * f2 + f3 * f3));
+    public float distanceTo(net.minecraft.world.level.pathfinder.Node $$0) {
+        float $$1 = $$0.x - this.x;
+        float $$2 = $$0.y - this.y;
+        float $$3 = $$0.z - this.z;
+        return net.minecraft.util.Mth.sqrt((float)($$1 * $$1 + $$2 * $$2 + $$3 * $$3));
     }
 
     public float distanceToXZ(net.minecraft.world.level.pathfinder.Node $$0) {
@@ -67,11 +67,11 @@
         return net.minecraft.util.Mth.sqrt((float)($$1 * $$1 + $$2 * $$2 + $$3 * $$3));
     }
 
-    public float distanceToSqr(net.minecraft.world.level.pathfinder.Node pathpoint) {
-        float f = pathpoint.x - this.x;
-        float f2 = pathpoint.y - this.y;
-        float f3 = pathpoint.z - this.z;
-        return f * f + f2 * f2 + f3 * f3;
+    public float distanceToSqr(net.minecraft.world.level.pathfinder.Node $$0) {
+        float $$1 = $$0.x - this.x;
+        float $$2 = $$0.y - this.y;
+        float $$3 = $$0.z - this.z;
+        return $$1 * $$1 + $$2 * $$2 + $$3 * $$3;
     }
 
     public float distanceToSqr(net.minecraft.core.BlockPos $$0) {
@@ -134,14 +134,14 @@
         $$0.writeFloat(this.f);
     }
 
-    public static net.minecraft.world.level.pathfinder.Node createFromStream(net.minecraft.network.FriendlyByteBuf buf) {
-        net.minecraft.world.level.pathfinder.Node node = new net.minecraft.world.level.pathfinder.Node(buf.readInt(), buf.readInt(), buf.readInt());
-        node.walkedDistance = buf.readFloat();
-        node.costMalus = buf.readFloat();
-        node.closed = buf.readBoolean();
-        node.type = net.minecraft.world.level.pathfinder.BlockPathTypes.values()[buf.readInt()];
-        node.f = buf.readFloat();
-        return node;
+    public static net.minecraft.world.level.pathfinder.Node createFromStream(net.minecraft.network.FriendlyByteBuf $$0) {
+        net.minecraft.world.level.pathfinder.Node $$1 = new net.minecraft.world.level.pathfinder.Node($$0.readInt(), $$0.readInt(), $$0.readInt());
+        $$1.walkedDistance = $$0.readFloat();
+        $$1.costMalus = $$0.readFloat();
+        $$1.closed = $$0.readBoolean();
+        $$1.type = net.minecraft.world.level.pathfinder.BlockPathTypes.values()[$$0.readInt()];
+        $$1.f = $$0.readFloat();
+        return $$1;
     }
 }
 