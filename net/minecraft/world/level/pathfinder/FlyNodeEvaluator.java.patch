--- net/minecraft/world/level/pathfinder/FlyNodeEvaluator.java
+++ net/minecraft/world/level/pathfinder/FlyNodeEvaluator.java
@@ -172,71 +172,71 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.pathfinder.Node getNode(int x, int y, int z) {
-        net.minecraft.world.level.pathfinder.Node node = null;
-        net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes = this.getCachedBlockPathType(x, y, z);
-        float f = this.mob.getPathfindingMalus(blockPathTypes);
-        if (f >= 0.0f && (node = super.getNode(x, y, z)) != null) {
-            node.type = blockPathTypes;
-            node.costMalus = java.lang.Math.max((float)node.costMalus, (float)f);
-            if (blockPathTypes == net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE) {
-                node.costMalus += 1.0f;
+    public net.minecraft.world.level.pathfinder.Node getNode(int $$0, int $$1, int $$2) {
+        net.minecraft.world.level.pathfinder.Node $$3 = null;
+        net.minecraft.world.level.pathfinder.BlockPathTypes $$4 = this.getCachedBlockPathType($$0, $$1, $$2);
+        float $$5 = this.mob.getPathfindingMalus($$4);
+        if ($$5 >= 0.0f && ($$3 = super.getNode($$0, $$1, $$2)) != null) {
+            $$3.type = $$4;
+            $$3.costMalus = java.lang.Math.max((float)$$3.costMalus, (float)$$5);
+            if ($$4 == net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE) {
+                $$3.costMalus += 1.0f;
             }
         }
-        return node;
+        return $$3;
     }
 
     public net.minecraft.world.level.pathfinder.BlockPathTypes getCachedBlockPathType(int $$0, int $$1, int $$2) {
         return (net.minecraft.world.level.pathfinder.BlockPathTypes)this.pathTypeByPosCache.computeIfAbsent(net.minecraft.core.BlockPos.asLong((int)$$0, (int)$$1, (int)$$2), $$3 -> this.getBlockPathType((net.minecraft.world.level.BlockGetter)this.level, $$0, $$1, $$2, this.mob, this.entityWidth, this.entityHeight, this.entityDepth, this.canOpenDoors(), this.canPassDoors()));
     }
 
-    public net.minecraft.world.level.pathfinder.BlockPathTypes getBlockPathType(net.minecraft.world.level.BlockGetter blockaccess, int x, int y, int z, net.minecraft.world.entity.Mob entityliving, int xSize, int ySize, int zSize, boolean canBreakDoors, boolean canEnterDoors) {
-        java.util.EnumSet enumSet = java.util.EnumSet.noneOf(net.minecraft.world.level.pathfinder.BlockPathTypes.class);
-        net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes = net.minecraft.world.level.pathfinder.BlockPathTypes.BLOCKED;
-        net.minecraft.core.BlockPos blockPos = entityliving.blockPosition();
-        blockPathTypes = super.getBlockPathTypes(blockaccess, x, y, z, xSize, ySize, zSize, canBreakDoors, canEnterDoors, enumSet, blockPathTypes, blockPos);
-        if (enumSet.contains((java.lang.Object)net.minecraft.world.level.pathfinder.BlockPathTypes.FENCE)) {
+    public net.minecraft.world.level.pathfinder.BlockPathTypes getBlockPathType(net.minecraft.world.level.BlockGetter $$0, int $$1, int $$2, int $$3, net.minecraft.world.entity.Mob $$4, int $$5, int $$6, int $$7, boolean $$8, boolean $$9) {
+        java.util.EnumSet $$10 = java.util.EnumSet.noneOf(net.minecraft.world.level.pathfinder.BlockPathTypes.class);
+        net.minecraft.world.level.pathfinder.BlockPathTypes $$11 = net.minecraft.world.level.pathfinder.BlockPathTypes.BLOCKED;
+        net.minecraft.core.BlockPos $$12 = $$4.blockPosition();
+        $$11 = super.getBlockPathTypes($$0, $$1, $$2, $$3, $$5, $$6, $$7, $$8, $$9, $$10, $$11, $$12);
+        if ($$10.contains((java.lang.Object)net.minecraft.world.level.pathfinder.BlockPathTypes.FENCE)) {
             return net.minecraft.world.level.pathfinder.BlockPathTypes.FENCE;
         }
-        net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes2 = net.minecraft.world.level.pathfinder.BlockPathTypes.BLOCKED;
-        for (net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes3 : enumSet) {
-            if (entityliving.getPathfindingMalus(blockPathTypes3) < 0.0f) {
-                return blockPathTypes3;
+        net.minecraft.world.level.pathfinder.BlockPathTypes $$13 = net.minecraft.world.level.pathfinder.BlockPathTypes.BLOCKED;
+        for (net.minecraft.world.level.pathfinder.BlockPathTypes $$14 : $$10) {
+            if ($$4.getPathfindingMalus($$14) < 0.0f) {
+                return $$14;
             }
-            if (!(entityliving.getPathfindingMalus(blockPathTypes3) >= entityliving.getPathfindingMalus(blockPathTypes2))) continue;
-            blockPathTypes2 = blockPathTypes3;
+            if (!($$4.getPathfindingMalus($$14) >= $$4.getPathfindingMalus($$13))) continue;
+            $$13 = $$14;
         }
-        if (blockPathTypes == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN && entityliving.getPathfindingMalus(blockPathTypes2) == 0.0f) {
+        if ($$11 == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN && $$4.getPathfindingMalus($$13) == 0.0f) {
             return net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN;
         }
-        return blockPathTypes2;
+        return $$13;
     }
 
-    public net.minecraft.world.level.pathfinder.BlockPathTypes getBlockPathType(net.minecraft.world.level.BlockGetter level, int x, int y, int z) {
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = new net.minecraft.core.BlockPos$MutableBlockPos();
-        net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes = net.minecraft.world.level.pathfinder.FlyNodeEvaluator.getBlockPathTypeRaw((net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos)mutableBlockPos.set(x, y, z));
-        if (blockPathTypes == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN && y >= level.getMinBuildHeight() + 1) {
-            net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes2 = net.minecraft.world.level.pathfinder.FlyNodeEvaluator.getBlockPathTypeRaw((net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos)mutableBlockPos.set(x, y - 1, z));
-            if (blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_FIRE || blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.LAVA) {
-                blockPathTypes = net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_FIRE;
-            } else if (blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_CACTUS) {
-                blockPathTypes = net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_CACTUS;
-            } else if (blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_OTHER) {
-                blockPathTypes = net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_OTHER;
-            } else if (blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.COCOA) {
-                blockPathTypes = net.minecraft.world.level.pathfinder.BlockPathTypes.COCOA;
-            } else if (blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.FENCE) {
-                if (!mutableBlockPos.equals((java.lang.Object)this.mob.blockPosition())) {
-                    blockPathTypes = net.minecraft.world.level.pathfinder.BlockPathTypes.FENCE;
+    public net.minecraft.world.level.pathfinder.BlockPathTypes getBlockPathType(net.minecraft.world.level.BlockGetter $$0, int $$1, int $$2, int $$3) {
+        net.minecraft.core.BlockPos$MutableBlockPos $$4 = new net.minecraft.core.BlockPos$MutableBlockPos();
+        net.minecraft.world.level.pathfinder.BlockPathTypes $$5 = net.minecraft.world.level.pathfinder.FlyNodeEvaluator.getBlockPathTypeRaw((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$4.set($$1, $$2, $$3));
+        if ($$5 == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN && $$2 >= $$0.getMinBuildHeight() + 1) {
+            net.minecraft.world.level.pathfinder.BlockPathTypes $$6 = net.minecraft.world.level.pathfinder.FlyNodeEvaluator.getBlockPathTypeRaw((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$4.set($$1, $$2 - 1, $$3));
+            if ($$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_FIRE || $$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.LAVA) {
+                $$5 = net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_FIRE;
+            } else if ($$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_CACTUS) {
+                $$5 = net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_CACTUS;
+            } else if ($$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_OTHER) {
+                $$5 = net.minecraft.world.level.pathfinder.BlockPathTypes.DAMAGE_OTHER;
+            } else if ($$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.COCOA) {
+                $$5 = net.minecraft.world.level.pathfinder.BlockPathTypes.COCOA;
+            } else if ($$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.FENCE) {
+                if (!$$4.equals((java.lang.Object)this.mob.blockPosition())) {
+                    $$5 = net.minecraft.world.level.pathfinder.BlockPathTypes.FENCE;
                 }
             } else {
-                net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes3 = blockPathTypes = blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE || blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN || blockPathTypes2 == net.minecraft.world.level.pathfinder.BlockPathTypes.WATER ? net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN : net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE;
+                net.minecraft.world.level.pathfinder.BlockPathTypes blockPathTypes = $$5 = $$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE || $$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN || $$6 == net.minecraft.world.level.pathfinder.BlockPathTypes.WATER ? net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN : net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE;
             }
         }
-        if (blockPathTypes == net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE || blockPathTypes == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN) {
-            blockPathTypes = net.minecraft.world.level.pathfinder.FlyNodeEvaluator.checkNeighbourBlocks((net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos$MutableBlockPos)mutableBlockPos.set(x, y, z), (net.minecraft.world.level.pathfinder.BlockPathTypes)blockPathTypes);
+        if ($$5 == net.minecraft.world.level.pathfinder.BlockPathTypes.WALKABLE || $$5 == net.minecraft.world.level.pathfinder.BlockPathTypes.OPEN) {
+            $$5 = net.minecraft.world.level.pathfinder.FlyNodeEvaluator.checkNeighbourBlocks((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos$MutableBlockPos)$$4.set($$1, $$2, $$3), (net.minecraft.world.level.pathfinder.BlockPathTypes)$$5);
         }
-        return blockPathTypes;
+        return $$5;
     }
 }
 