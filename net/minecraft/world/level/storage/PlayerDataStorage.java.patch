--- net/minecraft/world/level/storage/PlayerDataStorage.java
+++ net/minecraft/world/level/storage/PlayerDataStorage.java
@@ -15,37 +15,37 @@
         this.playerDir.mkdirs();
     }
 
-    public void save(net.minecraft.world.entity.player.Player player) {
+    public void save(net.minecraft.world.entity.player.Player $$0) {
         try {
-            net.minecraft.nbt.CompoundTag compoundTag = player.saveWithoutId(new net.minecraft.nbt.CompoundTag());
-            java.io.File file = java.io.File.createTempFile((java.lang.String)(player.getStringUUID() + "-"), (java.lang.String)".dat", (java.io.File)this.playerDir);
-            net.minecraft.nbt.NbtIo.writeCompressed((net.minecraft.nbt.CompoundTag)compoundTag, (java.io.File)file);
-            java.io.File file2 = new java.io.File(this.playerDir, player.getStringUUID() + ".dat");
-            java.io.File file3 = new java.io.File(this.playerDir, player.getStringUUID() + ".dat_old");
-            net.minecraft.Util.safeReplaceFile((java.io.File)file2, (java.io.File)file, (java.io.File)file3);
+            net.minecraft.nbt.CompoundTag $$1 = $$0.saveWithoutId(new net.minecraft.nbt.CompoundTag());
+            java.io.File $$2 = java.io.File.createTempFile((java.lang.String)($$0.getStringUUID() + "-"), (java.lang.String)".dat", (java.io.File)this.playerDir);
+            net.minecraft.nbt.NbtIo.writeCompressed((net.minecraft.nbt.CompoundTag)$$1, (java.io.File)$$2);
+            java.io.File $$3 = new java.io.File(this.playerDir, $$0.getStringUUID() + ".dat");
+            java.io.File $$4 = new java.io.File(this.playerDir, $$0.getStringUUID() + ".dat_old");
+            net.minecraft.Util.safeReplaceFile((java.io.File)$$3, (java.io.File)$$2, (java.io.File)$$4);
         }
-        catch (java.lang.Exception exception) {
-            LOGGER.warn("Failed to save player data for {}", (java.lang.Object)player.getName().getString());
+        catch (java.lang.Exception $$5) {
+            LOGGER.warn("Failed to save player data for {}", (java.lang.Object)$$0.getName().getString());
         }
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.nbt.CompoundTag load(net.minecraft.world.entity.player.Player player) {
-        net.minecraft.nbt.CompoundTag compoundTag = null;
+    public net.minecraft.nbt.CompoundTag load(net.minecraft.world.entity.player.Player $$0) {
+        net.minecraft.nbt.CompoundTag $$1 = null;
         try {
-            java.io.File file = new java.io.File(this.playerDir, player.getStringUUID() + ".dat");
-            if (file.exists() && file.isFile()) {
-                compoundTag = net.minecraft.nbt.NbtIo.readCompressed((java.io.File)file);
+            java.io.File $$2 = new java.io.File(this.playerDir, $$0.getStringUUID() + ".dat");
+            if ($$2.exists() && $$2.isFile()) {
+                $$1 = net.minecraft.nbt.NbtIo.readCompressed((java.io.File)$$2);
             }
         }
-        catch (java.lang.Exception exception) {
-            LOGGER.warn("Failed to load player data for {}", (java.lang.Object)player.getName().getString());
+        catch (java.lang.Exception $$3) {
+            LOGGER.warn("Failed to load player data for {}", (java.lang.Object)$$0.getName().getString());
         }
-        if (compoundTag != null) {
-            int n = compoundTag.contains("DataVersion", 3) ? compoundTag.getInt("DataVersion") : -1;
-            player.load(net.minecraft.nbt.NbtUtils.update((com.mojang.datafixers.DataFixer)this.fixerUpper, (net.minecraft.util.datafix.DataFixTypes)net.minecraft.util.datafix.DataFixTypes.PLAYER, (net.minecraft.nbt.CompoundTag)compoundTag, (int)n));
+        if ($$1 != null) {
+            int $$4 = $$1.contains("DataVersion", 3) ? $$1.getInt("DataVersion") : -1;
+            $$0.load(net.minecraft.nbt.NbtUtils.update((com.mojang.datafixers.DataFixer)this.fixerUpper, (net.minecraft.util.datafix.DataFixTypes)net.minecraft.util.datafix.DataFixTypes.PLAYER, (net.minecraft.nbt.CompoundTag)$$1, (int)$$4));
         }
-        return compoundTag;
+        return $$1;
     }
 
     public java.lang.String[] getSeenPlayers() {