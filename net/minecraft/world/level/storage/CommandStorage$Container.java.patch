--- net/minecraft/world/level/storage/CommandStorage$Container.java
+++ net/minecraft/world/level/storage/CommandStorage$Container.java
@@ -21,29 +21,29 @@
         return this;
     }
 
-    public net.minecraft.nbt.CompoundTag save(net.minecraft.nbt.CompoundTag compound) {
-        net.minecraft.nbt.CompoundTag compoundTag = new net.minecraft.nbt.CompoundTag();
-        this.storage.forEach(($$1, $$2) -> compoundTag.put($$1, (net.minecraft.nbt.Tag)$$2.copy()));
-        compound.put("contents", (net.minecraft.nbt.Tag)compoundTag);
-        return compound;
+    public net.minecraft.nbt.CompoundTag save(net.minecraft.nbt.CompoundTag $$0) {
+        net.minecraft.nbt.CompoundTag $$12 = new net.minecraft.nbt.CompoundTag();
+        this.storage.forEach(($$1, $$2) -> $$12.put($$1, (net.minecraft.nbt.Tag)$$2.copy()));
+        $$0.put("contents", (net.minecraft.nbt.Tag)$$12);
+        return $$0;
     }
 
-    public net.minecraft.nbt.CompoundTag get(java.lang.String id) {
-        net.minecraft.nbt.CompoundTag compoundTag = (net.minecraft.nbt.CompoundTag)this.storage.get((java.lang.Object)id);
-        return compoundTag != null ? compoundTag : new net.minecraft.nbt.CompoundTag();
+    public net.minecraft.nbt.CompoundTag get(java.lang.String $$0) {
+        net.minecraft.nbt.CompoundTag $$1 = (net.minecraft.nbt.CompoundTag)this.storage.get((java.lang.Object)$$0);
+        return $$1 != null ? $$1 : new net.minecraft.nbt.CompoundTag();
     }
 
-    public void put(java.lang.String id, net.minecraft.nbt.CompoundTag nbt) {
-        if (nbt.isEmpty()) {
-            this.storage.remove((java.lang.Object)id);
+    public void put(java.lang.String $$0, net.minecraft.nbt.CompoundTag $$1) {
+        if ($$1.isEmpty()) {
+            this.storage.remove((java.lang.Object)$$0);
         } else {
-            this.storage.put((java.lang.Object)id, (java.lang.Object)nbt);
+            this.storage.put((java.lang.Object)$$0, (java.lang.Object)$$1);
         }
         this.setDirty();
     }
 
-    public java.util.stream.Stream<net.minecraft.resources.ResourceLocation> getKeys(java.lang.String namespace) {
-        return this.storage.keySet().stream().map($$1 -> new net.minecraft.resources.ResourceLocation(namespace, $$1));
+    public java.util.stream.Stream<net.minecraft.resources.ResourceLocation> getKeys(java.lang.String $$0) {
+        return this.storage.keySet().stream().map($$1 -> new net.minecraft.resources.ResourceLocation($$0, $$1));
     }
 }
 