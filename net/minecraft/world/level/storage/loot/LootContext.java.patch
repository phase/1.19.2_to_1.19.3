--- net/minecraft/world/level/storage/loot/LootContext.java
+++ net/minecraft/world/level/storage/loot/LootContext.java
@@ -27,8 +27,8 @@
         this.dynamicDrops = com.google.common.collect.ImmutableMap.copyOf($$6);
     }
 
-    public boolean hasParam(net.minecraft.world.level.storage.loot.parameters.LootContextParam<?> parameter) {
-        return this.params.containsKey(parameter);
+    public boolean hasParam(net.minecraft.world.level.storage.loot.parameters.LootContextParam<?> $$0) {
+        return this.params.containsKey($$0);
     }
 
     public <T> T getParam(net.minecraft.world.level.storage.loot.parameters.LootContextParam<T> $$0) {
@@ -39,41 +39,41 @@
         return (T)$$1;
     }
 
-    public void addDynamicDrops(net.minecraft.resources.ResourceLocation name, java.util.function.Consumer<net.minecraft.world.item.ItemStack> consumer) {
-        net.minecraft.world.level.storage.loot.LootContext$DynamicDrop dynamicDrop = (net.minecraft.world.level.storage.loot.LootContext$DynamicDrop)this.dynamicDrops.get((java.lang.Object)name);
-        if (dynamicDrop != null) {
-            dynamicDrop.add(this, consumer);
+    public void addDynamicDrops(net.minecraft.resources.ResourceLocation $$0, java.util.function.Consumer<net.minecraft.world.item.ItemStack> $$1) {
+        net.minecraft.world.level.storage.loot.LootContext$DynamicDrop $$2 = (net.minecraft.world.level.storage.loot.LootContext$DynamicDrop)this.dynamicDrops.get((java.lang.Object)$$0);
+        if ($$2 != null) {
+            $$2.add(this, $$1);
         }
     }
 
     @javax.annotation.Nullable
-    public <T> T getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParam<T> parameter) {
-        return (T)this.params.get(parameter);
+    public <T> T getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParam<T> $$0) {
+        return (T)this.params.get($$0);
     }
 
-    public boolean addVisitedTable(net.minecraft.world.level.storage.loot.LootTable lootTable) {
-        return this.visitedTables.add((java.lang.Object)lootTable);
+    public boolean addVisitedTable(net.minecraft.world.level.storage.loot.LootTable $$0) {
+        return this.visitedTables.add((java.lang.Object)$$0);
     }
 
-    public void removeVisitedTable(net.minecraft.world.level.storage.loot.LootTable lootTable) {
-        this.visitedTables.remove((java.lang.Object)lootTable);
+    public void removeVisitedTable(net.minecraft.world.level.storage.loot.LootTable $$0) {
+        this.visitedTables.remove((java.lang.Object)$$0);
     }
 
-    public boolean addVisitedCondition(net.minecraft.world.level.storage.loot.predicates.LootItemCondition condition) {
-        return this.visitedConditions.add((java.lang.Object)condition);
+    public boolean addVisitedCondition(net.minecraft.world.level.storage.loot.predicates.LootItemCondition $$0) {
+        return this.visitedConditions.add((java.lang.Object)$$0);
     }
 
-    public void removeVisitedCondition(net.minecraft.world.level.storage.loot.predicates.LootItemCondition condition) {
-        this.visitedConditions.remove((java.lang.Object)condition);
+    public void removeVisitedCondition(net.minecraft.world.level.storage.loot.predicates.LootItemCondition $$0) {
+        this.visitedConditions.remove((java.lang.Object)$$0);
     }
 
-    public net.minecraft.world.level.storage.loot.LootTable getLootTable(net.minecraft.resources.ResourceLocation tableId) {
-        return (net.minecraft.world.level.storage.loot.LootTable)this.lootTables.apply((java.lang.Object)tableId);
+    public net.minecraft.world.level.storage.loot.LootTable getLootTable(net.minecraft.resources.ResourceLocation $$0) {
+        return (net.minecraft.world.level.storage.loot.LootTable)this.lootTables.apply((java.lang.Object)$$0);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.storage.loot.predicates.LootItemCondition getCondition(net.minecraft.resources.ResourceLocation conditionId) {
-        return (net.minecraft.world.level.storage.loot.predicates.LootItemCondition)this.conditions.apply((java.lang.Object)conditionId);
+    public net.minecraft.world.level.storage.loot.predicates.LootItemCondition getCondition(net.minecraft.resources.ResourceLocation $$0) {
+        return (net.minecraft.world.level.storage.loot.predicates.LootItemCondition)this.conditions.apply((java.lang.Object)$$0);
     }
 
     public net.minecraft.util.RandomSource getRandom() {