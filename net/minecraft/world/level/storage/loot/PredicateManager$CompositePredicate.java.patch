--- net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate.java
+++ net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate.java
@@ -9,19 +9,19 @@
     public net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] terms;
     public java.util.function.Predicate<net.minecraft.world.level.storage.loot.LootContext> composedPredicate;
 
-    public net.minecraft.world.level.storage.loot.PredicateManager$CompositePredicate(net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] terms) {
-        this.terms = terms;
-        this.composedPredicate = net.minecraft.world.level.storage.loot.predicates.LootItemConditions.andConditions((java.util.function.Predicate[])terms);
+    public net.minecraft.world.level.storage.loot.PredicateManager$CompositePredicate(net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] $$0) {
+        this.terms = $$0;
+        this.composedPredicate = net.minecraft.world.level.storage.loot.predicates.LootItemConditions.andConditions((java.util.function.Predicate[])$$0);
     }
 
     public boolean test(net.minecraft.world.level.storage.loot.LootContext $$0) {
         return this.composedPredicate.test((java.lang.Object)$$0);
     }
 
-    public void validate(net.minecraft.world.level.storage.loot.ValidationContext context) {
-        super.validate(context);
-        for (int i = 0; i < this.terms.length; ++i) {
-            this.terms[i].validate(context.forChild(".term[" + i + "]"));
+    public void validate(net.minecraft.world.level.storage.loot.ValidationContext $$0) {
+        super.validate($$0);
+        for (int $$1 = 0; $$1 < this.terms.length; ++$$1) {
+            this.terms[$$1].validate($$0.forChild(".term[" + $$1 + "]"));
         }
     }
 