--- net/minecraft/world/level/storage/loot/ValidationContext.java
+++ net/minecraft/world/level/storage/loot/ValidationContext.java
@@ -14,18 +14,18 @@
     public java.util.Set<net.minecraft.resources.ResourceLocation> visitedTables;
     public java.lang.String contextCache;
 
-    public net.minecraft.world.level.storage.loot.ValidationContext(net.minecraft.world.level.storage.loot.parameters.LootContextParamSet params, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.predicates.LootItemCondition> conditionResolver, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.LootTable> tableResolver) {
-        this((com.google.common.collect.Multimap)com.google.common.collect.HashMultimap.create(), () -> "", params, conditionResolver, (java.util.Set)com.google.common.collect.ImmutableSet.of(), tableResolver, (java.util.Set)com.google.common.collect.ImmutableSet.of());
+    public net.minecraft.world.level.storage.loot.ValidationContext(net.minecraft.world.level.storage.loot.parameters.LootContextParamSet $$0, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.predicates.LootItemCondition> $$1, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.LootTable> $$2) {
+        this((com.google.common.collect.Multimap)com.google.common.collect.HashMultimap.create(), () -> "", $$0, $$1, (java.util.Set)com.google.common.collect.ImmutableSet.of(), $$2, (java.util.Set)com.google.common.collect.ImmutableSet.of());
     }
 
-    public net.minecraft.world.level.storage.loot.ValidationContext(com.google.common.collect.Multimap<java.lang.String, java.lang.String> problems, java.util.function.Supplier<java.lang.String> context, net.minecraft.world.level.storage.loot.parameters.LootContextParamSet params, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.predicates.LootItemCondition> conditionResolver, java.util.Set<net.minecraft.resources.ResourceLocation> visitedConditions, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.LootTable> tableResolver, java.util.Set<net.minecraft.resources.ResourceLocation> visitedTables) {
-        this.problems = problems;
-        this.context = context;
-        this.params = params;
-        this.conditionResolver = conditionResolver;
-        this.visitedConditions = visitedConditions;
-        this.tableResolver = tableResolver;
-        this.visitedTables = visitedTables;
+    public net.minecraft.world.level.storage.loot.ValidationContext(com.google.common.collect.Multimap<java.lang.String, java.lang.String> $$0, java.util.function.Supplier<java.lang.String> $$1, net.minecraft.world.level.storage.loot.parameters.LootContextParamSet $$2, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.predicates.LootItemCondition> $$3, java.util.Set<net.minecraft.resources.ResourceLocation> $$4, java.util.function.Function<net.minecraft.resources.ResourceLocation, net.minecraft.world.level.storage.loot.LootTable> $$5, java.util.Set<net.minecraft.resources.ResourceLocation> $$6) {
+        this.problems = $$0;
+        this.context = $$1;
+        this.params = $$2;
+        this.conditionResolver = $$3;
+        this.visitedConditions = $$4;
+        this.tableResolver = $$5;
+        this.visitedTables = $$6;
     }
 
     public java.lang.String getContext() {
@@ -35,52 +35,52 @@
         return this.contextCache;
     }
 
-    public void reportProblem(java.lang.String problem) {
-        this.problems.put((java.lang.Object)this.getContext(), (java.lang.Object)problem);
+    public void reportProblem(java.lang.String $$0) {
+        this.problems.put((java.lang.Object)this.getContext(), (java.lang.Object)$$0);
     }
 
-    public net.minecraft.world.level.storage.loot.ValidationContext forChild(java.lang.String childName) {
-        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, () -> this.getContext() + childName, this.params, this.conditionResolver, this.visitedConditions, this.tableResolver, this.visitedTables);
+    public net.minecraft.world.level.storage.loot.ValidationContext forChild(java.lang.String $$0) {
+        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, () -> this.getContext() + $$0, this.params, this.conditionResolver, this.visitedConditions, this.tableResolver, this.visitedTables);
     }
 
-    public net.minecraft.world.level.storage.loot.ValidationContext enterTable(java.lang.String contextName, net.minecraft.resources.ResourceLocation lootTableId) {
-        com.google.common.collect.ImmutableSet immutableSet = com.google.common.collect.ImmutableSet.builder().addAll((java.lang.Iterable)this.visitedTables).add((java.lang.Object)lootTableId).build();
-        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, () -> this.getContext() + contextName, this.params, this.conditionResolver, this.visitedConditions, this.tableResolver, (java.util.Set)immutableSet);
+    public net.minecraft.world.level.storage.loot.ValidationContext enterTable(java.lang.String $$0, net.minecraft.resources.ResourceLocation $$1) {
+        com.google.common.collect.ImmutableSet $$2 = com.google.common.collect.ImmutableSet.builder().addAll((java.lang.Iterable)this.visitedTables).add((java.lang.Object)$$1).build();
+        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, () -> this.getContext() + $$0, this.params, this.conditionResolver, this.visitedConditions, this.tableResolver, (java.util.Set)$$2);
     }
 
-    public net.minecraft.world.level.storage.loot.ValidationContext enterCondition(java.lang.String contextName, net.minecraft.resources.ResourceLocation conditionId) {
-        com.google.common.collect.ImmutableSet immutableSet = com.google.common.collect.ImmutableSet.builder().addAll((java.lang.Iterable)this.visitedConditions).add((java.lang.Object)conditionId).build();
-        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, () -> this.getContext() + contextName, this.params, this.conditionResolver, (java.util.Set)immutableSet, this.tableResolver, this.visitedTables);
+    public net.minecraft.world.level.storage.loot.ValidationContext enterCondition(java.lang.String $$0, net.minecraft.resources.ResourceLocation $$1) {
+        com.google.common.collect.ImmutableSet $$2 = com.google.common.collect.ImmutableSet.builder().addAll((java.lang.Iterable)this.visitedConditions).add((java.lang.Object)$$1).build();
+        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, () -> this.getContext() + $$0, this.params, this.conditionResolver, (java.util.Set)$$2, this.tableResolver, this.visitedTables);
     }
 
-    public boolean hasVisitedTable(net.minecraft.resources.ResourceLocation lootTableId) {
-        return this.visitedTables.contains((java.lang.Object)lootTableId);
+    public boolean hasVisitedTable(net.minecraft.resources.ResourceLocation $$0) {
+        return this.visitedTables.contains((java.lang.Object)$$0);
     }
 
-    public boolean hasVisitedCondition(net.minecraft.resources.ResourceLocation conditionId) {
-        return this.visitedConditions.contains((java.lang.Object)conditionId);
+    public boolean hasVisitedCondition(net.minecraft.resources.ResourceLocation $$0) {
+        return this.visitedConditions.contains((java.lang.Object)$$0);
     }
 
     public com.google.common.collect.Multimap<java.lang.String, java.lang.String> getProblems() {
         return com.google.common.collect.ImmutableMultimap.copyOf((com.google.common.collect.Multimap)this.problems);
     }
 
-    public void validateUser(net.minecraft.world.level.storage.loot.LootContextUser lootContextUser) {
-        this.params.validateUser(this, lootContextUser);
+    public void validateUser(net.minecraft.world.level.storage.loot.LootContextUser $$0) {
+        this.params.validateUser(this, $$0);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.storage.loot.LootTable resolveLootTable(net.minecraft.resources.ResourceLocation lootTableId) {
-        return (net.minecraft.world.level.storage.loot.LootTable)this.tableResolver.apply((java.lang.Object)lootTableId);
+    public net.minecraft.world.level.storage.loot.LootTable resolveLootTable(net.minecraft.resources.ResourceLocation $$0) {
+        return (net.minecraft.world.level.storage.loot.LootTable)this.tableResolver.apply((java.lang.Object)$$0);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.storage.loot.predicates.LootItemCondition resolveCondition(net.minecraft.resources.ResourceLocation conditionId) {
-        return (net.minecraft.world.level.storage.loot.predicates.LootItemCondition)this.conditionResolver.apply((java.lang.Object)conditionId);
+    public net.minecraft.world.level.storage.loot.predicates.LootItemCondition resolveCondition(net.minecraft.resources.ResourceLocation $$0) {
+        return (net.minecraft.world.level.storage.loot.predicates.LootItemCondition)this.conditionResolver.apply((java.lang.Object)$$0);
     }
 
-    public net.minecraft.world.level.storage.loot.ValidationContext setParams(net.minecraft.world.level.storage.loot.parameters.LootContextParamSet params) {
-        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, this.context, params, this.conditionResolver, this.visitedConditions, this.tableResolver, this.visitedTables);
+    public net.minecraft.world.level.storage.loot.ValidationContext setParams(net.minecraft.world.level.storage.loot.parameters.LootContextParamSet $$0) {
+        return new net.minecraft.world.level.storage.loot.ValidationContext(this.problems, this.context, $$0, this.conditionResolver, this.visitedConditions, this.tableResolver, this.visitedTables);
     }
 }
 