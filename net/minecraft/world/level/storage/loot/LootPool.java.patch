--- net/minecraft/world/level/storage/loot/LootPool.java
+++ net/minecraft/world/level/storage/loot/LootPool.java
@@ -46,33 +46,29 @@
         }
     }
 
-    public void addRandomItems(java.util.function.Consumer<net.minecraft.world.item.ItemStack> stackConsumer, net.minecraft.world.level.storage.loot.LootContext lootContext) {
-        if (!this.compositeCondition.test((java.lang.Object)lootContext)) {
+    public void addRandomItems(java.util.function.Consumer<net.minecraft.world.item.ItemStack> $$0, net.minecraft.world.level.storage.loot.LootContext $$1) {
+        if (!this.compositeCondition.test((java.lang.Object)$$1)) {
             return;
         }
-        java.util.function.Consumer consumer = net.minecraft.world.level.storage.loot.functions.LootItemFunction.decorate((java.util.function.BiFunction)this.compositeFunction, stackConsumer, (net.minecraft.world.level.storage.loot.LootContext)lootContext);
-        int n = this.rolls.getInt(lootContext) + net.minecraft.util.Mth.floor((float)(this.bonusRolls.getFloat(lootContext) * lootContext.getLuck()));
-        for (int i = 0; i < n; ++i) {
-            this.addRandomItem(consumer, lootContext);
+        java.util.function.Consumer $$2 = net.minecraft.world.level.storage.loot.functions.LootItemFunction.decorate((java.util.function.BiFunction)this.compositeFunction, $$0, (net.minecraft.world.level.storage.loot.LootContext)$$1);
+        int $$3 = this.rolls.getInt($$1) + net.minecraft.util.Mth.floor((float)(this.bonusRolls.getFloat($$1) * $$1.getLuck()));
+        for (int $$4 = 0; $$4 < $$3; ++$$4) {
+            this.addRandomItem($$2, $$1);
         }
     }
 
-    public void validate(net.minecraft.world.level.storage.loot.ValidationContext context) {
-        int n;
-        for (n = 0;
- n < this.conditions.length; ++n) {
-            this.conditions[n].validate(context.forChild(".condition[" + n + "]"));
+    public void validate(net.minecraft.world.level.storage.loot.ValidationContext $$0) {
+        for (int $$1 = 0; $$1 < this.conditions.length; ++$$1) {
+            this.conditions[$$1].validate($$0.forChild(".condition[" + $$1 + "]"));
         }
-        for (n = 0;
- n < this.functions.length; ++n) {
-            this.functions[n].validate(context.forChild(".functions[" + n + "]"));
+        for (int $$2 = 0; $$2 < this.functions.length; ++$$2) {
+            this.functions[$$2].validate($$0.forChild(".functions[" + $$2 + "]"));
         }
-        for (n = 0;
- n < this.entries.length; ++n) {
-            this.entries[n].validate(context.forChild(".entries[" + n + "]"));
+        for (int $$3 = 0; $$3 < this.entries.length; ++$$3) {
+            this.entries[$$3].validate($$0.forChild(".entries[" + $$3 + "]"));
         }
-        this.rolls.validate(context.forChild(".rolls"));
-        this.bonusRolls.validate(context.forChild(".bonusRolls"));
+        this.rolls.validate($$0.forChild(".rolls"));
+        this.bonusRolls.validate($$0.forChild(".bonusRolls"));
     }
 
     public static net.minecraft.world.level.storage.loot.LootPool$Builder lootPool() {