--- net/minecraft/world/level/storage/loot/entries/EntryGroup.java
+++ net/minecraft/world/level/storage/loot/entries/EntryGroup.java
@@ -14,26 +14,26 @@
         return net.minecraft.world.level.storage.loot.entries.LootPoolEntries.GROUP;
     }
 
-    public net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer compose(net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer[] entries) {
-        switch (entries.length) {
+    public net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer compose(net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer[] $$0) {
+        switch ($$0.length) {
             case 0: {
                 return ALWAYS_TRUE;
             }
             case 1: {
-                return entries[0];
+                return $$0[0];
             }
             case 2: {
-                net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer composableEntryContainer = entries[0];
-                net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer composableEntryContainer2 = entries[1];
+                net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer $$12 = $$0[0];
+                net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer $$22 = $$0[1];
                 return ($$2, $$3) -> {
-                    composableEntryContainer.expand($$2, $$3);
-                    composableEntryContainer2.expand($$2, $$3);
+                    $$12.expand($$2, $$3);
+                    $$22.expand($$2, $$3);
                     return true;
                 };
             }
         }
         return ($$1, $$2) -> {
-            for (net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer $$3 : entries) {
+            for (net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer $$3 : $$0) {
                 $$3.expand($$1, $$2);
             }
             return true;