--- net/minecraft/world/level/storage/loot/entries/TagEntry.java
+++ net/minecraft/world/level/storage/loot/entries/TagEntry.java
@@ -19,25 +19,25 @@
         return net.minecraft.world.level.storage.loot.entries.LootPoolEntries.TAG;
     }
 
-    public void createItemStack(java.util.function.Consumer<net.minecraft.world.item.ItemStack> stackConsumer, net.minecraft.world.level.storage.loot.LootContext lootContext) {
-        net.minecraft.core.Registry.ITEM.getTagOrEmpty(this.tag).forEach($$1 -> stackConsumer.accept((java.lang.Object)new net.minecraft.world.item.ItemStack($$1)));
+    public void createItemStack(java.util.function.Consumer<net.minecraft.world.item.ItemStack> $$0, net.minecraft.world.level.storage.loot.LootContext $$12) {
+        net.minecraft.core.Registry.ITEM.getTagOrEmpty(this.tag).forEach($$1 -> $$0.accept((java.lang.Object)new net.minecraft.world.item.ItemStack($$1)));
     }
 
-    public boolean expandTag(net.minecraft.world.level.storage.loot.LootContext context, java.util.function.Consumer<net.minecraft.world.level.storage.loot.entries.LootPoolEntry> generatorConsumer) {
-        if (this.canRun(context)) {
-            for (net.minecraft.core.Holder holder : net.minecraft.core.Registry.ITEM.getTagOrEmpty(this.tag)) {
-                generatorConsumer.accept((java.lang.Object)new /* Unavailable Anonymous Inner Class!! */);
+    public boolean expandTag(net.minecraft.world.level.storage.loot.LootContext $$0, java.util.function.Consumer<net.minecraft.world.level.storage.loot.entries.LootPoolEntry> $$1) {
+        if (this.canRun($$0)) {
+            for (net.minecraft.core.Holder $$2 : net.minecraft.core.Registry.ITEM.getTagOrEmpty(this.tag)) {
+                $$1.accept((java.lang.Object)new /* Unavailable Anonymous Inner Class!! */);
             }
             return true;
         }
         return false;
     }
 
-    public boolean expand(net.minecraft.world.level.storage.loot.LootContext lootContext, java.util.function.Consumer<net.minecraft.world.level.storage.loot.entries.LootPoolEntry> entryConsumer) {
+    public boolean expand(net.minecraft.world.level.storage.loot.LootContext $$0, java.util.function.Consumer<net.minecraft.world.level.storage.loot.entries.LootPoolEntry> $$1) {
         if (this.expand) {
-            return this.expandTag(lootContext, entryConsumer);
+            return this.expandTag($$0, $$1);
         }
-        return super.expand(lootContext, entryConsumer);
+        return super.expand($$0, $$1);
     }
 
     public static net.minecraft.world.level.storage.loot.entries.LootPoolSingletonContainer$Builder<?> tagContents(net.minecraft.tags.TagKey<net.minecraft.world.item.Item> $$0) {