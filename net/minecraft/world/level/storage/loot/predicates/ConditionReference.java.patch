--- net/minecraft/world/level/storage/loot/predicates/ConditionReference.java
+++ net/minecraft/world/level/storage/loot/predicates/ConditionReference.java
@@ -9,25 +9,25 @@
     public static org.slf4j.Logger LOGGER;
     public net.minecraft.resources.ResourceLocation name;
 
-    public net.minecraft.world.level.storage.loot.predicates.ConditionReference(net.minecraft.resources.ResourceLocation name) {
-        this.name = name;
+    public net.minecraft.world.level.storage.loot.predicates.ConditionReference(net.minecraft.resources.ResourceLocation $$0) {
+        this.name = $$0;
     }
 
     public net.minecraft.world.level.storage.loot.predicates.LootItemConditionType getType() {
         return net.minecraft.world.level.storage.loot.predicates.LootItemConditions.REFERENCE;
     }
 
-    public void validate(net.minecraft.world.level.storage.loot.ValidationContext context) {
-        if (context.hasVisitedCondition(this.name)) {
-            context.reportProblem("Condition " + this.name + " is recursively called");
+    public void validate(net.minecraft.world.level.storage.loot.ValidationContext $$0) {
+        if ($$0.hasVisitedCondition(this.name)) {
+            $$0.reportProblem("Condition " + this.name + " is recursively called");
             return;
         }
-        super.validate(context);
-        net.minecraft.world.level.storage.loot.predicates.LootItemCondition lootItemCondition = context.resolveCondition(this.name);
-        if (lootItemCondition == null) {
-            context.reportProblem("Unknown condition table called " + this.name);
+        super.validate($$0);
+        net.minecraft.world.level.storage.loot.predicates.LootItemCondition $$1 = $$0.resolveCondition(this.name);
+        if ($$1 == null) {
+            $$0.reportProblem("Unknown condition table called " + this.name);
         } else {
-            lootItemCondition.validate(context.enterTable(".{" + this.name + "}", this.name));
+            $$1.validate($$0.enterTable(".{" + this.name + "}", this.name));
         }
     }
 