--- net/minecraft/world/level/storage/loot/functions/ApplyBonusCount.java
+++ net/minecraft/world/level/storage/loot/functions/ApplyBonusCount.java
@@ -10,10 +10,10 @@
     public net.minecraft.world.item.enchantment.Enchantment enchantment;
     public net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula formula;
 
-    public net.minecraft.world.level.storage.loot.functions.ApplyBonusCount(net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] conditions, net.minecraft.world.item.enchantment.Enchantment enchantment, net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula formula) {
-        super(conditions);
-        this.enchantment = enchantment;
-        this.formula = formula;
+    public net.minecraft.world.level.storage.loot.functions.ApplyBonusCount(net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] $$0, net.minecraft.world.item.enchantment.Enchantment $$1, net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula $$2) {
+        super($$0);
+        this.enchantment = $$1;
+        this.formula = $$2;
     }
 
     public net.minecraft.world.level.storage.loot.functions.LootItemFunctionType getType() {
@@ -24,30 +24,30 @@
         return com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.level.storage.loot.parameters.LootContextParams.TOOL);
     }
 
-    public net.minecraft.world.item.ItemStack run(net.minecraft.world.item.ItemStack stack, net.minecraft.world.level.storage.loot.LootContext context) {
-        net.minecraft.world.item.ItemStack itemStack = (net.minecraft.world.item.ItemStack)context.getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParams.TOOL);
-        if (itemStack != null) {
-            int n = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)this.enchantment, (net.minecraft.world.item.ItemStack)itemStack);
-            int n2 = this.formula.calculateNewCount(context.getRandom(), stack.getCount(), n);
-            stack.setCount(n2);
+    public net.minecraft.world.item.ItemStack run(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.level.storage.loot.LootContext $$1) {
+        net.minecraft.world.item.ItemStack $$2 = (net.minecraft.world.item.ItemStack)$$1.getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParams.TOOL);
+        if ($$2 != null) {
+            int $$3 = net.minecraft.world.item.enchantment.EnchantmentHelper.getItemEnchantmentLevel((net.minecraft.world.item.enchantment.Enchantment)this.enchantment, (net.minecraft.world.item.ItemStack)$$2);
+            int $$4 = this.formula.calculateNewCount($$1.getRandom(), $$0.getCount(), $$3);
+            $$0.setCount($$4);
         }
-        return stack;
+        return $$0;
     }
 
-    public static net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction$Builder<?> addBonusBinomialDistributionCount(net.minecraft.world.item.enchantment.Enchantment enchantment, float probability, int extraRounds) {
-        return net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.simpleBuilder($$3 -> new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$3, enchantment, (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula)new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$BinomialWithBonusCount(extraRounds, probability)));
+    public static net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction$Builder<?> addBonusBinomialDistributionCount(net.minecraft.world.item.enchantment.Enchantment $$0, float $$1, int $$2) {
+        return net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.simpleBuilder($$3 -> new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$3, $$0, (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula)new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$BinomialWithBonusCount($$2, $$1)));
     }
 
     public static net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction$Builder<?> addOreBonusCount(net.minecraft.world.item.enchantment.Enchantment $$0) {
         return net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.simpleBuilder($$1 -> new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$1, $$0, (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula)new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$OreDrops()));
     }
 
-    public static net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction$Builder<?> addUniformBonusCount(net.minecraft.world.item.enchantment.Enchantment enchantment) {
-        return net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.simpleBuilder($$1 -> new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$1, enchantment, (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula)new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$UniformBonusCount(1)));
+    public static net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction$Builder<?> addUniformBonusCount(net.minecraft.world.item.enchantment.Enchantment $$0) {
+        return net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.simpleBuilder($$1 -> new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$1, $$0, (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula)new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$UniformBonusCount(1)));
     }
 
-    public static net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction$Builder<?> addUniformBonusCount(net.minecraft.world.item.enchantment.Enchantment enchantment, int bonusMultiplier) {
-        return net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.simpleBuilder($$2 -> new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$2, enchantment, (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula)new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$UniformBonusCount(bonusMultiplier)));
+    public static net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction$Builder<?> addUniformBonusCount(net.minecraft.world.item.enchantment.Enchantment $$0, int $$1) {
+        return net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.simpleBuilder($$2 -> new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$2, $$0, (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula)new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$UniformBonusCount($$1)));
     }
 
     static {