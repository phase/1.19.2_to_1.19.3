--- net/minecraft/world/level/storage/loot/functions/CopyBlockState.java
+++ net/minecraft/world/level/storage/loot/functions/CopyBlockState.java
@@ -9,10 +9,10 @@
     public net.minecraft.world.level.block.Block block;
     public java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> properties;
 
-    public net.minecraft.world.level.storage.loot.functions.CopyBlockState(net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] conditions, net.minecraft.world.level.block.Block block, java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> properties) {
-        super(conditions);
-        this.block = block;
-        this.properties = properties;
+    public net.minecraft.world.level.storage.loot.functions.CopyBlockState(net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] $$0, net.minecraft.world.level.block.Block $$1, java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> $$2) {
+        super($$0);
+        this.block = $$1;
+        this.properties = $$2;
     }
 
     public net.minecraft.world.level.storage.loot.functions.LootItemFunctionType getType() {
@@ -23,29 +23,29 @@
         return com.google.common.collect.ImmutableSet.of((java.lang.Object)net.minecraft.world.level.storage.loot.parameters.LootContextParams.BLOCK_STATE);
     }
 
-    public net.minecraft.world.item.ItemStack run(net.minecraft.world.item.ItemStack stack, net.minecraft.world.level.storage.loot.LootContext context) {
-        net.minecraft.world.level.block.state.BlockState blockState = (net.minecraft.world.level.block.state.BlockState)context.getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParams.BLOCK_STATE);
-        if (blockState != null) {
-            net.minecraft.nbt.CompoundTag compoundTag;
-            net.minecraft.nbt.CompoundTag compoundTag2 = stack.getOrCreateTag();
-            if (compoundTag2.contains("BlockStateTag", 10)) {
-                compoundTag = compoundTag2.getCompound("BlockStateTag");
+    public net.minecraft.world.item.ItemStack run(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.level.storage.loot.LootContext $$1) {
+        net.minecraft.world.level.block.state.BlockState $$22 = (net.minecraft.world.level.block.state.BlockState)$$1.getParamOrNull(net.minecraft.world.level.storage.loot.parameters.LootContextParams.BLOCK_STATE);
+        if ($$22 != null) {
+            net.minecraft.nbt.CompoundTag $$5;
+            net.minecraft.nbt.CompoundTag $$3 = $$0.getOrCreateTag();
+            if ($$3.contains("BlockStateTag", 10)) {
+                net.minecraft.nbt.CompoundTag $$4 = $$3.getCompound("BlockStateTag");
             } else {
-                compoundTag = new net.minecraft.nbt.CompoundTag();
-                compoundTag2.put("BlockStateTag", (net.minecraft.nbt.Tag)compoundTag);
+                $$5 = new net.minecraft.nbt.CompoundTag();
+                $$3.put("BlockStateTag", (net.minecraft.nbt.Tag)$$5);
             }
-            this.properties.stream().filter(arg_0 -> ((net.minecraft.world.level.block.state.BlockState)blockState).hasProperty(arg_0)).forEach($$2 -> compoundTag.putString($$2.getName(), net.minecraft.world.level.storage.loot.functions.CopyBlockState.serialize((net.minecraft.world.level.block.state.BlockState)blockState, (net.minecraft.world.level.block.state.properties.Property)$$2)));
+            this.properties.stream().filter(arg_0 -> ((net.minecraft.world.level.block.state.BlockState)$$22).hasProperty(arg_0)).forEach($$2 -> $$5.putString($$2.getName(), net.minecraft.world.level.storage.loot.functions.CopyBlockState.serialize((net.minecraft.world.level.block.state.BlockState)$$22, (net.minecraft.world.level.block.state.properties.Property)$$2)));
         }
-        return stack;
+        return $$0;
     }
 
-    public static net.minecraft.world.level.storage.loot.functions.CopyBlockState$Builder copyState(net.minecraft.world.level.block.Block block) {
-        return new net.minecraft.world.level.storage.loot.functions.CopyBlockState$Builder(block);
+    public static net.minecraft.world.level.storage.loot.functions.CopyBlockState$Builder copyState(net.minecraft.world.level.block.Block $$0) {
+        return new net.minecraft.world.level.storage.loot.functions.CopyBlockState$Builder($$0);
     }
 
-    public static <T extends java.lang.Comparable<T>> java.lang.String serialize(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.block.state.properties.Property<T> property) {
-        java.lang.Comparable comparable = blockState.getValue(property);
-        return property.getName(comparable);
+    public static <T extends java.lang.Comparable<T>> java.lang.String serialize(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.state.properties.Property<T> $$1) {
+        java.lang.Comparable $$2 = $$0.getValue($$1);
+        return $$1.getName($$2);
     }
 }
 