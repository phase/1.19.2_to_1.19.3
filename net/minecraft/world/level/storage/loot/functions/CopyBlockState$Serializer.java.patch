--- net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer.java
+++ net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer.java
@@ -9,24 +9,24 @@
     public net.minecraft.world.level.storage.loot.functions.CopyBlockState$Serializer() {
     }
 
-    public void serialize(com.google.gson.JsonObject json, net.minecraft.world.level.storage.loot.functions.CopyBlockState value, com.google.gson.JsonSerializationContext serializationContext) {
-        super.serialize(json, (net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction)value, serializationContext);
-        json.addProperty("block", net.minecraft.core.Registry.BLOCK.getKey((java.lang.Object)value.block).toString());
-        com.google.gson.JsonArray jsonArray = new com.google.gson.JsonArray();
-        value.properties.forEach($$1 -> jsonArray.add($$1.getName()));
-        json.add("properties", (com.google.gson.JsonElement)jsonArray);
+    public void serialize(com.google.gson.JsonObject $$0, net.minecraft.world.level.storage.loot.functions.CopyBlockState $$12, com.google.gson.JsonSerializationContext $$2) {
+        super.serialize($$0, (net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction)$$12, $$2);
+        $$0.addProperty("block", net.minecraft.core.Registry.BLOCK.getKey((java.lang.Object)$$12.block).toString());
+        com.google.gson.JsonArray $$3 = new com.google.gson.JsonArray();
+        $$12.properties.forEach($$1 -> $$3.add($$1.getName()));
+        $$0.add("properties", (com.google.gson.JsonElement)$$3);
     }
 
-    public net.minecraft.world.level.storage.loot.functions.CopyBlockState deserialize(com.google.gson.JsonObject object, com.google.gson.JsonDeserializationContext deserializationContext, net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] conditions) {
-        net.minecraft.resources.ResourceLocation resourceLocation = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)object, (java.lang.String)"block"));
-        net.minecraft.world.level.block.Block block = (net.minecraft.world.level.block.Block)net.minecraft.core.Registry.BLOCK.getOptional(resourceLocation).orElseThrow(() -> new java.lang.IllegalArgumentException("Can't find block " + resourceLocation));
-        net.minecraft.world.level.block.state.StateDefinition stateDefinition = block.getStateDefinition();
-        java.util.HashSet hashSet = com.google.common.collect.Sets.newHashSet();
-        com.google.gson.JsonArray jsonArray = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)object, (java.lang.String)"properties", null);
-        if (jsonArray != null) {
-            jsonArray.forEach(arg_0 -> net.minecraft.world.level.storage.loot.functions.CopyBlockState$Serializer.lambda$deserialize$2((java.util.Set)hashSet, stateDefinition, arg_0));
+    public net.minecraft.world.level.storage.loot.functions.CopyBlockState deserialize(com.google.gson.JsonObject $$0, com.google.gson.JsonDeserializationContext $$1, net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] $$2) {
+        net.minecraft.resources.ResourceLocation $$3 = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"block"));
+        net.minecraft.world.level.block.Block $$4 = (net.minecraft.world.level.block.Block)net.minecraft.core.Registry.BLOCK.getOptional($$3).orElseThrow(() -> new java.lang.IllegalArgumentException("Can't find block " + $$3));
+        net.minecraft.world.level.block.state.StateDefinition $$5 = $$4.getStateDefinition();
+        java.util.HashSet $$6 = com.google.common.collect.Sets.newHashSet();
+        com.google.gson.JsonArray $$7 = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$0, (java.lang.String)"properties", null);
+        if ($$7 != null) {
+            $$7.forEach(arg_0 -> net.minecraft.world.level.storage.loot.functions.CopyBlockState$Serializer.lambda$deserialize$2((java.util.Set)$$6, $$5, arg_0));
         }
-        return new net.minecraft.world.level.storage.loot.functions.CopyBlockState(conditions, block, (java.util.Set)hashSet);
+        return new net.minecraft.world.level.storage.loot.functions.CopyBlockState($$2, $$4, (java.util.Set)$$6);
     }
 
     public /* synthetic */ net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction deserialize(com.google.gson.JsonObject jsonObject, com.google.gson.JsonDeserializationContext jsonDeserializationContext, net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] lootItemConditionArray) {