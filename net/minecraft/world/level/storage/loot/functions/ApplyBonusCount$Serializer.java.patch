--- net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer.java
+++ net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer.java
@@ -9,27 +9,32 @@
     public net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Serializer() {
     }
 
-    public void serialize(com.google.gson.JsonObject json, net.minecraft.world.level.storage.loot.functions.ApplyBonusCount value, com.google.gson.JsonSerializationContext serializationContext) {
-        super.serialize(json, (net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction)value, serializationContext);
-        json.addProperty("enchantment", net.minecraft.core.Registry.ENCHANTMENT.getKey((java.lang.Object)value.enchantment).toString());
-        json.addProperty("formula", value.formula.getType().toString());
-        com.google.gson.JsonObject jsonObject = new com.google.gson.JsonObject();
-        value.formula.serializeParams(jsonObject, serializationContext);
-        if (jsonObject.size() > 0) {
-            json.add("parameters", (com.google.gson.JsonElement)jsonObject);
+    public void serialize(com.google.gson.JsonObject $$0, net.minecraft.world.level.storage.loot.functions.ApplyBonusCount $$1, com.google.gson.JsonSerializationContext $$2) {
+        super.serialize($$0, (net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction)$$1, $$2);
+        $$0.addProperty("enchantment", net.minecraft.core.Registry.ENCHANTMENT.getKey((java.lang.Object)$$1.enchantment).toString());
+        $$0.addProperty("formula", $$1.formula.getType().toString());
+        com.google.gson.JsonObject $$3 = new com.google.gson.JsonObject();
+        $$1.formula.serializeParams($$3, $$2);
+        if ($$3.size() > 0) {
+            $$0.add("parameters", (com.google.gson.JsonElement)$$3);
         }
     }
 
-    public net.minecraft.world.level.storage.loot.functions.ApplyBonusCount deserialize(com.google.gson.JsonObject object, com.google.gson.JsonDeserializationContext deserializationContext, net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] conditions) {
-        net.minecraft.resources.ResourceLocation resourceLocation = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)object, (java.lang.String)"enchantment"));
-        net.minecraft.world.item.enchantment.Enchantment enchantment = (net.minecraft.world.item.enchantment.Enchantment)net.minecraft.core.Registry.ENCHANTMENT.getOptional(resourceLocation).orElseThrow(() -> new com.google.gson.JsonParseException("Invalid enchantment id: " + resourceLocation));
-        net.minecraft.resources.ResourceLocation resourceLocation2 = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)object, (java.lang.String)"formula"));
-        net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$FormulaDeserializer formulaDeserializer = (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$FormulaDeserializer)net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.FORMULAS.get((java.lang.Object)resourceLocation2);
-        if (formulaDeserializer == null) {
-            throw new com.google.gson.JsonParseException("Invalid formula id: " + resourceLocation2);
+    public net.minecraft.world.level.storage.loot.functions.ApplyBonusCount deserialize(com.google.gson.JsonObject $$0, com.google.gson.JsonDeserializationContext $$1, net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] $$2) {
+        net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula $$8;
+        net.minecraft.resources.ResourceLocation $$3 = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"enchantment"));
+        net.minecraft.world.item.enchantment.Enchantment $$4 = (net.minecraft.world.item.enchantment.Enchantment)net.minecraft.core.Registry.ENCHANTMENT.getOptional($$3).orElseThrow(() -> new com.google.gson.JsonParseException("Invalid enchantment id: " + $$3));
+        net.minecraft.resources.ResourceLocation $$5 = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"formula"));
+        net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$FormulaDeserializer $$6 = (net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$FormulaDeserializer)net.minecraft.world.level.storage.loot.functions.ApplyBonusCount.FORMULAS.get((java.lang.Object)$$5);
+        if ($$6 == null) {
+            throw new com.google.gson.JsonParseException("Invalid formula id: " + $$5);
         }
-        net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula formula = object.has("parameters") ? formulaDeserializer.deserialize(net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)object, (java.lang.String)"parameters"), deserializationContext) : formulaDeserializer.deserialize(new com.google.gson.JsonObject(), deserializationContext);
-        return new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount(conditions, enchantment, formula);
+        if ($$0.has("parameters")) {
+            net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$Formula $$7 = $$6.deserialize(net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$0, (java.lang.String)"parameters"), $$1);
+        } else {
+            $$8 = $$6.deserialize(new com.google.gson.JsonObject(), $$1);
+        }
+        return new net.minecraft.world.level.storage.loot.functions.ApplyBonusCount($$2, $$4, $$8);
     }
 
     public /* synthetic */ net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction deserialize(com.google.gson.JsonObject jsonObject, com.google.gson.JsonDeserializationContext jsonDeserializationContext, net.minecraft.world.level.storage.loot.predicates.LootItemCondition[] lootItemConditionArray) {