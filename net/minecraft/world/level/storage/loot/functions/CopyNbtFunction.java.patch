--- net/minecraft/world/level/storage/loot/functions/CopyNbtFunction.java
+++ net/minecraft/world/level/storage/loot/functions/CopyNbtFunction.java
@@ -19,12 +19,12 @@
         return net.minecraft.world.level.storage.loot.functions.LootItemFunctions.COPY_NBT;
     }
 
-    public static net.minecraft.commands.arguments.NbtPathArgument$NbtPath compileNbtPath(java.lang.String nbtPath) {
+    public static net.minecraft.commands.arguments.NbtPathArgument$NbtPath compileNbtPath(java.lang.String $$0) {
         try {
-            return new net.minecraft.commands.arguments.NbtPathArgument().parse(new com.mojang.brigadier.StringReader(nbtPath));
+            return new net.minecraft.commands.arguments.NbtPathArgument().parse(new com.mojang.brigadier.StringReader($$0));
         }
-        catch (com.mojang.brigadier.exceptions.CommandSyntaxException commandSyntaxException) {
-            throw new java.lang.IllegalArgumentException("Failed to parse path " + nbtPath, (java.lang.Throwable)commandSyntaxException);
+        catch (com.mojang.brigadier.exceptions.CommandSyntaxException $$1) {
+            throw new java.lang.IllegalArgumentException("Failed to parse path " + $$0, (java.lang.Throwable)$$1);
         }
     }
 
@@ -32,12 +32,12 @@
         return this.source.getReferencedContextParams();
     }
 
-    public net.minecraft.world.item.ItemStack run(net.minecraft.world.item.ItemStack stack, net.minecraft.world.level.storage.loot.LootContext context) {
-        net.minecraft.nbt.Tag tag = this.source.get(context);
-        if (tag != null) {
-            this.operations.forEach($$2 -> $$2.apply(() -> ((net.minecraft.world.item.ItemStack)stack).getOrCreateTag(), tag));
+    public net.minecraft.world.item.ItemStack run(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.level.storage.loot.LootContext $$1) {
+        net.minecraft.nbt.Tag $$22 = this.source.get($$1);
+        if ($$22 != null) {
+            this.operations.forEach($$2 -> $$2.apply(() -> ((net.minecraft.world.item.ItemStack)$$0).getOrCreateTag(), $$22));
         }
-        return stack;
+        return $$0;
     }
 
     public static net.minecraft.world.level.storage.loot.functions.CopyNbtFunction$Builder copyData(net.minecraft.world.level.storage.loot.providers.nbt.NbtProvider $$0) {