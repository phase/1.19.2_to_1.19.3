--- net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier.java
+++ net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier.java
@@ -22,68 +22,70 @@
         this.slots = $$4;
     }
 
-    public com.google.gson.JsonObject serialize(com.google.gson.JsonSerializationContext context) {
-        com.google.gson.JsonObject jsonObject = new com.google.gson.JsonObject();
-        jsonObject.addProperty("name", this.name);
-        jsonObject.addProperty("attribute", net.minecraft.core.Registry.ATTRIBUTE.getKey((java.lang.Object)this.attribute).toString());
-        jsonObject.addProperty("operation", net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier.operationToString((net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation)this.operation));
-        jsonObject.add("amount", context.serialize((java.lang.Object)this.amount));
+    public com.google.gson.JsonObject serialize(com.google.gson.JsonSerializationContext $$0) {
+        com.google.gson.JsonObject $$1 = new com.google.gson.JsonObject();
+        $$1.addProperty("name", this.name);
+        $$1.addProperty("attribute", net.minecraft.core.Registry.ATTRIBUTE.getKey((java.lang.Object)this.attribute).toString());
+        $$1.addProperty("operation", net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier.operationToString((net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation)this.operation));
+        $$1.add("amount", $$0.serialize((java.lang.Object)this.amount));
         if (this.id != null) {
-            jsonObject.addProperty("id", this.id.toString());
+            $$1.addProperty("id", this.id.toString());
         }
         if (this.slots.length == 1) {
-            jsonObject.addProperty("slot", this.slots[0].getName());
+            $$1.addProperty("slot", this.slots[0].getName());
         } else {
-            com.google.gson.JsonArray jsonArray = new com.google.gson.JsonArray();
-            for (net.minecraft.world.entity.EquipmentSlot equipmentSlot : this.slots) {
-                jsonArray.add((com.google.gson.JsonElement)new com.google.gson.JsonPrimitive(equipmentSlot.getName()));
+            com.google.gson.JsonArray $$2 = new com.google.gson.JsonArray();
+            for (net.minecraft.world.entity.EquipmentSlot $$3 : this.slots) {
+                $$2.add((com.google.gson.JsonElement)new com.google.gson.JsonPrimitive($$3.getName()));
             }
-            jsonObject.add("slot", (com.google.gson.JsonElement)jsonArray);
+            $$1.add("slot", (com.google.gson.JsonElement)$$2);
         }
-        return jsonObject;
+        return $$1;
     }
 
-    public static net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier deserialize(com.google.gson.JsonObject jsonObj, com.google.gson.JsonDeserializationContext context) {
-        java.lang.Object object;
-        net.minecraft.world.entity.EquipmentSlot[] equipmentSlotArray;
-        java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObj, (java.lang.String)"name");
-        net.minecraft.resources.ResourceLocation resourceLocation = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObj, (java.lang.String)"attribute"));
-        net.minecraft.world.entity.ai.attributes.Attribute attribute = (net.minecraft.world.entity.ai.attributes.Attribute)net.minecraft.core.Registry.ATTRIBUTE.get(resourceLocation);
-        if (attribute == null) {
-            throw new com.google.gson.JsonSyntaxException("Unknown attribute: " + resourceLocation);
+    /*
+     * WARNING - void declaration
+     */
+    public static net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier deserialize(com.google.gson.JsonObject $$0, com.google.gson.JsonDeserializationContext $$1) {
+        void $$13;
+        java.lang.String $$2 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"name");
+        net.minecraft.resources.ResourceLocation $$3 = new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"attribute"));
+        net.minecraft.world.entity.ai.attributes.Attribute $$4 = (net.minecraft.world.entity.ai.attributes.Attribute)net.minecraft.core.Registry.ATTRIBUTE.get($$3);
+        if ($$4 == null) {
+            throw new com.google.gson.JsonSyntaxException("Unknown attribute: " + $$3);
         }
-        net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation operation = net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier.operationFromString((java.lang.String)net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObj, (java.lang.String)"operation"));
-        net.minecraft.world.level.storage.loot.providers.number.NumberProvider numberProvider = (net.minecraft.world.level.storage.loot.providers.number.NumberProvider)net.minecraft.util.GsonHelper.getAsObject((com.google.gson.JsonObject)jsonObj, (java.lang.String)"amount", (com.google.gson.JsonDeserializationContext)context, net.minecraft.world.level.storage.loot.providers.number.NumberProvider.class);
-        java.util.UUID uUID = null;
-        if (net.minecraft.util.GsonHelper.isStringValue((com.google.gson.JsonObject)jsonObj, (java.lang.String)"slot")) {
-            equipmentSlotArray = new net.minecraft.world.entity.EquipmentSlot[]{net.minecraft.world.entity.EquipmentSlot.byName((java.lang.String)net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObj, (java.lang.String)"slot"))};
-        } else if (net.minecraft.util.GsonHelper.isArrayNode((com.google.gson.JsonObject)jsonObj, (java.lang.String)"slot")) {
-            object = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)jsonObj, (java.lang.String)"slot");
-            equipmentSlotArray = new net.minecraft.world.entity.EquipmentSlot[object.size()];
-            int n = 0;
-            for (com.google.gson.JsonElement jsonElement : object) {
-                equipmentSlotArray[n++] = net.minecraft.world.entity.EquipmentSlot.byName((java.lang.String)net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)jsonElement, (java.lang.String)"slot"));
+        net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation $$5 = net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier.operationFromString((java.lang.String)net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"operation"));
+        net.minecraft.world.level.storage.loot.providers.number.NumberProvider $$6 = (net.minecraft.world.level.storage.loot.providers.number.NumberProvider)net.minecraft.util.GsonHelper.getAsObject((com.google.gson.JsonObject)$$0, (java.lang.String)"amount", (com.google.gson.JsonDeserializationContext)$$1, net.minecraft.world.level.storage.loot.providers.number.NumberProvider.class);
+        java.util.UUID $$7 = null;
+        if (net.minecraft.util.GsonHelper.isStringValue((com.google.gson.JsonObject)$$0, (java.lang.String)"slot")) {
+            net.minecraft.world.entity.EquipmentSlot[] $$8 = new net.minecraft.world.entity.EquipmentSlot[]{net.minecraft.world.entity.EquipmentSlot.byName((java.lang.String)net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"slot"))};
+        } else if (net.minecraft.util.GsonHelper.isArrayNode((com.google.gson.JsonObject)$$0, (java.lang.String)"slot")) {
+            com.google.gson.JsonArray $$9 = net.minecraft.util.GsonHelper.getAsJsonArray((com.google.gson.JsonObject)$$0, (java.lang.String)"slot");
+            net.minecraft.world.entity.EquipmentSlot[] $$10 = new net.minecraft.world.entity.EquipmentSlot[$$9.size()];
+            int $$11 = 0;
+            for (com.google.gson.JsonElement $$12 : $$9) {
+                $$10[$$11++] = net.minecraft.world.entity.EquipmentSlot.byName((java.lang.String)net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)$$12, (java.lang.String)"slot"));
             }
-            if (equipmentSlotArray.length == 0) {
+            if ($$10.length == 0) {
                 throw new com.google.gson.JsonSyntaxException("Invalid attribute modifier slot; must contain at least one entry.");
             }
         } else {
             throw new com.google.gson.JsonSyntaxException("Invalid or missing attribute modifier slot; must be either string or array of strings.");
         }
-        if (jsonObj.has("id")) {
-            object = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObj, (java.lang.String)"id");
+        if ($$0.has("id")) {
+            java.lang.String $$14 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"id");
             try {
-                uUID = java.util.UUID.fromString((java.lang.String)object);
+                $$7 = java.util.UUID.fromString((java.lang.String)$$14);
             }
-            catch (java.lang.IllegalArgumentException illegalArgumentException) {
-                throw new com.google.gson.JsonSyntaxException("Invalid attribute modifier id '" + (java.lang.String)object + "' (must be UUID format, with dashes)");
+            catch (java.lang.IllegalArgumentException $$15) {
+                throw new com.google.gson.JsonSyntaxException("Invalid attribute modifier id '" + $$14 + "' (must be UUID format, with dashes)");
             }
         }
-        return new net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier(string, attribute, operation, numberProvider, equipmentSlotArray, uUID);
+        return new net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$Modifier($$2, $$4, $$5, $$6, (net.minecraft.world.entity.EquipmentSlot[])$$13, $$7);
     }
 
-    public static java.lang.String operationToString(net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation operation) {
-        switch (net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$1.$SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation[operation.ordinal()]) {
+    public static java.lang.String operationToString(net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation $$0) {
+        switch (net.minecraft.world.level.storage.loot.functions.SetAttributesFunction$1.$SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation[$$0.ordinal()]) {
             case 1: {
                 return "addition";
             }
@@ -94,13 +96,13 @@
                 return "multiply_total";
             }
         }
-        throw new java.lang.IllegalArgumentException("Unknown operation " + operation);
+        throw new java.lang.IllegalArgumentException("Unknown operation " + $$0);
     }
 
     /*
      * Exception decompiling
      */
-    public static net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation operationFromString(java.lang.String name) {
+    public static net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation operationFromString(java.lang.String $$0) {
         /*
          * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
 