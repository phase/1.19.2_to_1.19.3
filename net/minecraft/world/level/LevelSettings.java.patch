--- net/minecraft/world/level/LevelSettings.java
+++ net/minecraft/world/level/LevelSettings.java
@@ -11,21 +11,21 @@
     public net.minecraft.world.Difficulty difficulty;
     public boolean allowCommands;
     public net.minecraft.world.level.GameRules gameRules;
-    public net.minecraft.world.level.DataPackConfig dataPackConfig;
+    public net.minecraft.world.level.WorldDataConfiguration dataConfiguration;
 
-    public net.minecraft.world.level.LevelSettings(java.lang.String levelName, net.minecraft.world.level.GameType gameType, boolean hardcore, net.minecraft.world.Difficulty difficulty, boolean allowCommands, net.minecraft.world.level.GameRules gameRules, net.minecraft.world.level.DataPackConfig dataPackConfig) {
-        this.levelName = levelName;
-        this.gameType = gameType;
-        this.hardcore = hardcore;
-        this.difficulty = difficulty;
-        this.allowCommands = allowCommands;
-        this.gameRules = gameRules;
-        this.dataPackConfig = dataPackConfig;
+    public net.minecraft.world.level.LevelSettings(java.lang.String $$0, net.minecraft.world.level.GameType $$1, boolean $$2, net.minecraft.world.Difficulty $$3, boolean $$4, net.minecraft.world.level.GameRules $$5, net.minecraft.world.level.WorldDataConfiguration $$6) {
+        this.levelName = $$0;
+        this.gameType = $$1;
+        this.hardcore = $$2;
+        this.difficulty = $$3;
+        this.allowCommands = $$4;
+        this.gameRules = $$5;
+        this.dataConfiguration = $$6;
     }
 
-    public static net.minecraft.world.level.LevelSettings parse(com.mojang.serialization.Dynamic<?> dynamic, net.minecraft.world.level.DataPackConfig codec) {
-        net.minecraft.world.level.GameType gameType = net.minecraft.world.level.GameType.byId((int)dynamic.get("GameType").asInt(0));
-        return new net.minecraft.world.level.LevelSettings(dynamic.get("LevelName").asString(""), gameType, dynamic.get("hardcore").asBoolean(false), (net.minecraft.world.Difficulty)dynamic.get("Difficulty").asNumber().map($$0 -> net.minecraft.world.Difficulty.byId((int)$$0.byteValue())).result().orElse((java.lang.Object)net.minecraft.world.Difficulty.NORMAL), dynamic.get("allowCommands").asBoolean(gameType == net.minecraft.world.level.GameType.CREATIVE), new net.minecraft.world.level.GameRules((com.mojang.serialization.DynamicLike)dynamic.get("GameRules")), codec);
+    public static net.minecraft.world.level.LevelSettings parse(com.mojang.serialization.Dynamic<?> $$02, net.minecraft.world.level.WorldDataConfiguration $$1) {
+        net.minecraft.world.level.GameType $$2 = net.minecraft.world.level.GameType.byId((int)$$02.get("GameType").asInt(0));
+        return new net.minecraft.world.level.LevelSettings($$02.get("LevelName").asString(""), $$2, $$02.get("hardcore").asBoolean(false), (net.minecraft.world.Difficulty)$$02.get("Difficulty").asNumber().map($$0 -> net.minecraft.world.Difficulty.byId((int)$$0.byteValue())).result().orElse((java.lang.Object)net.minecraft.world.Difficulty.NORMAL), $$02.get("allowCommands").asBoolean($$2 == net.minecraft.world.level.GameType.CREATIVE), new net.minecraft.world.level.GameRules((com.mojang.serialization.DynamicLike)$$02.get("GameRules")), $$1);
     }
 
     public java.lang.String levelName() {
@@ -52,24 +52,24 @@
         return this.gameRules;
     }
 
-    public net.minecraft.world.level.DataPackConfig getDataPackConfig() {
-        return this.dataPackConfig;
+    public net.minecraft.world.level.WorldDataConfiguration getDataConfiguration() {
+        return this.dataConfiguration;
     }
 
-    public net.minecraft.world.level.LevelSettings withGameType(net.minecraft.world.level.GameType gameType) {
-        return new net.minecraft.world.level.LevelSettings(this.levelName, gameType, this.hardcore, this.difficulty, this.allowCommands, this.gameRules, this.dataPackConfig);
+    public net.minecraft.world.level.LevelSettings withGameType(net.minecraft.world.level.GameType $$0) {
+        return new net.minecraft.world.level.LevelSettings(this.levelName, $$0, this.hardcore, this.difficulty, this.allowCommands, this.gameRules, this.dataConfiguration);
     }
 
-    public net.minecraft.world.level.LevelSettings withDifficulty(net.minecraft.world.Difficulty difficulty) {
-        return new net.minecraft.world.level.LevelSettings(this.levelName, this.gameType, this.hardcore, difficulty, this.allowCommands, this.gameRules, this.dataPackConfig);
+    public net.minecraft.world.level.LevelSettings withDifficulty(net.minecraft.world.Difficulty $$0) {
+        return new net.minecraft.world.level.LevelSettings(this.levelName, this.gameType, this.hardcore, $$0, this.allowCommands, this.gameRules, this.dataConfiguration);
     }
 
-    public net.minecraft.world.level.LevelSettings withDataPackConfig(net.minecraft.world.level.DataPackConfig datapackCodec) {
-        return new net.minecraft.world.level.LevelSettings(this.levelName, this.gameType, this.hardcore, this.difficulty, this.allowCommands, this.gameRules, datapackCodec);
+    public net.minecraft.world.level.LevelSettings withDataConfiguration(net.minecraft.world.level.WorldDataConfiguration $$0) {
+        return new net.minecraft.world.level.LevelSettings(this.levelName, this.gameType, this.hardcore, this.difficulty, this.allowCommands, this.gameRules, $$0);
     }
 
     public net.minecraft.world.level.LevelSettings copy() {
-        return new net.minecraft.world.level.LevelSettings(this.levelName, this.gameType, this.hardcore, this.difficulty, this.allowCommands, this.gameRules.copy(), this.dataPackConfig);
+        return new net.minecraft.world.level.LevelSettings(this.levelName, this.gameType, this.hardcore, this.difficulty, this.allowCommands, this.gameRules.copy(), this.dataConfiguration);
     }
 }
 