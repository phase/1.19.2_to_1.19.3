--- net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette.java
+++ net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette.java
@@ -8,17 +8,17 @@
     public java.util.List<net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo> blocks;
     public java.util.Map<net.minecraft.world.level.block.Block, java.util.List<net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo>> cache;
 
-    public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$Palette(java.util.List<net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo> blocks) {
+    public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$Palette(java.util.List<net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo> $$0) {
         this.cache = com.google.common.collect.Maps.newHashMap();
-        this.blocks = blocks;
+        this.blocks = $$0;
     }
 
     public java.util.List<net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo> blocks() {
         return this.blocks;
     }
 
-    public java.util.List<net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo> blocks(net.minecraft.world.level.block.Block block) {
-        return (java.util.List)this.cache.computeIfAbsent((java.lang.Object)block, $$0 -> (java.util.List)this.blocks.stream().filter($$1 -> $$1.state.is($$0)).collect(java.util.stream.Collectors.toList()));
+    public java.util.List<net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo> blocks(net.minecraft.world.level.block.Block $$02) {
+        return (java.util.List)this.cache.computeIfAbsent((java.lang.Object)$$02, $$0 -> (java.util.List)this.blocks.stream().filter($$1 -> $$1.state.is($$0)).collect(java.util.stream.Collectors.toList()));
     }
 }
 