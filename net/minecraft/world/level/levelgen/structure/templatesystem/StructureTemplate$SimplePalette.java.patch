--- net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette.java
+++ net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette.java
@@ -14,27 +14,27 @@
         this.ids = new net.minecraft.core.IdMapper(16);
     }
 
-    public int idFor(net.minecraft.world.level.block.state.BlockState state) {
-        int n = this.ids.getId((java.lang.Object)state);
-        if (n == -1) {
-            n = this.lastId++;
-            this.ids.addMapping((java.lang.Object)state, n);
+    public int idFor(net.minecraft.world.level.block.state.BlockState $$0) {
+        int $$1 = this.ids.getId((java.lang.Object)$$0);
+        if ($$1 == -1) {
+            $$1 = this.lastId++;
+            this.ids.addMapping((java.lang.Object)$$0, $$1);
         }
-        return n;
+        return $$1;
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState stateFor(int id) {
-        net.minecraft.world.level.block.state.BlockState blockState = (net.minecraft.world.level.block.state.BlockState)this.ids.byId(id);
-        return blockState == null ? DEFAULT_BLOCK_STATE : blockState;
+    public net.minecraft.world.level.block.state.BlockState stateFor(int $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = (net.minecraft.world.level.block.state.BlockState)this.ids.byId($$0);
+        return $$1 == null ? DEFAULT_BLOCK_STATE : $$1;
     }
 
     public java.util.Iterator<net.minecraft.world.level.block.state.BlockState> iterator() {
         return this.ids.iterator();
     }
 
-    public void addMapping(net.minecraft.world.level.block.state.BlockState state, int id) {
-        this.ids.addMapping((java.lang.Object)state, id);
+    public void addMapping(net.minecraft.world.level.block.state.BlockState $$0, int $$1) {
+        this.ids.addMapping((java.lang.Object)$$0, $$1);
     }
 
     static {