--- net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor.java
+++ net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor.java
@@ -9,19 +9,19 @@
     public static com.mojang.serialization.Codec<net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor> CODEC;
     public com.google.common.collect.ImmutableList<net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule> rules;
 
-    public net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor(java.util.List<? extends net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule> rules) {
-        this.rules = com.google.common.collect.ImmutableList.copyOf(rules);
+    public net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor(java.util.List<? extends net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule> $$0) {
+        this.rules = com.google.common.collect.ImmutableList.copyOf($$0);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo processBlock(net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos blockPos, net.minecraft.core.BlockPos blockPos2, net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo structureBlockInfo, net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo structureBlockInfo2, net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings settings) {
-        net.minecraft.util.RandomSource randomSource = net.minecraft.util.RandomSource.create((long)net.minecraft.util.Mth.getSeed((net.minecraft.core.Vec3i)structureBlockInfo2.pos));
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(structureBlockInfo2.pos);
-        for (net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule processorRule : this.rules) {
-            if (!processorRule.test(structureBlockInfo2.state, blockState, structureBlockInfo.pos, structureBlockInfo2.pos, blockPos2, randomSource)) continue;
-            return new net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo(structureBlockInfo2.pos, processorRule.getOutputState(), processorRule.getOutputTag());
+    public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo processBlock(net.minecraft.world.level.LevelReader $$0, net.minecraft.core.BlockPos $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo $$3, net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo $$4, net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings $$5) {
+        net.minecraft.util.RandomSource $$6 = net.minecraft.util.RandomSource.create((long)net.minecraft.util.Mth.getSeed((net.minecraft.core.Vec3i)$$4.pos));
+        net.minecraft.world.level.block.state.BlockState $$7 = $$0.getBlockState($$4.pos);
+        for (net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule $$8 : this.rules) {
+            if (!$$8.test($$4.state, $$7, $$3.pos, $$4.pos, $$2, $$6)) continue;
+            return new net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo($$4.pos, $$8.getOutputState(), $$8.getOutputTag());
         }
-        return structureBlockInfo2;
+        return $$4;
     }
 
     public net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorType<?> getType() {