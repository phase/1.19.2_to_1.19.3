--- net/minecraft/world/level/levelgen/WorldOptions.java
+++ net/minecraft/world/level/levelgen/WorldOptions.java
@@ -1,0 +1,79 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.world.level.levelgen;
+
+public class net.minecraft.world.level.levelgen.WorldOptions
+ {
+    public static com.mojang.serialization.MapCodec<net.minecraft.world.level.levelgen.WorldOptions> CODEC;
+    public static net.minecraft.world.level.levelgen.WorldOptions DEMO_OPTIONS;
+    public long seed;
+    public boolean generateStructures;
+    public boolean generateBonusChest;
+    public java.util.Optional<java.lang.String> legacyCustomOptions;
+
+    public net.minecraft.world.level.levelgen.WorldOptions(long $$0, boolean $$1, boolean $$2) {
+        this($$0, $$1, $$2, java.util.Optional.empty());
+    }
+
+    public static net.minecraft.world.level.levelgen.WorldOptions defaultWithRandomSeed() {
+        return new net.minecraft.world.level.levelgen.WorldOptions(net.minecraft.util.RandomSource.create().nextLong(), true, false);
+    }
+
+    public net.minecraft.world.level.levelgen.WorldOptions(long $$0, boolean $$1, boolean $$2, java.util.Optional<java.lang.String> $$3) {
+        this.seed = $$0;
+        this.generateStructures = $$1;
+        this.generateBonusChest = $$2;
+        this.legacyCustomOptions = $$3;
+    }
+
+    public long seed() {
+        return this.seed;
+    }
+
+    public boolean generateStructures() {
+        return this.generateStructures;
+    }
+
+    public boolean generateBonusChest() {
+        return this.generateBonusChest;
+    }
+
+    public boolean isOldCustomizedWorld() {
+        return this.legacyCustomOptions.isPresent();
+    }
+
+    public net.minecraft.world.level.levelgen.WorldOptions withBonusChest(boolean $$0) {
+        return new net.minecraft.world.level.levelgen.WorldOptions(this.seed, this.generateStructures, $$0, this.legacyCustomOptions);
+    }
+
+    public net.minecraft.world.level.levelgen.WorldOptions withStructures(boolean $$0) {
+        return new net.minecraft.world.level.levelgen.WorldOptions(this.seed, $$0, this.generateBonusChest, this.legacyCustomOptions);
+    }
+
+    public net.minecraft.world.level.levelgen.WorldOptions withSeed(java.util.OptionalLong $$0) {
+        return new net.minecraft.world.level.levelgen.WorldOptions($$0.orElse(this.seed), this.generateStructures, this.generateBonusChest, this.legacyCustomOptions);
+    }
+
+    public static java.util.OptionalLong parseSeed(java.lang.String $$0) {
+        if (org.apache.commons.lang3.StringUtils.isEmpty((java.lang.CharSequence)($$0 = $$0.trim()))) {
+            return java.util.OptionalLong.empty();
+        }
+        try {
+            return java.util.OptionalLong.of((long)java.lang.Long.parseLong((java.lang.String)$$0));
+        }
+        catch (java.lang.NumberFormatException $$1) {
+            return java.util.OptionalLong.of((long)$$0.hashCode());
+        }
+    }
+
+    public static /* synthetic */ com.mojang.datafixers.kinds.App lambda$static$1(com.mojang.serialization.codecs.RecordCodecBuilder$Instance $$02) {
+        return $$02.group((com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.LONG.fieldOf("seed").stable().forGetter(net.minecraft.world.level.levelgen.WorldOptions::seed), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.BOOL.fieldOf("generate_features").orElse((java.lang.Object)true).stable().forGetter(net.minecraft.world.level.levelgen.WorldOptions::generateStructures), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.BOOL.fieldOf("bonus_chest").orElse((java.lang.Object)false).stable().forGetter(net.minecraft.world.level.levelgen.WorldOptions::generateBonusChest), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.STRING.optionalFieldOf("legacy_custom_options").stable().forGetter($$0 -> $$0.legacyCustomOptions)).apply((com.mojang.datafixers.kinds.Applicative)$$02, $$02.stable(net.minecraft.world.level.levelgen.WorldOptions::new));
+    }
+
+    static {
+        CODEC = com.mojang.serialization.codecs.RecordCodecBuilder.mapCodec($$02 -> $$02.group((com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.LONG.fieldOf("seed").stable().forGetter(net.minecraft.world.level.levelgen.WorldOptions::seed), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.BOOL.fieldOf("generate_features").orElse((java.lang.Object)true).stable().forGetter(net.minecraft.world.level.levelgen.WorldOptions::generateStructures), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.BOOL.fieldOf("bonus_chest").orElse((java.lang.Object)false).stable().forGetter(net.minecraft.world.level.levelgen.WorldOptions::generateBonusChest), (com.mojang.datafixers.kinds.App)com.mojang.serialization.Codec.STRING.optionalFieldOf("legacy_custom_options").stable().forGetter($$0 -> $$0.legacyCustomOptions)).apply((com.mojang.datafixers.kinds.Applicative)$$02, $$02.stable(net.minecraft.world.level.levelgen.WorldOptions::new)));
+        DEMO_OPTIONS = new net.minecraft.world.level.levelgen.WorldOptions((long)"North Carolina".hashCode(), true, true);
+    }
+}
+