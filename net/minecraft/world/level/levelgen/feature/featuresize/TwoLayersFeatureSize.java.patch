--- net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize.java
+++ net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize.java
@@ -11,23 +11,23 @@
     public int lowerSize;
     public int upperSize;
 
-    public net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize(int limit, int lowerSize, int upperSize) {
-        this(limit, lowerSize, upperSize, java.util.OptionalInt.empty());
+    public net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize(int $$0, int $$1, int $$2) {
+        this($$0, $$1, $$2, java.util.OptionalInt.empty());
     }
 
-    public net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize(int limit, int lowerSize, int upperSize, java.util.OptionalInt minClippedHeight) {
-        super(minClippedHeight);
-        this.limit = limit;
-        this.lowerSize = lowerSize;
-        this.upperSize = upperSize;
+    public net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize(int $$0, int $$1, int $$2, java.util.OptionalInt $$3) {
+        super($$3);
+        this.limit = $$0;
+        this.lowerSize = $$1;
+        this.upperSize = $$2;
     }
 
     public net.minecraft.world.level.levelgen.feature.featuresize.FeatureSizeType<?> type() {
         return net.minecraft.world.level.levelgen.feature.featuresize.FeatureSizeType.TWO_LAYERS_FEATURE_SIZE;
     }
 
-    public int getSizeAtHeight(int height, int midpoint) {
-        return midpoint < this.limit ? this.lowerSize : this.upperSize;
+    public int getSizeAtHeight(int $$0, int $$1) {
+        return $$1 < this.limit ? this.lowerSize : this.upperSize;
     }
 
     public static /* synthetic */ com.mojang.datafixers.kinds.App lambda$static$3(com.mojang.serialization.codecs.RecordCodecBuilder$Instance $$02) {