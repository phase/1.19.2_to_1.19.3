--- net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature.java
+++ net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature.java
@@ -38,68 +38,68 @@
         return $$10;
     }
 
-    public boolean placeColumn(net.minecraft.world.level.LevelAccessor level, int seaLevel, net.minecraft.core.BlockPos pos, int distance, int reach) {
-        boolean bl = false;
-block0:        for (net.minecraft.core.BlockPos blockPos : net.minecraft.core.BlockPos.betweenClosed((int)(pos.getX() - reach), (int)pos.getY(), (int)(pos.getZ() - reach), (int)(pos.getX() + reach), (int)pos.getY(), (int)(pos.getZ() + reach))) {
-            net.minecraft.core.BlockPos blockPos2;
-            int n = blockPos.distManhattan((net.minecraft.core.Vec3i)pos);
-            net.minecraft.core.BlockPos blockPos3 = blockPos2 = net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.isAirOrLavaOcean((net.minecraft.world.level.LevelAccessor)level, (int)seaLevel, (net.minecraft.core.BlockPos)blockPos) ? net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.findSurface((net.minecraft.world.level.LevelAccessor)level, (int)seaLevel, (net.minecraft.core.BlockPos$MutableBlockPos)blockPos.mutable(), (int)n) : net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.findAir((net.minecraft.world.level.LevelAccessor)level, (net.minecraft.core.BlockPos$MutableBlockPos)blockPos.mutable(), (int)n);
-            if (blockPos2 == null) continue;
-            net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = blockPos2.mutable();
-            for (int i = distance - n / 2; i >= 0; --i) {
-                if (net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.isAirOrLavaOcean((net.minecraft.world.level.LevelAccessor)level, (int)seaLevel, (net.minecraft.core.BlockPos)mutableBlockPos)) {
-                    this.setBlock((net.minecraft.world.level.LevelWriter)level, (net.minecraft.core.BlockPos)mutableBlockPos, net.minecraft.world.level.block.Blocks.BASALT.defaultBlockState());
-                    mutableBlockPos.move(net.minecraft.core.Direction.UP);
-                    bl = true;
+    public boolean placeColumn(net.minecraft.world.level.LevelAccessor $$0, int $$1, net.minecraft.core.BlockPos $$2, int $$3, int $$4) {
+        boolean $$5 = false;
+block0:        for (net.minecraft.core.BlockPos $$6 : net.minecraft.core.BlockPos.betweenClosed((int)($$2.getX() - $$4), (int)$$2.getY(), (int)($$2.getZ() - $$4), (int)($$2.getX() + $$4), (int)$$2.getY(), (int)($$2.getZ() + $$4))) {
+            net.minecraft.core.BlockPos $$8;
+            int $$7 = $$6.distManhattan((net.minecraft.core.Vec3i)$$2);
+            net.minecraft.core.BlockPos blockPos = $$8 = net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.isAirOrLavaOcean((net.minecraft.world.level.LevelAccessor)$$0, (int)$$1, (net.minecraft.core.BlockPos)$$6) ? net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.findSurface((net.minecraft.world.level.LevelAccessor)$$0, (int)$$1, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.mutable(), (int)$$7) : net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.findAir((net.minecraft.world.level.LevelAccessor)$$0, (net.minecraft.core.BlockPos$MutableBlockPos)$$6.mutable(), (int)$$7);
+            if ($$8 == null) continue;
+            net.minecraft.core.BlockPos$MutableBlockPos $$10 = $$8.mutable();
+            for (int $$9 = $$3 - $$7 / 2; $$9 >= 0; --$$9) {
+                if (net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.isAirOrLavaOcean((net.minecraft.world.level.LevelAccessor)$$0, (int)$$1, (net.minecraft.core.BlockPos)$$10)) {
+                    this.setBlock((net.minecraft.world.level.LevelWriter)$$0, (net.minecraft.core.BlockPos)$$10, net.minecraft.world.level.block.Blocks.BASALT.defaultBlockState());
+                    $$10.move(net.minecraft.core.Direction.UP);
+                    $$5 = true;
                     continue;
                 }
-                if (!level.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos).is(net.minecraft.world.level.block.Blocks.BASALT)) continue block0;
-                mutableBlockPos.move(net.minecraft.core.Direction.UP);
+                if (!$$0.getBlockState((net.minecraft.core.BlockPos)$$10).is(net.minecraft.world.level.block.Blocks.BASALT)) continue block0;
+                $$10.move(net.minecraft.core.Direction.UP);
             }
         }
-        return bl;
+        return $$5;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.core.BlockPos findSurface(net.minecraft.world.level.LevelAccessor level, int seaLevel, net.minecraft.core.BlockPos$MutableBlockPos pos, int distance) {
-        while (pos.getY() > level.getMinBuildHeight() + 1 && distance > 0) {
-            --distance;
-            if (net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.canPlaceAt((net.minecraft.world.level.LevelAccessor)level, (int)seaLevel, (net.minecraft.core.BlockPos$MutableBlockPos)pos)) {
-                return pos;
+    public static net.minecraft.core.BlockPos findSurface(net.minecraft.world.level.LevelAccessor $$0, int $$1, net.minecraft.core.BlockPos$MutableBlockPos $$2, int $$3) {
+        while ($$2.getY() > $$0.getMinBuildHeight() + 1 && $$3 > 0) {
+            --$$3;
+            if (net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.canPlaceAt((net.minecraft.world.level.LevelAccessor)$$0, (int)$$1, (net.minecraft.core.BlockPos$MutableBlockPos)$$2)) {
+                return $$2;
             }
-            pos.move(net.minecraft.core.Direction.DOWN);
+            $$2.move(net.minecraft.core.Direction.DOWN);
         }
         return null;
     }
 
-    public static boolean canPlaceAt(net.minecraft.world.level.LevelAccessor level, int seaLevel, net.minecraft.core.BlockPos$MutableBlockPos pos) {
-        if (net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.isAirOrLavaOcean((net.minecraft.world.level.LevelAccessor)level, (int)seaLevel, (net.minecraft.core.BlockPos)pos)) {
-            net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState((net.minecraft.core.BlockPos)pos.move(net.minecraft.core.Direction.DOWN));
-            pos.move(net.minecraft.core.Direction.UP);
-            return !blockState.isAir() && !CANNOT_PLACE_ON.contains((java.lang.Object)blockState.getBlock());
+    public static boolean canPlaceAt(net.minecraft.world.level.LevelAccessor $$0, int $$1, net.minecraft.core.BlockPos$MutableBlockPos $$2) {
+        if (net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature.isAirOrLavaOcean((net.minecraft.world.level.LevelAccessor)$$0, (int)$$1, (net.minecraft.core.BlockPos)$$2)) {
+            net.minecraft.world.level.block.state.BlockState $$3 = $$0.getBlockState((net.minecraft.core.BlockPos)$$2.move(net.minecraft.core.Direction.DOWN));
+            $$2.move(net.minecraft.core.Direction.UP);
+            return !$$3.isAir() && !CANNOT_PLACE_ON.contains((java.lang.Object)$$3.getBlock());
         }
         return false;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.core.BlockPos findAir(net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos$MutableBlockPos pos, int distance) {
-        while (pos.getY() < level.getMaxBuildHeight() && distance > 0) {
-            --distance;
-            net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState((net.minecraft.core.BlockPos)pos);
-            if (CANNOT_PLACE_ON.contains((java.lang.Object)blockState.getBlock())) {
+    public static net.minecraft.core.BlockPos findAir(net.minecraft.world.level.LevelAccessor $$0, net.minecraft.core.BlockPos$MutableBlockPos $$1, int $$2) {
+        while ($$1.getY() < $$0.getMaxBuildHeight() && $$2 > 0) {
+            --$$2;
+            net.minecraft.world.level.block.state.BlockState $$3 = $$0.getBlockState((net.minecraft.core.BlockPos)$$1);
+            if (CANNOT_PLACE_ON.contains((java.lang.Object)$$3.getBlock())) {
                 return null;
             }
-            if (blockState.isAir()) {
-                return pos;
+            if ($$3.isAir()) {
+                return $$1;
             }
-            pos.move(net.minecraft.core.Direction.UP);
+            $$1.move(net.minecraft.core.Direction.UP);
         }
         return null;
     }
 
-    public static boolean isAirOrLavaOcean(net.minecraft.world.level.LevelAccessor level, int seaLevel, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos);
-        return blockState.isAir() || blockState.is(net.minecraft.world.level.block.Blocks.LAVA) && pos.getY() <= seaLevel;
+    public static boolean isAirOrLavaOcean(net.minecraft.world.level.LevelAccessor $$0, int $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.block.state.BlockState $$3 = $$0.getBlockState($$2);
+        return $$3.isAir() || $$3.is(net.minecraft.world.level.block.Blocks.LAVA) && $$2.getY() <= $$1;
     }
 
     static {