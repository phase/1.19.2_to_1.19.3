--- net/minecraft/world/level/levelgen/RandomState$1.java
+++ net/minecraft/world/level/levelgen/RandomState$1.java
@@ -1,0 +1,33 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.world.level.levelgen;
+
+public class net.minecraft.world.level.levelgen.RandomState$1
+implements net.minecraft.world.level.levelgen.DensityFunction$Visitor
+ {
+    public java.util.Map<net.minecraft.world.level.levelgen.DensityFunction, net.minecraft.world.level.levelgen.DensityFunction> wrapped;
+    public /* synthetic */ net.minecraft.world.level.levelgen.RandomState this$0;
+
+    public net.minecraft.world.level.levelgen.RandomState$1(net.minecraft.world.level.levelgen.RandomState $$0) {
+        this.this$0 = $$0;
+        this.wrapped = new java.util.HashMap();
+    }
+
+    public net.minecraft.world.level.levelgen.DensityFunction wrapNew(net.minecraft.world.level.levelgen.DensityFunction $$0) {
+        if ($$0 instanceof net.minecraft.world.level.levelgen.DensityFunctions$HolderHolder) {
+            net.minecraft.world.level.levelgen.DensityFunctions$HolderHolder $$1 = (net.minecraft.world.level.levelgen.DensityFunctions$HolderHolder)$$0;
+            return (net.minecraft.world.level.levelgen.DensityFunction)$$1.function().value();
+        }
+        if ($$0 instanceof net.minecraft.world.level.levelgen.DensityFunctions$Marker) {
+            net.minecraft.world.level.levelgen.DensityFunctions$Marker $$2 = (net.minecraft.world.level.levelgen.DensityFunctions$Marker)$$0;
+            return $$2.wrapped();
+        }
+        return $$0;
+    }
+
+    public net.minecraft.world.level.levelgen.DensityFunction apply(net.minecraft.world.level.levelgen.DensityFunction $$0) {
+        return (net.minecraft.world.level.levelgen.DensityFunction)this.wrapped.computeIfAbsent((java.lang.Object)$$0, arg_0 -> this.wrapNew(arg_0));
+    }
+}
+