--- net/minecraft/world/level/ExplosionDamageCalculator.java
+++ net/minecraft/world/level/ExplosionDamageCalculator.java
@@ -8,14 +8,14 @@
     public net.minecraft.world.level.ExplosionDamageCalculator() {
     }
 
-    public java.util.Optional<java.lang.Float> getBlockExplosionResistance(net.minecraft.world.level.Explosion explosion, net.minecraft.world.level.BlockGetter reader, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.material.FluidState fluid) {
-        if (state.isAir() && fluid.isEmpty()) {
+    public java.util.Optional<java.lang.Float> getBlockExplosionResistance(net.minecraft.world.level.Explosion $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, net.minecraft.world.level.material.FluidState $$4) {
+        if ($$3.isAir() && $$4.isEmpty()) {
             return java.util.Optional.empty();
         }
-        return java.util.Optional.of((java.lang.Object)java.lang.Float.valueOf((float)java.lang.Math.max((float)state.getBlock().getExplosionResistance(), (float)fluid.getExplosionResistance())));
+        return java.util.Optional.of((java.lang.Object)java.lang.Float.valueOf((float)java.lang.Math.max((float)$$3.getBlock().getExplosionResistance(), (float)$$4.getExplosionResistance())));
     }
 
-    public boolean shouldBlockExplode(net.minecraft.world.level.Explosion explosion, net.minecraft.world.level.BlockGetter reader, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, float power) {
+    public boolean shouldBlockExplode(net.minecraft.world.level.Explosion $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, float $$4) {
         return true;
     }
 }