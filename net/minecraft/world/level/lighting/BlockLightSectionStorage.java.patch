--- net/minecraft/world/level/lighting/BlockLightSectionStorage.java
+++ net/minecraft/world/level/lighting/BlockLightSectionStorage.java
@@ -10,13 +10,13 @@
         super(net.minecraft.world.level.LightLayer.BLOCK, $$0, (net.minecraft.world.level.lighting.DataLayerStorageMap)new net.minecraft.world.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap(new it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap()));
     }
 
-    public int getLightValue(long levelPos) {
-        long l = net.minecraft.core.SectionPos.blockToSection((long)levelPos);
-        net.minecraft.world.level.chunk.DataLayer dataLayer = this.getDataLayer(l, false);
-        if (dataLayer == null) {
+    public int getLightValue(long $$0) {
+        long $$1 = net.minecraft.core.SectionPos.blockToSection((long)$$0);
+        net.minecraft.world.level.chunk.DataLayer $$2 = this.getDataLayer($$1, false);
+        if ($$2 == null) {
             return 0;
         }
-        return dataLayer.get(net.minecraft.core.SectionPos.sectionRelative((int)net.minecraft.core.BlockPos.getX((long)levelPos)), net.minecraft.core.SectionPos.sectionRelative((int)net.minecraft.core.BlockPos.getY((long)levelPos)), net.minecraft.core.SectionPos.sectionRelative((int)net.minecraft.core.BlockPos.getZ((long)levelPos)));
+        return $$2.get(net.minecraft.core.SectionPos.sectionRelative((int)net.minecraft.core.BlockPos.getX((long)$$0)), net.minecraft.core.SectionPos.sectionRelative((int)net.minecraft.core.BlockPos.getY((long)$$0)), net.minecraft.core.SectionPos.sectionRelative((int)net.minecraft.core.BlockPos.getZ((long)$$0)));
     }
 }
 