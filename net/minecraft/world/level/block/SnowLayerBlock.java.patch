--- net/minecraft/world/level/block/SnowLayerBlock.java
+++ net/minecraft/world/level/block/SnowLayerBlock.java
@@ -16,10 +16,10 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)LAYERS, (java.lang.Comparable)java.lang.Integer.valueOf((int)1)));
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
-        switch (net.minecraft.world.level.block.SnowLayerBlock$1.$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType[type.ordinal()]) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
+        switch (net.minecraft.world.level.block.SnowLayerBlock$1.$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType[$$3.ordinal()]) {
             case 1: {
-                return (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS) < 5;
+                return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS) < 5;
             }
             case 2: {
                 return false;
@@ -31,23 +31,23 @@
         return false;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return SHAPE_BY_LAYER[(java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS)];
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return SHAPE_BY_LAYER[(java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS)];
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return SHAPE_BY_LAYER[(java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS) - 1];
+    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return SHAPE_BY_LAYER[(java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS) - 1];
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getBlockSupportShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter reader, net.minecraft.core.BlockPos pos) {
-        return SHAPE_BY_LAYER[(java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS)];
+    public net.minecraft.world.phys.shapes.VoxelShape getBlockSupportShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
+        return SHAPE_BY_LAYER[(java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS)];
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getVisualShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter reader, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return SHAPE_BY_LAYER[(java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS)];
+    public net.minecraft.world.phys.shapes.VoxelShape getVisualShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return SHAPE_BY_LAYER[(java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS)];
     }
 
-    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState state) {
+    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState $$0) {
         return true;
     }
 
@@ -55,22 +55,22 @@
         return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS) == 8 ? 0.2f : 1.0f;
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.below());
-        if (blockState.is(net.minecraft.tags.BlockTags.SNOW_LAYER_CANNOT_SURVIVE_ON)) {
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.block.state.BlockState $$3 = $$1.getBlockState($$2.below());
+        if ($$3.is(net.minecraft.tags.BlockTags.SNOW_LAYER_CANNOT_SURVIVE_ON)) {
             return false;
         }
-        if (blockState.is(net.minecraft.tags.BlockTags.SNOW_LAYER_CAN_SURVIVE_ON)) {
+        if ($$3.is(net.minecraft.tags.BlockTags.SNOW_LAYER_CAN_SURVIVE_ON)) {
             return true;
         }
-        return net.minecraft.world.level.block.Block.isFaceFull((net.minecraft.world.phys.shapes.VoxelShape)blockState.getCollisionShape((net.minecraft.world.level.BlockGetter)level, pos.below()), (net.minecraft.core.Direction)net.minecraft.core.Direction.UP) || blockState.is((net.minecraft.world.level.block.Block)this) && (java.lang.Integer)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS) == 8;
+        return net.minecraft.world.level.block.Block.isFaceFull((net.minecraft.world.phys.shapes.VoxelShape)$$3.getCollisionShape((net.minecraft.world.level.BlockGetter)$$1, $$2.below()), (net.minecraft.core.Direction)net.minecraft.core.Direction.UP) || $$3.is((net.minecraft.world.level.block.Block)this) && (java.lang.Integer)$$3.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS) == 8;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (!state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (!$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
             return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
     public void randomTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -80,29 +80,29 @@
         }
     }
 
-    public boolean canBeReplaced(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.item.context.BlockPlaceContext useContext) {
-        int n = (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS);
-        if (useContext.getItemInHand().is(this.asItem()) && n < 8) {
-            if (useContext.replacingClickedOnBlock()) {
-                return useContext.getClickedFace() == net.minecraft.core.Direction.UP;
+    public boolean canBeReplaced(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.item.context.BlockPlaceContext $$1) {
+        int $$2 = (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS);
+        if ($$1.getItemInHand().is(this.asItem()) && $$2 < 8) {
+            if ($$1.replacingClickedOnBlock()) {
+                return $$1.getClickedFace() == net.minecraft.core.Direction.UP;
             }
             return true;
         }
-        return n == 1;
+        return $$2 == 1;
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.block.state.BlockState blockState = context.getLevel().getBlockState(context.getClickedPos());
-        if (blockState.is((net.minecraft.world.level.block.Block)this)) {
-            int n = (java.lang.Integer)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS);
-            return (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)LAYERS, (java.lang.Comparable)java.lang.Integer.valueOf((int)java.lang.Math.min((int)8, (int)(n + 1))));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = $$0.getLevel().getBlockState($$0.getClickedPos());
+        if ($$1.is((net.minecraft.world.level.block.Block)this)) {
+            int $$2 = (java.lang.Integer)$$1.getValue((net.minecraft.world.level.block.state.properties.Property)LAYERS);
+            return (net.minecraft.world.level.block.state.BlockState)$$1.setValue((net.minecraft.world.level.block.state.properties.Property)LAYERS, (java.lang.Comparable)java.lang.Integer.valueOf((int)java.lang.Math.min((int)8, (int)($$2 + 1))));
         }
-        return super.getStateForPlacement(context);
+        return super.getStateForPlacement($$0);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{LAYERS});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{LAYERS});
     }
 
     static {