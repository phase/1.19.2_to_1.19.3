--- net/minecraft/world/level/block/WallBannerBlock.java
+++ net/minecraft/world/level/block/WallBannerBlock.java
@@ -18,44 +18,44 @@
         return this.asItem().getDescriptionId();
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        return level.getBlockState(pos.relative(((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite())).getMaterial().isSolid();
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        return $$1.getBlockState($$2.relative(((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite())).getMaterial().isSolid();
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (facing == ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite() && !state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if ($$1 == ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite() && !$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
             return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return (net.minecraft.world.phys.shapes.VoxelShape)SHAPES.get((java.lang.Object)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING));
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return (net.minecraft.world.phys.shapes.VoxelShape)SHAPES.get((java.lang.Object)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING));
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.core.Direction[] directionArray;
-        net.minecraft.world.level.block.state.BlockState blockState = this.defaultBlockState();
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        for (net.minecraft.core.Direction direction : directionArray = context.getNearestLookingDirections()) {
-            net.minecraft.core.Direction direction2;
-            if (!direction.getAxis().isHorizontal() || !(blockState = (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)(direction2 = direction.getOpposite()))).canSurvive((net.minecraft.world.level.LevelReader)level, blockPos)) continue;
-            return blockState;
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.core.Direction[] $$4;
+        net.minecraft.world.level.block.state.BlockState $$1 = this.defaultBlockState();
+        net.minecraft.world.level.Level $$2 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$3 = $$0.getClickedPos();
+        for (net.minecraft.core.Direction $$5 : $$4 = $$0.getNearestLookingDirections()) {
+            net.minecraft.core.Direction $$6;
+            if (!$$5.getAxis().isHorizontal() || !($$1 = (net.minecraft.world.level.block.state.BlockState)$$1.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)($$6 = $$5.getOpposite()))).canSurvive((net.minecraft.world.level.LevelReader)$$2, $$3)) continue;
+            return $$1;
         }
         return null;
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rotation) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)rotation.rotate((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$1.rotate((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return state.rotate(mirror.getRotation((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return $$0.rotate($$1.getRotation((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING});
     }
 
     static {