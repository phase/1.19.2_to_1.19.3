--- net/minecraft/world/level/block/VineBlock.java
+++ net/minecraft/world/level/block/VineBlock.java
@@ -26,69 +26,69 @@
         this.shapesCache = com.google.common.collect.ImmutableMap.copyOf((java.util.Map)((java.util.Map)this.stateDefinition.getPossibleStates().stream().collect(java.util.stream.Collectors.toMap((java.util.function.Function)java.util.function.Function.identity(), net.minecraft.world.level.block.VineBlock::calculateShape))));
     }
 
-    public static net.minecraft.world.phys.shapes.VoxelShape calculateShape(net.minecraft.world.level.block.state.BlockState state) {
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape = net.minecraft.world.phys.shapes.Shapes.empty();
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)UP)).booleanValue()) {
-            voxelShape = UP_AABB;
+    public static net.minecraft.world.phys.shapes.VoxelShape calculateShape(net.minecraft.world.level.block.state.BlockState $$0) {
+        net.minecraft.world.phys.shapes.VoxelShape $$1 = net.minecraft.world.phys.shapes.Shapes.empty();
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)UP)).booleanValue()) {
+            $$1 = UP_AABB;
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)).booleanValue()) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)NORTH_AABB);
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)).booleanValue()) {
+            $$1 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$1, (net.minecraft.world.phys.shapes.VoxelShape)NORTH_AABB);
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)).booleanValue()) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)SOUTH_AABB);
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)).booleanValue()) {
+            $$1 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$1, (net.minecraft.world.phys.shapes.VoxelShape)SOUTH_AABB);
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)).booleanValue()) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)EAST_AABB);
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)).booleanValue()) {
+            $$1 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$1, (net.minecraft.world.phys.shapes.VoxelShape)EAST_AABB);
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)).booleanValue()) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)WEST_AABB);
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)).booleanValue()) {
+            $$1 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$1, (net.minecraft.world.phys.shapes.VoxelShape)WEST_AABB);
         }
-        return voxelShape.isEmpty() ? net.minecraft.world.phys.shapes.Shapes.block() : voxelShape;
+        return $$1.isEmpty() ? net.minecraft.world.phys.shapes.Shapes.block() : $$1;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return (net.minecraft.world.phys.shapes.VoxelShape)this.shapesCache.get((java.lang.Object)state);
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return (net.minecraft.world.phys.shapes.VoxelShape)this.shapesCache.get((java.lang.Object)$$0);
     }
 
     public boolean propagatesSkylightDown(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
         return true;
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        return this.hasFaces(this.getUpdatedState(state, (net.minecraft.world.level.BlockGetter)level, pos));
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        return this.hasFaces(this.getUpdatedState($$0, (net.minecraft.world.level.BlockGetter)$$1, $$2));
     }
 
-    public boolean hasFaces(net.minecraft.world.level.block.state.BlockState state) {
-        return this.countFaces(state) > 0;
+    public boolean hasFaces(net.minecraft.world.level.block.state.BlockState $$0) {
+        return this.countFaces($$0) > 0;
     }
 
-    public int countFaces(net.minecraft.world.level.block.state.BlockState state) {
-        int n = 0;
-        for (net.minecraft.world.level.block.state.properties.BooleanProperty booleanProperty : PROPERTY_BY_DIRECTION.values()) {
-            if (!((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)booleanProperty)).booleanValue()) continue;
-            ++n;
+    public int countFaces(net.minecraft.world.level.block.state.BlockState $$0) {
+        int $$1 = 0;
+        for (net.minecraft.world.level.block.state.properties.BooleanProperty $$2 : PROPERTY_BY_DIRECTION.values()) {
+            if (!((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)$$2)).booleanValue()) continue;
+            ++$$1;
         }
-        return n;
+        return $$1;
     }
 
-    public boolean canSupportAtFace(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction direction) {
-        if (direction == net.minecraft.core.Direction.DOWN) {
+    public boolean canSupportAtFace(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.core.Direction $$2) {
+        if ($$2 == net.minecraft.core.Direction.DOWN) {
             return false;
         }
-        net.minecraft.core.BlockPos blockPos = pos.relative(direction);
-        if (net.minecraft.world.level.block.VineBlock.isAcceptableNeighbour((net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos)blockPos, (net.minecraft.core.Direction)direction)) {
+        net.minecraft.core.BlockPos $$3 = $$1.relative($$2);
+        if (net.minecraft.world.level.block.VineBlock.isAcceptableNeighbour((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.BlockPos)$$3, (net.minecraft.core.Direction)$$2)) {
             return true;
         }
-        if (direction.getAxis() != net.minecraft.core.Direction$Axis.Y) {
-            net.minecraft.world.level.block.state.properties.BooleanProperty booleanProperty = (net.minecraft.world.level.block.state.properties.BooleanProperty)PROPERTY_BY_DIRECTION.get((java.lang.Object)direction);
-            net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.above());
-            return blockState.is((net.minecraft.world.level.block.Block)this) && (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)booleanProperty) != false;
+        if ($$2.getAxis() != net.minecraft.core.Direction$Axis.Y) {
+            net.minecraft.world.level.block.state.properties.BooleanProperty $$4 = (net.minecraft.world.level.block.state.properties.BooleanProperty)PROPERTY_BY_DIRECTION.get((java.lang.Object)$$2);
+            net.minecraft.world.level.block.state.BlockState $$5 = $$0.getBlockState($$1.above());
+            return $$5.is((net.minecraft.world.level.block.Block)this) && (java.lang.Boolean)$$5.getValue((net.minecraft.world.level.block.state.properties.Property)$$4) != false;
         }
         return false;
     }
 
-    public static boolean isAcceptableNeighbour(net.minecraft.world.level.BlockGetter blockReader, net.minecraft.core.BlockPos level, net.minecraft.core.Direction neighborPos) {
-        return net.minecraft.world.level.block.MultifaceBlock.canAttachTo((net.minecraft.world.level.BlockGetter)blockReader, (net.minecraft.core.Direction)neighborPos, (net.minecraft.core.BlockPos)level, (net.minecraft.world.level.block.state.BlockState)blockReader.getBlockState(level));
+    public static boolean isAcceptableNeighbour(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.core.Direction $$2) {
+        return net.minecraft.world.level.block.MultifaceBlock.canAttachTo((net.minecraft.world.level.BlockGetter)$$0, (net.minecraft.core.Direction)$$2, (net.minecraft.core.BlockPos)$$1, (net.minecraft.world.level.block.state.BlockState)$$0.getBlockState($$1));
     }
 
     public net.minecraft.world.level.block.state.BlockState getUpdatedState(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
@@ -112,15 +112,15 @@
         return $$0;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (facing == net.minecraft.core.Direction.DOWN) {
-            return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if ($$1 == net.minecraft.core.Direction.DOWN) {
+            return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
         }
-        net.minecraft.world.level.block.state.BlockState blockState = this.getUpdatedState(state, (net.minecraft.world.level.BlockGetter)level, currentPos);
-        if (!this.hasFaces(blockState)) {
+        net.minecraft.world.level.block.state.BlockState $$6 = this.getUpdatedState($$0, (net.minecraft.world.level.BlockGetter)$$3, $$4);
+        if (!this.hasFaces($$6)) {
             return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
         }
-        return blockState;
+        return $$6;
     }
 
     public void randomTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -199,78 +199,78 @@
         return $$1;
     }
 
-    public boolean hasHorizontalConnection(net.minecraft.world.level.block.state.BlockState state) {
-        return (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH) != false || (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST) != false || (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH) != false || (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST) != false;
+    public boolean hasHorizontalConnection(net.minecraft.world.level.block.state.BlockState $$0) {
+        return (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH) != false || (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST) != false || (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH) != false || (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST) != false;
     }
 
-    public boolean canSpread(net.minecraft.world.level.BlockGetter blockReader, net.minecraft.core.BlockPos pos) {
-        int n = 4;
-        java.lang.Iterable iterable = net.minecraft.core.BlockPos.betweenClosed((int)(pos.getX() - 4), (int)(pos.getY() - 1), (int)(pos.getZ() - 4), (int)(pos.getX() + 4), (int)(pos.getY() + 1), (int)(pos.getZ() + 4));
-        int n2 = 5;
-        for (net.minecraft.core.BlockPos blockPos : iterable) {
-            if (!blockReader.getBlockState(blockPos).is((net.minecraft.world.level.block.Block)this) || --n2 > 0) continue;
+    public boolean canSpread(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1) {
+        int $$2 = 4;
+        java.lang.Iterable $$3 = net.minecraft.core.BlockPos.betweenClosed((int)($$1.getX() - 4), (int)($$1.getY() - 1), (int)($$1.getZ() - 4), (int)($$1.getX() + 4), (int)($$1.getY() + 1), (int)($$1.getZ() + 4));
+        int $$4 = 5;
+        for (net.minecraft.core.BlockPos $$5 : $$3) {
+            if (!$$0.getBlockState($$5).is((net.minecraft.world.level.block.Block)this) || --$$4 > 0) continue;
             return false;
         }
         return true;
     }
 
-    public boolean canBeReplaced(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.item.context.BlockPlaceContext useContext) {
-        net.minecraft.world.level.block.state.BlockState blockState = useContext.getLevel().getBlockState(useContext.getClickedPos());
-        if (blockState.is((net.minecraft.world.level.block.Block)this)) {
-            return this.countFaces(blockState) < PROPERTY_BY_DIRECTION.size();
+    public boolean canBeReplaced(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.item.context.BlockPlaceContext $$1) {
+        net.minecraft.world.level.block.state.BlockState $$2 = $$1.getLevel().getBlockState($$1.getClickedPos());
+        if ($$2.is((net.minecraft.world.level.block.Block)this)) {
+            return this.countFaces($$2) < PROPERTY_BY_DIRECTION.size();
         }
-        return super.canBeReplaced(state, useContext);
+        return super.canBeReplaced($$0, $$1);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.block.state.BlockState blockState = context.getLevel().getBlockState(context.getClickedPos());
-        boolean bl = blockState.is((net.minecraft.world.level.block.Block)this);
-        net.minecraft.world.level.block.state.BlockState blockState2 = bl ? blockState : this.defaultBlockState();
-        for (net.minecraft.core.Direction direction : context.getNearestLookingDirections()) {
-            boolean bl2;
-            if (direction == net.minecraft.core.Direction.DOWN) continue;
-            net.minecraft.world.level.block.state.properties.BooleanProperty booleanProperty = net.minecraft.world.level.block.VineBlock.getPropertyForFace((net.minecraft.core.Direction)direction);
-            boolean bl3 = bl2 = bl && (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)booleanProperty) != false;
-            if (bl2 || !this.canSupportAtFace((net.minecraft.world.level.BlockGetter)context.getLevel(), context.getClickedPos(), direction)) continue;
-            return (net.minecraft.world.level.block.state.BlockState)blockState2.setValue((net.minecraft.world.level.block.state.properties.Property)booleanProperty, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = $$0.getLevel().getBlockState($$0.getClickedPos());
+        boolean $$2 = $$1.is((net.minecraft.world.level.block.Block)this);
+        net.minecraft.world.level.block.state.BlockState $$3 = $$2 ? $$1 : this.defaultBlockState();
+        for (net.minecraft.core.Direction $$4 : $$0.getNearestLookingDirections()) {
+            boolean $$6;
+            if ($$4 == net.minecraft.core.Direction.DOWN) continue;
+            net.minecraft.world.level.block.state.properties.BooleanProperty $$5 = net.minecraft.world.level.block.VineBlock.getPropertyForFace((net.minecraft.core.Direction)$$4);
+            boolean bl = $$6 = $$2 && (java.lang.Boolean)$$1.getValue((net.minecraft.world.level.block.state.properties.Property)$$5) != false;
+            if ($$6 || !this.canSupportAtFace((net.minecraft.world.level.BlockGetter)$$0.getLevel(), $$0.getClickedPos(), $$4)) continue;
+            return (net.minecraft.world.level.block.state.BlockState)$$3.setValue((net.minecraft.world.level.block.state.properties.Property)$$5, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
         }
-        return bl ? blockState2 : null;
+        return $$2 ? $$3 : null;
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{UP, NORTH, EAST, SOUTH, WEST});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{UP, NORTH, EAST, SOUTH, WEST});
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rotate) {
-        switch (net.minecraft.world.level.block.VineBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[rotate.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        switch (net.minecraft.world.level.block.VineBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[$$1.ordinal()]) {
             case 1: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
             }
             case 2: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
             }
             case 3: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)));
             }
         }
-        return state;
+        return $$0;
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        switch (net.minecraft.world.level.block.VineBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[mirror.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        switch (net.minecraft.world.level.block.VineBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[$$1.ordinal()]) {
             case 1: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
             }
             case 2: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
             }
         }
-        return super.mirror(state, mirror);
+        return super.mirror($$0, $$1);
     }
 
-    public static net.minecraft.world.level.block.state.properties.BooleanProperty getPropertyForFace(net.minecraft.core.Direction face) {
-        return (net.minecraft.world.level.block.state.properties.BooleanProperty)PROPERTY_BY_DIRECTION.get((java.lang.Object)face);
+    public static net.minecraft.world.level.block.state.properties.BooleanProperty getPropertyForFace(net.minecraft.core.Direction $$0) {
+        return (net.minecraft.world.level.block.state.properties.BooleanProperty)PROPERTY_BY_DIRECTION.get((java.lang.Object)$$0);
     }
 
     public static /* synthetic */ boolean lambda$static$0(java.util.Map$Entry $$0) {