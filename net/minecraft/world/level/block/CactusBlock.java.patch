--- net/minecraft/world/level/block/CactusBlock.java
+++ net/minecraft/world/level/block/CactusBlock.java
@@ -46,41 +46,41 @@
         }
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return COLLISION_SHAPE;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return OUTLINE_SHAPE;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (!state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.block.Block)this, 1);
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (!$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.block.Block)this, 1);
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        for (net.minecraft.core.Direction direction : net.minecraft.core.Direction$Plane.HORIZONTAL) {
-            net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.relative(direction));
-            net.minecraft.world.level.material.Material material = blockState.getMaterial();
-            if (!material.isSolid() && !level.getFluidState(pos.relative(direction)).is(net.minecraft.tags.FluidTags.LAVA)) continue;
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        for (net.minecraft.core.Direction $$3 : net.minecraft.core.Direction$Plane.HORIZONTAL) {
+            net.minecraft.world.level.block.state.BlockState $$4 = $$1.getBlockState($$2.relative($$3));
+            net.minecraft.world.level.material.Material $$5 = $$4.getMaterial();
+            if (!$$5.isSolid() && !$$1.getFluidState($$2.relative($$3)).is(net.minecraft.tags.FluidTags.LAVA)) continue;
             return false;
         }
-        java.util.Iterator iterator = level.getBlockState(pos.below());
-        return (iterator.is(net.minecraft.world.level.block.Blocks.CACTUS) || iterator.is(net.minecraft.world.level.block.Blocks.SAND) || iterator.is(net.minecraft.world.level.block.Blocks.RED_SAND)) && !level.getBlockState(pos.above()).getMaterial().isLiquid();
+        net.minecraft.world.level.block.state.BlockState $$6 = $$1.getBlockState($$2.below());
+        return ($$6.is(net.minecraft.world.level.block.Blocks.CACTUS) || $$6.is(net.minecraft.world.level.block.Blocks.SAND) || $$6.is(net.minecraft.world.level.block.Blocks.RED_SAND)) && !$$1.getBlockState($$2.above()).getMaterial().isLiquid();
     }
 
-    public void entityInside(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.Entity entity) {
-        entity.hurt(net.minecraft.world.damagesource.DamageSource.CACTUS, 1.0f);
+    public void entityInside(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.Entity $$3) {
+        $$3.hurt(net.minecraft.world.damagesource.DamageSource.CACTUS, 1.0f);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE});
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 