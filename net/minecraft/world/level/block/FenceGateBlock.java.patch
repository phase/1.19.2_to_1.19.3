--- net/minecraft/world/level/block/FenceGateBlock.java
+++ net/minecraft/world/level/block/FenceGateBlock.java
@@ -19,109 +19,113 @@
     public static net.minecraft.world.phys.shapes.VoxelShape X_OCCLUSION_SHAPE;
     public static net.minecraft.world.phys.shapes.VoxelShape Z_OCCLUSION_SHAPE_LOW;
     public static net.minecraft.world.phys.shapes.VoxelShape X_OCCLUSION_SHAPE_LOW;
+    public net.minecraft.sounds.SoundEvent closeSound;
+    public net.minecraft.sounds.SoundEvent openSound;
 
-    public net.minecraft.world.level.block.FenceGateBlock(net.minecraft.world.level.block.state.BlockBehaviour$Properties $$0) {
+    public net.minecraft.world.level.block.FenceGateBlock(net.minecraft.world.level.block.state.BlockBehaviour$Properties $$0, net.minecraft.sounds.SoundEvent $$1, net.minecraft.sounds.SoundEvent $$2) {
         super($$0);
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
+        this.closeSound = $$1;
+        this.openSound = $$2;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL)).booleanValue()) {
-            return ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_SHAPE_LOW : Z_SHAPE_LOW;
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL)).booleanValue()) {
+            return ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_SHAPE_LOW : Z_SHAPE_LOW;
         }
-        return ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_SHAPE : Z_SHAPE;
+        return ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_SHAPE : Z_SHAPE;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        net.minecraft.core.Direction$Axis axis = facing.getAxis();
-        if (((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getClockWise().getAxis() == axis) {
-            boolean bl = this.isWall(facingState) || this.isWall(level.getBlockState(currentPos.relative(facing.getOpposite())));
-            return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        net.minecraft.core.Direction$Axis $$6 = $$1.getAxis();
+        if (((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getClockWise().getAxis() == $$6) {
+            boolean $$7 = this.isWall($$2) || this.isWall($$3.getBlockState($$4.relative($$1.getOpposite())));
+            return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$7));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN)).booleanValue()) {
+    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN)).booleanValue()) {
             return net.minecraft.world.phys.shapes.Shapes.empty();
         }
-        return ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.Z ? Z_COLLISION_SHAPE : X_COLLISION_SHAPE;
+        return ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.Z ? Z_COLLISION_SHAPE : X_COLLISION_SHAPE;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getOcclusionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL)).booleanValue()) {
-            return ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_OCCLUSION_SHAPE_LOW : Z_OCCLUSION_SHAPE_LOW;
+    public net.minecraft.world.phys.shapes.VoxelShape getOcclusionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL)).booleanValue()) {
+            return ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_OCCLUSION_SHAPE_LOW : Z_OCCLUSION_SHAPE_LOW;
         }
-        return ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_OCCLUSION_SHAPE : Z_OCCLUSION_SHAPE;
+        return ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == net.minecraft.core.Direction$Axis.X ? X_OCCLUSION_SHAPE : Z_OCCLUSION_SHAPE;
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
-        switch (net.minecraft.world.level.block.FenceGateBlock$1.$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType[type.ordinal()]) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
+        switch (net.minecraft.world.level.block.FenceGateBlock$1.$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType[$$3.ordinal()]) {
             case 1: {
-                return (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN);
+                return (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN);
             }
             case 2: {
                 return false;
             }
             case 3: {
-                return (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN);
+                return (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN);
             }
         }
         return false;
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        boolean bl = level.hasNeighborSignal(blockPos);
-        net.minecraft.core.Direction direction = context.getHorizontalDirection();
-        net.minecraft.core.Direction$Axis axis = direction.getAxis();
-        boolean bl2 = axis == net.minecraft.core.Direction$Axis.Z && (this.isWall(level.getBlockState(blockPos.west())) || this.isWall(level.getBlockState(blockPos.east()))) || axis == net.minecraft.core.Direction$Axis.X && (this.isWall(level.getBlockState(blockPos.north())) || this.isWall(level.getBlockState(blockPos.south())));
-        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)direction)).setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl))).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl))).setValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl2));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.Level $$1 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$2 = $$0.getClickedPos();
+        boolean $$3 = $$1.hasNeighborSignal($$2);
+        net.minecraft.core.Direction $$4 = $$0.getHorizontalDirection();
+        net.minecraft.core.Direction$Axis $$5 = $$4.getAxis();
+        boolean $$6 = $$5 == net.minecraft.core.Direction$Axis.Z && (this.isWall($$1.getBlockState($$2.west())) || this.isWall($$1.getBlockState($$2.east()))) || $$5 == net.minecraft.core.Direction$Axis.X && (this.isWall($$1.getBlockState($$2.north())) || this.isWall($$1.getBlockState($$2.south())));
+        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$4)).setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$3))).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$3))).setValue((net.minecraft.world.level.block.state.properties.Property)IN_WALL, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$6));
     }
 
-    public boolean isWall(net.minecraft.world.level.block.state.BlockState state) {
-        return state.is(net.minecraft.tags.BlockTags.WALLS);
+    public boolean isWall(net.minecraft.world.level.block.state.BlockState $$0) {
+        return $$0.is(net.minecraft.tags.BlockTags.WALLS);
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN)).booleanValue()) {
-            state = (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false));
-            level.setBlock(pos, state, 10);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN)).booleanValue()) {
+            $$0 = (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false));
+            $$1.setBlock($$2, $$0, 10);
         } else {
-            net.minecraft.core.Direction direction = player.getDirection();
-            if (state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) == direction.getOpposite()) {
-                state = (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)direction);
+            net.minecraft.core.Direction $$6 = $$3.getDirection();
+            if ($$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) == $$6.getOpposite()) {
+                $$0 = (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$6);
             }
-            state = (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
-            level.setBlock(pos, state, 10);
+            $$0 = (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true));
+            $$1.setBlock($$2, $$0, 10);
         }
-        boolean bl = (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN);
-        level.levelEvent(player, bl ? 1008 : 1014, pos, 0);
-        level.gameEvent((net.minecraft.world.entity.Entity)player, bl ? net.minecraft.world.level.gameevent.GameEvent.BLOCK_OPEN : net.minecraft.world.level.gameevent.GameEvent.BLOCK_CLOSE, pos);
-        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+        boolean $$7 = (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN);
+        $$1.playSound($$3, $$2, $$7 ? this.openSound : this.closeSound, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, $$1.getRandom().nextFloat() * 0.1f + 0.9f);
+        $$1.gameEvent((net.minecraft.world.entity.Entity)$$3, $$7 ? net.minecraft.world.level.gameevent.GameEvent.BLOCK_OPEN : net.minecraft.world.level.gameevent.GameEvent.BLOCK_CLOSE, $$2);
+        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$1.isClientSide);
     }
 
-    public void neighborChanged(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.Block block, net.minecraft.core.BlockPos fromPos, boolean isMoving) {
-        if (level.isClientSide) {
+    public void neighborChanged(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.Block $$3, net.minecraft.core.BlockPos $$4, boolean $$5) {
+        if ($$1.isClientSide) {
             return;
         }
-        boolean bl = level.hasNeighborSignal(pos);
-        if ((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != bl) {
-            level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl))).setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl)), 2);
-            if ((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN) != bl) {
-                level.levelEvent(null, bl ? 1008 : 1014, pos, 0);
-                level.gameEvent(null, bl ? net.minecraft.world.level.gameevent.GameEvent.BLOCK_OPEN : net.minecraft.world.level.gameevent.GameEvent.BLOCK_CLOSE, pos);
+        boolean $$6 = $$1.hasNeighborSignal($$2);
+        if ((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != $$6) {
+            $$1.setBlock($$2, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$6))).setValue((net.minecraft.world.level.block.state.properties.Property)OPEN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$6)), 2);
+            if ((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)OPEN) != $$6) {
+                $$1.playSound(null, $$2, $$6 ? this.openSound : this.closeSound, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, $$1.getRandom().nextFloat() * 0.1f + 0.9f);
+                $$1.gameEvent(null, $$6 ? net.minecraft.world.level.gameevent.GameEvent.BLOCK_OPEN : net.minecraft.world.level.gameevent.GameEvent.BLOCK_CLOSE, $$2);
             }
         }
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, OPEN, POWERED, IN_WALL});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, OPEN, POWERED, IN_WALL});
     }
 
-    public static boolean connectsToDirection(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction direction) {
-        return ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == direction.getClockWise().getAxis();
+    public static boolean connectsToDirection(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1) {
+        return ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() == $$1.getClockWise().getAxis();
     }
 
     static {