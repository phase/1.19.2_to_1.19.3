--- net/minecraft/world/level/block/state/properties/EnumProperty.java
+++ net/minecraft/world/level/block/state/properties/EnumProperty.java
@@ -9,16 +9,16 @@
     public com.google.common.collect.ImmutableSet<T> values;
     public java.util.Map<java.lang.String, T> names;
 
-    public net.minecraft.world.level.block.state.properties.EnumProperty(java.lang.String name, java.lang.Class<T> clazz, java.util.Collection<T> values) {
-        super(name, clazz);
+    public net.minecraft.world.level.block.state.properties.EnumProperty(java.lang.String $$0, java.lang.Class<T> $$1, java.util.Collection<T> $$2) {
+        super($$0, $$1);
         this.names = com.google.common.collect.Maps.newHashMap();
-        this.values = com.google.common.collect.ImmutableSet.copyOf(values);
-        for (java.lang.Enum enum_ : values) {
-            java.lang.String string = ((net.minecraft.util.StringRepresentable)enum_).getSerializedName();
-            if (this.names.containsKey((java.lang.Object)string)) {
-                throw new java.lang.IllegalArgumentException("Multiple values have the same name '" + string + "'");
+        this.values = com.google.common.collect.ImmutableSet.copyOf($$2);
+        for (java.lang.Enum $$3 : $$2) {
+            java.lang.String $$4 = ((net.minecraft.util.StringRepresentable)$$3).getSerializedName();
+            if (this.names.containsKey((java.lang.Object)$$4)) {
+                throw new java.lang.IllegalArgumentException("Multiple values have the same name '" + $$4 + "'");
             }
-            this.names.put((java.lang.Object)string, (java.lang.Object)enum_);
+            this.names.put((java.lang.Object)$$4, (java.lang.Object)$$3);
         }
     }
 
@@ -26,21 +26,21 @@
         return this.values;
     }
 
-    public java.util.Optional<T> getValue(java.lang.String value) {
-        return java.util.Optional.ofNullable((java.lang.Object)((java.lang.Enum)this.names.get((java.lang.Object)value)));
+    public java.util.Optional<T> getValue(java.lang.String $$0) {
+        return java.util.Optional.ofNullable((java.lang.Object)((java.lang.Enum)this.names.get((java.lang.Object)$$0)));
     }
 
-    public java.lang.String getName(T value) {
-        return ((net.minecraft.util.StringRepresentable)value).getSerializedName();
+    public java.lang.String getName(T $$0) {
+        return ((net.minecraft.util.StringRepresentable)$$0).getSerializedName();
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        if (other instanceof net.minecraft.world.level.block.state.properties.EnumProperty && super.equals(other)) {
-            net.minecraft.world.level.block.state.properties.EnumProperty enumProperty = (net.minecraft.world.level.block.state.properties.EnumProperty)other;
-            return this.values.equals((java.lang.Object)enumProperty.values) && this.names.equals((java.lang.Object)enumProperty.names);
+        if ($$0 instanceof net.minecraft.world.level.block.state.properties.EnumProperty && super.equals($$0)) {
+            net.minecraft.world.level.block.state.properties.EnumProperty $$1 = (net.minecraft.world.level.block.state.properties.EnumProperty)$$0;
+            return this.values.equals((java.lang.Object)$$1.values) && this.names.equals((java.lang.Object)$$1.names);
         }
         return false;
     }
@@ -52,20 +52,20 @@
         return $$0;
     }
 
-    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String name, java.lang.Class<T> clazz) {
-        return net.minecraft.world.level.block.state.properties.EnumProperty.create((java.lang.String)name, clazz, $$0 -> true);
+    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String $$02, java.lang.Class<T> $$1) {
+        return net.minecraft.world.level.block.state.properties.EnumProperty.create((java.lang.String)$$02, $$1, $$0 -> true);
     }
 
-    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String name, java.lang.Class<T> clazz, java.util.function.Predicate<T> filter) {
-        return net.minecraft.world.level.block.state.properties.EnumProperty.create((java.lang.String)name, clazz, (java.util.Collection)((java.util.Collection)java.util.Arrays.stream((java.lang.Object[])((java.lang.Enum[])clazz.getEnumConstants())).filter(filter).collect(java.util.stream.Collectors.toList())));
+    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String $$0, java.lang.Class<T> $$1, java.util.function.Predicate<T> $$2) {
+        return net.minecraft.world.level.block.state.properties.EnumProperty.create((java.lang.String)$$0, $$1, (java.util.Collection)((java.util.Collection)java.util.Arrays.stream((java.lang.Object[])((java.lang.Enum[])$$1.getEnumConstants())).filter($$2).collect(java.util.stream.Collectors.toList())));
     }
 
-    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String name, java.lang.Class<T> clazz, T ... values) {
-        return net.minecraft.world.level.block.state.properties.EnumProperty.create((java.lang.String)name, clazz, (java.util.Collection)com.google.common.collect.Lists.newArrayList((java.lang.Object[])values));
+    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String $$0, java.lang.Class<T> $$1, T ... $$2) {
+        return net.minecraft.world.level.block.state.properties.EnumProperty.create((java.lang.String)$$0, $$1, (java.util.Collection)com.google.common.collect.Lists.newArrayList((java.lang.Object[])$$2));
     }
 
-    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String name, java.lang.Class<T> clazz, java.util.Collection<T> values) {
-        return new net.minecraft.world.level.block.state.properties.EnumProperty(name, clazz, values);
+    public static <T extends java.lang.Enum<T>> net.minecraft.world.level.block.state.properties.EnumProperty<T> create(java.lang.String $$0, java.lang.Class<T> $$1, java.util.Collection<T> $$2) {
+        return new net.minecraft.world.level.block.state.properties.EnumProperty($$0, $$1, $$2);
     }
 }
 