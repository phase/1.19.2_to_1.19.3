--- net/minecraft/world/level/block/TntBlock.java
+++ net/minecraft/world/level/block/TntBlock.java
@@ -13,90 +13,90 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)UNSTABLE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
     }
 
-    public void onPlace(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState oldState, boolean isMoving) {
-        if (oldState.is(state.getBlock())) {
+    public void onPlace(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$3.is($$0.getBlock())) {
             return;
         }
-        if (level.hasNeighborSignal(pos)) {
-            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos);
-            level.removeBlock(pos, false);
+        if ($$1.hasNeighborSignal($$2)) {
+            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)$$1, (net.minecraft.core.BlockPos)$$2);
+            $$1.removeBlock($$2, false);
         }
     }
 
-    public void neighborChanged(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.Block block, net.minecraft.core.BlockPos fromPos, boolean isMoving) {
-        if (level.hasNeighborSignal(pos)) {
-            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos);
-            level.removeBlock(pos, false);
+    public void neighborChanged(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.Block $$3, net.minecraft.core.BlockPos $$4, boolean $$5) {
+        if ($$1.hasNeighborSignal($$2)) {
+            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)$$1, (net.minecraft.core.BlockPos)$$2);
+            $$1.removeBlock($$2, false);
         }
     }
 
-    public void playerWillDestroy(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.entity.player.Player player) {
-        if (!level.isClientSide() && !player.isCreative() && ((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)UNSTABLE)).booleanValue()) {
-            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos);
+    public void playerWillDestroy(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.entity.player.Player $$3) {
+        if (!$$0.isClientSide() && !$$3.isCreative() && ((java.lang.Boolean)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)UNSTABLE)).booleanValue()) {
+            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$1);
         }
-        super.playerWillDestroy(level, pos, state, player);
+        super.playerWillDestroy($$0, $$1, $$2, $$3);
     }
 
-    public void wasExploded(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.Explosion explosion) {
-        if (level.isClientSide) {
+    public void wasExploded(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.Explosion $$2) {
+        if ($$0.isClientSide) {
             return;
         }
-        net.minecraft.world.entity.item.PrimedTnt primedTnt = new net.minecraft.world.entity.item.PrimedTnt(level, (double)pos.getX() + 0.5, (double)pos.getY(), (double)pos.getZ() + 0.5, explosion.getSourceMob());
-        int n = primedTnt.getFuse();
-        primedTnt.setFuse((int)((short)(level.random.nextInt(n / 4) + n / 8)));
-        level.addFreshEntity((net.minecraft.world.entity.Entity)primedTnt);
+        net.minecraft.world.entity.item.PrimedTnt $$3 = new net.minecraft.world.entity.item.PrimedTnt($$0, (double)$$1.getX() + 0.5, (double)$$1.getY(), (double)$$1.getZ() + 0.5, $$2.getSourceMob());
+        int $$4 = $$3.getFuse();
+        $$3.setFuse((int)((short)($$0.random.nextInt($$4 / 4) + $$4 / 8)));
+        $$0.addFreshEntity((net.minecraft.world.entity.Entity)$$3);
     }
 
-    public static void explode(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos, null);
+    public static void explode(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1) {
+        net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$1, null);
     }
 
-    public static void explode(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, @javax.annotation.Nullable net.minecraft.world.entity.LivingEntity entity) {
-        if (level.isClientSide) {
+    public static void explode(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, @javax.annotation.Nullable net.minecraft.world.entity.LivingEntity $$2) {
+        if ($$0.isClientSide) {
             return;
         }
-        net.minecraft.world.entity.item.PrimedTnt primedTnt = new net.minecraft.world.entity.item.PrimedTnt(level, (double)pos.getX() + 0.5, (double)pos.getY(), (double)pos.getZ() + 0.5, entity);
-        level.addFreshEntity((net.minecraft.world.entity.Entity)primedTnt);
-        level.playSound(null, primedTnt.getX(), primedTnt.getY(), primedTnt.getZ(), net.minecraft.sounds.SoundEvents.TNT_PRIMED, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
-        level.gameEvent((net.minecraft.world.entity.Entity)entity, net.minecraft.world.level.gameevent.GameEvent.PRIME_FUSE, pos);
+        net.minecraft.world.entity.item.PrimedTnt $$3 = new net.minecraft.world.entity.item.PrimedTnt($$0, (double)$$1.getX() + 0.5, (double)$$1.getY(), (double)$$1.getZ() + 0.5, $$2);
+        $$0.addFreshEntity((net.minecraft.world.entity.Entity)$$3);
+        $$0.playSound(null, $$3.getX(), $$3.getY(), $$3.getZ(), net.minecraft.sounds.SoundEvents.TNT_PRIMED, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
+        $$0.gameEvent((net.minecraft.world.entity.Entity)$$2, net.minecraft.world.level.gameevent.GameEvent.PRIME_FUSE, $$1);
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        if (itemStack.is(net.minecraft.world.item.Items.FLINT_AND_STEEL) || itemStack.is(net.minecraft.world.item.Items.FIRE_CHARGE)) {
-            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.world.entity.LivingEntity)player);
-            level.setBlock(pos, net.minecraft.world.level.block.Blocks.AIR.defaultBlockState(), 11);
-            net.minecraft.world.item.Item item = itemStack.getItem();
-            if (!player.isCreative()) {
-                if (itemStack.is(net.minecraft.world.item.Items.FLINT_AND_STEEL)) {
-                    itemStack.hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)player, $$1 -> $$1.broadcastBreakEvent(hand));
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$12, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        net.minecraft.world.item.ItemStack $$6 = $$3.getItemInHand($$4);
+        if ($$6.is(net.minecraft.world.item.Items.FLINT_AND_STEEL) || $$6.is(net.minecraft.world.item.Items.FIRE_CHARGE)) {
+            net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)$$12, (net.minecraft.core.BlockPos)$$2, (net.minecraft.world.entity.LivingEntity)$$3);
+            $$12.setBlock($$2, net.minecraft.world.level.block.Blocks.AIR.defaultBlockState(), 11);
+            net.minecraft.world.item.Item $$7 = $$6.getItem();
+            if (!$$3.isCreative()) {
+                if ($$6.is(net.minecraft.world.item.Items.FLINT_AND_STEEL)) {
+                    $$6.hurtAndBreak(1, (net.minecraft.world.entity.LivingEntity)$$3, $$1 -> $$1.broadcastBreakEvent($$4));
                 } else {
-                    itemStack.shrink(1);
+                    $$6.shrink(1);
                 }
             }
-            player.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)item));
-            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+            $$3.awardStat(net.minecraft.stats.Stats.ITEM_USED.get((java.lang.Object)$$7));
+            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$12.isClientSide);
         }
-        return super.use(state, level, pos, player, hand, hit);
+        return super.use($$0, $$12, $$2, $$3, $$4, $$5);
     }
 
-    public void onProjectileHit(net.minecraft.world.level.Level level, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.phys.BlockHitResult hit, net.minecraft.world.entity.projectile.Projectile projectile) {
-        if (!level.isClientSide) {
-            net.minecraft.core.BlockPos blockPos = hit.getBlockPos();
-            net.minecraft.world.entity.Entity entity = projectile.getOwner();
-            if (projectile.isOnFire() && projectile.mayInteract(level, blockPos)) {
-                net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)blockPos, (net.minecraft.world.entity.LivingEntity)(entity instanceof net.minecraft.world.entity.LivingEntity ? (net.minecraft.world.entity.LivingEntity)entity : null));
-                level.removeBlock(blockPos, false);
+    public void onProjectileHit(net.minecraft.world.level.Level $$0, net.minecraft.world.level.block.state.BlockState $$1, net.minecraft.world.phys.BlockHitResult $$2, net.minecraft.world.entity.projectile.Projectile $$3) {
+        if (!$$0.isClientSide) {
+            net.minecraft.core.BlockPos $$4 = $$2.getBlockPos();
+            net.minecraft.world.entity.Entity $$5 = $$3.getOwner();
+            if ($$3.isOnFire() && $$3.mayInteract($$0, $$4)) {
+                net.minecraft.world.level.block.TntBlock.explode((net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$4, (net.minecraft.world.entity.LivingEntity)($$5 instanceof net.minecraft.world.entity.LivingEntity ? (net.minecraft.world.entity.LivingEntity)$$5 : null));
+                $$0.removeBlock($$4, false);
             }
         }
     }
 
-    public boolean dropFromExplosion(net.minecraft.world.level.Explosion explosion) {
+    public boolean dropFromExplosion(net.minecraft.world.level.Explosion $$0) {
         return false;
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{UNSTABLE});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{UNSTABLE});
     }
 
     static {