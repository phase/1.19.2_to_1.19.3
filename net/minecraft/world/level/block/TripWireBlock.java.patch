--- net/minecraft/world/level/block/TripWireBlock.java
+++ net/minecraft/world/level/block/TripWireBlock.java
@@ -19,74 +19,74 @@
     public static int RECHECK_PERIOD = 10;
     public net.minecraft.world.level.block.TripWireHookBlock hook;
 
-    public net.minecraft.world.level.block.TripWireBlock(net.minecraft.world.level.block.TripWireHookBlock hook, net.minecraft.world.level.block.state.BlockBehaviour$Properties properties) {
-        super(properties);
+    public net.minecraft.world.level.block.TripWireBlock(net.minecraft.world.level.block.TripWireHookBlock $$0, net.minecraft.world.level.block.state.BlockBehaviour$Properties $$1) {
+        super($$1);
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)ATTACHED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)DISARMED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
-        this.hook = hook;
+        this.hook = $$0;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)ATTACHED) != false ? AABB : NOT_ATTACHED_AABB;
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)ATTACHED) != false ? AABB : NOT_ATTACHED_AABB;
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo(level.getBlockState(blockPos.north()), net.minecraft.core.Direction.NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo(level.getBlockState(blockPos.east()), net.minecraft.core.Direction.EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo(level.getBlockState(blockPos.south()), net.minecraft.core.Direction.SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo(level.getBlockState(blockPos.west()), net.minecraft.core.Direction.WEST)));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.Level $$1 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$2 = $$0.getClickedPos();
+        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo($$1.getBlockState($$2.north()), net.minecraft.core.Direction.NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo($$1.getBlockState($$2.east()), net.minecraft.core.Direction.EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo($$1.getBlockState($$2.south()), net.minecraft.core.Direction.SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo($$1.getBlockState($$2.west()), net.minecraft.core.Direction.WEST)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (facing.getAxis().isHorizontal()) {
-            return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)PROPERTY_BY_DIRECTION.get((java.lang.Object)facing), (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo(facingState, facing)));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if ($$1.getAxis().isHorizontal()) {
+            return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)PROPERTY_BY_DIRECTION.get((java.lang.Object)$$1), (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.shouldConnectTo($$2, $$1)));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public void onPlace(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState oldState, boolean isMoving) {
-        if (oldState.is(state.getBlock())) {
+    public void onPlace(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$3.is($$0.getBlock())) {
             return;
         }
-        this.updateSource(level, pos, state);
+        this.updateSource($$1, $$2, $$0);
     }
 
-    public void onRemove(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState newState, boolean isMoving) {
-        if (isMoving || state.is(newState.getBlock())) {
+    public void onRemove(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$4 || $$0.is($$3.getBlock())) {
             return;
         }
-        this.updateSource(level, pos, (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)));
+        this.updateSource($$1, $$2, (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)));
     }
 
-    public void playerWillDestroy(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.entity.player.Player player) {
-        if (!level.isClientSide && !player.getMainHandItem().isEmpty() && player.getMainHandItem().is(net.minecraft.world.item.Items.SHEARS)) {
-            level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)DISARMED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)), 4);
-            level.gameEvent((net.minecraft.world.entity.Entity)player, net.minecraft.world.level.gameevent.GameEvent.SHEAR, pos);
+    public void playerWillDestroy(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.entity.player.Player $$3) {
+        if (!$$0.isClientSide && !$$3.getMainHandItem().isEmpty() && $$3.getMainHandItem().is(net.minecraft.world.item.Items.SHEARS)) {
+            $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)DISARMED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)), 4);
+            $$0.gameEvent((net.minecraft.world.entity.Entity)$$3, net.minecraft.world.level.gameevent.GameEvent.SHEAR, $$1);
         }
-        super.playerWillDestroy(level, pos, state, player);
+        super.playerWillDestroy($$0, $$1, $$2, $$3);
     }
 
-    public void updateSource(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-block0:        for (net.minecraft.core.Direction direction : new net.minecraft.core.Direction[]{net.minecraft.core.Direction.SOUTH, net.minecraft.core.Direction.WEST}) {
-            for (int i = 1; i < 42; ++i) {
-                net.minecraft.core.BlockPos blockPos = pos.relative(direction, i);
-                net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos);
-                if (blockState.is((net.minecraft.world.level.block.Block)this.hook)) {
-                    if (blockState.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.TripWireHookBlock.FACING) != direction.getOpposite()) continue block0;
-                    this.hook.calculateState(level, blockPos, blockState, false, true, i, state);
+    public void updateSource(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+block0:        for (net.minecraft.core.Direction $$3 : new net.minecraft.core.Direction[]{net.minecraft.core.Direction.SOUTH, net.minecraft.core.Direction.WEST}) {
+            for (int $$4 = 1; $$4 < 42; ++$$4) {
+                net.minecraft.core.BlockPos $$5 = $$1.relative($$3, $$4);
+                net.minecraft.world.level.block.state.BlockState $$6 = $$0.getBlockState($$5);
+                if ($$6.is((net.minecraft.world.level.block.Block)this.hook)) {
+                    if ($$6.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.TripWireHookBlock.FACING) != $$3.getOpposite()) continue block0;
+                    this.hook.calculateState($$0, $$5, $$6, false, true, $$4, $$2);
                     continue block0;
                 }
-                if (!blockState.is((net.minecraft.world.level.block.Block)this)) continue block0;
+                if (!$$6.is((net.minecraft.world.level.block.Block)this)) continue block0;
             }
         }
     }
 
-    public void entityInside(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.Entity entity) {
-        if (level.isClientSide) {
+    public void entityInside(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.Entity $$3) {
+        if ($$1.isClientSide) {
             return;
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
             return;
         }
-        this.checkPressed(level, pos);
+        this.checkPressed($$1, $$2);
     }
 
     public void tick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -96,64 +96,64 @@
         this.checkPressed((net.minecraft.world.level.Level)$$1, $$2);
     }
 
-    public void checkPressed(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos);
-        boolean bl = (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED);
-        boolean bl2 = false;
-        java.util.List list = level.getEntities(null, blockState.getShape((net.minecraft.world.level.BlockGetter)level, pos).bounds().move(pos));
-        if (!list.isEmpty()) {
-            for (net.minecraft.world.entity.Entity entity : list) {
-                if (entity.isIgnoringBlockTriggers()) continue;
-                bl2 = true;
+    public void checkPressed(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1) {
+        net.minecraft.world.level.block.state.BlockState $$2 = $$0.getBlockState($$1);
+        boolean $$3 = (java.lang.Boolean)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED);
+        boolean $$4 = false;
+        java.util.List $$5 = $$0.getEntities(null, $$2.getShape((net.minecraft.world.level.BlockGetter)$$0, $$1).bounds().move($$1));
+        if (!$$5.isEmpty()) {
+            for (net.minecraft.world.entity.Entity $$6 : $$5) {
+                if ($$6.isIgnoringBlockTriggers()) continue;
+                $$4 = true;
                 break;
             }
         }
-        if (bl2 != bl) {
-            blockState = (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl2));
-            level.setBlock(pos, blockState, 3);
-            this.updateSource(level, pos, blockState);
+        if ($$4 != $$3) {
+            $$2 = (net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$4));
+            $$0.setBlock($$1, $$2, 3);
+            this.updateSource($$0, $$1, $$2);
         }
-        if (bl2) {
-            level.scheduleTick(new net.minecraft.core.BlockPos((net.minecraft.core.Vec3i)pos), (net.minecraft.world.level.block.Block)this, 10);
+        if ($$4) {
+            $$0.scheduleTick(new net.minecraft.core.BlockPos((net.minecraft.core.Vec3i)$$1), (net.minecraft.world.level.block.Block)this, 10);
         }
     }
 
-    public boolean shouldConnectTo(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction direction) {
-        if (state.is((net.minecraft.world.level.block.Block)this.hook)) {
-            return state.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.TripWireHookBlock.FACING) == direction.getOpposite();
+    public boolean shouldConnectTo(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1) {
+        if ($$0.is((net.minecraft.world.level.block.Block)this.hook)) {
+            return $$0.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.TripWireHookBlock.FACING) == $$1.getOpposite();
         }
-        return state.is((net.minecraft.world.level.block.Block)this);
+        return $$0.is((net.minecraft.world.level.block.Block)this);
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rot) {
-        switch (net.minecraft.world.level.block.TripWireBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[rot.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        switch (net.minecraft.world.level.block.TripWireBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[$$1.ordinal()]) {
             case 1: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
             }
             case 2: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
             }
             case 3: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)));
             }
         }
-        return state;
+        return $$0;
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        switch (net.minecraft.world.level.block.TripWireBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[mirror.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        switch (net.minecraft.world.level.block.TripWireBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[$$1.ordinal()]) {
             case 1: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
             }
             case 2: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
             }
         }
-        return super.mirror(state, mirror);
+        return super.mirror($$0, $$1);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{POWERED, ATTACHED, DISARMED, NORTH, EAST, WEST, SOUTH});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{POWERED, ATTACHED, DISARMED, NORTH, EAST, WEST, SOUTH});
     }
 
     static {