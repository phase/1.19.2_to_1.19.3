--- net/minecraft/world/level/block/ShulkerBoxBlock.java
+++ net/minecraft/world/level/block/ShulkerBoxBlock.java
@@ -11,9 +11,9 @@
     @javax.annotation.Nullable
     public net.minecraft.world.item.DyeColor color;
 
-    public net.minecraft.world.level.block.ShulkerBoxBlock(@javax.annotation.Nullable net.minecraft.world.item.DyeColor color, net.minecraft.world.level.block.state.BlockBehaviour$Properties properties) {
-        super(properties);
-        this.color = color;
+    public net.minecraft.world.level.block.ShulkerBoxBlock(@javax.annotation.Nullable net.minecraft.world.item.DyeColor $$0, net.minecraft.world.level.block.state.BlockBehaviour$Properties $$1) {
+        super($$1);
+        this.color = $$0;
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.UP));
     }
 
@@ -26,24 +26,24 @@
         return net.minecraft.world.level.block.ShulkerBoxBlock.createTickerHelper($$2, (net.minecraft.world.level.block.entity.BlockEntityType)net.minecraft.world.level.block.entity.BlockEntityType.SHULKER_BOX, net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity::tick);
     }
 
-    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState $$0) {
         return net.minecraft.world.level.block.RenderShape.ENTITYBLOCK_ANIMATED;
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        if (level.isClientSide) {
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        if ($$1.isClientSide) {
             return net.minecraft.world.InteractionResult.SUCCESS;
         }
-        if (player.isSpectator()) {
+        if ($$3.isSpectator()) {
             return net.minecraft.world.InteractionResult.CONSUME;
         }
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
-            net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity shulkerBoxBlockEntity = (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)blockEntity;
-            if (net.minecraft.world.level.block.ShulkerBoxBlock.canOpen((net.minecraft.world.level.block.state.BlockState)state, (net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)shulkerBoxBlockEntity)) {
-                player.openMenu((net.minecraft.world.MenuProvider)shulkerBoxBlockEntity);
-                player.awardStat(net.minecraft.stats.Stats.OPEN_SHULKER_BOX);
-                net.minecraft.world.entity.monster.piglin.PiglinAi.angerNearbyPiglins((net.minecraft.world.entity.player.Player)player, (boolean)true);
+        net.minecraft.world.level.block.entity.BlockEntity $$6 = $$1.getBlockEntity($$2);
+        if ($$6 instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
+            net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity $$7 = (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)$$6;
+            if (net.minecraft.world.level.block.ShulkerBoxBlock.canOpen((net.minecraft.world.level.block.state.BlockState)$$0, (net.minecraft.world.level.Level)$$1, (net.minecraft.core.BlockPos)$$2, (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)$$7)) {
+                $$3.openMenu((net.minecraft.world.MenuProvider)$$7);
+                $$3.awardStat(net.minecraft.stats.Stats.OPEN_SHULKER_BOX);
+                net.minecraft.world.entity.monster.piglin.PiglinAi.angerNearbyPiglins((net.minecraft.world.entity.player.Player)$$3, (boolean)true);
             }
             return net.minecraft.world.InteractionResult.CONSUME;
         }
@@ -58,137 +58,137 @@
         return $$1.noCollision($$4);
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)context.getClickedFace());
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$0.getClickedFace());
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING});
     }
 
-    public void playerWillDestroy(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.entity.player.Player player) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
-            net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity shulkerBoxBlockEntity = (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)blockEntity;
-            if (!level.isClientSide && player.isCreative() && !shulkerBoxBlockEntity.isEmpty()) {
-                net.minecraft.world.item.ItemStack itemStack = net.minecraft.world.level.block.ShulkerBoxBlock.getColoredItemStack((net.minecraft.world.item.DyeColor)this.getColor());
-                blockEntity.saveToItem(itemStack);
-                if (shulkerBoxBlockEntity.hasCustomName()) {
-                    itemStack.setHoverName(shulkerBoxBlockEntity.getCustomName());
+    public void playerWillDestroy(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.entity.player.Player $$3) {
+        net.minecraft.world.level.block.entity.BlockEntity $$4 = $$0.getBlockEntity($$1);
+        if ($$4 instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
+            net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity $$5 = (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)$$4;
+            if (!$$0.isClientSide && $$3.isCreative() && !$$5.isEmpty()) {
+                net.minecraft.world.item.ItemStack $$6 = net.minecraft.world.level.block.ShulkerBoxBlock.getColoredItemStack((net.minecraft.world.item.DyeColor)this.getColor());
+                $$4.saveToItem($$6);
+                if ($$5.hasCustomName()) {
+                    $$6.setHoverName($$5.getCustomName());
                 }
-                net.minecraft.world.entity.item.ItemEntity itemEntity = new net.minecraft.world.entity.item.ItemEntity(level, (double)pos.getX() + 0.5, (double)pos.getY() + 0.5, (double)pos.getZ() + 0.5, itemStack);
-                itemEntity.setDefaultPickUpDelay();
-                level.addFreshEntity((net.minecraft.world.entity.Entity)itemEntity);
+                net.minecraft.world.entity.item.ItemEntity $$7 = new net.minecraft.world.entity.item.ItemEntity($$0, (double)$$1.getX() + 0.5, (double)$$1.getY() + 0.5, (double)$$1.getZ() + 0.5, $$6);
+                $$7.setDefaultPickUpDelay();
+                $$0.addFreshEntity((net.minecraft.world.entity.Entity)$$7);
             } else {
-                shulkerBoxBlockEntity.unpackLootTable(player);
+                $$5.unpackLootTable($$3);
             }
         }
-        super.playerWillDestroy(level, pos, state, player);
+        super.playerWillDestroy($$0, $$1, $$2, $$3);
     }
 
-    public java.util.List<net.minecraft.world.item.ItemStack> getDrops(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.storage.loot.LootContext$Builder builder) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = (net.minecraft.world.level.block.entity.BlockEntity)builder.getOptionalParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.BLOCK_ENTITY);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
-            net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity shulkerBoxBlockEntity = (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)blockEntity;
-            builder = builder.withDynamicDrop(CONTENTS, ($$1, $$2) -> {
-                for (int $$3 = 0; $$3 < shulkerBoxBlockEntity.getContainerSize(); ++$$3) {
-                    $$2.accept((java.lang.Object)shulkerBoxBlockEntity.getItem($$3));
+    public java.util.List<net.minecraft.world.item.ItemStack> getDrops(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.storage.loot.LootContext$Builder $$12) {
+        net.minecraft.world.level.block.entity.BlockEntity $$22 = (net.minecraft.world.level.block.entity.BlockEntity)$$12.getOptionalParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.BLOCK_ENTITY);
+        if ($$22 instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
+            net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity $$3 = (net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)$$22;
+            $$12 = $$12.withDynamicDrop(CONTENTS, ($$1, $$2) -> {
+                for (int $$3 = 0; $$3 < $$3.getContainerSize(); ++$$3) {
+                    $$2.accept((java.lang.Object)$$3.getItem($$3));
                 }
             });
         }
-        return super.getDrops(state, builder);
+        return super.getDrops($$0, $$12);
     }
 
-    public void setPlacedBy(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.entity.LivingEntity placer, net.minecraft.world.item.ItemStack stack) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity;
-        if (stack.hasCustomHoverName() && (blockEntity = level.getBlockEntity(pos)) instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
-            ((net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)blockEntity).setCustomName(stack.getHoverName());
+    public void setPlacedBy(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.entity.LivingEntity $$3, net.minecraft.world.item.ItemStack $$4) {
+        net.minecraft.world.level.block.entity.BlockEntity $$5;
+        if ($$4.hasCustomHoverName() && ($$5 = $$0.getBlockEntity($$1)) instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
+            ((net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)$$5).setCustomName($$4.getHoverName());
         }
     }
 
-    public void onRemove(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState newState, boolean isMoving) {
-        if (state.is(newState.getBlock())) {
+    public void onRemove(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$0.is($$3.getBlock())) {
             return;
         }
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
-            level.updateNeighbourForOutputSignal(pos, state.getBlock());
+        net.minecraft.world.level.block.entity.BlockEntity $$5 = $$1.getBlockEntity($$2);
+        if ($$5 instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
+            $$1.updateNeighbourForOutputSignal($$2, $$0.getBlock());
         }
-        super.onRemove(state, level, pos, newState, isMoving);
+        super.onRemove($$0, $$1, $$2, $$3, $$4);
     }
 
-    public void appendHoverText(net.minecraft.world.item.ItemStack stack, @javax.annotation.Nullable net.minecraft.world.level.BlockGetter level, java.util.List<net.minecraft.network.chat.Component> tooltip, net.minecraft.world.item.TooltipFlag flag) {
-        super.appendHoverText(stack, level, tooltip, flag);
-        net.minecraft.nbt.CompoundTag compoundTag = net.minecraft.world.item.BlockItem.getBlockEntityData((net.minecraft.world.item.ItemStack)stack);
-        if (compoundTag != null) {
-            if (compoundTag.contains("LootTable", 8)) {
-                tooltip.add((java.lang.Object)net.minecraft.network.chat.Component.literal((java.lang.String)"???????"));
+    public void appendHoverText(net.minecraft.world.item.ItemStack $$0, @javax.annotation.Nullable net.minecraft.world.level.BlockGetter $$1, java.util.List<net.minecraft.network.chat.Component> $$2, net.minecraft.world.item.TooltipFlag $$3) {
+        super.appendHoverText($$0, $$1, $$2, $$3);
+        net.minecraft.nbt.CompoundTag $$4 = net.minecraft.world.item.BlockItem.getBlockEntityData((net.minecraft.world.item.ItemStack)$$0);
+        if ($$4 != null) {
+            if ($$4.contains("LootTable", 8)) {
+                $$2.add((java.lang.Object)net.minecraft.network.chat.Component.literal((java.lang.String)"???????"));
             }
-            if (compoundTag.contains("Items", 9)) {
-                net.minecraft.core.NonNullList nonNullList = net.minecraft.core.NonNullList.withSize((int)27, (java.lang.Object)net.minecraft.world.item.ItemStack.EMPTY);
-                net.minecraft.world.ContainerHelper.loadAllItems((net.minecraft.nbt.CompoundTag)compoundTag, (net.minecraft.core.NonNullList)nonNullList);
-                int n = 0;
-                int n2 = 0;
-                for (net.minecraft.world.item.ItemStack itemStack : nonNullList) {
-                    if (itemStack.isEmpty()) continue;
-                    ++n2;
-                    if (n > 4) continue;
-                    ++n;
-                    net.minecraft.network.chat.MutableComponent mutableComponent = itemStack.getHoverName().copy();
-                    mutableComponent.append(" x").append(java.lang.String.valueOf((int)itemStack.getCount()));
-                    tooltip.add((java.lang.Object)mutableComponent);
+            if ($$4.contains("Items", 9)) {
+                net.minecraft.core.NonNullList $$5 = net.minecraft.core.NonNullList.withSize((int)27, (java.lang.Object)net.minecraft.world.item.ItemStack.EMPTY);
+                net.minecraft.world.ContainerHelper.loadAllItems((net.minecraft.nbt.CompoundTag)$$4, (net.minecraft.core.NonNullList)$$5);
+                int $$6 = 0;
+                int $$7 = 0;
+                for (net.minecraft.world.item.ItemStack $$8 : $$5) {
+                    if ($$8.isEmpty()) continue;
+                    ++$$7;
+                    if ($$6 > 4) continue;
+                    ++$$6;
+                    net.minecraft.network.chat.MutableComponent $$9 = $$8.getHoverName().copy();
+                    $$9.append(" x").append(java.lang.String.valueOf((int)$$8.getCount()));
+                    $$2.add((java.lang.Object)$$9);
                 }
-                if (n2 - n > 0) {
-                    tooltip.add((java.lang.Object)net.minecraft.network.chat.Component.translatable((java.lang.String)"container.shulkerBox.more", (java.lang.Object[])new java.lang.Object[]{n2 - n}).withStyle(net.minecraft.ChatFormatting.ITALIC));
+                if ($$7 - $$6 > 0) {
+                    $$2.add((java.lang.Object)net.minecraft.network.chat.Component.translatable((java.lang.String)"container.shulkerBox.more", (java.lang.Object[])new java.lang.Object[]{$$7 - $$6}).withStyle(net.minecraft.ChatFormatting.ITALIC));
                 }
             }
         }
     }
 
-    public net.minecraft.world.level.material.PushReaction getPistonPushReaction(net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.level.material.PushReaction getPistonPushReaction(net.minecraft.world.level.block.state.BlockState $$0) {
         return net.minecraft.world.level.material.PushReaction.DESTROY;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
-            return net.minecraft.world.phys.shapes.Shapes.create((net.minecraft.world.phys.AABB)((net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)blockEntity).getBoundingBox(state));
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        net.minecraft.world.level.block.entity.BlockEntity $$4 = $$1.getBlockEntity($$2);
+        if ($$4 instanceof net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity) {
+            return net.minecraft.world.phys.shapes.Shapes.create((net.minecraft.world.phys.AABB)((net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity)$$4).getBoundingBox($$0));
         }
         return net.minecraft.world.phys.shapes.Shapes.block();
     }
 
-    public boolean hasAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState state) {
+    public boolean hasAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState $$0) {
         return true;
     }
 
-    public int getAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        return net.minecraft.world.inventory.AbstractContainerMenu.getRedstoneSignalFromContainer((net.minecraft.world.Container)((net.minecraft.world.Container)level.getBlockEntity(pos)));
+    public int getAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        return net.minecraft.world.inventory.AbstractContainerMenu.getRedstoneSignalFromContainer((net.minecraft.world.Container)((net.minecraft.world.Container)$$1.getBlockEntity($$2)));
     }
 
-    public net.minecraft.world.item.ItemStack getCloneItemStack(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        net.minecraft.world.item.ItemStack itemStack = super.getCloneItemStack(level, pos, state);
-        level.getBlockEntity(pos, net.minecraft.world.level.block.entity.BlockEntityType.SHULKER_BOX).ifPresent($$1 -> $$1.saveToItem(itemStack));
-        return itemStack;
+    public net.minecraft.world.item.ItemStack getCloneItemStack(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$12, net.minecraft.world.level.block.state.BlockState $$2) {
+        net.minecraft.world.item.ItemStack $$3 = super.getCloneItemStack($$0, $$12, $$2);
+        $$0.getBlockEntity($$12, net.minecraft.world.level.block.entity.BlockEntityType.SHULKER_BOX).ifPresent($$1 -> $$1.saveToItem($$3));
+        return $$3;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.item.DyeColor getColorFromItem(net.minecraft.world.item.Item item) {
-        return net.minecraft.world.level.block.ShulkerBoxBlock.getColorFromBlock((net.minecraft.world.level.block.Block)net.minecraft.world.level.block.Block.byItem((net.minecraft.world.item.Item)item));
+    public static net.minecraft.world.item.DyeColor getColorFromItem(net.minecraft.world.item.Item $$0) {
+        return net.minecraft.world.level.block.ShulkerBoxBlock.getColorFromBlock((net.minecraft.world.level.block.Block)net.minecraft.world.level.block.Block.byItem((net.minecraft.world.item.Item)$$0));
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.item.DyeColor getColorFromBlock(net.minecraft.world.level.block.Block block) {
-        if (block instanceof net.minecraft.world.level.block.ShulkerBoxBlock) {
-            return ((net.minecraft.world.level.block.ShulkerBoxBlock)block).getColor();
+    public static net.minecraft.world.item.DyeColor getColorFromBlock(net.minecraft.world.level.block.Block $$0) {
+        if ($$0 instanceof net.minecraft.world.level.block.ShulkerBoxBlock) {
+            return ((net.minecraft.world.level.block.ShulkerBoxBlock)$$0).getColor();
         }
         return null;
     }
 
-    public static net.minecraft.world.level.block.Block getBlockByColor(@javax.annotation.Nullable net.minecraft.world.item.DyeColor color) {
-        if (color == null) {
+    public static net.minecraft.world.level.block.Block getBlockByColor(@javax.annotation.Nullable net.minecraft.world.item.DyeColor $$0) {
+        if ($$0 == null) {
             return net.minecraft.world.level.block.Blocks.SHULKER_BOX;
         }
-        switch (net.minecraft.world.level.block.ShulkerBoxBlock$1.$SwitchMap$net$minecraft$world$item$DyeColor[color.ordinal()]) {
+        switch (net.minecraft.world.level.block.ShulkerBoxBlock$1.$SwitchMap$net$minecraft$world$item$DyeColor[$$0.ordinal()]) {
             case 1: {
                 return net.minecraft.world.level.block.Blocks.WHITE_SHULKER_BOX;
             }
@@ -244,16 +244,16 @@
         return this.color;
     }
 
-    public static net.minecraft.world.item.ItemStack getColoredItemStack(@javax.annotation.Nullable net.minecraft.world.item.DyeColor color) {
-        return new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.ShulkerBoxBlock.getBlockByColor((net.minecraft.world.item.DyeColor)color));
+    public static net.minecraft.world.item.ItemStack getColoredItemStack(@javax.annotation.Nullable net.minecraft.world.item.DyeColor $$0) {
+        return new net.minecraft.world.item.ItemStack((net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.ShulkerBoxBlock.getBlockByColor((net.minecraft.world.item.DyeColor)$$0));
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rot) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)rot.rotate((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$1.rotate((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return state.rotate(mirror.getRotation((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return $$0.rotate($$1.getRotation((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
     static {