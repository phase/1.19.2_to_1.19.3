--- net/minecraft/world/level/block/CocoaBlock.java
+++ net/minecraft/world/level/block/CocoaBlock.java
@@ -28,8 +28,8 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH)).setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)0)));
     }
 
-    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState state) {
-        return (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) < 2;
+    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState $$0) {
+        return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) < 2;
     }
 
     public void randomTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -39,49 +39,49 @@
         }
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.relative((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
-        return blockState.is(net.minecraft.tags.BlockTags.JUNGLE_LOGS);
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.block.state.BlockState $$3 = $$1.getBlockState($$2.relative((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+        return $$3.is(net.minecraft.tags.BlockTags.JUNGLE_LOGS);
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        int n = (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)AGE);
-        switch (net.minecraft.world.level.block.CocoaBlock$1.$SwitchMap$net$minecraft$core$Direction[((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).ordinal()]) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        int $$4 = (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AGE);
+        switch (net.minecraft.world.level.block.CocoaBlock$1.$SwitchMap$net$minecraft$core$Direction[((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).ordinal()]) {
             case 1: {
-                return SOUTH_AABB[n];
+                return SOUTH_AABB[$$4];
             }
             default: {
-                return NORTH_AABB[n];
+                return NORTH_AABB[$$4];
             }
             case 3: {
-                return WEST_AABB[n];
+                return WEST_AABB[$$4];
             }
             case 4: 
         }
-        return EAST_AABB[n];
+        return EAST_AABB[$$4];
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.block.state.BlockState blockState = this.defaultBlockState();
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        for (net.minecraft.core.Direction direction : context.getNearestLookingDirections()) {
-            if (!direction.getAxis().isHorizontal() || !(blockState = (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)direction)).canSurvive((net.minecraft.world.level.LevelReader)level, blockPos)) continue;
-            return blockState;
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = this.defaultBlockState();
+        net.minecraft.world.level.Level $$2 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$3 = $$0.getClickedPos();
+        for (net.minecraft.core.Direction $$4 : $$0.getNearestLookingDirections()) {
+            if (!$$4.getAxis().isHorizontal() || !($$1 = (net.minecraft.world.level.block.state.BlockState)$$1.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$4)).canSurvive((net.minecraft.world.level.LevelReader)$$2, $$3)) continue;
+            return $$1;
         }
         return null;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (facing == state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) && !state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if ($$1 == $$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) && !$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
             return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean isValidBonemealTarget(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, boolean isClient) {
-        return (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) < 2;
+    public boolean isValidBonemealTarget(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, boolean $$3) {
+        return (java.lang.Integer)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) < 2;
     }
 
     public boolean isBonemealSuccess(net.minecraft.world.level.Level $$0, net.minecraft.util.RandomSource $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3) {
@@ -92,11 +92,11 @@
         $$0.setBlock($$2, (net.minecraft.world.level.block.state.BlockState)$$3.setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)((java.lang.Integer)$$3.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) + 1))), 2);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, AGE});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, AGE});
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 