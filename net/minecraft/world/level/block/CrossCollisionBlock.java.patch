--- net/minecraft/world/level/block/CrossCollisionBlock.java
+++ net/minecraft/world/level/block/CrossCollisionBlock.java
@@ -27,43 +27,43 @@
         }
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape[] makeShapes(float nodeWidth, float extensionWidth, float nodeHeight, float extensionBottom, float extensionHeight) {
-        float f = 8.0f - nodeWidth;
-        float f2 = 8.0f + nodeWidth;
-        float f3 = 8.0f - extensionWidth;
-        float f4 = 8.0f + extensionWidth;
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape = net.minecraft.world.level.block.Block.box((double)f, (double)0.0, (double)f, (double)f2, (double)nodeHeight, (double)f2);
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape2 = net.minecraft.world.level.block.Block.box((double)f3, (double)extensionBottom, (double)0.0, (double)f4, (double)extensionHeight, (double)f4);
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape3 = net.minecraft.world.level.block.Block.box((double)f3, (double)extensionBottom, (double)f3, (double)f4, (double)extensionHeight, (double)16.0);
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape4 = net.minecraft.world.level.block.Block.box((double)0.0, (double)extensionBottom, (double)f3, (double)f4, (double)extensionHeight, (double)f4);
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape5 = net.minecraft.world.level.block.Block.box((double)f3, (double)extensionBottom, (double)f3, (double)16.0, (double)extensionHeight, (double)f4);
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape6 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape2, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape5);
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape7 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape3, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape4);
-        net.minecraft.world.phys.shapes.VoxelShape[] voxelShapeArray = new net.minecraft.world.phys.shapes.VoxelShape[]{net.minecraft.world.phys.shapes.Shapes.empty(), voxelShape3, voxelShape4, voxelShape7, voxelShape2, net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape3, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape2), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape4, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape2), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape7, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape2), voxelShape5, net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape3, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape5), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape4, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape5), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape7, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape5), voxelShape6, net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape3, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape6), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape4, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape6), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape7, (net.minecraft.world.phys.shapes.VoxelShape)voxelShape6)};
-        for (int i = 0; i < 16; ++i) {
-            voxelShapeArray[i] = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)voxelShapeArray[i]);
+    public net.minecraft.world.phys.shapes.VoxelShape[] makeShapes(float $$0, float $$1, float $$2, float $$3, float $$4) {
+        float $$5 = 8.0f - $$0;
+        float $$6 = 8.0f + $$0;
+        float $$7 = 8.0f - $$1;
+        float $$8 = 8.0f + $$1;
+        net.minecraft.world.phys.shapes.VoxelShape $$9 = net.minecraft.world.level.block.Block.box((double)$$5, (double)0.0, (double)$$5, (double)$$6, (double)$$2, (double)$$6);
+        net.minecraft.world.phys.shapes.VoxelShape $$10 = net.minecraft.world.level.block.Block.box((double)$$7, (double)$$3, (double)0.0, (double)$$8, (double)$$4, (double)$$8);
+        net.minecraft.world.phys.shapes.VoxelShape $$11 = net.minecraft.world.level.block.Block.box((double)$$7, (double)$$3, (double)$$7, (double)$$8, (double)$$4, (double)16.0);
+        net.minecraft.world.phys.shapes.VoxelShape $$12 = net.minecraft.world.level.block.Block.box((double)0.0, (double)$$3, (double)$$7, (double)$$8, (double)$$4, (double)$$8);
+        net.minecraft.world.phys.shapes.VoxelShape $$13 = net.minecraft.world.level.block.Block.box((double)$$7, (double)$$3, (double)$$7, (double)16.0, (double)$$4, (double)$$8);
+        net.minecraft.world.phys.shapes.VoxelShape $$14 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$10, (net.minecraft.world.phys.shapes.VoxelShape)$$13);
+        net.minecraft.world.phys.shapes.VoxelShape $$15 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$11, (net.minecraft.world.phys.shapes.VoxelShape)$$12);
+        net.minecraft.world.phys.shapes.VoxelShape[] $$16 = new net.minecraft.world.phys.shapes.VoxelShape[]{net.minecraft.world.phys.shapes.Shapes.empty(), $$11, $$12, $$15, $$10, net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$11, (net.minecraft.world.phys.shapes.VoxelShape)$$10), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$12, (net.minecraft.world.phys.shapes.VoxelShape)$$10), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$15, (net.minecraft.world.phys.shapes.VoxelShape)$$10), $$13, net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$11, (net.minecraft.world.phys.shapes.VoxelShape)$$13), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$12, (net.minecraft.world.phys.shapes.VoxelShape)$$13), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$15, (net.minecraft.world.phys.shapes.VoxelShape)$$13), $$14, net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$11, (net.minecraft.world.phys.shapes.VoxelShape)$$14), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$12, (net.minecraft.world.phys.shapes.VoxelShape)$$14), net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$15, (net.minecraft.world.phys.shapes.VoxelShape)$$14)};
+        for (int $$17 = 0; $$17 < 16; ++$$17) {
+            $$16[$$17] = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$9, (net.minecraft.world.phys.shapes.VoxelShape)$$16[$$17]);
         }
-        return voxelShapeArray;
+        return $$16;
     }
 
-    public boolean propagatesSkylightDown(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter reader, net.minecraft.core.BlockPos pos) {
-        return (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED) == false;
+    public boolean propagatesSkylightDown(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
+        return (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED) == false;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return this.shapeByIndex[this.getAABBIndex(state)];
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return this.shapeByIndex[this.getAABBIndex($$0)];
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return this.collisionShapeByIndex[this.getAABBIndex(state)];
+    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return this.collisionShapeByIndex[this.getAABBIndex($$0)];
     }
 
-    public static int indexFor(net.minecraft.core.Direction facing) {
-        return 1 << facing.get2DDataValue();
+    public static int indexFor(net.minecraft.core.Direction $$0) {
+        return 1 << $$0.get2DDataValue();
     }
 
-    public int getAABBIndex(net.minecraft.world.level.block.state.BlockState state) {
-        return this.stateToIndex.computeIntIfAbsent((java.lang.Object)state, $$0 -> {
+    public int getAABBIndex(net.minecraft.world.level.block.state.BlockState $$02) {
+        return this.stateToIndex.computeIntIfAbsent((java.lang.Object)$$02, $$0 -> {
             int $$1 = 0;
             if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)).booleanValue()) {
                 $$1 |= net.minecraft.world.level.block.CrossCollisionBlock.indexFor((net.minecraft.core.Direction)net.minecraft.core.Direction.NORTH);
@@ -81,42 +81,42 @@
         });
     }
 
-    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState state) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState $$0) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
             return net.minecraft.world.level.material.Fluids.WATER.getSource(false);
         }
-        return super.getFluidState(state);
+        return super.getFluidState($$0);
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rot) {
-        switch (net.minecraft.world.level.block.CrossCollisionBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[rot.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        switch (net.minecraft.world.level.block.CrossCollisionBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[$$1.ordinal()]) {
             case 1: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
             }
             case 2: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
             }
             case 3: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)));
             }
         }
-        return state;
+        return $$0;
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        switch (net.minecraft.world.level.block.CrossCollisionBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[mirror.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        switch (net.minecraft.world.level.block.CrossCollisionBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[$$1.ordinal()]) {
             case 1: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)NORTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SOUTH)))).setValue((net.minecraft.world.level.block.state.properties.Property)SOUTH, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)NORTH)));
             }
             case 2: {
-                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
+                return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)EAST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WEST)))).setValue((net.minecraft.world.level.block.state.properties.Property)WEST, (java.lang.Comparable)((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)EAST)));
             }
         }
-        return super.mirror(state, mirror);
+        return super.mirror($$0, $$1);
     }
 
     public static /* synthetic */ boolean lambda$static$0(java.util.Map$Entry $$0) {