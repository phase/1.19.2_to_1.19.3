--- net/minecraft/world/level/block/DropperBlock.java
+++ net/minecraft/world/level/block/DropperBlock.java
@@ -12,7 +12,7 @@
         super($$0);
     }
 
-    public net.minecraft.core.dispenser.DispenseItemBehavior getDispenseMethod(net.minecraft.world.item.ItemStack stack) {
+    public net.minecraft.core.dispenser.DispenseItemBehavior getDispenseMethod(net.minecraft.world.item.ItemStack $$0) {
         return DISPENSE_BEHAVIOUR;
     }
 
@@ -20,33 +20,33 @@
         return new net.minecraft.world.level.block.entity.DropperBlockEntity($$0, $$1);
     }
 
-    public void dispenseFrom(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.item.ItemStack itemStack;
-        net.minecraft.core.BlockSourceImpl blockSourceImpl = new net.minecraft.core.BlockSourceImpl(level, pos);
-        net.minecraft.world.level.block.entity.DispenserBlockEntity dispenserBlockEntity = (net.minecraft.world.level.block.entity.DispenserBlockEntity)blockSourceImpl.getEntity();
-        int n = dispenserBlockEntity.getRandomSlot(level.random);
-        if (n < 0) {
-            level.levelEvent(1001, pos, 0);
+    public void dispenseFrom(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1) {
+        net.minecraft.world.item.ItemStack $$9;
+        net.minecraft.core.BlockSourceImpl $$2 = new net.minecraft.core.BlockSourceImpl($$0, $$1);
+        net.minecraft.world.level.block.entity.DispenserBlockEntity $$3 = (net.minecraft.world.level.block.entity.DispenserBlockEntity)$$2.getEntity();
+        int $$4 = $$3.getRandomSlot($$0.random);
+        if ($$4 < 0) {
+            $$0.levelEvent(1001, $$1, 0);
             return;
         }
-        net.minecraft.world.item.ItemStack itemStack2 = dispenserBlockEntity.getItem(n);
-        if (itemStack2.isEmpty()) {
+        net.minecraft.world.item.ItemStack $$5 = $$3.getItem($$4);
+        if ($$5.isEmpty()) {
             return;
         }
-        net.minecraft.core.Direction direction = (net.minecraft.core.Direction)level.getBlockState(pos).getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
-        net.minecraft.world.Container container = net.minecraft.world.level.block.entity.HopperBlockEntity.getContainerAt((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos.relative(direction));
-        if (container == null) {
-            itemStack = DISPENSE_BEHAVIOUR.dispense((net.minecraft.core.BlockSource)blockSourceImpl, itemStack2);
+        net.minecraft.core.Direction $$6 = (net.minecraft.core.Direction)$$0.getBlockState($$1).getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
+        net.minecraft.world.Container $$7 = net.minecraft.world.level.block.entity.HopperBlockEntity.getContainerAt((net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$1.relative($$6));
+        if ($$7 == null) {
+            net.minecraft.world.item.ItemStack $$8 = DISPENSE_BEHAVIOUR.dispense((net.minecraft.core.BlockSource)$$2, $$5);
         } else {
-            itemStack = net.minecraft.world.level.block.entity.HopperBlockEntity.addItem((net.minecraft.world.Container)dispenserBlockEntity, (net.minecraft.world.Container)container, (net.minecraft.world.item.ItemStack)itemStack2.copy().split(1), (net.minecraft.core.Direction)direction.getOpposite());
-            if (itemStack.isEmpty()) {
-                itemStack = itemStack2.copy();
-                itemStack.shrink(1);
+            $$9 = net.minecraft.world.level.block.entity.HopperBlockEntity.addItem((net.minecraft.world.Container)$$3, (net.minecraft.world.Container)$$7, (net.minecraft.world.item.ItemStack)$$5.copy().split(1), (net.minecraft.core.Direction)$$6.getOpposite());
+            if ($$9.isEmpty()) {
+                $$9 = $$5.copy();
+                $$9.shrink(1);
             } else {
-                itemStack = itemStack2.copy();
+                $$9 = $$5.copy();
             }
         }
-        dispenserBlockEntity.setItem(n, itemStack);
+        $$3.setItem($$4, $$9);
     }
 
     static {