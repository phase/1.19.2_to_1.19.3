--- net/minecraft/world/level/block/JigsawBlock.java
+++ net/minecraft/world/level/block/JigsawBlock.java
@@ -15,53 +15,58 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION, (java.lang.Comparable)net.minecraft.core.FrontAndTop.NORTH_UP));
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{ORIENTATION});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{ORIENTATION});
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rotation) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION, (java.lang.Comparable)rotation.rotation().rotate((net.minecraft.core.FrontAndTop)state.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION, (java.lang.Comparable)$$1.rotation().rotate((net.minecraft.core.FrontAndTop)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION, (java.lang.Comparable)mirror.rotation().rotate((net.minecraft.core.FrontAndTop)state.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)));
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION, (java.lang.Comparable)$$1.rotation().rotate((net.minecraft.core.FrontAndTop)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.core.Direction direction = context.getClickedFace();
-        net.minecraft.core.Direction direction2 = direction.getAxis() == net.minecraft.core.Direction$Axis.Y ? context.getHorizontalDirection().getOpposite() : net.minecraft.core.Direction.UP;
-        return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION, (java.lang.Comparable)net.minecraft.core.FrontAndTop.fromFrontAndTop((net.minecraft.core.Direction)direction, (net.minecraft.core.Direction)direction2));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.core.Direction $$3;
+        net.minecraft.core.Direction $$1 = $$0.getClickedFace();
+        if ($$1.getAxis() == net.minecraft.core.Direction$Axis.Y) {
+            net.minecraft.core.Direction $$2 = $$0.getHorizontalDirection().getOpposite();
+        } else {
+            $$3 = net.minecraft.core.Direction.UP;
+        }
+        return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION, (java.lang.Comparable)net.minecraft.core.FrontAndTop.fromFrontAndTop((net.minecraft.core.Direction)$$1, (net.minecraft.core.Direction)$$3));
     }
 
     public net.minecraft.world.level.block.entity.BlockEntity newBlockEntity(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         return new net.minecraft.world.level.block.entity.JigsawBlockEntity($$0, $$1);
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.JigsawBlockEntity && player.canUseGameMasterBlocks()) {
-            player.openJigsawBlock((net.minecraft.world.level.block.entity.JigsawBlockEntity)blockEntity);
-            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        net.minecraft.world.level.block.entity.BlockEntity $$6 = $$1.getBlockEntity($$2);
+        if ($$6 instanceof net.minecraft.world.level.block.entity.JigsawBlockEntity && $$3.canUseGameMasterBlocks()) {
+            $$3.openJigsawBlock((net.minecraft.world.level.block.entity.JigsawBlockEntity)$$6);
+            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$1.isClientSide);
         }
         return net.minecraft.world.InteractionResult.PASS;
     }
 
-    public static boolean canAttach(net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo info, net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo info2) {
-        net.minecraft.core.Direction direction = net.minecraft.world.level.block.JigsawBlock.getFrontFacing((net.minecraft.world.level.block.state.BlockState)info.state);
-        net.minecraft.core.Direction direction2 = net.minecraft.world.level.block.JigsawBlock.getFrontFacing((net.minecraft.world.level.block.state.BlockState)info2.state);
-        net.minecraft.core.Direction direction3 = net.minecraft.world.level.block.JigsawBlock.getTopFacing((net.minecraft.world.level.block.state.BlockState)info.state);
-        net.minecraft.core.Direction direction4 = net.minecraft.world.level.block.JigsawBlock.getTopFacing((net.minecraft.world.level.block.state.BlockState)info2.state);
-        net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType jointType = (net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType)net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.byName((java.lang.String)info.nbt.getString("joint")).orElseGet(() -> direction.getAxis().isHorizontal() ? net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.ALIGNED : net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.ROLLABLE);
-        boolean bl = jointType == net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.ROLLABLE;
-        return direction == direction2.getOpposite() && (bl || direction3 == direction4) && info.nbt.getString("target").equals((java.lang.Object)info2.nbt.getString("name"));
+    public static boolean canAttach(net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo $$0, net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo $$1) {
+        net.minecraft.core.Direction $$2 = net.minecraft.world.level.block.JigsawBlock.getFrontFacing((net.minecraft.world.level.block.state.BlockState)$$0.state);
+        net.minecraft.core.Direction $$3 = net.minecraft.world.level.block.JigsawBlock.getFrontFacing((net.minecraft.world.level.block.state.BlockState)$$1.state);
+        net.minecraft.core.Direction $$4 = net.minecraft.world.level.block.JigsawBlock.getTopFacing((net.minecraft.world.level.block.state.BlockState)$$0.state);
+        net.minecraft.core.Direction $$5 = net.minecraft.world.level.block.JigsawBlock.getTopFacing((net.minecraft.world.level.block.state.BlockState)$$1.state);
+        net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType $$6 = (net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType)net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.byName((java.lang.String)$$0.nbt.getString("joint")).orElseGet(() -> $$2.getAxis().isHorizontal() ? net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.ALIGNED : net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.ROLLABLE);
+        boolean $$7 = $$6 == net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType.ROLLABLE;
+        return $$2 == $$3.getOpposite() && ($$7 || $$4 == $$5) && $$0.nbt.getString("target").equals((java.lang.Object)$$1.nbt.getString("name"));
     }
 
-    public static net.minecraft.core.Direction getFrontFacing(net.minecraft.world.level.block.state.BlockState state) {
-        return ((net.minecraft.core.FrontAndTop)state.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)).front();
+    public static net.minecraft.core.Direction getFrontFacing(net.minecraft.world.level.block.state.BlockState $$0) {
+        return ((net.minecraft.core.FrontAndTop)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)).front();
     }
 
-    public static net.minecraft.core.Direction getTopFacing(net.minecraft.world.level.block.state.BlockState state) {
-        return ((net.minecraft.core.FrontAndTop)state.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)).top();
+    public static net.minecraft.core.Direction getTopFacing(net.minecraft.world.level.block.state.BlockState $$0) {
+        return ((net.minecraft.core.FrontAndTop)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)ORIENTATION)).top();
     }
 
     static {