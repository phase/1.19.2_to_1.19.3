--- net/minecraft/world/level/block/BubbleColumnBlock.java
+++ net/minecraft/world/level/block/BubbleColumnBlock.java
@@ -15,19 +15,19 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)DRAG_DOWN, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)));
     }
 
-    public void entityInside(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.Entity entity) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.above());
-        if (blockState.isAir()) {
-            entity.onAboveBubbleCol(((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)DRAG_DOWN)).booleanValue());
-            if (!level.isClientSide) {
-                net.minecraft.server.level.ServerLevel serverLevel = (net.minecraft.server.level.ServerLevel)level;
-                for (int i = 0; i < 2; ++i) {
-                    serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.SPLASH, (double)pos.getX() + level.random.nextDouble(), (double)(pos.getY() + 1), (double)pos.getZ() + level.random.nextDouble(), 1, 0.0, 0.0, 0.0, 1.0);
-                    serverLevel.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.BUBBLE, (double)pos.getX() + level.random.nextDouble(), (double)(pos.getY() + 1), (double)pos.getZ() + level.random.nextDouble(), 1, 0.0, 0.01, 0.0, 0.2);
+    public void entityInside(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.Entity $$3) {
+        net.minecraft.world.level.block.state.BlockState $$4 = $$1.getBlockState($$2.above());
+        if ($$4.isAir()) {
+            $$3.onAboveBubbleCol(((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)DRAG_DOWN)).booleanValue());
+            if (!$$1.isClientSide) {
+                net.minecraft.server.level.ServerLevel $$5 = (net.minecraft.server.level.ServerLevel)$$1;
+                for (int $$6 = 0; $$6 < 2; ++$$6) {
+                    $$5.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.SPLASH, (double)$$2.getX() + $$1.random.nextDouble(), (double)($$2.getY() + 1), (double)$$2.getZ() + $$1.random.nextDouble(), 1, 0.0, 0.0, 0.0, 1.0);
+                    $$5.sendParticles((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.BUBBLE, (double)$$2.getX() + $$1.random.nextDouble(), (double)($$2.getY() + 1), (double)$$2.getZ() + $$1.random.nextDouble(), 1, 0.0, 0.01, 0.0, 0.2);
                 }
             }
         } else {
-            entity.onInsideBubbleColumn(((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)DRAG_DOWN)).booleanValue());
+            $$3.onInsideBubbleColumn(((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)DRAG_DOWN)).booleanValue());
         }
     }
 
@@ -35,7 +35,7 @@
         net.minecraft.world.level.block.BubbleColumnBlock.updateColumn((net.minecraft.world.level.LevelAccessor)$$1, (net.minecraft.core.BlockPos)$$2, (net.minecraft.world.level.block.state.BlockState)$$0, (net.minecraft.world.level.block.state.BlockState)$$1.getBlockState($$2.below()));
     }
 
-    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState $$0) {
         return net.minecraft.world.level.material.Fluids.WATER.getSource(false);
     }
 
@@ -93,29 +93,29 @@
         }
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        level.scheduleTick(currentPos, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)level));
-        if (!state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos) || facing == net.minecraft.core.Direction.DOWN || facing == net.minecraft.core.Direction.UP && !facingState.is(net.minecraft.world.level.block.Blocks.BUBBLE_COLUMN) && net.minecraft.world.level.block.BubbleColumnBlock.canExistIn((net.minecraft.world.level.block.state.BlockState)facingState)) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.block.Block)this, 5);
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        $$3.scheduleTick($$4, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)$$3));
+        if (!$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4) || $$1 == net.minecraft.core.Direction.DOWN || $$1 == net.minecraft.core.Direction.UP && !$$2.is(net.minecraft.world.level.block.Blocks.BUBBLE_COLUMN) && net.minecraft.world.level.block.BubbleColumnBlock.canExistIn((net.minecraft.world.level.block.state.BlockState)$$2)) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.block.Block)this, 5);
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.below());
-        return blockState.is(net.minecraft.world.level.block.Blocks.BUBBLE_COLUMN) || blockState.is(net.minecraft.world.level.block.Blocks.MAGMA_BLOCK) || blockState.is(net.minecraft.world.level.block.Blocks.SOUL_SAND);
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.block.state.BlockState $$3 = $$1.getBlockState($$2.below());
+        return $$3.is(net.minecraft.world.level.block.Blocks.BUBBLE_COLUMN) || $$3.is(net.minecraft.world.level.block.Blocks.MAGMA_BLOCK) || $$3.is(net.minecraft.world.level.block.Blocks.SOUL_SAND);
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return net.minecraft.world.phys.shapes.Shapes.empty();
     }
 
-    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState $$0) {
         return net.minecraft.world.level.block.RenderShape.INVISIBLE;
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{DRAG_DOWN});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{DRAG_DOWN});
     }
 
     public net.minecraft.world.item.ItemStack pickupBlock(net.minecraft.world.level.LevelAccessor $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {