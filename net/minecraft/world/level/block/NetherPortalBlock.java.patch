--- net/minecraft/world/level/block/NetherPortalBlock.java
+++ net/minecraft/world/level/block/NetherPortalBlock.java
@@ -16,8 +16,8 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)AXIS, (java.lang.Comparable)net.minecraft.core.Direction$Axis.X));
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        switch (net.minecraft.world.level.block.NetherPortalBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction$Axis)state.getValue((net.minecraft.world.level.block.state.properties.Property)AXIS)).ordinal()]) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        switch (net.minecraft.world.level.block.NetherPortalBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction$Axis)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AXIS)).ordinal()]) {
             case 1: {
                 return Z_AXIS_AABB;
             }
@@ -37,20 +37,20 @@
         }
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        boolean bl;
-        net.minecraft.core.Direction$Axis axis = facing.getAxis();
-        net.minecraft.core.Direction$Axis axis2 = (net.minecraft.core.Direction$Axis)state.getValue((net.minecraft.world.level.block.state.properties.Property)AXIS);
-        boolean bl2 = bl = axis2 != axis && axis.isHorizontal();
-        if (bl || facingState.is((net.minecraft.world.level.block.Block)this) || new net.minecraft.world.level.portal.PortalShape(level, currentPos, axis2).isComplete()) {
-            return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        boolean $$8;
+        net.minecraft.core.Direction$Axis $$6 = $$1.getAxis();
+        net.minecraft.core.Direction$Axis $$7 = (net.minecraft.core.Direction$Axis)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AXIS);
+        boolean bl = $$8 = $$7 != $$6 && $$6.isHorizontal();
+        if ($$8 || $$2.is((net.minecraft.world.level.block.Block)this) || new net.minecraft.world.level.portal.PortalShape($$3, $$4, $$7).isComplete()) {
+            return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
         }
         return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
     }
 
-    public void entityInside(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.Entity entity) {
-        if (!entity.isPassenger() && !entity.isVehicle() && entity.canChangeDimensions()) {
-            entity.handleInsidePortal(pos);
+    public void entityInside(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.Entity $$3) {
+        if (!$$3.isPassenger() && !$$3.isVehicle() && $$3.canChangeDimensions()) {
+            $$3.handleInsidePortal($$2);
         }
     }
 
@@ -77,30 +77,30 @@
         }
     }
 
-    public net.minecraft.world.item.ItemStack getCloneItemStack(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.item.ItemStack getCloneItemStack(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
         return net.minecraft.world.item.ItemStack.EMPTY;
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rot) {
-        switch (net.minecraft.world.level.block.NetherPortalBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[rot.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        switch (net.minecraft.world.level.block.NetherPortalBlock$1.$SwitchMap$net$minecraft$world$level$block$Rotation[$$1.ordinal()]) {
             case 1: 
             case 2: {
-                switch (net.minecraft.world.level.block.NetherPortalBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction$Axis)state.getValue((net.minecraft.world.level.block.state.properties.Property)AXIS)).ordinal()]) {
+                switch (net.minecraft.world.level.block.NetherPortalBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction$Axis)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AXIS)).ordinal()]) {
                     case 2: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)AXIS, (java.lang.Comparable)net.minecraft.core.Direction$Axis.Z);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)AXIS, (java.lang.Comparable)net.minecraft.core.Direction$Axis.Z);
                     }
                     case 1: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)AXIS, (java.lang.Comparable)net.minecraft.core.Direction$Axis.X);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)AXIS, (java.lang.Comparable)net.minecraft.core.Direction$Axis.X);
                     }
                 }
-                return state;
+                return $$0;
             }
         }
-        return state;
+        return $$0;
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{AXIS});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{AXIS});
     }
 
     static {