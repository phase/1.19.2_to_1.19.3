--- net/minecraft/world/level/block/StairBlock.java
+++ net/minecraft/world/level/block/StairBlock.java
@@ -27,83 +27,83 @@
     public net.minecraft.world.level.block.Block base;
     public net.minecraft.world.level.block.state.BlockState baseState;
 
-    public static net.minecraft.world.phys.shapes.VoxelShape[] makeShapes(net.minecraft.world.phys.shapes.VoxelShape slabShape, net.minecraft.world.phys.shapes.VoxelShape nwCorner, net.minecraft.world.phys.shapes.VoxelShape neCorner, net.minecraft.world.phys.shapes.VoxelShape swCorner, net.minecraft.world.phys.shapes.VoxelShape seCorner) {
-        return (net.minecraft.world.phys.shapes.VoxelShape[])java.util.stream.IntStream.range((int)0, (int)16).mapToObj($$5 -> net.minecraft.world.level.block.StairBlock.makeStairShape((int)$$5, (net.minecraft.world.phys.shapes.VoxelShape)slabShape, (net.minecraft.world.phys.shapes.VoxelShape)nwCorner, (net.minecraft.world.phys.shapes.VoxelShape)neCorner, (net.minecraft.world.phys.shapes.VoxelShape)swCorner, (net.minecraft.world.phys.shapes.VoxelShape)seCorner)).toArray(net.minecraft.world.phys.shapes.VoxelShape[]::new);
+    public static net.minecraft.world.phys.shapes.VoxelShape[] makeShapes(net.minecraft.world.phys.shapes.VoxelShape $$0, net.minecraft.world.phys.shapes.VoxelShape $$1, net.minecraft.world.phys.shapes.VoxelShape $$2, net.minecraft.world.phys.shapes.VoxelShape $$3, net.minecraft.world.phys.shapes.VoxelShape $$4) {
+        return (net.minecraft.world.phys.shapes.VoxelShape[])java.util.stream.IntStream.range((int)0, (int)16).mapToObj($$5 -> net.minecraft.world.level.block.StairBlock.makeStairShape((int)$$5, (net.minecraft.world.phys.shapes.VoxelShape)$$0, (net.minecraft.world.phys.shapes.VoxelShape)$$1, (net.minecraft.world.phys.shapes.VoxelShape)$$2, (net.minecraft.world.phys.shapes.VoxelShape)$$3, (net.minecraft.world.phys.shapes.VoxelShape)$$4)).toArray(net.minecraft.world.phys.shapes.VoxelShape[]::new);
     }
 
-    public static net.minecraft.world.phys.shapes.VoxelShape makeStairShape(int bitfield, net.minecraft.world.phys.shapes.VoxelShape slabShape, net.minecraft.world.phys.shapes.VoxelShape nwCorner, net.minecraft.world.phys.shapes.VoxelShape neCorner, net.minecraft.world.phys.shapes.VoxelShape swCorner, net.minecraft.world.phys.shapes.VoxelShape seCorner) {
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape = slabShape;
-        if ((bitfield & 1) != 0) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)nwCorner);
+    public static net.minecraft.world.phys.shapes.VoxelShape makeStairShape(int $$0, net.minecraft.world.phys.shapes.VoxelShape $$1, net.minecraft.world.phys.shapes.VoxelShape $$2, net.minecraft.world.phys.shapes.VoxelShape $$3, net.minecraft.world.phys.shapes.VoxelShape $$4, net.minecraft.world.phys.shapes.VoxelShape $$5) {
+        net.minecraft.world.phys.shapes.VoxelShape $$6 = $$1;
+        if (($$0 & 1) != 0) {
+            $$6 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$6, (net.minecraft.world.phys.shapes.VoxelShape)$$2);
         }
-        if ((bitfield & 2) != 0) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)neCorner);
+        if (($$0 & 2) != 0) {
+            $$6 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$6, (net.minecraft.world.phys.shapes.VoxelShape)$$3);
         }
-        if ((bitfield & 4) != 0) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)swCorner);
+        if (($$0 & 4) != 0) {
+            $$6 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$6, (net.minecraft.world.phys.shapes.VoxelShape)$$4);
         }
-        if ((bitfield & 8) != 0) {
-            voxelShape = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)voxelShape, (net.minecraft.world.phys.shapes.VoxelShape)seCorner);
+        if (($$0 & 8) != 0) {
+            $$6 = net.minecraft.world.phys.shapes.Shapes.or((net.minecraft.world.phys.shapes.VoxelShape)$$6, (net.minecraft.world.phys.shapes.VoxelShape)$$5);
         }
-        return voxelShape;
+        return $$6;
     }
 
-    public net.minecraft.world.level.block.StairBlock(net.minecraft.world.level.block.state.BlockState baseState, net.minecraft.world.level.block.state.BlockBehaviour$Properties properties) {
-        super(properties);
+    public net.minecraft.world.level.block.StairBlock(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.state.BlockBehaviour$Properties $$1) {
+        super($$1);
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH)).setValue((net.minecraft.world.level.block.state.properties.Property)HALF, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.Half.BOTTOM)).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.STRAIGHT)).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
-        this.base = baseState.getBlock();
-        this.baseState = baseState;
+        this.base = $$0.getBlock();
+        this.baseState = $$0;
     }
 
-    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState state) {
+    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState $$0) {
         return true;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return (state.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) == net.minecraft.world.level.block.state.properties.Half.TOP ? TOP_SHAPES : BOTTOM_SHAPES)[SHAPE_BY_STATE[this.getShapeIndex(state)]];
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return ($$0.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) == net.minecraft.world.level.block.state.properties.Half.TOP ? TOP_SHAPES : BOTTOM_SHAPES)[SHAPE_BY_STATE[this.getShapeIndex($$0)]];
     }
 
-    public int getShapeIndex(net.minecraft.world.level.block.state.BlockState state) {
-        return ((net.minecraft.world.level.block.state.properties.StairsShape)state.getValue((net.minecraft.world.level.block.state.properties.Property)SHAPE)).ordinal() * 4 + ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).get2DDataValue();
+    public int getShapeIndex(net.minecraft.world.level.block.state.BlockState $$0) {
+        return ((net.minecraft.world.level.block.state.properties.StairsShape)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SHAPE)).ordinal() * 4 + ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).get2DDataValue();
     }
 
     public void animateTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
         this.base.animateTick($$0, $$1, $$2, $$3);
     }
 
-    public void attack(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player) {
-        this.baseState.attack(level, pos, player);
+    public void attack(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3) {
+        this.baseState.attack($$1, $$2, $$3);
     }
 
-    public void destroy(net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        this.base.destroy(level, pos, state);
+    public void destroy(net.minecraft.world.level.LevelAccessor $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        this.base.destroy($$0, $$1, $$2);
     }
 
     public float getExplosionResistance() {
         return this.base.getExplosionResistance();
     }
 
-    public void onPlace(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState oldState, boolean isMoving) {
-        if (state.is(state.getBlock())) {
+    public void onPlace(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$0.is($$0.getBlock())) {
             return;
         }
-        level.neighborChanged(this.baseState, pos, net.minecraft.world.level.block.Blocks.AIR, pos, false);
-        this.base.onPlace(this.baseState, level, pos, oldState, false);
+        $$1.neighborChanged(this.baseState, $$2, net.minecraft.world.level.block.Blocks.AIR, $$2, false);
+        this.base.onPlace(this.baseState, $$1, $$2, $$3, false);
     }
 
-    public void onRemove(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState newState, boolean isMoving) {
-        if (state.is(newState.getBlock())) {
+    public void onRemove(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$0.is($$3.getBlock())) {
             return;
         }
-        this.baseState.onRemove(level, pos, newState, isMoving);
+        this.baseState.onRemove($$1, $$2, $$3, $$4);
     }
 
     public void stepOn(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.entity.Entity $$3) {
         this.base.stepOn($$0, $$1, $$2, $$3);
     }
 
-    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState state) {
-        return this.base.isRandomlyTicking(state);
+    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState $$0) {
+        return this.base.isRandomlyTicking($$0);
     }
 
     public void randomTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -114,46 +114,46 @@
         this.base.tick($$0, $$1, $$2, $$3);
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        return this.baseState.use(level, player, hand, hit);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        return this.baseState.use($$1, $$3, $$4, $$5);
     }
 
-    public void wasExploded(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.Explosion explosion) {
-        this.base.wasExploded(level, pos, explosion);
+    public void wasExploded(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.Explosion $$2) {
+        this.base.wasExploded($$0, $$1, $$2);
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.core.Direction direction = context.getClickedFace();
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        net.minecraft.world.level.material.FluidState fluidState = context.getLevel().getFluidState(blockPos);
-        net.minecraft.world.level.block.state.BlockState blockState = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)context.getHorizontalDirection())).setValue((net.minecraft.world.level.block.state.properties.Property)HALF, (java.lang.Comparable)(direction == net.minecraft.core.Direction.DOWN || direction != net.minecraft.core.Direction.UP && context.getClickLocation().y - (double)blockPos.getY() > 0.5 ? net.minecraft.world.level.block.state.properties.Half.TOP : net.minecraft.world.level.block.state.properties.Half.BOTTOM))).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((fluidState.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
-        return (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.StairBlock.getStairsShape((net.minecraft.world.level.block.state.BlockState)blockState, (net.minecraft.world.level.BlockGetter)context.getLevel(), (net.minecraft.core.BlockPos)blockPos));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.core.Direction $$1 = $$0.getClickedFace();
+        net.minecraft.core.BlockPos $$2 = $$0.getClickedPos();
+        net.minecraft.world.level.material.FluidState $$3 = $$0.getLevel().getFluidState($$2);
+        net.minecraft.world.level.block.state.BlockState $$4 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$0.getHorizontalDirection())).setValue((net.minecraft.world.level.block.state.properties.Property)HALF, (java.lang.Comparable)($$1 == net.minecraft.core.Direction.DOWN || $$1 != net.minecraft.core.Direction.UP && $$0.getClickLocation().y - (double)$$2.getY() > 0.5 ? net.minecraft.world.level.block.state.properties.Half.TOP : net.minecraft.world.level.block.state.properties.Half.BOTTOM))).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf(($$3.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
+        return (net.minecraft.world.level.block.state.BlockState)$$4.setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.StairBlock.getStairsShape((net.minecraft.world.level.block.state.BlockState)$$4, (net.minecraft.world.level.BlockGetter)$$0.getLevel(), (net.minecraft.core.BlockPos)$$2));
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)level));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)$$3));
         }
-        if (facing.getAxis().isHorizontal()) {
-            return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.StairBlock.getStairsShape((net.minecraft.world.level.block.state.BlockState)state, (net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos)currentPos));
+        if ($$1.getAxis().isHorizontal()) {
+            return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.StairBlock.getStairsShape((net.minecraft.world.level.block.state.BlockState)$$0, (net.minecraft.world.level.BlockGetter)$$3, (net.minecraft.core.BlockPos)$$4));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public static net.minecraft.world.level.block.state.properties.StairsShape getStairsShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.core.Direction direction;
-        net.minecraft.world.level.block.state.BlockState blockState;
-        net.minecraft.core.Direction direction2 = (net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
-        net.minecraft.world.level.block.state.BlockState blockState2 = level.getBlockState(pos.relative(direction2));
-        if (net.minecraft.world.level.block.StairBlock.isStairs((net.minecraft.world.level.block.state.BlockState)blockState2) && state.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) == blockState2.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) && (blockState = (net.minecraft.core.Direction)blockState2.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() != ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() && net.minecraft.world.level.block.StairBlock.canTakeShape((net.minecraft.world.level.block.state.BlockState)state, (net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.core.Direction)blockState.getOpposite())) {
-            if (blockState == direction2.getCounterClockWise()) {
+    public static net.minecraft.world.level.block.state.properties.StairsShape getStairsShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.core.Direction $$7;
+        net.minecraft.core.Direction $$5;
+        net.minecraft.core.Direction $$3 = (net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
+        net.minecraft.world.level.block.state.BlockState $$4 = $$1.getBlockState($$2.relative($$3));
+        if (net.minecraft.world.level.block.StairBlock.isStairs((net.minecraft.world.level.block.state.BlockState)$$4) && $$0.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) == $$4.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) && ($$5 = (net.minecraft.core.Direction)$$4.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() != ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() && net.minecraft.world.level.block.StairBlock.canTakeShape((net.minecraft.world.level.block.state.BlockState)$$0, (net.minecraft.world.level.BlockGetter)$$1, (net.minecraft.core.BlockPos)$$2, (net.minecraft.core.Direction)$$5.getOpposite())) {
+            if ($$5 == $$3.getCounterClockWise()) {
                 return net.minecraft.world.level.block.state.properties.StairsShape.OUTER_LEFT;
             }
             return net.minecraft.world.level.block.state.properties.StairsShape.OUTER_RIGHT;
         }
-        blockState = level.getBlockState(pos.relative(direction2.getOpposite()));
-        if (net.minecraft.world.level.block.StairBlock.isStairs((net.minecraft.world.level.block.state.BlockState)blockState) && state.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) == blockState.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) && (direction = (net.minecraft.core.Direction)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() != ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() && net.minecraft.world.level.block.StairBlock.canTakeShape((net.minecraft.world.level.block.state.BlockState)state, (net.minecraft.world.level.BlockGetter)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.core.Direction)direction)) {
-            if (direction == direction2.getCounterClockWise()) {
+        net.minecraft.world.level.block.state.BlockState $$6 = $$1.getBlockState($$2.relative($$3.getOpposite()));
+        if (net.minecraft.world.level.block.StairBlock.isStairs((net.minecraft.world.level.block.state.BlockState)$$6) && $$0.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) == $$6.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) && ($$7 = (net.minecraft.core.Direction)$$6.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() != ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis() && net.minecraft.world.level.block.StairBlock.canTakeShape((net.minecraft.world.level.block.state.BlockState)$$0, (net.minecraft.world.level.BlockGetter)$$1, (net.minecraft.core.BlockPos)$$2, (net.minecraft.core.Direction)$$7)) {
+            if ($$7 == $$3.getCounterClockWise()) {
                 return net.minecraft.world.level.block.state.properties.StairsShape.INNER_LEFT;
             }
             return net.minecraft.world.level.block.state.properties.StairsShape.INNER_RIGHT;
@@ -161,78 +161,78 @@
         return net.minecraft.world.level.block.state.properties.StairsShape.STRAIGHT;
     }
 
-    public static boolean canTakeShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction face) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.relative(face));
-        return !net.minecraft.world.level.block.StairBlock.isStairs((net.minecraft.world.level.block.state.BlockState)blockState) || blockState.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) != state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) || blockState.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) != state.getValue((net.minecraft.world.level.block.state.properties.Property)HALF);
+    public static boolean canTakeShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.Direction $$3) {
+        net.minecraft.world.level.block.state.BlockState $$4 = $$1.getBlockState($$2.relative($$3));
+        return !net.minecraft.world.level.block.StairBlock.isStairs((net.minecraft.world.level.block.state.BlockState)$$4) || $$4.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) != $$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) || $$4.getValue((net.minecraft.world.level.block.state.properties.Property)HALF) != $$0.getValue((net.minecraft.world.level.block.state.properties.Property)HALF);
     }
 
-    public static boolean isStairs(net.minecraft.world.level.block.state.BlockState state) {
-        return state.getBlock() instanceof net.minecraft.world.level.block.StairBlock;
+    public static boolean isStairs(net.minecraft.world.level.block.state.BlockState $$0) {
+        return $$0.getBlock() instanceof net.minecraft.world.level.block.StairBlock;
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rot) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)rot.rotate((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$1.rotate((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        net.minecraft.core.Direction direction = (net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
-        net.minecraft.world.level.block.state.properties.StairsShape stairsShape = (net.minecraft.world.level.block.state.properties.StairsShape)state.getValue((net.minecraft.world.level.block.state.properties.Property)SHAPE);
-        switch (net.minecraft.world.level.block.StairBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[mirror.ordinal()]) {
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        net.minecraft.core.Direction $$2 = (net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
+        net.minecraft.world.level.block.state.properties.StairsShape $$3 = (net.minecraft.world.level.block.state.properties.StairsShape)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)SHAPE);
+        switch (net.minecraft.world.level.block.StairBlock$1.$SwitchMap$net$minecraft$world$level$block$Mirror[$$1.ordinal()]) {
             case 1: {
-                if (direction.getAxis() != net.minecraft.core.Direction$Axis.Z) break;
-                switch (net.minecraft.world.level.block.StairBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape[stairsShape.ordinal()]) {
+                if ($$2.getAxis() != net.minecraft.core.Direction$Axis.Z) break;
+                switch (net.minecraft.world.level.block.StairBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape[$$3.ordinal()]) {
                     case 1: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_RIGHT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_RIGHT);
                     }
                     case 2: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_LEFT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_LEFT);
                     }
                     case 3: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_RIGHT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_RIGHT);
                     }
                     case 4: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_LEFT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_LEFT);
                     }
                 }
-                return state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180);
+                return $$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180);
             }
             case 2: {
-                if (direction.getAxis() != net.minecraft.core.Direction$Axis.X) break;
-                switch (net.minecraft.world.level.block.StairBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape[stairsShape.ordinal()]) {
+                if ($$2.getAxis() != net.minecraft.core.Direction$Axis.X) break;
+                switch (net.minecraft.world.level.block.StairBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape[$$3.ordinal()]) {
                     case 1: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_LEFT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_LEFT);
                     }
                     case 2: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_RIGHT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.INNER_RIGHT);
                     }
                     case 3: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_RIGHT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_RIGHT);
                     }
                     case 4: {
-                        return (net.minecraft.world.level.block.state.BlockState)state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_LEFT);
+                        return (net.minecraft.world.level.block.state.BlockState)$$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180).setValue((net.minecraft.world.level.block.state.properties.Property)SHAPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.StairsShape.OUTER_LEFT);
                     }
                     case 5: {
-                        return state.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180);
+                        return $$0.rotate(net.minecraft.world.level.block.Rotation.CLOCKWISE_180);
                     }
                 }
                 break;
             }
         }
-        return super.mirror(state, mirror);
+        return super.mirror($$0, $$1);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, HALF, SHAPE, WATERLOGGED});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, HALF, SHAPE, WATERLOGGED});
     }
 
-    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState state) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState $$0) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
             return net.minecraft.world.level.material.Fluids.WATER.getSource(false);
         }
-        return super.getFluidState(state);
+        return super.getFluidState($$0);
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 