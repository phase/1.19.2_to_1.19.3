--- net/minecraft/world/level/block/EnderChestBlock.java
+++ net/minecraft/world/level/block/EnderChestBlock.java
@@ -17,41 +17,41 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH)).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
     }
 
-    public net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult<? extends net.minecraft.world.level.block.entity.ChestBlockEntity> combine(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, boolean override) {
+    public net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult<? extends net.minecraft.world.level.block.entity.ChestBlockEntity> combine(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, boolean $$3) {
         return net.minecraft.world.level.block.DoubleBlockCombiner$Combiner::acceptNone;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return SHAPE;
     }
 
-    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState $$0) {
         return net.minecraft.world.level.block.RenderShape.ENTITYBLOCK_ANIMATED;
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.material.FluidState fluidState = context.getLevel().getFluidState(context.getClickedPos());
-        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)context.getHorizontalDirection().getOpposite())).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((fluidState.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.material.FluidState $$1 = $$0.getLevel().getFluidState($$0.getClickedPos());
+        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$0.getHorizontalDirection().getOpposite())).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf(($$1.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        net.minecraft.world.inventory.PlayerEnderChestContainer playerEnderChestContainer = player.getEnderChestInventory();
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (playerEnderChestContainer == null || !(blockEntity instanceof net.minecraft.world.level.block.entity.EnderChestBlockEntity)) {
-            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$12, net.minecraft.core.BlockPos $$22, net.minecraft.world.entity.player.Player $$32, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        net.minecraft.world.inventory.PlayerEnderChestContainer $$6 = $$32.getEnderChestInventory();
+        net.minecraft.world.level.block.entity.BlockEntity $$7 = $$12.getBlockEntity($$22);
+        if ($$6 == null || !($$7 instanceof net.minecraft.world.level.block.entity.EnderChestBlockEntity)) {
+            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$12.isClientSide);
         }
-        net.minecraft.core.BlockPos blockPos = pos.above();
-        if (level.getBlockState(blockPos).isRedstoneConductor((net.minecraft.world.level.BlockGetter)level, blockPos)) {
-            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+        net.minecraft.core.BlockPos $$8 = $$22.above();
+        if ($$12.getBlockState($$8).isRedstoneConductor((net.minecraft.world.level.BlockGetter)$$12, $$8)) {
+            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$12.isClientSide);
         }
-        if (level.isClientSide) {
+        if ($$12.isClientSide) {
             return net.minecraft.world.InteractionResult.SUCCESS;
         }
-        net.minecraft.world.level.block.entity.EnderChestBlockEntity enderChestBlockEntity = (net.minecraft.world.level.block.entity.EnderChestBlockEntity)blockEntity;
-        playerEnderChestContainer.setActiveChest(enderChestBlockEntity);
-        player.openMenu((net.minecraft.world.MenuProvider)new net.minecraft.world.SimpleMenuProvider(($$1, $$2, $$3) -> net.minecraft.world.inventory.ChestMenu.threeRows((int)$$1, (net.minecraft.world.entity.player.Inventory)$$2, (net.minecraft.world.Container)playerEnderChestContainer), CONTAINER_TITLE));
-        player.awardStat(net.minecraft.stats.Stats.OPEN_ENDERCHEST);
-        net.minecraft.world.entity.monster.piglin.PiglinAi.angerNearbyPiglins((net.minecraft.world.entity.player.Player)player, (boolean)true);
+        net.minecraft.world.level.block.entity.EnderChestBlockEntity $$9 = (net.minecraft.world.level.block.entity.EnderChestBlockEntity)$$7;
+        $$6.setActiveChest($$9);
+        $$32.openMenu((net.minecraft.world.MenuProvider)new net.minecraft.world.SimpleMenuProvider(($$1, $$2, $$3) -> net.minecraft.world.inventory.ChestMenu.threeRows((int)$$1, (net.minecraft.world.entity.player.Inventory)$$2, (net.minecraft.world.Container)$$6), CONTAINER_TITLE));
+        $$32.awardStat(net.minecraft.stats.Stats.OPEN_ENDERCHEST);
+        net.minecraft.world.entity.monster.piglin.PiglinAi.angerNearbyPiglins((net.minecraft.world.entity.player.Player)$$32, (boolean)true);
         return net.minecraft.world.InteractionResult.CONSUME;
     }
 
@@ -78,33 +78,33 @@
         }
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rot) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)rot.rotate((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$1.rotate((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return state.rotate(mirror.getRotation((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return $$0.rotate($$1.getRotation((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, WATERLOGGED});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, WATERLOGGED});
     }
 
-    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState state) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState $$0) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
             return net.minecraft.world.level.material.Fluids.WATER.getSource(false);
         }
-        return super.getFluidState(state);
+        return super.getFluidState($$0);
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)level));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)$$3));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 