--- net/minecraft/world/level/block/BambooBlock.java
+++ net/minecraft/world/level/block/BambooBlock.java
@@ -27,27 +27,27 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)0))).setValue((net.minecraft.world.level.block.state.properties.Property)LEAVES, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.BambooLeaves.NONE)).setValue((net.minecraft.world.level.block.state.properties.Property)STAGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)0)));
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE, LEAVES, STAGE});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE, LEAVES, STAGE});
     }
 
-    public boolean propagatesSkylightDown(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter reader, net.minecraft.core.BlockPos pos) {
+    public boolean propagatesSkylightDown(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
         return true;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        net.minecraft.world.phys.shapes.VoxelShape voxelShape = state.getValue((net.minecraft.world.level.block.state.properties.Property)LEAVES) == net.minecraft.world.level.block.state.properties.BambooLeaves.LARGE ? LARGE_SHAPE : SMALL_SHAPE;
-        net.minecraft.world.phys.Vec3 vec3 = state.getOffset(level, pos);
-        return voxelShape.move(vec3.x, vec3.y, vec3.z);
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        net.minecraft.world.phys.shapes.VoxelShape $$4 = $$0.getValue((net.minecraft.world.level.block.state.properties.Property)LEAVES) == net.minecraft.world.level.block.state.properties.BambooLeaves.LARGE ? LARGE_SHAPE : SMALL_SHAPE;
+        net.minecraft.world.phys.Vec3 $$5 = $$0.getOffset($$1, $$2);
+        return $$4.move($$5.x, $$5.y, $$5.z);
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        net.minecraft.world.phys.Vec3 vec3 = state.getOffset(level, pos);
-        return COLLISION_SHAPE.move(vec3.x, vec3.y, vec3.z);
+    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        net.minecraft.world.phys.Vec3 $$4 = $$0.getOffset($$1, $$2);
+        return COLLISION_SHAPE.move($$4.x, $$4.y, $$4.z);
     }
 
     public boolean isCollisionShapeFullBlock(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
@@ -55,23 +55,23 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.material.FluidState fluidState = context.getLevel().getFluidState(context.getClickedPos());
-        if (!fluidState.isEmpty()) {
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.material.FluidState $$1 = $$0.getLevel().getFluidState($$0.getClickedPos());
+        if (!$$1.isEmpty()) {
             return null;
         }
-        net.minecraft.world.level.block.state.BlockState blockState = context.getLevel().getBlockState(context.getClickedPos().below());
-        if (blockState.is(net.minecraft.tags.BlockTags.BAMBOO_PLANTABLE_ON)) {
-            if (blockState.is(net.minecraft.world.level.block.Blocks.BAMBOO_SAPLING)) {
+        net.minecraft.world.level.block.state.BlockState $$2 = $$0.getLevel().getBlockState($$0.getClickedPos().below());
+        if ($$2.is(net.minecraft.tags.BlockTags.BAMBOO_PLANTABLE_ON)) {
+            if ($$2.is(net.minecraft.world.level.block.Blocks.BAMBOO_SAPLING)) {
                 return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)0));
             }
-            if (blockState.is(net.minecraft.world.level.block.Blocks.BAMBOO)) {
-                int n = (java.lang.Integer)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) > 0 ? 1 : 0;
-                return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)n));
+            if ($$2.is(net.minecraft.world.level.block.Blocks.BAMBOO)) {
+                int $$3 = (java.lang.Integer)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) > 0 ? 1 : 0;
+                return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)$$3));
             }
-            net.minecraft.world.level.block.state.BlockState blockState2 = context.getLevel().getBlockState(context.getClickedPos().above());
-            if (blockState2.is(net.minecraft.world.level.block.Blocks.BAMBOO)) {
-                return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)((java.lang.Integer)blockState2.getValue((net.minecraft.world.level.block.state.properties.Property)AGE)));
+            net.minecraft.world.level.block.state.BlockState $$4 = $$0.getLevel().getBlockState($$0.getClickedPos().above());
+            if ($$4.is(net.minecraft.world.level.block.Blocks.BAMBOO)) {
+                return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)((java.lang.Integer)$$4.getValue((net.minecraft.world.level.block.state.properties.Property)AGE)));
             }
             return net.minecraft.world.level.block.Blocks.BAMBOO_SAPLING.defaultBlockState();
         }
@@ -84,8 +84,8 @@
         }
     }
 
-    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState state) {
-        return (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)STAGE) == 0;
+    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState $$0) {
+        return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)STAGE) == 0;
     }
 
     public void randomTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -98,24 +98,24 @@
         }
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        return level.getBlockState(pos.below()).is(net.minecraft.tags.BlockTags.BAMBOO_PLANTABLE_ON);
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        return $$1.getBlockState($$2.below()).is(net.minecraft.tags.BlockTags.BAMBOO_PLANTABLE_ON);
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (!state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.block.Block)this, 1);
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (!$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.block.Block)this, 1);
         }
-        if (facing == net.minecraft.core.Direction.UP && facingState.is(net.minecraft.world.level.block.Blocks.BAMBOO) && (java.lang.Integer)facingState.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) > (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)AGE)) {
-            level.setBlock(currentPos, (net.minecraft.world.level.block.state.BlockState)state.cycle((net.minecraft.world.level.block.state.properties.Property)AGE), 2);
+        if ($$1 == net.minecraft.core.Direction.UP && $$2.is(net.minecraft.world.level.block.Blocks.BAMBOO) && (java.lang.Integer)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) > (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AGE)) {
+            $$3.setBlock($$4, (net.minecraft.world.level.block.state.BlockState)$$0.cycle((net.minecraft.world.level.block.state.properties.Property)AGE), 2);
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean isValidBonemealTarget(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, boolean isClient) {
-        int n;
-        int n2 = this.getHeightAboveUpToMax(level, pos);
-        return n2 + (n = this.getHeightBelowUpToMax(level, pos)) + 1 < 16 && (java.lang.Integer)level.getBlockState(pos.above(n2)).getValue((net.minecraft.world.level.block.state.properties.Property)STAGE) != 1;
+    public boolean isValidBonemealTarget(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, boolean $$3) {
+        int $$5;
+        int $$4 = this.getHeightAboveUpToMax($$0, $$1);
+        return $$4 + ($$5 = this.getHeightBelowUpToMax($$0, $$1)) + 1 < 16 && (java.lang.Integer)$$0.getBlockState($$1.above($$4)).getValue((net.minecraft.world.level.block.state.properties.Property)STAGE) != 1;
     }
 
     public boolean isBonemealSuccess(net.minecraft.world.level.Level $$0, net.minecraft.util.RandomSource $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3) {
@@ -139,11 +139,11 @@
         }
     }
 
-    public float getDestroyProgress(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.entity.player.Player player, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        if (player.getMainHandItem().getItem() instanceof net.minecraft.world.item.SwordItem) {
+    public float getDestroyProgress(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.entity.player.Player $$1, net.minecraft.world.level.BlockGetter $$2, net.minecraft.core.BlockPos $$3) {
+        if ($$1.getMainHandItem().getItem() instanceof net.minecraft.world.item.SwordItem) {
             return 1.0f;
         }
-        return super.getDestroyProgress(state, player, level, pos);
+        return super.getDestroyProgress($$0, $$1, $$2, $$3);
     }
 
     public void growBamboo(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3, int $$4) {
@@ -167,20 +167,20 @@
         $$1.setBlock($$2.above(), (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)$$9))).setValue((net.minecraft.world.level.block.state.properties.Property)LEAVES, (java.lang.Comparable)$$8)).setValue((net.minecraft.world.level.block.state.properties.Property)STAGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)$$10)), 3);
     }
 
-    public int getHeightAboveUpToMax(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        int n;
-        for (n = 0;
- n < 16 && level.getBlockState(pos.above(n + 1)).is(net.minecraft.world.level.block.Blocks.BAMBOO); ++n) {
+    public int getHeightAboveUpToMax(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1) {
+        int $$2;
+        for ($$2 = 0;
+ $$2 < 16 && $$0.getBlockState($$1.above($$2 + 1)).is(net.minecraft.world.level.block.Blocks.BAMBOO); ++$$2) {
         }
-        return n;
+        return $$2;
     }
 
-    public int getHeightBelowUpToMax(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        int n;
-        for (n = 0;
- n < 16 && level.getBlockState(pos.below(n + 1)).is(net.minecraft.world.level.block.Blocks.BAMBOO); ++n) {
+    public int getHeightBelowUpToMax(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1) {
+        int $$2;
+        for ($$2 = 0;
+ $$2 < 16 && $$0.getBlockState($$1.below($$2 + 1)).is(net.minecraft.world.level.block.Blocks.BAMBOO); ++$$2) {
         }
-        return n;
+        return $$2;
     }
 
     static {