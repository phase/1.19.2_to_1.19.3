--- net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -68,6 +68,7 @@
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.MANGROVE_FENCE_GATE, (int)300);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.NOTE_BLOCK, (int)300);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.BOOKSHELF, (int)300);
+        net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.CHISELED_BOOKSHELF, (int)300);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.LECTERN, (int)300);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.JUKEBOX, (int)300);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.CHEST, (int)300);
@@ -79,6 +80,7 @@
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.FISHING_ROD, (int)300);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.level.block.Blocks.LADDER, (int)300);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.tags.TagKey)net.minecraft.tags.ItemTags.SIGNS, (int)200);
+        net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.tags.TagKey)net.minecraft.tags.ItemTags.HANGING_SIGNS, (int)800);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.WOODEN_SHOVEL, (int)200);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.WOODEN_SWORD, (int)200);
         net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.add((java.util.Map)$$0, (net.minecraft.world.level.ItemLike)net.minecraft.world.item.Items.WOODEN_HOE, (int)200);
@@ -109,8 +111,8 @@
         return $$0;
     }
 
-    public static boolean isNeverAFurnaceFuel(net.minecraft.world.item.Item item) {
-        return item.builtInRegistryHolder().is(net.minecraft.tags.ItemTags.NON_FLAMMABLE_WOOD);
+    public static boolean isNeverAFurnaceFuel(net.minecraft.world.item.Item $$0) {
+        return $$0.builtInRegistryHolder().is(net.minecraft.tags.ItemTags.NON_FLAMMABLE_WOOD);
     }
 
     public static void add(java.util.Map<net.minecraft.world.item.Item, java.lang.Integer> $$0, net.minecraft.tags.TagKey<net.minecraft.world.item.Item> $$1, int $$2) {
@@ -120,15 +122,15 @@
         }
     }
 
-    public static void add(java.util.Map<net.minecraft.world.item.Item, java.lang.Integer> map, net.minecraft.world.level.ItemLike item, int burnTime) {
-        net.minecraft.world.item.Item item2 = item.asItem();
-        if (net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.isNeverAFurnaceFuel((net.minecraft.world.item.Item)item2)) {
+    public static void add(java.util.Map<net.minecraft.world.item.Item, java.lang.Integer> $$0, net.minecraft.world.level.ItemLike $$1, int $$2) {
+        net.minecraft.world.item.Item $$3 = $$1.asItem();
+        if (net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.isNeverAFurnaceFuel((net.minecraft.world.item.Item)$$3)) {
             if (net.minecraft.SharedConstants.IS_RUNNING_IN_IDE) {
-                throw (java.lang.IllegalStateException)net.minecraft.Util.pauseInIde((java.lang.Throwable)new java.lang.IllegalStateException("A developer tried to explicitly make fire resistant item " + item2.getName(null).getString() + " a furnace fuel. That will not work!"));
+                throw (java.lang.IllegalStateException)net.minecraft.Util.pauseInIde((java.lang.Throwable)new java.lang.IllegalStateException("A developer tried to explicitly make fire resistant item " + $$3.getName(null).getString() + " a furnace fuel. That will not work!"));
             }
             return;
         }
-        map.put((java.lang.Object)item2, (java.lang.Object)burnTime);
+        $$0.put((java.lang.Object)$$3, (java.lang.Object)$$2);
     }
 
     public boolean isLit() {
@@ -258,39 +260,39 @@
         return true;
     }
 
-    public int getBurnDuration(net.minecraft.world.item.ItemStack fuel) {
-        if (fuel.isEmpty()) {
+    public int getBurnDuration(net.minecraft.world.item.ItemStack $$0) {
+        if ($$0.isEmpty()) {
             return 0;
         }
-        net.minecraft.world.item.Item item = fuel.getItem();
-        return (java.lang.Integer)net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.getFuel().getOrDefault((java.lang.Object)item, (java.lang.Object)0);
+        net.minecraft.world.item.Item $$1 = $$0.getItem();
+        return (java.lang.Integer)net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.getFuel().getOrDefault((java.lang.Object)$$1, (java.lang.Object)0);
     }
 
     public static int getTotalCookTime(net.minecraft.world.level.Level $$0, net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity $$1) {
         return (java.lang.Integer)$$1.quickCheck.getRecipeFor((net.minecraft.world.Container)$$1, $$0).map(net.minecraft.world.item.crafting.AbstractCookingRecipe::getCookingTime).orElse((java.lang.Object)200);
     }
 
-    public static boolean isFuel(net.minecraft.world.item.ItemStack stack) {
-        return net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.getFuel().containsKey((java.lang.Object)stack.getItem());
+    public static boolean isFuel(net.minecraft.world.item.ItemStack $$0) {
+        return net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.getFuel().containsKey((java.lang.Object)$$0.getItem());
     }
 
-    public int[] getSlotsForFace(net.minecraft.core.Direction side) {
-        if (side == net.minecraft.core.Direction.DOWN) {
+    public int[] getSlotsForFace(net.minecraft.core.Direction $$0) {
+        if ($$0 == net.minecraft.core.Direction.DOWN) {
             return SLOTS_FOR_DOWN;
         }
-        if (side == net.minecraft.core.Direction.UP) {
+        if ($$0 == net.minecraft.core.Direction.UP) {
             return SLOTS_FOR_UP;
         }
         return SLOTS_FOR_SIDES;
     }
 
-    public boolean canPlaceItemThroughFace(int index, net.minecraft.world.item.ItemStack itemStack, @javax.annotation.Nullable net.minecraft.core.Direction direction) {
-        return this.canPlaceItem(index, itemStack);
+    public boolean canPlaceItemThroughFace(int $$0, net.minecraft.world.item.ItemStack $$1, @javax.annotation.Nullable net.minecraft.core.Direction $$2) {
+        return this.canPlaceItem($$0, $$1);
     }
 
-    public boolean canTakeItemThroughFace(int index, net.minecraft.world.item.ItemStack stack, net.minecraft.core.Direction direction) {
-        if (direction == net.minecraft.core.Direction.DOWN && index == 1) {
-            return stack.is(net.minecraft.world.item.Items.WATER_BUCKET) || stack.is(net.minecraft.world.item.Items.BUCKET);
+    public boolean canTakeItemThroughFace(int $$0, net.minecraft.world.item.ItemStack $$1, net.minecraft.core.Direction $$2) {
+        if ($$2 == net.minecraft.core.Direction.DOWN && $$0 == 1) {
+            return $$1.is(net.minecraft.world.item.Items.WATER_BUCKET) || $$1.is(net.minecraft.world.item.Items.BUCKET);
         }
         return true;
     }
@@ -307,46 +309,46 @@
         return true;
     }
 
-    public net.minecraft.world.item.ItemStack getItem(int index) {
-        return (net.minecraft.world.item.ItemStack)this.items.get(index);
+    public net.minecraft.world.item.ItemStack getItem(int $$0) {
+        return (net.minecraft.world.item.ItemStack)this.items.get($$0);
     }
 
-    public net.minecraft.world.item.ItemStack removeItem(int index, int count) {
-        return net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.items, (int)index, (int)count);
+    public net.minecraft.world.item.ItemStack removeItem(int $$0, int $$1) {
+        return net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.items, (int)$$0, (int)$$1);
     }
 
-    public net.minecraft.world.item.ItemStack removeItemNoUpdate(int index) {
-        return net.minecraft.world.ContainerHelper.takeItem((java.util.List)this.items, (int)index);
+    public net.minecraft.world.item.ItemStack removeItemNoUpdate(int $$0) {
+        return net.minecraft.world.ContainerHelper.takeItem((java.util.List)this.items, (int)$$0);
     }
 
-    public void setItem(int index, net.minecraft.world.item.ItemStack stack) {
-        net.minecraft.world.item.ItemStack itemStack = (net.minecraft.world.item.ItemStack)this.items.get(index);
-        boolean bl = !stack.isEmpty() && stack.sameItem(itemStack) && net.minecraft.world.item.ItemStack.tagMatches((net.minecraft.world.item.ItemStack)stack, (net.minecraft.world.item.ItemStack)itemStack);
-        this.items.set(index, (java.lang.Object)stack);
-        if (stack.getCount() > this.getMaxStackSize()) {
-            stack.setCount(this.getMaxStackSize());
+    public void setItem(int $$0, net.minecraft.world.item.ItemStack $$1) {
+        net.minecraft.world.item.ItemStack $$2 = (net.minecraft.world.item.ItemStack)this.items.get($$0);
+        boolean $$3 = !$$1.isEmpty() && $$1.sameItem($$2) && net.minecraft.world.item.ItemStack.tagMatches((net.minecraft.world.item.ItemStack)$$1, (net.minecraft.world.item.ItemStack)$$2);
+        this.items.set($$0, (java.lang.Object)$$1);
+        if ($$1.getCount() > this.getMaxStackSize()) {
+            $$1.setCount(this.getMaxStackSize());
         }
-        if (index == 0 && !bl) {
+        if ($$0 == 0 && !$$3) {
             this.cookingTotalTime = net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.getTotalCookTime((net.minecraft.world.level.Level)this.level, (net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity)this);
             this.cookingProgress = 0;
             this.setChanged();
         }
     }
 
-    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
+    public boolean stillValid(net.minecraft.world.entity.player.Player $$0) {
         if (this.level.getBlockEntity(this.worldPosition) != this) {
             return false;
         }
-        return player.distanceToSqr((double)this.worldPosition.getX() + 0.5, (double)this.worldPosition.getY() + 0.5, (double)this.worldPosition.getZ() + 0.5) <= 64.0;
+        return $$0.distanceToSqr((double)this.worldPosition.getX() + 0.5, (double)this.worldPosition.getY() + 0.5, (double)this.worldPosition.getZ() + 0.5) <= 64.0;
     }
 
-    public boolean canPlaceItem(int index, net.minecraft.world.item.ItemStack stack) {
-        if (index == 2) {
+    public boolean canPlaceItem(int $$0, net.minecraft.world.item.ItemStack $$1) {
+        if ($$0 == 2) {
             return false;
         }
-        if (index == 1) {
-            net.minecraft.world.item.ItemStack itemStack = (net.minecraft.world.item.ItemStack)this.items.get(1);
-            return net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.isFuel((net.minecraft.world.item.ItemStack)stack) || stack.is(net.minecraft.world.item.Items.BUCKET) && !itemStack.is(net.minecraft.world.item.Items.BUCKET);
+        if ($$0 == 1) {
+            net.minecraft.world.item.ItemStack $$2 = (net.minecraft.world.item.ItemStack)this.items.get(1);
+            return net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity.isFuel((net.minecraft.world.item.ItemStack)$$1) || $$1.is(net.minecraft.world.item.Items.BUCKET) && !$$2.is(net.minecraft.world.item.Items.BUCKET);
         }
         return true;
     }
@@ -355,10 +357,10 @@
         this.items.clear();
     }
 
-    public void setRecipeUsed(@javax.annotation.Nullable net.minecraft.world.item.crafting.Recipe<?> recipe) {
-        if (recipe != null) {
-            net.minecraft.resources.ResourceLocation resourceLocation = recipe.getId();
-            this.recipesUsed.addTo((java.lang.Object)resourceLocation, 1);
+    public void setRecipeUsed(@javax.annotation.Nullable net.minecraft.world.item.crafting.Recipe<?> $$0) {
+        if ($$0 != null) {
+            net.minecraft.resources.ResourceLocation $$1 = $$0.getId();
+            this.recipesUsed.addTo((java.lang.Object)$$1, 1);
         }
     }
 
@@ -367,7 +369,7 @@
         return null;
     }
 
-    public void awardUsedRecipes(net.minecraft.world.entity.player.Player player) {
+    public void awardUsedRecipes(net.minecraft.world.entity.player.Player $$0) {
     }
 
     public void awardUsedRecipesAndPopExperience(net.minecraft.server.level.ServerPlayer $$0) {
@@ -393,9 +395,9 @@
         net.minecraft.world.entity.ExperienceOrb.award((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.world.phys.Vec3)$$1, (int)$$4);
     }
 
-    public void fillStackedContents(net.minecraft.world.entity.player.StackedContents helper) {
-        for (net.minecraft.world.item.ItemStack itemStack : this.items) {
-            helper.accountStack(itemStack);
+    public void fillStackedContents(net.minecraft.world.entity.player.StackedContents $$0) {
+        for (net.minecraft.world.item.ItemStack $$1 : this.items) {
+            $$0.accountStack($$1);
         }
     }
 