--- net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -40,16 +40,16 @@
         return this.items.size();
     }
 
-    public net.minecraft.world.item.ItemStack removeItem(int index, int count) {
+    public net.minecraft.world.item.ItemStack removeItem(int $$0, int $$1) {
         this.unpackLootTable(null);
-        return net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.getItems(), (int)index, (int)count);
+        return net.minecraft.world.ContainerHelper.removeItem((java.util.List)this.getItems(), (int)$$0, (int)$$1);
     }
 
-    public void setItem(int index, net.minecraft.world.item.ItemStack stack) {
+    public void setItem(int $$0, net.minecraft.world.item.ItemStack $$1) {
         this.unpackLootTable(null);
-        this.getItems().set(index, (java.lang.Object)stack);
-        if (stack.getCount() > this.getMaxStackSize()) {
-            stack.setCount(this.getMaxStackSize());
+        this.getItems().set($$0, (java.lang.Object)$$1);
+        if ($$1.getCount() > this.getMaxStackSize()) {
+            $$1.setCount(this.getMaxStackSize());
         }
     }
 
@@ -124,15 +124,15 @@
         return java.util.stream.IntStream.range((int)0, (int)$$0.getContainerSize());
     }
 
-    public static boolean isFullContainer(net.minecraft.world.Container container, net.minecraft.core.Direction side) {
-        return net.minecraft.world.level.block.entity.HopperBlockEntity.getSlots((net.minecraft.world.Container)container, (net.minecraft.core.Direction)side).allMatch($$1 -> {
-            net.minecraft.world.item.ItemStack $$2 = container.getItem($$1);
+    public static boolean isFullContainer(net.minecraft.world.Container $$0, net.minecraft.core.Direction $$12) {
+        return net.minecraft.world.level.block.entity.HopperBlockEntity.getSlots((net.minecraft.world.Container)$$0, (net.minecraft.core.Direction)$$12).allMatch($$1 -> {
+            net.minecraft.world.item.ItemStack $$2 = $$0.getItem($$1);
             return $$2.getCount() >= $$2.getMaxStackSize();
         });
     }
 
-    public static boolean isEmptyContainer(net.minecraft.world.Container container, net.minecraft.core.Direction direction) {
-        return net.minecraft.world.level.block.entity.HopperBlockEntity.getSlots((net.minecraft.world.Container)container, (net.minecraft.core.Direction)direction).allMatch(slotIndex -> container.getItem(slotIndex).isEmpty());
+    public static boolean isEmptyContainer(net.minecraft.world.Container $$0, net.minecraft.core.Direction $$12) {
+        return net.minecraft.world.level.block.entity.HopperBlockEntity.getSlots((net.minecraft.world.Container)$$0, (net.minecraft.core.Direction)$$12).allMatch($$1 -> $$0.getItem($$1).isEmpty());
     }
 
     public static boolean suckInItems(net.minecraft.world.level.Level $$0, net.minecraft.world.level.block.entity.Hopper $$1) {
@@ -151,16 +151,16 @@
         return false;
     }
 
-    public static boolean tryTakeInItemFromSlot(net.minecraft.world.level.block.entity.Hopper hopper, net.minecraft.world.Container container, int slot, net.minecraft.core.Direction direction) {
-        net.minecraft.world.item.ItemStack itemStack = container.getItem(slot);
-        if (!itemStack.isEmpty() && net.minecraft.world.level.block.entity.HopperBlockEntity.canTakeItemFromContainer((net.minecraft.world.Container)container, (net.minecraft.world.item.ItemStack)itemStack, (int)slot, (net.minecraft.core.Direction)direction)) {
-            net.minecraft.world.item.ItemStack itemStack2 = itemStack.copy();
-            net.minecraft.world.item.ItemStack itemStack3 = net.minecraft.world.level.block.entity.HopperBlockEntity.addItem((net.minecraft.world.Container)container, (net.minecraft.world.Container)hopper, (net.minecraft.world.item.ItemStack)container.removeItem(slot, 1), null);
-            if (itemStack3.isEmpty()) {
-                container.setChanged();
+    public static boolean tryTakeInItemFromSlot(net.minecraft.world.level.block.entity.Hopper $$0, net.minecraft.world.Container $$1, int $$2, net.minecraft.core.Direction $$3) {
+        net.minecraft.world.item.ItemStack $$4 = $$1.getItem($$2);
+        if (!$$4.isEmpty() && net.minecraft.world.level.block.entity.HopperBlockEntity.canTakeItemFromContainer((net.minecraft.world.Container)$$1, (net.minecraft.world.item.ItemStack)$$4, (int)$$2, (net.minecraft.core.Direction)$$3)) {
+            net.minecraft.world.item.ItemStack $$5 = $$4.copy();
+            net.minecraft.world.item.ItemStack $$6 = net.minecraft.world.level.block.entity.HopperBlockEntity.addItem((net.minecraft.world.Container)$$1, (net.minecraft.world.Container)$$0, (net.minecraft.world.item.ItemStack)$$1.removeItem($$2, 1), null);
+            if ($$6.isEmpty()) {
+                $$1.setChanged();
                 return true;
             }
-            container.setItem(slot, itemStack2);
+            $$1.setItem($$2, $$5);
         }
         return false;
     }
@@ -178,66 +178,65 @@
         return $$2;
     }
 
-    public static net.minecraft.world.item.ItemStack addItem(@javax.annotation.Nullable net.minecraft.world.Container source, net.minecraft.world.Container destination, net.minecraft.world.item.ItemStack stack, @javax.annotation.Nullable net.minecraft.core.Direction direction) {
-        if (destination instanceof net.minecraft.world.WorldlyContainer && direction != null) {
-            net.minecraft.world.WorldlyContainer worldlyContainer = (net.minecraft.world.WorldlyContainer)destination;
-            int[] nArray = worldlyContainer.getSlotsForFace(direction);
-            for (int i = 0; i < nArray.length && !stack.isEmpty(); ++i) {
-                stack = net.minecraft.world.level.block.entity.HopperBlockEntity.tryMoveInItem((net.minecraft.world.Container)source, (net.minecraft.world.Container)destination, (net.minecraft.world.item.ItemStack)stack, (int)nArray[i], (net.minecraft.core.Direction)direction);
+    public static net.minecraft.world.item.ItemStack addItem(@javax.annotation.Nullable net.minecraft.world.Container $$0, net.minecraft.world.Container $$1, net.minecraft.world.item.ItemStack $$2, @javax.annotation.Nullable net.minecraft.core.Direction $$3) {
+        if ($$1 instanceof net.minecraft.world.WorldlyContainer && $$3 != null) {
+            net.minecraft.world.WorldlyContainer $$4 = (net.minecraft.world.WorldlyContainer)$$1;
+            int[] $$5 = $$4.getSlotsForFace($$3);
+            for (int $$6 = 0; $$6 < $$5.length && !$$2.isEmpty(); ++$$6) {
+                $$2 = net.minecraft.world.level.block.entity.HopperBlockEntity.tryMoveInItem((net.minecraft.world.Container)$$0, (net.minecraft.world.Container)$$1, (net.minecraft.world.item.ItemStack)$$2, (int)$$5[$$6], (net.minecraft.core.Direction)$$3);
             }
         } else {
-            int n = destination.getContainerSize();
-            for (int i = 0; i < n && !stack.isEmpty(); ++i) {
-                stack = net.minecraft.world.level.block.entity.HopperBlockEntity.tryMoveInItem((net.minecraft.world.Container)source, (net.minecraft.world.Container)destination, (net.minecraft.world.item.ItemStack)stack, (int)i, (net.minecraft.core.Direction)direction);
+            int $$7 = $$1.getContainerSize();
+            for (int $$8 = 0; $$8 < $$7 && !$$2.isEmpty(); ++$$8) {
+                $$2 = net.minecraft.world.level.block.entity.HopperBlockEntity.tryMoveInItem((net.minecraft.world.Container)$$0, (net.minecraft.world.Container)$$1, (net.minecraft.world.item.ItemStack)$$2, (int)$$8, (net.minecraft.core.Direction)$$3);
             }
         }
-        return stack;
+        return $$2;
     }
 
-    public static boolean canPlaceItemInContainer(net.minecraft.world.Container container, net.minecraft.world.item.ItemStack stack, int slot, @javax.annotation.Nullable net.minecraft.core.Direction direction) {
-        if (!container.canPlaceItem(slot, stack)) {
+    public static boolean canPlaceItemInContainer(net.minecraft.world.Container $$0, net.minecraft.world.item.ItemStack $$1, int $$2, @javax.annotation.Nullable net.minecraft.core.Direction $$3) {
+        if (!$$0.canPlaceItem($$2, $$1)) {
             return false;
         }
-        return !(container instanceof net.minecraft.world.WorldlyContainer) || ((net.minecraft.world.WorldlyContainer)container).canPlaceItemThroughFace(slot, stack, direction);
+        return !($$0 instanceof net.minecraft.world.WorldlyContainer) || ((net.minecraft.world.WorldlyContainer)$$0).canPlaceItemThroughFace($$2, $$1, $$3);
     }
 
-    public static boolean canTakeItemFromContainer(net.minecraft.world.Container container, net.minecraft.world.item.ItemStack stack, int slot, net.minecraft.core.Direction direction) {
-        return !(container instanceof net.minecraft.world.WorldlyContainer) || ((net.minecraft.world.WorldlyContainer)container).canTakeItemThroughFace(slot, stack, direction);
+    public static boolean canTakeItemFromContainer(net.minecraft.world.Container $$0, net.minecraft.world.item.ItemStack $$1, int $$2, net.minecraft.core.Direction $$3) {
+        return !($$0 instanceof net.minecraft.world.WorldlyContainer) || ((net.minecraft.world.WorldlyContainer)$$0).canTakeItemThroughFace($$2, $$1, $$3);
     }
 
-    public static net.minecraft.world.item.ItemStack tryMoveInItem(@javax.annotation.Nullable net.minecraft.world.Container source, net.minecraft.world.Container destination, net.minecraft.world.item.ItemStack stack, int slot, @javax.annotation.Nullable net.minecraft.core.Direction direction) {
-        net.minecraft.world.item.ItemStack itemStack = destination.getItem(slot);
-        if (net.minecraft.world.level.block.entity.HopperBlockEntity.canPlaceItemInContainer((net.minecraft.world.Container)destination, (net.minecraft.world.item.ItemStack)stack, (int)slot, (net.minecraft.core.Direction)direction)) {
-            int n;
-            boolean bl = false;
-            boolean bl2 = destination.isEmpty();
-            if (itemStack.isEmpty()) {
-                destination.setItem(slot, stack);
-                stack = net.minecraft.world.item.ItemStack.EMPTY;
-                bl = true;
-            } else if (net.minecraft.world.level.block.entity.HopperBlockEntity.canMergeItems((net.minecraft.world.item.ItemStack)itemStack, (net.minecraft.world.item.ItemStack)stack)) {
-                int n2 = stack.getMaxStackSize() - itemStack.getCount();
-                n = java.lang.Math.min((int)stack.getCount(), (int)n2);
-                stack.shrink(n);
-                itemStack.grow(n);
-                boolean bl3 = bl = n > 0;
+    public static net.minecraft.world.item.ItemStack tryMoveInItem(@javax.annotation.Nullable net.minecraft.world.Container $$0, net.minecraft.world.Container $$1, net.minecraft.world.item.ItemStack $$2, int $$3, @javax.annotation.Nullable net.minecraft.core.Direction $$4) {
+        net.minecraft.world.item.ItemStack $$5 = $$1.getItem($$3);
+        if (net.minecraft.world.level.block.entity.HopperBlockEntity.canPlaceItemInContainer((net.minecraft.world.Container)$$1, (net.minecraft.world.item.ItemStack)$$2, (int)$$3, (net.minecraft.core.Direction)$$4)) {
+            boolean $$6 = false;
+            boolean $$7 = $$1.isEmpty();
+            if ($$5.isEmpty()) {
+                $$1.setItem($$3, $$2);
+                $$2 = net.minecraft.world.item.ItemStack.EMPTY;
+                $$6 = true;
+            } else if (net.minecraft.world.level.block.entity.HopperBlockEntity.canMergeItems((net.minecraft.world.item.ItemStack)$$5, (net.minecraft.world.item.ItemStack)$$2)) {
+                int $$8 = $$2.getMaxStackSize() - $$5.getCount();
+                int $$9 = java.lang.Math.min((int)$$2.getCount(), (int)$$8);
+                $$2.shrink($$9);
+                $$5.grow($$9);
+                boolean bl = $$6 = $$9 > 0;
             }
-            if (bl) {
-                net.minecraft.world.level.block.entity.HopperBlockEntity hopperBlockEntity;
-                if (bl2 && destination instanceof net.minecraft.world.level.block.entity.HopperBlockEntity && !(hopperBlockEntity = (net.minecraft.world.level.block.entity.HopperBlockEntity)destination).isOnCustomCooldown()) {
-                    n = 0;
-                    if (source instanceof net.minecraft.world.level.block.entity.HopperBlockEntity) {
-                        net.minecraft.world.level.block.entity.HopperBlockEntity hopperBlockEntity2 = (net.minecraft.world.level.block.entity.HopperBlockEntity)source;
-                        if (hopperBlockEntity.tickedGameTime >= hopperBlockEntity2.tickedGameTime) {
-                            n = 1;
+            if ($$6) {
+                net.minecraft.world.level.block.entity.HopperBlockEntity $$10;
+                if ($$7 && $$1 instanceof net.minecraft.world.level.block.entity.HopperBlockEntity && !($$10 = (net.minecraft.world.level.block.entity.HopperBlockEntity)$$1).isOnCustomCooldown()) {
+                    int $$11 = 0;
+                    if ($$0 instanceof net.minecraft.world.level.block.entity.HopperBlockEntity) {
+                        net.minecraft.world.level.block.entity.HopperBlockEntity $$12 = (net.minecraft.world.level.block.entity.HopperBlockEntity)$$0;
+                        if ($$10.tickedGameTime >= $$12.tickedGameTime) {
+                            $$11 = 1;
                         }
                     }
-                    hopperBlockEntity.setCooldown(8 - n);
+                    $$10.setCooldown(8 - $$11);
                 }
-                destination.setChanged();
+                $$1.setChanged();
             }
         }
-        return stack;
+        return $$2;
     }
 
     @javax.annotation.Nullable
@@ -261,34 +260,35 @@
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.Container getContainerAt(net.minecraft.world.level.Level level, double x, double y, double z) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity;
-        net.minecraft.world.WorldlyContainer worldlyContainer = null;
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(x, y, z);
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos);
-        net.minecraft.world.level.block.Block block = blockState.getBlock();
-        if (block instanceof net.minecraft.world.WorldlyContainerHolder) {
-            worldlyContainer = ((net.minecraft.world.WorldlyContainerHolder)block).getContainer(blockState, (net.minecraft.world.level.LevelAccessor)level, blockPos);
-        } else if (blockState.hasBlockEntity() && (blockEntity = level.getBlockEntity(blockPos)) instanceof net.minecraft.world.Container && (worldlyContainer = (net.minecraft.world.Container)blockEntity) instanceof net.minecraft.world.level.block.entity.ChestBlockEntity && block instanceof net.minecraft.world.level.block.ChestBlock) {
-            worldlyContainer = net.minecraft.world.level.block.ChestBlock.getContainer((net.minecraft.world.level.block.ChestBlock)((net.minecraft.world.level.block.ChestBlock)block), (net.minecraft.world.level.block.state.BlockState)blockState, (net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)blockPos, (boolean)true);
+    public static net.minecraft.world.Container getContainerAt(net.minecraft.world.level.Level $$0, double $$1, double $$2, double $$3) {
+        java.util.List $$9;
+        net.minecraft.world.level.block.entity.BlockEntity $$8;
+        net.minecraft.world.WorldlyContainer $$4 = null;
+        net.minecraft.core.BlockPos $$5 = new net.minecraft.core.BlockPos($$1, $$2, $$3);
+        net.minecraft.world.level.block.state.BlockState $$6 = $$0.getBlockState($$5);
+        net.minecraft.world.level.block.Block $$7 = $$6.getBlock();
+        if ($$7 instanceof net.minecraft.world.WorldlyContainerHolder) {
+            $$4 = ((net.minecraft.world.WorldlyContainerHolder)$$7).getContainer($$6, (net.minecraft.world.level.LevelAccessor)$$0, $$5);
+        } else if ($$6.hasBlockEntity() && ($$8 = $$0.getBlockEntity($$5)) instanceof net.minecraft.world.Container && ($$4 = (net.minecraft.world.Container)$$8) instanceof net.minecraft.world.level.block.entity.ChestBlockEntity && $$7 instanceof net.minecraft.world.level.block.ChestBlock) {
+            $$4 = net.minecraft.world.level.block.ChestBlock.getContainer((net.minecraft.world.level.block.ChestBlock)((net.minecraft.world.level.block.ChestBlock)$$7), (net.minecraft.world.level.block.state.BlockState)$$6, (net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$5, (boolean)true);
         }
-        if (worldlyContainer == null && !(blockEntity = level.getEntities((net.minecraft.world.entity.Entity)null, new net.minecraft.world.phys.AABB(x - 0.5, y - 0.5, z - 0.5, x + 0.5, y + 0.5, z + 0.5), net.minecraft.world.entity.EntitySelector.CONTAINER_ENTITY_SELECTOR)).isEmpty()) {
-            worldlyContainer = (net.minecraft.world.Container)blockEntity.get(level.random.nextInt(blockEntity.size()));
+        if ($$4 == null && !($$9 = $$0.getEntities((net.minecraft.world.entity.Entity)null, new net.minecraft.world.phys.AABB($$1 - 0.5, $$2 - 0.5, $$3 - 0.5, $$1 + 0.5, $$2 + 0.5, $$3 + 0.5), net.minecraft.world.entity.EntitySelector.CONTAINER_ENTITY_SELECTOR)).isEmpty()) {
+            $$4 = (net.minecraft.world.Container)$$9.get($$0.random.nextInt($$9.size()));
         }
-        return worldlyContainer;
+        return $$4;
     }
 
-    public static boolean canMergeItems(net.minecraft.world.item.ItemStack stack1, net.minecraft.world.item.ItemStack stack2) {
-        if (!stack1.is(stack2.getItem())) {
+    public static boolean canMergeItems(net.minecraft.world.item.ItemStack $$0, net.minecraft.world.item.ItemStack $$1) {
+        if (!$$0.is($$1.getItem())) {
             return false;
         }
-        if (stack1.getDamageValue() != stack2.getDamageValue()) {
+        if ($$0.getDamageValue() != $$1.getDamageValue()) {
             return false;
         }
-        if (stack1.getCount() > stack1.getMaxStackSize()) {
+        if ($$0.getCount() > $$0.getMaxStackSize()) {
             return false;
         }
-        return net.minecraft.world.item.ItemStack.tagMatches((net.minecraft.world.item.ItemStack)stack1, (net.minecraft.world.item.ItemStack)stack2);
+        return net.minecraft.world.item.ItemStack.tagMatches((net.minecraft.world.item.ItemStack)$$0, (net.minecraft.world.item.ItemStack)$$1);
     }
 
     public double getLevelX() {
@@ -303,8 +303,8 @@
         return (double)this.worldPosition.getZ() + 0.5;
     }
 
-    public void setCooldown(int cooldownTime) {
-        this.cooldownTime = cooldownTime;
+    public void setCooldown(int $$0) {
+        this.cooldownTime = $$0;
     }
 
     public boolean isOnCooldown() {
@@ -319,8 +319,8 @@
         return this.items;
     }
 
-    public void setItems(net.minecraft.core.NonNullList<net.minecraft.world.item.ItemStack> items) {
-        this.items = items;
+    public void setItems(net.minecraft.core.NonNullList<net.minecraft.world.item.ItemStack> $$0) {
+        this.items = $$0;
     }
 
     public static void entityInside(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.entity.Entity $$3, net.minecraft.world.level.block.entity.HopperBlockEntity $$4) {
@@ -329,8 +329,8 @@
         }
     }
 
-    public net.minecraft.world.inventory.AbstractContainerMenu createMenu(int id, net.minecraft.world.entity.player.Inventory player) {
-        return new net.minecraft.world.inventory.HopperMenu(id, player, (net.minecraft.world.Container)this);
+    public net.minecraft.world.inventory.AbstractContainerMenu createMenu(int $$0, net.minecraft.world.entity.player.Inventory $$1) {
+        return new net.minecraft.world.inventory.HopperMenu($$0, $$1, (net.minecraft.world.Container)this);
     }
 }
 