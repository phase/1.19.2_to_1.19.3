--- net/minecraft/world/level/block/FrostedIceBlock.java
+++ net/minecraft/world/level/block/FrostedIceBlock.java
@@ -34,39 +34,39 @@
         $$1.scheduleTick($$2, (net.minecraft.world.level.block.Block)this, net.minecraft.util.Mth.nextInt((net.minecraft.util.RandomSource)$$3, (int)20, (int)40));
     }
 
-    public boolean slightlyMelt(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        int n = (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)AGE);
-        if (n < 3) {
-            level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)(n + 1))), 2);
+    public boolean slightlyMelt(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        int $$3 = (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AGE);
+        if ($$3 < 3) {
+            $$1.setBlock($$2, (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)($$3 + 1))), 2);
             return false;
         }
-        this.melt(state, level, pos);
+        this.melt($$0, $$1, $$2);
         return true;
     }
 
-    public void neighborChanged(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.Block block, net.minecraft.core.BlockPos fromPos, boolean isMoving) {
-        if (block.defaultBlockState().is((net.minecraft.world.level.block.Block)this) && this.fewerNeigboursThan((net.minecraft.world.level.BlockGetter)level, pos, 2)) {
-            this.melt(state, level, pos);
+    public void neighborChanged(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.Block $$3, net.minecraft.core.BlockPos $$4, boolean $$5) {
+        if ($$3.defaultBlockState().is((net.minecraft.world.level.block.Block)this) && this.fewerNeigboursThan((net.minecraft.world.level.BlockGetter)$$1, $$2, 2)) {
+            this.melt($$0, $$1, $$2);
         }
-        super.neighborChanged(state, level, pos, block, fromPos, isMoving);
+        super.neighborChanged($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean fewerNeigboursThan(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, int neighborsRequired) {
-        int n = 0;
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = new net.minecraft.core.BlockPos$MutableBlockPos();
-        for (net.minecraft.core.Direction direction : net.minecraft.core.Direction.values()) {
-            mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)pos, direction);
-            if (!level.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos).is((net.minecraft.world.level.block.Block)this) || ++n < neighborsRequired) continue;
+    public boolean fewerNeigboursThan(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, int $$2) {
+        int $$3 = 0;
+        net.minecraft.core.BlockPos$MutableBlockPos $$4 = new net.minecraft.core.BlockPos$MutableBlockPos();
+        for (net.minecraft.core.Direction $$5 : net.minecraft.core.Direction.values()) {
+            $$4.setWithOffset((net.minecraft.core.Vec3i)$$1, $$5);
+            if (!$$0.getBlockState((net.minecraft.core.BlockPos)$$4).is((net.minecraft.world.level.block.Block)this) || ++$$3 < $$2) continue;
             return false;
         }
         return true;
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE});
     }
 
-    public net.minecraft.world.item.ItemStack getCloneItemStack(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.item.ItemStack getCloneItemStack(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
         return net.minecraft.world.item.ItemStack.EMPTY;
     }
 