--- net/minecraft/world/level/block/TorchBlock.java
+++ net/minecraft/world/level/block/TorchBlock.java
@@ -10,24 +10,24 @@
     public static net.minecraft.world.phys.shapes.VoxelShape AABB;
     public net.minecraft.core.particles.ParticleOptions flameParticle;
 
-    public net.minecraft.world.level.block.TorchBlock(net.minecraft.world.level.block.state.BlockBehaviour$Properties properties, net.minecraft.core.particles.ParticleOptions flameParticle) {
-        super(properties);
-        this.flameParticle = flameParticle;
+    public net.minecraft.world.level.block.TorchBlock(net.minecraft.world.level.block.state.BlockBehaviour$Properties $$0, net.minecraft.core.particles.ParticleOptions $$1) {
+        super($$0);
+        this.flameParticle = $$1;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return AABB;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (facing == net.minecraft.core.Direction.DOWN && !this.canSurvive(state, (net.minecraft.world.level.LevelReader)level, currentPos)) {
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if ($$1 == net.minecraft.core.Direction.DOWN && !this.canSurvive($$0, (net.minecraft.world.level.LevelReader)$$3, $$4)) {
             return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        return net.minecraft.world.level.block.TorchBlock.canSupportCenter((net.minecraft.world.level.LevelReader)level, (net.minecraft.core.BlockPos)pos.below(), (net.minecraft.core.Direction)net.minecraft.core.Direction.UP);
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        return net.minecraft.world.level.block.TorchBlock.canSupportCenter((net.minecraft.world.level.LevelReader)$$1, (net.minecraft.core.BlockPos)$$2.below(), (net.minecraft.core.Direction)net.minecraft.core.Direction.UP);
     }
 
     public void animateTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {