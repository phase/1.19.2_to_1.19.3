--- net/minecraft/world/level/block/CampfireBlock.java
+++ net/minecraft/world/level/block/CampfireBlock.java
@@ -17,21 +17,21 @@
     public boolean spawnParticles;
     public int fireDamage;
 
-    public net.minecraft.world.level.block.CampfireBlock(boolean spawnParticles, int fireDamage, net.minecraft.world.level.block.state.BlockBehaviour$Properties properties) {
-        super(properties);
-        this.spawnParticles = spawnParticles;
-        this.fireDamage = fireDamage;
+    public net.minecraft.world.level.block.CampfireBlock(boolean $$0, int $$1, net.minecraft.world.level.block.state.BlockBehaviour$Properties $$2) {
+        super($$2);
+        this.spawnParticles = $$0;
+        this.fireDamage = $$1;
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true))).setValue((net.minecraft.world.level.block.state.properties.Property)SIGNAL_FIRE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH));
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        net.minecraft.world.item.ItemStack itemStack;
-        net.minecraft.world.level.block.entity.CampfireBlockEntity campfireBlockEntity;
-        java.util.Optional optional;
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.CampfireBlockEntity && (optional = (campfireBlockEntity = (net.minecraft.world.level.block.entity.CampfireBlockEntity)blockEntity).getCookableRecipe(itemStack = player.getItemInHand(hand))).isPresent()) {
-            if (!level.isClientSide && campfireBlockEntity.placeFood((net.minecraft.world.entity.Entity)player, player.getAbilities().instabuild ? itemStack.copy() : itemStack, ((net.minecraft.world.item.crafting.CampfireCookingRecipe)optional.get()).getCookingTime())) {
-                player.awardStat(net.minecraft.stats.Stats.INTERACT_WITH_CAMPFIRE);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        net.minecraft.world.item.ItemStack $$8;
+        net.minecraft.world.level.block.entity.CampfireBlockEntity $$7;
+        java.util.Optional $$9;
+        net.minecraft.world.level.block.entity.BlockEntity $$6 = $$1.getBlockEntity($$2);
+        if ($$6 instanceof net.minecraft.world.level.block.entity.CampfireBlockEntity && ($$9 = ($$7 = (net.minecraft.world.level.block.entity.CampfireBlockEntity)$$6).getCookableRecipe($$8 = $$3.getItemInHand($$4))).isPresent()) {
+            if (!$$1.isClientSide && $$7.placeFood((net.minecraft.world.entity.Entity)$$3, $$3.getAbilities().instabuild ? $$8.copy() : $$8, ((net.minecraft.world.item.crafting.CampfireCookingRecipe)$$9.get()).getCookingTime())) {
+                $$3.awardStat(net.minecraft.stats.Stats.INTERACT_WITH_CAMPFIRE);
                 return net.minecraft.world.InteractionResult.SUCCESS;
             }
             return net.minecraft.world.InteractionResult.CONSUME;
@@ -39,51 +39,51 @@
         return net.minecraft.world.InteractionResult.PASS;
     }
 
-    public void entityInside(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.Entity entity) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)LIT)).booleanValue() && entity instanceof net.minecraft.world.entity.LivingEntity && !net.minecraft.world.item.enchantment.EnchantmentHelper.hasFrostWalker((net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)entity))) {
-            entity.hurt(net.minecraft.world.damagesource.DamageSource.IN_FIRE, (float)this.fireDamage);
+    public void entityInside(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.Entity $$3) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LIT)).booleanValue() && $$3 instanceof net.minecraft.world.entity.LivingEntity && !net.minecraft.world.item.enchantment.EnchantmentHelper.hasFrostWalker((net.minecraft.world.entity.LivingEntity)((net.minecraft.world.entity.LivingEntity)$$3))) {
+            $$3.hurt(net.minecraft.world.damagesource.DamageSource.IN_FIRE, (float)this.fireDamage);
         }
-        super.entityInside(state, level, pos, entity);
+        super.entityInside($$0, $$1, $$2, $$3);
     }
 
-    public void onRemove(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState newState, boolean isMoving) {
-        if (state.is(newState.getBlock())) {
+    public void onRemove(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$0.is($$3.getBlock())) {
             return;
         }
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.CampfireBlockEntity) {
-            net.minecraft.world.Containers.dropContents((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.core.NonNullList)((net.minecraft.world.level.block.entity.CampfireBlockEntity)blockEntity).getItems());
+        net.minecraft.world.level.block.entity.BlockEntity $$5 = $$1.getBlockEntity($$2);
+        if ($$5 instanceof net.minecraft.world.level.block.entity.CampfireBlockEntity) {
+            net.minecraft.world.Containers.dropContents((net.minecraft.world.level.Level)$$1, (net.minecraft.core.BlockPos)$$2, (net.minecraft.core.NonNullList)((net.minecraft.world.level.block.entity.CampfireBlockEntity)$$5).getItems());
         }
-        super.onRemove(state, level, pos, newState, isMoving);
+        super.onRemove($$0, $$1, $$2, $$3, $$4);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.core.BlockPos blockPos;
-        net.minecraft.world.level.Level level = context.getLevel();
-        boolean bl = level.getFluidState(blockPos = context.getClickedPos()).getType() == net.minecraft.world.level.material.Fluids.WATER;
-        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl))).setValue((net.minecraft.world.level.block.state.properties.Property)SIGNAL_FIRE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isSmokeSource(level.getBlockState(blockPos.below()))))).setValue((net.minecraft.world.level.block.state.properties.Property)LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((!bl ? 1 : 0) != 0))).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)context.getHorizontalDirection());
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.core.BlockPos $$2;
+        net.minecraft.world.level.Level $$1 = $$0.getLevel();
+        boolean $$3 = $$1.getFluidState($$2 = $$0.getClickedPos()).getType() == net.minecraft.world.level.material.Fluids.WATER;
+        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$3))).setValue((net.minecraft.world.level.block.state.properties.Property)SIGNAL_FIRE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isSmokeSource($$1.getBlockState($$2.below()))))).setValue((net.minecraft.world.level.block.state.properties.Property)LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((!$$3 ? 1 : 0) != 0))).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$0.getHorizontalDirection());
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)level));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)$$3));
         }
-        if (facing == net.minecraft.core.Direction.DOWN) {
-            return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)SIGNAL_FIRE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isSmokeSource(facingState)));
+        if ($$1 == net.minecraft.core.Direction.DOWN) {
+            return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)SIGNAL_FIRE, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isSmokeSource($$2)));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean isSmokeSource(net.minecraft.world.level.block.state.BlockState state) {
-        return state.is(net.minecraft.world.level.block.Blocks.HAY_BLOCK);
+    public boolean isSmokeSource(net.minecraft.world.level.block.state.BlockState $$0) {
+        return $$0.is(net.minecraft.world.level.block.Blocks.HAY_BLOCK);
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return SHAPE;
     }
 
-    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState $$0) {
         return net.minecraft.world.level.block.RenderShape.MODEL;
     }
 
@@ -114,74 +114,74 @@
         $$1.gameEvent($$0, net.minecraft.world.level.gameevent.GameEvent.BLOCK_CHANGE, $$2);
     }
 
-    public boolean placeLiquid(net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.material.FluidState fluidState) {
-        if (!((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.WATERLOGGED)).booleanValue() && fluidState.getType() == net.minecraft.world.level.material.Fluids.WATER) {
-            boolean bl = (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)LIT);
-            if (bl) {
-                if (!level.isClientSide()) {
-                    level.playSound(null, pos, net.minecraft.sounds.SoundEvents.GENERIC_EXTINGUISH_FIRE, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
+    public boolean placeLiquid(net.minecraft.world.level.LevelAccessor $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.material.FluidState $$3) {
+        if (!((java.lang.Boolean)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.WATERLOGGED)).booleanValue() && $$3.getType() == net.minecraft.world.level.material.Fluids.WATER) {
+            boolean $$4 = (java.lang.Boolean)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)LIT);
+            if ($$4) {
+                if (!$$0.isClientSide()) {
+                    $$0.playSound(null, $$1, net.minecraft.sounds.SoundEvents.GENERIC_EXTINGUISH_FIRE, net.minecraft.sounds.SoundSource.BLOCKS, 1.0f, 1.0f);
                 }
-                net.minecraft.world.level.block.CampfireBlock.dowse(null, (net.minecraft.world.level.LevelAccessor)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.world.level.block.state.BlockState)state);
+                net.minecraft.world.level.block.CampfireBlock.dowse(null, (net.minecraft.world.level.LevelAccessor)$$0, (net.minecraft.core.BlockPos)$$1, (net.minecraft.world.level.block.state.BlockState)$$2);
             }
-            level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true))).setValue((net.minecraft.world.level.block.state.properties.Property)LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)), 3);
-            level.scheduleTick(pos, fluidState.getType(), fluidState.getType().getTickDelay((net.minecraft.world.level.LevelReader)level));
+            $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true))).setValue((net.minecraft.world.level.block.state.properties.Property)LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)), 3);
+            $$0.scheduleTick($$1, $$3.getType(), $$3.getType().getTickDelay((net.minecraft.world.level.LevelReader)$$0));
             return true;
         }
         return false;
     }
 
-    public void onProjectileHit(net.minecraft.world.level.Level level, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.phys.BlockHitResult hit, net.minecraft.world.entity.projectile.Projectile projectile) {
-        net.minecraft.core.BlockPos blockPos = hit.getBlockPos();
-        if (!level.isClientSide && projectile.isOnFire() && projectile.mayInteract(level, blockPos) && !((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)LIT)).booleanValue() && !((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
-            level.setBlock(blockPos, (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)), 11);
+    public void onProjectileHit(net.minecraft.world.level.Level $$0, net.minecraft.world.level.block.state.BlockState $$1, net.minecraft.world.phys.BlockHitResult $$2, net.minecraft.world.entity.projectile.Projectile $$3) {
+        net.minecraft.core.BlockPos $$4 = $$2.getBlockPos();
+        if (!$$0.isClientSide && $$3.isOnFire() && $$3.mayInteract($$0, $$4) && !((java.lang.Boolean)$$1.getValue((net.minecraft.world.level.block.state.properties.Property)LIT)).booleanValue() && !((java.lang.Boolean)$$1.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+            $$0.setBlock($$4, (net.minecraft.world.level.block.state.BlockState)$$1.setValue((net.minecraft.world.level.block.state.properties.Property)net.minecraft.world.level.block.state.properties.BlockStateProperties.LIT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)), 11);
         }
     }
 
-    public static void makeParticles(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, boolean isSignalFire, boolean spawnExtraSmoke) {
-        net.minecraft.util.RandomSource randomSource = level.getRandom();
-        net.minecraft.core.particles.SimpleParticleType simpleParticleType = isSignalFire ? net.minecraft.core.particles.ParticleTypes.CAMPFIRE_SIGNAL_SMOKE : net.minecraft.core.particles.ParticleTypes.CAMPFIRE_COSY_SMOKE;
-        level.addAlwaysVisibleParticle((net.minecraft.core.particles.ParticleOptions)simpleParticleType, true, (double)pos.getX() + 0.5 + randomSource.nextDouble() / 3.0 * (double)(randomSource.nextBoolean() ? 1 : -1), (double)pos.getY() + randomSource.nextDouble() + randomSource.nextDouble(), (double)pos.getZ() + 0.5 + randomSource.nextDouble() / 3.0 * (double)(randomSource.nextBoolean() ? 1 : -1), 0.0, 0.07, 0.0);
-        if (spawnExtraSmoke) {
-            level.addParticle((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.SMOKE, (double)pos.getX() + 0.5 + randomSource.nextDouble() / 4.0 * (double)(randomSource.nextBoolean() ? 1 : -1), (double)pos.getY() + 0.4, (double)pos.getZ() + 0.5 + randomSource.nextDouble() / 4.0 * (double)(randomSource.nextBoolean() ? 1 : -1), 0.0, 0.005, 0.0);
+    public static void makeParticles(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, boolean $$2, boolean $$3) {
+        net.minecraft.util.RandomSource $$4 = $$0.getRandom();
+        net.minecraft.core.particles.SimpleParticleType $$5 = $$2 ? net.minecraft.core.particles.ParticleTypes.CAMPFIRE_SIGNAL_SMOKE : net.minecraft.core.particles.ParticleTypes.CAMPFIRE_COSY_SMOKE;
+        $$0.addAlwaysVisibleParticle((net.minecraft.core.particles.ParticleOptions)$$5, true, (double)$$1.getX() + 0.5 + $$4.nextDouble() / 3.0 * (double)($$4.nextBoolean() ? 1 : -1), (double)$$1.getY() + $$4.nextDouble() + $$4.nextDouble(), (double)$$1.getZ() + 0.5 + $$4.nextDouble() / 3.0 * (double)($$4.nextBoolean() ? 1 : -1), 0.0, 0.07, 0.0);
+        if ($$3) {
+            $$0.addParticle((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.SMOKE, (double)$$1.getX() + 0.5 + $$4.nextDouble() / 4.0 * (double)($$4.nextBoolean() ? 1 : -1), (double)$$1.getY() + 0.4, (double)$$1.getZ() + 0.5 + $$4.nextDouble() / 4.0 * (double)($$4.nextBoolean() ? 1 : -1), 0.0, 0.005, 0.0);
         }
     }
 
-    public static boolean isSmokeyPos(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        for (int i = 1; i <= 5; ++i) {
-            net.minecraft.core.BlockPos blockPos = pos.below(i);
-            net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos);
-            if (net.minecraft.world.level.block.CampfireBlock.isLitCampfire((net.minecraft.world.level.block.state.BlockState)blockState)) {
+    public static boolean isSmokeyPos(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1) {
+        for (int $$2 = 1; $$2 <= 5; ++$$2) {
+            net.minecraft.core.BlockPos $$3 = $$1.below($$2);
+            net.minecraft.world.level.block.state.BlockState $$4 = $$0.getBlockState($$3);
+            if (net.minecraft.world.level.block.CampfireBlock.isLitCampfire((net.minecraft.world.level.block.state.BlockState)$$4)) {
                 return true;
             }
-            boolean bl = net.minecraft.world.phys.shapes.Shapes.joinIsNotEmpty((net.minecraft.world.phys.shapes.VoxelShape)VIRTUAL_FENCE_POST, (net.minecraft.world.phys.shapes.VoxelShape)blockState.getCollisionShape((net.minecraft.world.level.BlockGetter)level, pos, net.minecraft.world.phys.shapes.CollisionContext.empty()), (net.minecraft.world.phys.shapes.BooleanOp)net.minecraft.world.phys.shapes.BooleanOp.AND);
-            if (!bl) continue;
-            net.minecraft.world.level.block.state.BlockState blockState2 = level.getBlockState(blockPos.below());
-            return net.minecraft.world.level.block.CampfireBlock.isLitCampfire((net.minecraft.world.level.block.state.BlockState)blockState2);
+            boolean $$5 = net.minecraft.world.phys.shapes.Shapes.joinIsNotEmpty((net.minecraft.world.phys.shapes.VoxelShape)VIRTUAL_FENCE_POST, (net.minecraft.world.phys.shapes.VoxelShape)$$4.getCollisionShape((net.minecraft.world.level.BlockGetter)$$0, $$1, net.minecraft.world.phys.shapes.CollisionContext.empty()), (net.minecraft.world.phys.shapes.BooleanOp)net.minecraft.world.phys.shapes.BooleanOp.AND);
+            if (!$$5) continue;
+            net.minecraft.world.level.block.state.BlockState $$6 = $$0.getBlockState($$3.below());
+            return net.minecraft.world.level.block.CampfireBlock.isLitCampfire((net.minecraft.world.level.block.state.BlockState)$$6);
         }
         return false;
     }
 
-    public static boolean isLitCampfire(net.minecraft.world.level.block.state.BlockState state) {
-        return state.hasProperty((net.minecraft.world.level.block.state.properties.Property)LIT) && state.is(net.minecraft.tags.BlockTags.CAMPFIRES) && (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)LIT) != false;
+    public static boolean isLitCampfire(net.minecraft.world.level.block.state.BlockState $$0) {
+        return $$0.hasProperty((net.minecraft.world.level.block.state.properties.Property)LIT) && $$0.is(net.minecraft.tags.BlockTags.CAMPFIRES) && (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LIT) != false;
     }
 
-    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState state) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState $$0) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
             return net.minecraft.world.level.material.Fluids.WATER.getSource(false);
         }
-        return super.getFluidState(state);
+        return super.getFluidState($$0);
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rot) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)rot.rotate((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$1.rotate((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return state.rotate(mirror.getRotation((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return $$0.rotate($$1.getRotation((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{LIT, SIGNAL_FIRE, WATERLOGGED, FACING});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{LIT, SIGNAL_FIRE, WATERLOGGED, FACING});
     }
 
     public net.minecraft.world.level.block.entity.BlockEntity newBlockEntity(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
@@ -203,12 +203,12 @@
         return null;
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 
-    public static boolean canLight(net.minecraft.world.level.block.state.BlockState state) {
-        return state.is(net.minecraft.tags.BlockTags.CAMPFIRES, $$0 -> $$0.hasProperty((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED) && $$0.hasProperty((net.minecraft.world.level.block.state.properties.Property)LIT)) && (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED) == false && (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)LIT) == false;
+    public static boolean canLight(net.minecraft.world.level.block.state.BlockState $$02) {
+        return $$02.is(net.minecraft.tags.BlockTags.CAMPFIRES, $$0 -> $$0.hasProperty((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED) && $$0.hasProperty((net.minecraft.world.level.block.state.properties.Property)LIT)) && (java.lang.Boolean)$$02.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED) == false && (java.lang.Boolean)$$02.getValue((net.minecraft.world.level.block.state.properties.Property)LIT) == false;
     }
 
     static {