--- net/minecraft/world/level/block/LeverBlock.java
+++ net/minecraft/world/level/block/LeverBlock.java
@@ -24,10 +24,10 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH)).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)FACE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.AttachFace.WALL));
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace[((net.minecraft.world.level.block.state.properties.AttachFace)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACE)).ordinal()]) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace[((net.minecraft.world.level.block.state.properties.AttachFace)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACE)).ordinal()]) {
             case 1: {
-                switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis().ordinal()]) {
+                switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis().ordinal()]) {
                     case 1: {
                         return UP_AABB_X;
                     }
@@ -35,7 +35,7 @@
                 return UP_AABB_Z;
             }
             case 2: {
-                switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$core$Direction[((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).ordinal()]) {
+                switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$core$Direction[((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).ordinal()]) {
                     case 1: {
                         return EAST_AABB;
                     }
@@ -49,7 +49,7 @@
                 return NORTH_AABB;
             }
         }
-        switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis().ordinal()]) {
+        switch (net.minecraft.world.level.block.LeverBlock$1.$SwitchMap$net$minecraft$core$Direction$Axis[((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis().ordinal()]) {
             case 1: {
                 return DOWN_AABB_X;
             }
@@ -57,35 +57,35 @@
         return DOWN_AABB_Z;
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        if (level.isClientSide) {
-            net.minecraft.world.level.block.state.BlockState blockState = (net.minecraft.world.level.block.state.BlockState)state.cycle((net.minecraft.world.level.block.state.properties.Property)POWERED);
-            if (((java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
-                net.minecraft.world.level.block.LeverBlock.makeParticle((net.minecraft.world.level.block.state.BlockState)blockState, (net.minecraft.world.level.LevelAccessor)level, (net.minecraft.core.BlockPos)pos, (float)1.0f);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        if ($$1.isClientSide) {
+            net.minecraft.world.level.block.state.BlockState $$6 = (net.minecraft.world.level.block.state.BlockState)$$0.cycle((net.minecraft.world.level.block.state.properties.Property)POWERED);
+            if (((java.lang.Boolean)$$6.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
+                net.minecraft.world.level.block.LeverBlock.makeParticle((net.minecraft.world.level.block.state.BlockState)$$6, (net.minecraft.world.level.LevelAccessor)$$1, (net.minecraft.core.BlockPos)$$2, (float)1.0f);
             }
             return net.minecraft.world.InteractionResult.SUCCESS;
         }
-        net.minecraft.world.level.block.state.BlockState blockState = this.pull(state, level, pos);
-        float f = (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 0.6f : 0.5f;
-        level.playSound(null, pos, net.minecraft.sounds.SoundEvents.LEVER_CLICK, net.minecraft.sounds.SoundSource.BLOCKS, 0.3f, f);
-        level.gameEvent((net.minecraft.world.entity.Entity)player, (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? net.minecraft.world.level.gameevent.GameEvent.BLOCK_ACTIVATE : net.minecraft.world.level.gameevent.GameEvent.BLOCK_DEACTIVATE, pos);
+        net.minecraft.world.level.block.state.BlockState $$7 = this.pull($$0, $$1, $$2);
+        float $$8 = (java.lang.Boolean)$$7.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 0.6f : 0.5f;
+        $$1.playSound(null, $$2, net.minecraft.sounds.SoundEvents.LEVER_CLICK, net.minecraft.sounds.SoundSource.BLOCKS, 0.3f, $$8);
+        $$1.gameEvent((net.minecraft.world.entity.Entity)$$3, (java.lang.Boolean)$$7.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? net.minecraft.world.level.gameevent.GameEvent.BLOCK_ACTIVATE : net.minecraft.world.level.gameevent.GameEvent.BLOCK_DEACTIVATE, $$2);
         return net.minecraft.world.InteractionResult.CONSUME;
     }
 
-    public net.minecraft.world.level.block.state.BlockState pull(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        state = (net.minecraft.world.level.block.state.BlockState)state.cycle((net.minecraft.world.level.block.state.properties.Property)POWERED);
-        level.setBlock(pos, state, 3);
-        this.updateNeighbours(state, level, pos);
-        return state;
+    public net.minecraft.world.level.block.state.BlockState pull(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        $$0 = (net.minecraft.world.level.block.state.BlockState)$$0.cycle((net.minecraft.world.level.block.state.properties.Property)POWERED);
+        $$1.setBlock($$2, $$0, 3);
+        this.updateNeighbours($$0, $$1, $$2);
+        return $$0;
     }
 
-    public static void makeParticle(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos pos, float alpha) {
-        net.minecraft.core.Direction direction = ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite();
-        net.minecraft.core.Direction direction2 = net.minecraft.world.level.block.LeverBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)state).getOpposite();
-        double d = (double)pos.getX() + 0.5 + 0.1 * (double)direction.getStepX() + 0.2 * (double)direction2.getStepX();
-        double d2 = (double)pos.getY() + 0.5 + 0.1 * (double)direction.getStepY() + 0.2 * (double)direction2.getStepY();
-        double d3 = (double)pos.getZ() + 0.5 + 0.1 * (double)direction.getStepZ() + 0.2 * (double)direction2.getStepZ();
-        level.addParticle((net.minecraft.core.particles.ParticleOptions)new net.minecraft.core.particles.DustParticleOptions(net.minecraft.core.particles.DustParticleOptions.REDSTONE_PARTICLE_COLOR, alpha), d, d2, d3, 0.0, 0.0, 0.0);
+    public static void makeParticle(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelAccessor $$1, net.minecraft.core.BlockPos $$2, float $$3) {
+        net.minecraft.core.Direction $$4 = ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite();
+        net.minecraft.core.Direction $$5 = net.minecraft.world.level.block.LeverBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)$$0).getOpposite();
+        double $$6 = (double)$$2.getX() + 0.5 + 0.1 * (double)$$4.getStepX() + 0.2 * (double)$$5.getStepX();
+        double $$7 = (double)$$2.getY() + 0.5 + 0.1 * (double)$$4.getStepY() + 0.2 * (double)$$5.getStepY();
+        double $$8 = (double)$$2.getZ() + 0.5 + 0.1 * (double)$$4.getStepZ() + 0.2 * (double)$$5.getStepZ();
+        $$1.addParticle((net.minecraft.core.particles.ParticleOptions)new net.minecraft.core.particles.DustParticleOptions(net.minecraft.core.particles.DustParticleOptions.REDSTONE_PARTICLE_COLOR, $$3), $$6, $$7, $$8, 0.0, 0.0, 0.0);
     }
 
     public void animateTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -94,38 +94,38 @@
         }
     }
 
-    public void onRemove(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState newState, boolean isMoving) {
-        if (isMoving || state.is(newState.getBlock())) {
+    public void onRemove(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$4 || $$0.is($$3.getBlock())) {
             return;
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
-            this.updateNeighbours(state, level, pos);
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
+            this.updateNeighbours($$0, $$1, $$2);
         }
-        super.onRemove(state, level, pos, newState, isMoving);
+        super.onRemove($$0, $$1, $$2, $$3, $$4);
     }
 
-    public int getSignal(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.BlockGetter blockAccess, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction side) {
-        return (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 15 : 0;
+    public int getSignal(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.Direction $$3) {
+        return (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 15 : 0;
     }
 
-    public int getDirectSignal(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.BlockGetter blockAccess, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction side) {
-        if (((java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue() && net.minecraft.world.level.block.LeverBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)blockState) == side) {
+    public int getDirectSignal(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.Direction $$3) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue() && net.minecraft.world.level.block.LeverBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)$$0) == $$3) {
             return 15;
         }
         return 0;
     }
 
-    public boolean isSignalSource(net.minecraft.world.level.block.state.BlockState state) {
+    public boolean isSignalSource(net.minecraft.world.level.block.state.BlockState $$0) {
         return true;
     }
 
-    public void updateNeighbours(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        level.updateNeighborsAt(pos, (net.minecraft.world.level.block.Block)this);
-        level.updateNeighborsAt(pos.relative(net.minecraft.world.level.block.LeverBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)state).getOpposite()), (net.minecraft.world.level.block.Block)this);
+    public void updateNeighbours(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        $$1.updateNeighborsAt($$2, (net.minecraft.world.level.block.Block)this);
+        $$1.updateNeighborsAt($$2.relative(net.minecraft.world.level.block.LeverBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)$$0).getOpposite()), (net.minecraft.world.level.block.Block)this);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACE, FACING, POWERED});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACE, FACING, POWERED});
     }
 
     static {