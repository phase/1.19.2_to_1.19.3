--- net/minecraft/world/level/block/ChorusFlowerBlock.java
+++ net/minecraft/world/level/block/ChorusFlowerBlock.java
@@ -10,9 +10,9 @@
     public static net.minecraft.world.level.block.state.properties.IntegerProperty AGE;
     public net.minecraft.world.level.block.ChorusPlantBlock plant;
 
-    public net.minecraft.world.level.block.ChorusFlowerBlock(net.minecraft.world.level.block.ChorusPlantBlock plant, net.minecraft.world.level.block.state.BlockBehaviour$Properties properties) {
-        super(properties);
-        this.plant = plant;
+    public net.minecraft.world.level.block.ChorusFlowerBlock(net.minecraft.world.level.block.ChorusPlantBlock $$0, net.minecraft.world.level.block.state.BlockBehaviour$Properties $$1) {
+        super($$1);
+        this.plant = $$0;
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)0)));
     }
 
@@ -22,8 +22,8 @@
         }
     }
 
-    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState state) {
-        return (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) < 5;
+    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState $$0) {
+        return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)AGE) < 5;
     }
 
     public void randomTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -84,57 +84,57 @@
         }
     }
 
-    public void placeGrownFlower(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, int age) {
-        level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)age)), 2);
-        level.levelEvent(1033, pos, 0);
+    public void placeGrownFlower(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, int $$2) {
+        $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)$$2)), 2);
+        $$0.levelEvent(1033, $$1, 0);
     }
 
-    public void placeDeadFlower(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)5)), 2);
-        level.levelEvent(1034, pos, 0);
+    public void placeDeadFlower(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1) {
+        $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)AGE, (java.lang.Comparable)java.lang.Integer.valueOf((int)5)), 2);
+        $$0.levelEvent(1034, $$1, 0);
     }
 
-    public static boolean allNeighborsEmpty(net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos, @javax.annotation.Nullable net.minecraft.core.Direction excludingSide) {
-        for (net.minecraft.core.Direction direction : net.minecraft.core.Direction$Plane.HORIZONTAL) {
-            if (direction == excludingSide || level.isEmptyBlock(pos.relative(direction))) continue;
+    public static boolean allNeighborsEmpty(net.minecraft.world.level.LevelReader $$0, net.minecraft.core.BlockPos $$1, @javax.annotation.Nullable net.minecraft.core.Direction $$2) {
+        for (net.minecraft.core.Direction $$3 : net.minecraft.core.Direction$Plane.HORIZONTAL) {
+            if ($$3 == $$2 || $$0.isEmptyBlock($$1.relative($$3))) continue;
             return false;
         }
         return true;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (facing != net.minecraft.core.Direction.UP && !state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.block.Block)this, 1);
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if ($$1 != net.minecraft.core.Direction.UP && !$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.block.Block)this, 1);
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(pos.below());
-        if (blockState.is((net.minecraft.world.level.block.Block)this.plant) || blockState.is(net.minecraft.world.level.block.Blocks.END_STONE)) {
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.block.state.BlockState $$3 = $$1.getBlockState($$2.below());
+        if ($$3.is((net.minecraft.world.level.block.Block)this.plant) || $$3.is(net.minecraft.world.level.block.Blocks.END_STONE)) {
             return true;
         }
-        if (!blockState.isAir()) {
+        if (!$$3.isAir()) {
             return false;
         }
-        boolean bl = false;
-        for (net.minecraft.core.Direction direction : net.minecraft.core.Direction$Plane.HORIZONTAL) {
-            net.minecraft.world.level.block.state.BlockState blockState2 = level.getBlockState(pos.relative(direction));
-            if (blockState2.is((net.minecraft.world.level.block.Block)this.plant)) {
-                if (bl) {
+        boolean $$4 = false;
+        for (net.minecraft.core.Direction $$5 : net.minecraft.core.Direction$Plane.HORIZONTAL) {
+            net.minecraft.world.level.block.state.BlockState $$6 = $$1.getBlockState($$2.relative($$5));
+            if ($$6.is((net.minecraft.world.level.block.Block)this.plant)) {
+                if ($$4) {
                     return false;
                 }
-                bl = true;
+                $$4 = true;
                 continue;
             }
-            if (blockState2.isAir()) continue;
+            if ($$6.isAir()) continue;
             return false;
         }
-        return bl;
+        return $$4;
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{AGE});
     }
 
     public static void generatePlant(net.minecraft.world.level.LevelAccessor $$0, net.minecraft.core.BlockPos $$1, net.minecraft.util.RandomSource $$2, int $$3) {
@@ -177,10 +177,10 @@
         }
     }
 
-    public void onProjectileHit(net.minecraft.world.level.Level level, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.phys.BlockHitResult hit, net.minecraft.world.entity.projectile.Projectile projectile) {
-        net.minecraft.core.BlockPos blockPos = hit.getBlockPos();
-        if (!level.isClientSide && projectile.mayInteract(level, blockPos) && projectile.getType().is(net.minecraft.tags.EntityTypeTags.IMPACT_PROJECTILES)) {
-            level.destroyBlock(blockPos, true, (net.minecraft.world.entity.Entity)projectile);
+    public void onProjectileHit(net.minecraft.world.level.Level $$0, net.minecraft.world.level.block.state.BlockState $$1, net.minecraft.world.phys.BlockHitResult $$2, net.minecraft.world.entity.projectile.Projectile $$3) {
+        net.minecraft.core.BlockPos $$4 = $$2.getBlockPos();
+        if (!$$0.isClientSide && $$3.mayInteract($$0, $$4) && $$3.getType().is(net.minecraft.tags.EntityTypeTags.IMPACT_PROJECTILES)) {
+            $$0.destroyBlock($$4, true, (net.minecraft.world.entity.Entity)$$3);
         }
     }
 