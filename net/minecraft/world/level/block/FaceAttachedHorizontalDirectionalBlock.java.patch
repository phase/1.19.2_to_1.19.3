--- net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock.java
+++ net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock.java
@@ -12,34 +12,39 @@
         super($$0);
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        return net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock.canAttach((net.minecraft.world.level.LevelReader)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.core.Direction)net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)state).getOpposite());
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        return net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock.canAttach((net.minecraft.world.level.LevelReader)$$1, (net.minecraft.core.BlockPos)$$2, (net.minecraft.core.Direction)net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)$$0).getOpposite());
     }
 
-    public static boolean canAttach(net.minecraft.world.level.LevelReader reader, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction direction) {
-        net.minecraft.core.BlockPos blockPos = pos.relative(direction);
-        return reader.getBlockState(blockPos).isFaceSturdy((net.minecraft.world.level.BlockGetter)reader, blockPos, direction.getOpposite());
+    public static boolean canAttach(net.minecraft.world.level.LevelReader $$0, net.minecraft.core.BlockPos $$1, net.minecraft.core.Direction $$2) {
+        net.minecraft.core.BlockPos $$3 = $$1.relative($$2);
+        return $$0.getBlockState($$3).isFaceSturdy((net.minecraft.world.level.BlockGetter)$$0, $$3, $$2.getOpposite());
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        for (net.minecraft.core.Direction direction : context.getNearestLookingDirections()) {
-            net.minecraft.world.level.block.state.BlockState blockState = direction.getAxis() == net.minecraft.core.Direction$Axis.Y ? (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACE, (java.lang.Comparable)(direction == net.minecraft.core.Direction.UP ? net.minecraft.world.level.block.state.properties.AttachFace.CEILING : net.minecraft.world.level.block.state.properties.AttachFace.FLOOR))).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)context.getHorizontalDirection()) : (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.AttachFace.WALL)).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)direction.getOpposite());
-            if (!blockState.canSurvive((net.minecraft.world.level.LevelReader)context.getLevel(), context.getClickedPos())) continue;
-            return blockState;
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        for (net.minecraft.core.Direction $$1 : $$0.getNearestLookingDirections()) {
+            net.minecraft.world.level.block.state.BlockState $$3;
+            if ($$1.getAxis() == net.minecraft.core.Direction$Axis.Y) {
+                net.minecraft.world.level.block.state.BlockState $$2 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACE, (java.lang.Comparable)($$1 == net.minecraft.core.Direction.UP ? net.minecraft.world.level.block.state.properties.AttachFace.CEILING : net.minecraft.world.level.block.state.properties.AttachFace.FLOOR))).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$0.getHorizontalDirection());
+            } else {
+                $$3 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.AttachFace.WALL)).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$1.getOpposite());
+            }
+            if (!$$3.canSurvive((net.minecraft.world.level.LevelReader)$$0.getLevel(), $$0.getClickedPos())) continue;
+            return $$3;
         }
         return null;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)state).getOpposite() == facing && !state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock.getConnectedDirection((net.minecraft.world.level.block.state.BlockState)$$0).getOpposite() == $$1 && !$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
             return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public static net.minecraft.core.Direction getConnectedDirection(net.minecraft.world.level.block.state.BlockState state) {
-        switch (net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace[((net.minecraft.world.level.block.state.properties.AttachFace)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACE)).ordinal()]) {
+    public static net.minecraft.core.Direction getConnectedDirection(net.minecraft.world.level.block.state.BlockState $$0) {
+        switch (net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace[((net.minecraft.world.level.block.state.properties.AttachFace)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACE)).ordinal()]) {
             case 1: {
                 return net.minecraft.core.Direction.DOWN;
             }
@@ -47,7 +52,7 @@
                 return net.minecraft.core.Direction.UP;
             }
         }
-        return (net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
+        return (net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
     }
 
     static {