--- net/minecraft/world/level/block/LecternBlock.java
+++ net/minecraft/world/level/block/LecternBlock.java
@@ -25,36 +25,36 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH)).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
     }
 
-    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState state) {
+    public net.minecraft.world.level.block.RenderShape getRenderShape(net.minecraft.world.level.block.state.BlockState $$0) {
         return net.minecraft.world.level.block.RenderShape.MODEL;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getOcclusionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
+    public net.minecraft.world.phys.shapes.VoxelShape getOcclusionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
         return SHAPE_COMMON;
     }
 
-    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState state) {
+    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState $$0) {
         return true;
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.nbt.CompoundTag compoundTag;
-        net.minecraft.world.level.Level level = context.getLevel();
-        net.minecraft.world.item.ItemStack itemStack = context.getItemInHand();
-        net.minecraft.world.entity.player.Player player = context.getPlayer();
-        boolean bl = false;
-        if (!level.isClientSide && player != null && player.canUseGameMasterBlocks() && (compoundTag = net.minecraft.world.item.BlockItem.getBlockEntityData((net.minecraft.world.item.ItemStack)itemStack)) != null && compoundTag.contains("Book")) {
-            bl = true;
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.nbt.CompoundTag $$5;
+        net.minecraft.world.level.Level $$1 = $$0.getLevel();
+        net.minecraft.world.item.ItemStack $$2 = $$0.getItemInHand();
+        net.minecraft.world.entity.player.Player $$3 = $$0.getPlayer();
+        boolean $$4 = false;
+        if (!$$1.isClientSide && $$3 != null && $$3.canUseGameMasterBlocks() && ($$5 = net.minecraft.world.item.BlockItem.getBlockEntityData((net.minecraft.world.item.ItemStack)$$2)) != null && $$5.contains("Book")) {
+            $$4 = true;
         }
-        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)context.getHorizontalDirection().getOpposite())).setValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)bl));
+        return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$0.getHorizontalDirection().getOpposite())).setValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$4));
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getCollisionShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return SHAPE_COLLISION;
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        switch (net.minecraft.world.level.block.LecternBlock$1.$SwitchMap$net$minecraft$core$Direction[((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).ordinal()]) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        switch (net.minecraft.world.level.block.LecternBlock$1.$SwitchMap$net$minecraft$core$Direction[((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).ordinal()]) {
             case 1: {
                 return SHAPE_NORTH;
             }
@@ -71,16 +71,16 @@
         return SHAPE_COMMON;
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rotation) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)rotation.rotate((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)$$1.rotate((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return state.rotate(mirror.getRotation((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return $$0.rotate($$1.getRotation((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, POWERED, HAS_BOOK});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, POWERED, HAS_BOOK});
     }
 
     public net.minecraft.world.level.block.entity.BlockEntity newBlockEntity(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
@@ -108,113 +108,113 @@
         }
     }
 
-    public static void resetBookState(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, boolean hasBook) {
-        level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)hasBook)), 3);
-        net.minecraft.world.level.block.LecternBlock.updateBelow((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.world.level.block.state.BlockState)state);
+    public static void resetBookState(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, boolean $$3) {
+        $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$3)), 3);
+        net.minecraft.world.level.block.LecternBlock.updateBelow((net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$1, (net.minecraft.world.level.block.state.BlockState)$$2);
     }
 
-    public static void signalPageChange(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        net.minecraft.world.level.block.LecternBlock.changePowered((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.world.level.block.state.BlockState)state, (boolean)true);
-        level.scheduleTick(pos, state.getBlock(), 2);
-        level.levelEvent(1043, pos, 0);
+    public static void signalPageChange(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        net.minecraft.world.level.block.LecternBlock.changePowered((net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$1, (net.minecraft.world.level.block.state.BlockState)$$2, (boolean)true);
+        $$0.scheduleTick($$1, $$2.getBlock(), 2);
+        $$0.levelEvent(1043, $$1, 0);
     }
 
-    public static void changePowered(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, boolean powered) {
-        level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)powered)), 3);
-        net.minecraft.world.level.block.LecternBlock.updateBelow((net.minecraft.world.level.Level)level, (net.minecraft.core.BlockPos)pos, (net.minecraft.world.level.block.state.BlockState)state);
+    public static void changePowered(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, boolean $$3) {
+        $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)$$3)), 3);
+        net.minecraft.world.level.block.LecternBlock.updateBelow((net.minecraft.world.level.Level)$$0, (net.minecraft.core.BlockPos)$$1, (net.minecraft.world.level.block.state.BlockState)$$2);
     }
 
-    public static void updateBelow(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        level.updateNeighborsAt(pos.below(), state.getBlock());
+    public static void updateBelow(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        $$0.updateNeighborsAt($$1.below(), $$2.getBlock());
     }
 
     public void tick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
         net.minecraft.world.level.block.LecternBlock.changePowered((net.minecraft.world.level.Level)$$1, (net.minecraft.core.BlockPos)$$2, (net.minecraft.world.level.block.state.BlockState)$$0, (boolean)false);
     }
 
-    public void onRemove(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState newState, boolean isMoving) {
-        if (state.is(newState.getBlock())) {
+    public void onRemove(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.block.state.BlockState $$3, boolean $$4) {
+        if ($$0.is($$3.getBlock())) {
             return;
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue()) {
-            this.popBook(state, level, pos);
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue()) {
+            this.popBook($$0, $$1, $$2);
         }
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
-            level.updateNeighborsAt(pos.below(), (net.minecraft.world.level.block.Block)this);
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue()) {
+            $$1.updateNeighborsAt($$2.below(), (net.minecraft.world.level.block.Block)this);
         }
-        super.onRemove(state, level, pos, newState, isMoving);
+        super.onRemove($$0, $$1, $$2, $$3, $$4);
     }
 
-    public void popBook(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.LecternBlockEntity) {
-            net.minecraft.world.level.block.entity.LecternBlockEntity lecternBlockEntity = (net.minecraft.world.level.block.entity.LecternBlockEntity)blockEntity;
-            net.minecraft.core.Direction direction = (net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
-            net.minecraft.world.item.ItemStack itemStack = lecternBlockEntity.getBook().copy();
-            float f = 0.25f * (float)direction.getStepX();
-            float f2 = 0.25f * (float)direction.getStepZ();
-            net.minecraft.world.entity.item.ItemEntity itemEntity = new net.minecraft.world.entity.item.ItemEntity(level, (double)pos.getX() + 0.5 + (double)f, (double)(pos.getY() + 1), (double)pos.getZ() + 0.5 + (double)f2, itemStack);
-            itemEntity.setDefaultPickUpDelay();
-            level.addFreshEntity((net.minecraft.world.entity.Entity)itemEntity);
-            lecternBlockEntity.clearContent();
+    public void popBook(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.block.entity.BlockEntity $$3 = $$1.getBlockEntity($$2);
+        if ($$3 instanceof net.minecraft.world.level.block.entity.LecternBlockEntity) {
+            net.minecraft.world.level.block.entity.LecternBlockEntity $$4 = (net.minecraft.world.level.block.entity.LecternBlockEntity)$$3;
+            net.minecraft.core.Direction $$5 = (net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
+            net.minecraft.world.item.ItemStack $$6 = $$4.getBook().copy();
+            float $$7 = 0.25f * (float)$$5.getStepX();
+            float $$8 = 0.25f * (float)$$5.getStepZ();
+            net.minecraft.world.entity.item.ItemEntity $$9 = new net.minecraft.world.entity.item.ItemEntity($$1, (double)$$2.getX() + 0.5 + (double)$$7, (double)($$2.getY() + 1), (double)$$2.getZ() + 0.5 + (double)$$8, $$6);
+            $$9.setDefaultPickUpDelay();
+            $$1.addFreshEntity((net.minecraft.world.entity.Entity)$$9);
+            $$4.clearContent();
         }
     }
 
-    public boolean isSignalSource(net.minecraft.world.level.block.state.BlockState state) {
+    public boolean isSignalSource(net.minecraft.world.level.block.state.BlockState $$0) {
         return true;
     }
 
-    public int getSignal(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.BlockGetter blockAccess, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction side) {
-        return (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 15 : 0;
+    public int getSignal(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.Direction $$3) {
+        return (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 15 : 0;
     }
 
-    public int getDirectSignal(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.BlockGetter blockAccess, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction side) {
-        return side == net.minecraft.core.Direction.UP && (java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 15 : 0;
+    public int getDirectSignal(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.Direction $$3) {
+        return $$3 == net.minecraft.core.Direction.UP && (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED) != false ? 15 : 0;
     }
 
-    public boolean hasAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState state) {
+    public boolean hasAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState $$0) {
         return true;
     }
 
-    public int getAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity;
-        if (((java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue() && (blockEntity = level.getBlockEntity(pos)) instanceof net.minecraft.world.level.block.entity.LecternBlockEntity) {
-            return ((net.minecraft.world.level.block.entity.LecternBlockEntity)blockEntity).getRedstoneSignal();
+    public int getAnalogOutputSignal(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.block.entity.BlockEntity $$3;
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue() && ($$3 = $$1.getBlockEntity($$2)) instanceof net.minecraft.world.level.block.entity.LecternBlockEntity) {
+            return ((net.minecraft.world.level.block.entity.LecternBlockEntity)$$3).getRedstoneSignal();
         }
         return 0;
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue()) {
-            if (!level.isClientSide) {
-                this.openScreen(level, pos, player);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue()) {
+            if (!$$1.isClientSide) {
+                this.openScreen($$1, $$2, $$3);
             }
-            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+            return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$1.isClientSide);
         }
-        net.minecraft.world.item.ItemStack itemStack = player.getItemInHand(hand);
-        if (itemStack.isEmpty() || itemStack.is(net.minecraft.tags.ItemTags.LECTERN_BOOKS)) {
+        net.minecraft.world.item.ItemStack $$6 = $$3.getItemInHand($$4);
+        if ($$6.isEmpty() || $$6.is(net.minecraft.tags.ItemTags.LECTERN_BOOKS)) {
             return net.minecraft.world.InteractionResult.PASS;
         }
         return net.minecraft.world.InteractionResult.CONSUME;
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.MenuProvider getMenuProvider(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        if (!((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue()) {
+    public net.minecraft.world.MenuProvider getMenuProvider(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        if (!((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)HAS_BOOK)).booleanValue()) {
             return null;
         }
-        return super.getMenuProvider(state, level, pos);
+        return super.getMenuProvider($$0, $$1, $$2);
     }
 
-    public void openScreen(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.LecternBlockEntity) {
-            player.openMenu((net.minecraft.world.MenuProvider)((net.minecraft.world.level.block.entity.LecternBlockEntity)blockEntity));
-            player.awardStat(net.minecraft.stats.Stats.INTERACT_WITH_LECTERN);
+    public void openScreen(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.entity.player.Player $$2) {
+        net.minecraft.world.level.block.entity.BlockEntity $$3 = $$0.getBlockEntity($$1);
+        if ($$3 instanceof net.minecraft.world.level.block.entity.LecternBlockEntity) {
+            $$2.openMenu((net.minecraft.world.MenuProvider)((net.minecraft.world.level.block.entity.LecternBlockEntity)$$3));
+            $$2.awardStat(net.minecraft.stats.Stats.INTERACT_WITH_LECTERN);
         }
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 