--- net/minecraft/world/level/block/ComparatorBlock.java
+++ net/minecraft/world/level/block/ComparatorBlock.java
@@ -14,116 +14,116 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH)).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)MODE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.ComparatorMode.COMPARE));
     }
 
-    public int getDelay(net.minecraft.world.level.block.state.BlockState state) {
+    public int getDelay(net.minecraft.world.level.block.state.BlockState $$0) {
         return 2;
     }
 
-    public int getOutputSignal(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.ComparatorBlockEntity) {
-            return ((net.minecraft.world.level.block.entity.ComparatorBlockEntity)blockEntity).getOutputSignal();
+    public int getOutputSignal(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        net.minecraft.world.level.block.entity.BlockEntity $$3 = $$0.getBlockEntity($$1);
+        if ($$3 instanceof net.minecraft.world.level.block.entity.ComparatorBlockEntity) {
+            return ((net.minecraft.world.level.block.entity.ComparatorBlockEntity)$$3).getOutputSignal();
         }
         return 0;
     }
 
-    public int calculateOutputSignal(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        int n = this.getInputSignal(level, pos, state);
-        if (n == 0) {
+    public int calculateOutputSignal(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        int $$3 = this.getInputSignal($$0, $$1, $$2);
+        if ($$3 == 0) {
             return 0;
         }
-        int n2 = this.getAlternateSignal((net.minecraft.world.level.LevelReader)level, pos, state);
-        if (n2 > n) {
+        int $$4 = this.getAlternateSignal((net.minecraft.world.level.LevelReader)$$0, $$1, $$2);
+        if ($$4 > $$3) {
             return 0;
         }
-        if (state.getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.SUBTRACT) {
-            return n - n2;
+        if ($$2.getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.SUBTRACT) {
+            return $$3 - $$4;
         }
-        return n;
+        return $$3;
     }
 
-    public boolean shouldTurnOn(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        int n = this.getInputSignal(level, pos, state);
-        if (n == 0) {
+    public boolean shouldTurnOn(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        int $$3 = this.getInputSignal($$0, $$1, $$2);
+        if ($$3 == 0) {
             return false;
         }
-        int n2 = this.getAlternateSignal((net.minecraft.world.level.LevelReader)level, pos, state);
-        if (n > n2) {
+        int $$4 = this.getAlternateSignal((net.minecraft.world.level.LevelReader)$$0, $$1, $$2);
+        if ($$3 > $$4) {
             return true;
         }
-        return n == n2 && state.getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.COMPARE;
+        return $$3 == $$4 && $$2.getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.COMPARE;
     }
 
-    public int getInputSignal(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        int n = super.getInputSignal(level, pos, state);
-        net.minecraft.core.Direction direction = (net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
-        net.minecraft.core.BlockPos blockPos = pos.relative(direction);
-        net.minecraft.world.level.block.state.BlockState blockState = level.getBlockState(blockPos);
-        if (blockState.hasAnalogOutputSignal()) {
-            n = blockState.getAnalogOutputSignal(level, blockPos);
-        } else if (n < 15 && blockState.isRedstoneConductor((net.minecraft.world.level.BlockGetter)level, blockPos)) {
-            blockPos = blockPos.relative(direction);
-            blockState = level.getBlockState(blockPos);
-            net.minecraft.world.entity.decoration.ItemFrame itemFrame = this.getItemFrame(level, direction, blockPos);
-            int n2 = java.lang.Math.max((int)(itemFrame == null ? java.lang.Integer.MIN_VALUE : itemFrame.getAnalogOutput()), (int)(blockState.hasAnalogOutputSignal() ? blockState.getAnalogOutputSignal(level, blockPos) : java.lang.Integer.MIN_VALUE));
-            if (n2 != java.lang.Integer.MIN_VALUE) {
-                n = n2;
+    public int getInputSignal(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        int $$3 = super.getInputSignal($$0, $$1, $$2);
+        net.minecraft.core.Direction $$4 = (net.minecraft.core.Direction)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)FACING);
+        net.minecraft.core.BlockPos $$5 = $$1.relative($$4);
+        net.minecraft.world.level.block.state.BlockState $$6 = $$0.getBlockState($$5);
+        if ($$6.hasAnalogOutputSignal()) {
+            $$3 = $$6.getAnalogOutputSignal($$0, $$5);
+        } else if ($$3 < 15 && $$6.isRedstoneConductor((net.minecraft.world.level.BlockGetter)$$0, $$5)) {
+            $$5 = $$5.relative($$4);
+            $$6 = $$0.getBlockState($$5);
+            net.minecraft.world.entity.decoration.ItemFrame $$7 = this.getItemFrame($$0, $$4, $$5);
+            int $$8 = java.lang.Math.max((int)($$7 == null ? java.lang.Integer.MIN_VALUE : $$7.getAnalogOutput()), (int)($$6.hasAnalogOutputSignal() ? $$6.getAnalogOutputSignal($$0, $$5) : java.lang.Integer.MIN_VALUE));
+            if ($$8 != java.lang.Integer.MIN_VALUE) {
+                $$3 = $$8;
             }
         }
-        return n;
+        return $$3;
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.entity.decoration.ItemFrame getItemFrame(net.minecraft.world.level.Level level, net.minecraft.core.Direction facing, net.minecraft.core.BlockPos pos) {
-        java.util.List list = level.getEntitiesOfClass(net.minecraft.world.entity.decoration.ItemFrame.class, new net.minecraft.world.phys.AABB((double)pos.getX(), (double)pos.getY(), (double)pos.getZ(), (double)(pos.getX() + 1), (double)(pos.getY() + 1), (double)(pos.getZ() + 1)), $$1 -> $$1 != null && $$1.getDirection() == facing);
-        if (list.size() == 1) {
-            return (net.minecraft.world.entity.decoration.ItemFrame)list.get(0);
+    public net.minecraft.world.entity.decoration.ItemFrame getItemFrame(net.minecraft.world.level.Level $$0, net.minecraft.core.Direction $$12, net.minecraft.core.BlockPos $$2) {
+        java.util.List $$3 = $$0.getEntitiesOfClass(net.minecraft.world.entity.decoration.ItemFrame.class, new net.minecraft.world.phys.AABB((double)$$2.getX(), (double)$$2.getY(), (double)$$2.getZ(), (double)($$2.getX() + 1), (double)($$2.getY() + 1), (double)($$2.getZ() + 1)), $$1 -> $$1 != null && $$1.getDirection() == $$12);
+        if ($$3.size() == 1) {
+            return (net.minecraft.world.entity.decoration.ItemFrame)$$3.get(0);
         }
         return null;
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        if (!player.getAbilities().mayBuild) {
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        if (!$$3.getAbilities().mayBuild) {
             return net.minecraft.world.InteractionResult.PASS;
         }
-        float f = (state = (net.minecraft.world.level.block.state.BlockState)state.cycle((net.minecraft.world.level.block.state.properties.Property)MODE)).getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.SUBTRACT ? 0.55f : 0.5f;
-        level.playSound(player, pos, net.minecraft.sounds.SoundEvents.COMPARATOR_CLICK, net.minecraft.sounds.SoundSource.BLOCKS, 0.3f, f);
-        level.setBlock(pos, state, 2);
-        this.refreshOutputState(level, pos, state);
-        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+        float $$6 = ($$0 = (net.minecraft.world.level.block.state.BlockState)$$0.cycle((net.minecraft.world.level.block.state.properties.Property)MODE)).getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.SUBTRACT ? 0.55f : 0.5f;
+        $$1.playSound($$3, $$2, net.minecraft.sounds.SoundEvents.COMPARATOR_CLICK, net.minecraft.sounds.SoundSource.BLOCKS, 0.3f, $$6);
+        $$1.setBlock($$2, $$0, 2);
+        this.refreshOutputState($$1, $$2, $$0);
+        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$1.isClientSide);
     }
 
-    public void checkTickOnNeighbor(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        int n;
-        if (level.getBlockTicks().willTickThisTick(pos, (java.lang.Object)this)) {
+    public void checkTickOnNeighbor(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        int $$5;
+        if ($$0.getBlockTicks().willTickThisTick($$1, (java.lang.Object)this)) {
             return;
         }
-        int n2 = this.calculateOutputSignal(level, pos, state);
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        int n3 = n = blockEntity instanceof net.minecraft.world.level.block.entity.ComparatorBlockEntity ? ((net.minecraft.world.level.block.entity.ComparatorBlockEntity)blockEntity).getOutputSignal() : 0;
-        if (n2 != n || ((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue() != this.shouldTurnOn(level, pos, state)) {
-            net.minecraft.world.ticks.TickPriority tickPriority = this.shouldPrioritize((net.minecraft.world.level.BlockGetter)level, pos, state) ? net.minecraft.world.ticks.TickPriority.HIGH : net.minecraft.world.ticks.TickPriority.NORMAL;
-            level.scheduleTick(pos, (net.minecraft.world.level.block.Block)this, 2, tickPriority);
+        int $$3 = this.calculateOutputSignal($$0, $$1, $$2);
+        net.minecraft.world.level.block.entity.BlockEntity $$4 = $$0.getBlockEntity($$1);
+        int n = $$5 = $$4 instanceof net.minecraft.world.level.block.entity.ComparatorBlockEntity ? ((net.minecraft.world.level.block.entity.ComparatorBlockEntity)$$4).getOutputSignal() : 0;
+        if ($$3 != $$5 || ((java.lang.Boolean)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED)).booleanValue() != this.shouldTurnOn($$0, $$1, $$2)) {
+            net.minecraft.world.ticks.TickPriority $$6 = this.shouldPrioritize((net.minecraft.world.level.BlockGetter)$$0, $$1, $$2) ? net.minecraft.world.ticks.TickPriority.HIGH : net.minecraft.world.ticks.TickPriority.NORMAL;
+            $$0.scheduleTick($$1, (net.minecraft.world.level.block.Block)this, 2, $$6);
         }
     }
 
-    public void refreshOutputState(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        int n = this.calculateOutputSignal(level, pos, state);
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        int n2 = 0;
-        if (blockEntity instanceof net.minecraft.world.level.block.entity.ComparatorBlockEntity) {
-            net.minecraft.world.level.block.entity.ComparatorBlockEntity comparatorBlockEntity = (net.minecraft.world.level.block.entity.ComparatorBlockEntity)blockEntity;
-            n2 = comparatorBlockEntity.getOutputSignal();
-            comparatorBlockEntity.setOutputSignal(n);
+    public void refreshOutputState(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        int $$3 = this.calculateOutputSignal($$0, $$1, $$2);
+        net.minecraft.world.level.block.entity.BlockEntity $$4 = $$0.getBlockEntity($$1);
+        int $$5 = 0;
+        if ($$4 instanceof net.minecraft.world.level.block.entity.ComparatorBlockEntity) {
+            net.minecraft.world.level.block.entity.ComparatorBlockEntity $$6 = (net.minecraft.world.level.block.entity.ComparatorBlockEntity)$$4;
+            $$5 = $$6.getOutputSignal();
+            $$6.setOutputSignal($$3);
         }
-        if (n2 != n || state.getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.COMPARE) {
-            boolean bl = this.shouldTurnOn(level, pos, state);
-            boolean bl2 = (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED);
-            if (bl2 && !bl) {
-                level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)), 2);
-            } else if (!bl2 && bl) {
-                level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)), 2);
+        if ($$5 != $$3 || $$2.getValue((net.minecraft.world.level.block.state.properties.Property)MODE) == net.minecraft.world.level.block.state.properties.ComparatorMode.COMPARE) {
+            boolean $$7 = this.shouldTurnOn($$0, $$1, $$2);
+            boolean $$8 = (java.lang.Boolean)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)POWERED);
+            if ($$8 && !$$7) {
+                $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)), 2);
+            } else if (!$$8 && $$7) {
+                $$0.setBlock($$1, (net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true)), 2);
             }
-            this.updateNeighborsInFront(level, pos, state);
+            this.updateNeighborsInFront($$0, $$1, $$2);
         }
     }
 
@@ -131,18 +131,18 @@
         this.refreshOutputState((net.minecraft.world.level.Level)$$1, $$2, $$0);
     }
 
-    public boolean triggerEvent(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, int id, int param) {
-        super.triggerEvent(state, level, pos, id, param);
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity = level.getBlockEntity(pos);
-        return blockEntity != null && blockEntity.triggerEvent(id, param);
+    public boolean triggerEvent(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, int $$3, int $$4) {
+        super.triggerEvent($$0, $$1, $$2, $$3, $$4);
+        net.minecraft.world.level.block.entity.BlockEntity $$5 = $$1.getBlockEntity($$2);
+        return $$5 != null && $$5.triggerEvent($$3, $$4);
     }
 
     public net.minecraft.world.level.block.entity.BlockEntity newBlockEntity(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1) {
         return new net.minecraft.world.level.block.entity.ComparatorBlockEntity($$0, $$1);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, MODE, POWERED});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, MODE, POWERED});
     }
 
     static {