--- net/minecraft/world/level/block/LeavesBlock.java
+++ net/minecraft/world/level/block/LeavesBlock.java
@@ -18,12 +18,12 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE, (java.lang.Comparable)java.lang.Integer.valueOf((int)7))).setValue((net.minecraft.world.level.block.state.properties.Property)PERSISTENT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getBlockSupportShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter reader, net.minecraft.core.BlockPos pos) {
+    public net.minecraft.world.phys.shapes.VoxelShape getBlockSupportShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
         return net.minecraft.world.phys.shapes.Shapes.empty();
     }
 
-    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState state) {
-        return (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE) == 7 && (java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)PERSISTENT) == false;
+    public boolean isRandomlyTicking(net.minecraft.world.level.block.state.BlockState $$0) {
+        return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE) == 7 && (java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)PERSISTENT) == false;
     }
 
     public void randomTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.server.level.ServerLevel $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -41,38 +41,38 @@
         $$1.setBlock($$2, net.minecraft.world.level.block.LeavesBlock.updateDistance((net.minecraft.world.level.block.state.BlockState)$$0, (net.minecraft.world.level.LevelAccessor)$$1, (net.minecraft.core.BlockPos)$$2), 3);
     }
 
-    public int getLightBlock(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
+    public int getLightBlock(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2) {
         return 1;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        int n;
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)level));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        int $$6;
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)$$3));
         }
-        if ((n = net.minecraft.world.level.block.LeavesBlock.getDistanceAt((net.minecraft.world.level.block.state.BlockState)facingState) + 1) != 1 || (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE) != n) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.block.Block)this, 1);
+        if (($$6 = net.minecraft.world.level.block.LeavesBlock.getDistanceAt((net.minecraft.world.level.block.state.BlockState)$$2) + 1) != 1 || (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE) != $$6) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.block.Block)this, 1);
         }
-        return state;
+        return $$0;
     }
 
-    public static net.minecraft.world.level.block.state.BlockState updateDistance(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos pos) {
-        int n = 7;
-        net.minecraft.core.BlockPos$MutableBlockPos mutableBlockPos = new net.minecraft.core.BlockPos$MutableBlockPos();
-        for (net.minecraft.core.Direction direction : net.minecraft.core.Direction.values()) {
-            mutableBlockPos.setWithOffset((net.minecraft.core.Vec3i)pos, direction);
-            n = java.lang.Math.min((int)n, (int)(net.minecraft.world.level.block.LeavesBlock.getDistanceAt((net.minecraft.world.level.block.state.BlockState)level.getBlockState((net.minecraft.core.BlockPos)mutableBlockPos)) + 1));
-            if (n == 1) break;
+    public static net.minecraft.world.level.block.state.BlockState updateDistance(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelAccessor $$1, net.minecraft.core.BlockPos $$2) {
+        int $$3 = 7;
+        net.minecraft.core.BlockPos$MutableBlockPos $$4 = new net.minecraft.core.BlockPos$MutableBlockPos();
+        for (net.minecraft.core.Direction $$5 : net.minecraft.core.Direction.values()) {
+            $$4.setWithOffset((net.minecraft.core.Vec3i)$$2, $$5);
+            $$3 = java.lang.Math.min((int)$$3, (int)(net.minecraft.world.level.block.LeavesBlock.getDistanceAt((net.minecraft.world.level.block.state.BlockState)$$1.getBlockState((net.minecraft.core.BlockPos)$$4)) + 1));
+            if ($$3 == 1) break;
         }
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE, (java.lang.Comparable)java.lang.Integer.valueOf((int)n));
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE, (java.lang.Comparable)java.lang.Integer.valueOf((int)$$3));
     }
 
-    public static int getDistanceAt(net.minecraft.world.level.block.state.BlockState neighbor) {
-        if (neighbor.is(net.minecraft.tags.BlockTags.LOGS)) {
+    public static int getDistanceAt(net.minecraft.world.level.block.state.BlockState $$0) {
+        if ($$0.is(net.minecraft.tags.BlockTags.LOGS)) {
             return 0;
         }
-        if (neighbor.getBlock() instanceof net.minecraft.world.level.block.LeavesBlock) {
-            return (java.lang.Integer)neighbor.getValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE);
+        if ($$0.getBlock() instanceof net.minecraft.world.level.block.LeavesBlock) {
+            return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)DISTANCE);
         }
         return 7;
     }
@@ -102,14 +102,14 @@
         $$1.addParticle((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.DRIPPING_WATER, $$6, $$7, $$8, 0.0, 0.0, 0.0);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{DISTANCE, PERSISTENT, WATERLOGGED});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{DISTANCE, PERSISTENT, WATERLOGGED});
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.material.FluidState fluidState = context.getLevel().getFluidState(context.getClickedPos());
-        net.minecraft.world.level.block.state.BlockState blockState = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)PERSISTENT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true))).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((fluidState.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
-        return net.minecraft.world.level.block.LeavesBlock.updateDistance((net.minecraft.world.level.block.state.BlockState)blockState, (net.minecraft.world.level.LevelAccessor)context.getLevel(), (net.minecraft.core.BlockPos)context.getClickedPos());
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.material.FluidState $$1 = $$0.getLevel().getFluidState($$0.getClickedPos());
+        net.minecraft.world.level.block.state.BlockState $$2 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)PERSISTENT, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)true))).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf(($$1.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
+        return net.minecraft.world.level.block.LeavesBlock.updateDistance((net.minecraft.world.level.block.state.BlockState)$$2, (net.minecraft.world.level.LevelAccessor)$$0.getLevel(), (net.minecraft.core.BlockPos)$$0.getClickedPos());
     }
 
     static {