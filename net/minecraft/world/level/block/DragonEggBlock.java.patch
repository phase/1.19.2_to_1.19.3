--- net/minecraft/world/level/block/DragonEggBlock.java
+++ net/minecraft/world/level/block/DragonEggBlock.java
@@ -12,38 +12,38 @@
         super($$0);
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return SHAPE;
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        this.teleport(state, level, pos);
-        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        this.teleport($$0, $$1, $$2);
+        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$1.isClientSide);
     }
 
-    public void attack(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player) {
-        this.teleport(state, level, pos);
+    public void attack(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3) {
+        this.teleport($$0, $$1, $$2);
     }
 
-    public void teleport(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.world.level.border.WorldBorder worldBorder = level.getWorldBorder();
-        for (int i = 0; i < 1000; ++i) {
-            net.minecraft.core.BlockPos blockPos = pos.offset(level.random.nextInt(16) - level.random.nextInt(16), level.random.nextInt(8) - level.random.nextInt(8), level.random.nextInt(16) - level.random.nextInt(16));
-            if (!level.getBlockState(blockPos).isAir() || !worldBorder.isWithinBounds(blockPos)) continue;
-            if (level.isClientSide) {
-                for (int j = 0; j < 128; ++j) {
-                    double d = level.random.nextDouble();
-                    float f = (level.random.nextFloat() - 0.5f) * 0.2f;
-                    float f2 = (level.random.nextFloat() - 0.5f) * 0.2f;
-                    float f3 = (level.random.nextFloat() - 0.5f) * 0.2f;
-                    double d2 = net.minecraft.util.Mth.lerp((double)d, (double)blockPos.getX(), (double)pos.getX()) + (level.random.nextDouble() - 0.5) + 0.5;
-                    double d3 = net.minecraft.util.Mth.lerp((double)d, (double)blockPos.getY(), (double)pos.getY()) + level.random.nextDouble() - 0.5;
-                    double d4 = net.minecraft.util.Mth.lerp((double)d, (double)blockPos.getZ(), (double)pos.getZ()) + (level.random.nextDouble() - 0.5) + 0.5;
-                    level.addParticle((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.PORTAL, d2, d3, d4, (double)f, (double)f2, (double)f3);
+    public void teleport(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2) {
+        net.minecraft.world.level.border.WorldBorder $$3 = $$1.getWorldBorder();
+        for (int $$4 = 0; $$4 < 1000; ++$$4) {
+            net.minecraft.core.BlockPos $$5 = $$2.offset($$1.random.nextInt(16) - $$1.random.nextInt(16), $$1.random.nextInt(8) - $$1.random.nextInt(8), $$1.random.nextInt(16) - $$1.random.nextInt(16));
+            if (!$$1.getBlockState($$5).isAir() || !$$3.isWithinBounds($$5)) continue;
+            if ($$1.isClientSide) {
+                for (int $$6 = 0; $$6 < 128; ++$$6) {
+                    double $$7 = $$1.random.nextDouble();
+                    float $$8 = ($$1.random.nextFloat() - 0.5f) * 0.2f;
+                    float $$9 = ($$1.random.nextFloat() - 0.5f) * 0.2f;
+                    float $$10 = ($$1.random.nextFloat() - 0.5f) * 0.2f;
+                    double $$11 = net.minecraft.util.Mth.lerp((double)$$7, (double)$$5.getX(), (double)$$2.getX()) + ($$1.random.nextDouble() - 0.5) + 0.5;
+                    double $$12 = net.minecraft.util.Mth.lerp((double)$$7, (double)$$5.getY(), (double)$$2.getY()) + $$1.random.nextDouble() - 0.5;
+                    double $$13 = net.minecraft.util.Mth.lerp((double)$$7, (double)$$5.getZ(), (double)$$2.getZ()) + ($$1.random.nextDouble() - 0.5) + 0.5;
+                    $$1.addParticle((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.ParticleTypes.PORTAL, $$11, $$12, $$13, (double)$$8, (double)$$9, (double)$$10);
                 }
             } else {
-                level.setBlock(blockPos, state, 2);
-                level.removeBlock(pos, false);
+                $$1.setBlock($$5, $$0, 2);
+                $$1.removeBlock($$2, false);
             }
             return;
         }
@@ -53,7 +53,7 @@
         return 5;
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
         return false;
     }
 