--- net/minecraft/world/level/block/RedstoneWallTorchBlock.java
+++ net/minecraft/world/level/block/RedstoneWallTorchBlock.java
@@ -18,22 +18,22 @@
         return this.asItem().getDescriptionId();
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        return net.minecraft.world.level.block.WallTorchBlock.getShape((net.minecraft.world.level.block.state.BlockState)state);
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        return net.minecraft.world.level.block.WallTorchBlock.getShape((net.minecraft.world.level.block.state.BlockState)$$0);
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        return net.minecraft.world.level.block.Blocks.WALL_TORCH.canSurvive(state, level, pos);
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        return net.minecraft.world.level.block.Blocks.WALL_TORCH.canSurvive($$0, $$1, $$2);
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        return net.minecraft.world.level.block.Blocks.WALL_TORCH.updateShape(state, facing, facingState, level, currentPos, facingPos);
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        return net.minecraft.world.level.block.Blocks.WALL_TORCH.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.block.state.BlockState blockState = net.minecraft.world.level.block.Blocks.WALL_TORCH.getStateForPlacement(context);
-        return blockState == null ? null : (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)((net.minecraft.core.Direction)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = net.minecraft.world.level.block.Blocks.WALL_TORCH.getStateForPlacement($$0);
+        return $$1 == null ? null : (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)((net.minecraft.core.Direction)$$1.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)));
     }
 
     public void animateTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -48,28 +48,28 @@
         $$1.addParticle(this.flameParticle, $$6, $$7, $$8, 0.0, 0.0, 0.0);
     }
 
-    public boolean hasNeighborSignal(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        net.minecraft.core.Direction direction = ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite();
-        return level.hasSignal(pos.relative(direction), direction);
+    public boolean hasNeighborSignal(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        net.minecraft.core.Direction $$3 = ((net.minecraft.core.Direction)$$2.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getOpposite();
+        return $$0.hasSignal($$1.relative($$3), $$3);
     }
 
-    public int getSignal(net.minecraft.world.level.block.state.BlockState blockState, net.minecraft.world.level.BlockGetter blockAccess, net.minecraft.core.BlockPos pos, net.minecraft.core.Direction side) {
-        if (((java.lang.Boolean)blockState.getValue((net.minecraft.world.level.block.state.properties.Property)LIT)).booleanValue() && blockState.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) != side) {
+    public int getSignal(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.core.Direction $$3) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)LIT)).booleanValue() && $$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING) != $$3) {
             return 15;
         }
         return 0;
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rotation) {
-        return net.minecraft.world.level.block.Blocks.WALL_TORCH.rotate(state, rotation);
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return net.minecraft.world.level.block.Blocks.WALL_TORCH.rotate($$0, $$1);
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return net.minecraft.world.level.block.Blocks.WALL_TORCH.mirror(state, mirror);
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return net.minecraft.world.level.block.Blocks.WALL_TORCH.mirror($$0, $$1);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, LIT});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, LIT});
     }
 
     static {