--- net/minecraft/world/level/block/CoralBlock.java
+++ net/minecraft/world/level/block/CoralBlock.java
@@ -19,26 +19,26 @@
         }
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (!this.scanForWater((net.minecraft.world.level.BlockGetter)level, currentPos)) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.block.Block)this, 60 + level.getRandom().nextInt(40));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (!this.scanForWater((net.minecraft.world.level.BlockGetter)$$3, $$4)) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.block.Block)this, 60 + $$3.getRandom().nextInt(40));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean scanForWater(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos) {
-        for (net.minecraft.core.Direction direction : net.minecraft.core.Direction.values()) {
-            net.minecraft.world.level.material.FluidState fluidState = level.getFluidState(pos.relative(direction));
-            if (!fluidState.is(net.minecraft.tags.FluidTags.WATER)) continue;
+    public boolean scanForWater(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1) {
+        for (net.minecraft.core.Direction $$2 : net.minecraft.core.Direction.values()) {
+            net.minecraft.world.level.material.FluidState $$3 = $$0.getFluidState($$1.relative($$2));
+            if (!$$3.is(net.minecraft.tags.FluidTags.WATER)) continue;
             return true;
         }
         return false;
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        if (!this.scanForWater((net.minecraft.world.level.BlockGetter)context.getLevel(), context.getClickedPos())) {
-            context.getLevel().scheduleTick(context.getClickedPos(), (net.minecraft.world.level.block.Block)this, 60 + context.getLevel().getRandom().nextInt(40));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        if (!this.scanForWater((net.minecraft.world.level.BlockGetter)$$0.getLevel(), $$0.getClickedPos())) {
+            $$0.getLevel().scheduleTick($$0.getClickedPos(), (net.minecraft.world.level.block.Block)this, 60 + $$0.getLevel().getRandom().nextInt(40));
         }
         return this.defaultBlockState();
     }