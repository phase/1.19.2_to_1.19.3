--- net/minecraft/world/level/block/BannerBlock.java
+++ net/minecraft/world/level/block/BannerBlock.java
@@ -16,39 +16,39 @@
         BY_COLOR.put((java.lang.Object)$$0, (java.lang.Object)this);
     }
 
-    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos) {
-        return level.getBlockState(pos.below()).getMaterial().isSolid();
+    public boolean canSurvive(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.LevelReader $$1, net.minecraft.core.BlockPos $$2) {
+        return $$1.getBlockState($$2.below()).getMaterial().isSolid();
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
         return SHAPE;
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)ROTATION, (java.lang.Comparable)java.lang.Integer.valueOf((int)(net.minecraft.util.Mth.floor((double)((double)((180.0f + context.getRotation()) * 16.0f / 360.0f) + 0.5)) & 0xF)));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        return (net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)ROTATION, (java.lang.Comparable)java.lang.Integer.valueOf((int)net.minecraft.world.level.block.state.properties.RotationSegment.convertToSegment((float)$$0.getRotation())));
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (facing == net.minecraft.core.Direction.DOWN && !state.canSurvive((net.minecraft.world.level.LevelReader)level, currentPos)) {
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if ($$1 == net.minecraft.core.Direction.DOWN && !$$0.canSurvive((net.minecraft.world.level.LevelReader)$$3, $$4)) {
             return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Rotation rotation) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)ROTATION, (java.lang.Comparable)java.lang.Integer.valueOf((int)rotation.rotate(((java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)ROTATION)).intValue(), 16)));
+    public net.minecraft.world.level.block.state.BlockState rotate(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Rotation $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)ROTATION, (java.lang.Comparable)java.lang.Integer.valueOf((int)$$1.rotate(((java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)ROTATION)).intValue(), 16)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.block.Mirror mirror) {
-        return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)ROTATION, (java.lang.Comparable)java.lang.Integer.valueOf((int)mirror.mirror(((java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)ROTATION)).intValue(), 16)));
+    public net.minecraft.world.level.block.state.BlockState mirror(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.block.Mirror $$1) {
+        return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)ROTATION, (java.lang.Comparable)java.lang.Integer.valueOf((int)$$1.mirror(((java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)ROTATION)).intValue(), 16)));
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{ROTATION});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{ROTATION});
     }
 
-    public static net.minecraft.world.level.block.Block byColor(net.minecraft.world.item.DyeColor color) {
-        return (net.minecraft.world.level.block.Block)BY_COLOR.getOrDefault((java.lang.Object)color, (java.lang.Object)net.minecraft.world.level.block.Blocks.WHITE_BANNER);
+    public static net.minecraft.world.level.block.Block byColor(net.minecraft.world.item.DyeColor $$0) {
+        return (net.minecraft.world.level.block.Block)BY_COLOR.getOrDefault((java.lang.Object)$$0, (java.lang.Object)net.minecraft.world.level.block.Blocks.WHITE_BANNER);
     }
 
     static {