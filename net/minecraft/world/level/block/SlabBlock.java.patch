--- net/minecraft/world/level/block/SlabBlock.java
+++ net/minecraft/world/level/block/SlabBlock.java
@@ -17,17 +17,17 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)TYPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.SlabType.BOTTOM)).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
     }
 
-    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState state) {
-        return state.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE) != net.minecraft.world.level.block.state.properties.SlabType.DOUBLE;
+    public boolean useShapeForLightOcclusion(net.minecraft.world.level.block.state.BlockState $$0) {
+        return $$0.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE) != net.minecraft.world.level.block.state.properties.SlabType.DOUBLE;
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{TYPE, WATERLOGGED});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{TYPE, WATERLOGGED});
     }
 
-    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
-        net.minecraft.world.level.block.state.properties.SlabType slabType = (net.minecraft.world.level.block.state.properties.SlabType)state.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE);
-        switch (net.minecraft.world.level.block.SlabBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType[slabType.ordinal()]) {
+    public net.minecraft.world.phys.shapes.VoxelShape getShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.phys.shapes.CollisionContext $$3) {
+        net.minecraft.world.level.block.state.properties.SlabType $$4 = (net.minecraft.world.level.block.state.properties.SlabType)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE);
+        switch (net.minecraft.world.level.block.SlabBlock$1.$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType[$$4.ordinal()]) {
             case 1: {
                 return net.minecraft.world.phys.shapes.Shapes.block();
             }
@@ -39,73 +39,73 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.core.BlockPos blockPos = context.getClickedPos();
-        net.minecraft.world.level.block.state.BlockState blockState = context.getLevel().getBlockState(blockPos);
-        if (blockState.is((net.minecraft.world.level.block.Block)this)) {
-            return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)TYPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.SlabType.DOUBLE)).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.core.BlockPos $$1 = $$0.getClickedPos();
+        net.minecraft.world.level.block.state.BlockState $$2 = $$0.getLevel().getBlockState($$1);
+        if ($$2.is((net.minecraft.world.level.block.Block)this)) {
+            return (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)$$2.setValue((net.minecraft.world.level.block.state.properties.Property)TYPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.SlabType.DOUBLE)).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false));
         }
-        net.minecraft.world.level.material.FluidState fluidState = context.getLevel().getFluidState(blockPos);
-        net.minecraft.world.level.block.state.BlockState blockState2 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)TYPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.SlabType.BOTTOM)).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf((fluidState.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
-        net.minecraft.core.Direction direction = context.getClickedFace();
-        if (direction == net.minecraft.core.Direction.DOWN || direction != net.minecraft.core.Direction.UP && context.getClickLocation().y - (double)blockPos.getY() > 0.5) {
-            return (net.minecraft.world.level.block.state.BlockState)blockState2.setValue((net.minecraft.world.level.block.state.properties.Property)TYPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.SlabType.TOP);
+        net.minecraft.world.level.material.FluidState $$3 = $$0.getLevel().getFluidState($$1);
+        net.minecraft.world.level.block.state.BlockState $$4 = (net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.defaultBlockState().setValue((net.minecraft.world.level.block.state.properties.Property)TYPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.SlabType.BOTTOM)).setValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED, (java.lang.Comparable)java.lang.Boolean.valueOf(($$3.getType() == net.minecraft.world.level.material.Fluids.WATER ? 1 : 0) != 0));
+        net.minecraft.core.Direction $$5 = $$0.getClickedFace();
+        if ($$5 == net.minecraft.core.Direction.DOWN || $$5 != net.minecraft.core.Direction.UP && $$0.getClickLocation().y - (double)$$1.getY() > 0.5) {
+            return (net.minecraft.world.level.block.state.BlockState)$$4.setValue((net.minecraft.world.level.block.state.properties.Property)TYPE, (java.lang.Comparable)net.minecraft.world.level.block.state.properties.SlabType.TOP);
         }
-        return blockState2;
+        return $$4;
     }
 
-    public boolean canBeReplaced(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.item.context.BlockPlaceContext useContext) {
-        net.minecraft.world.item.ItemStack itemStack = useContext.getItemInHand();
-        net.minecraft.world.level.block.state.properties.SlabType slabType = (net.minecraft.world.level.block.state.properties.SlabType)state.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE);
-        if (slabType == net.minecraft.world.level.block.state.properties.SlabType.DOUBLE || !itemStack.is(this.asItem())) {
+    public boolean canBeReplaced(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.item.context.BlockPlaceContext $$1) {
+        net.minecraft.world.item.ItemStack $$2 = $$1.getItemInHand();
+        net.minecraft.world.level.block.state.properties.SlabType $$3 = (net.minecraft.world.level.block.state.properties.SlabType)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE);
+        if ($$3 == net.minecraft.world.level.block.state.properties.SlabType.DOUBLE || !$$2.is(this.asItem())) {
             return false;
         }
-        if (useContext.replacingClickedOnBlock()) {
-            boolean bl = useContext.getClickLocation().y - (double)useContext.getClickedPos().getY() > 0.5;
-            net.minecraft.core.Direction direction = useContext.getClickedFace();
-            if (slabType == net.minecraft.world.level.block.state.properties.SlabType.BOTTOM) {
-                return direction == net.minecraft.core.Direction.UP || bl && direction.getAxis().isHorizontal();
+        if ($$1.replacingClickedOnBlock()) {
+            boolean $$4 = $$1.getClickLocation().y - (double)$$1.getClickedPos().getY() > 0.5;
+            net.minecraft.core.Direction $$5 = $$1.getClickedFace();
+            if ($$3 == net.minecraft.world.level.block.state.properties.SlabType.BOTTOM) {
+                return $$5 == net.minecraft.core.Direction.UP || $$4 && $$5.getAxis().isHorizontal();
             }
-            return direction == net.minecraft.core.Direction.DOWN || !bl && direction.getAxis().isHorizontal();
+            return $$5 == net.minecraft.core.Direction.DOWN || !$$4 && $$5.getAxis().isHorizontal();
         }
         return true;
     }
 
-    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState state) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.world.level.block.state.BlockState $$0) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
             return net.minecraft.world.level.material.Fluids.WATER.getSource(false);
         }
-        return super.getFluidState(state);
+        return super.getFluidState($$0);
     }
 
-    public boolean placeLiquid(net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.material.FluidState fluidState) {
-        if (state.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE) != net.minecraft.world.level.block.state.properties.SlabType.DOUBLE) {
-            return super.placeLiquid(level, pos, state, fluidState);
+    public boolean placeLiquid(net.minecraft.world.level.LevelAccessor $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.material.FluidState $$3) {
+        if ($$2.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE) != net.minecraft.world.level.block.state.properties.SlabType.DOUBLE) {
+            return super.placeLiquid($$0, $$1, $$2, $$3);
         }
         return false;
     }
 
-    public boolean canPlaceLiquid(net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.material.Fluid fluid) {
-        if (state.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE) != net.minecraft.world.level.block.state.properties.SlabType.DOUBLE) {
-            return super.canPlaceLiquid(level, pos, state, fluid);
+    public boolean canPlaceLiquid(net.minecraft.world.level.BlockGetter $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.material.Fluid $$3) {
+        if ($$2.getValue((net.minecraft.world.level.block.state.properties.Property)TYPE) != net.minecraft.world.level.block.state.properties.SlabType.DOUBLE) {
+            return super.canPlaceLiquid($$0, $$1, $$2, $$3);
         }
         return false;
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (((java.lang.Boolean)state.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
-            level.scheduleTick(currentPos, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)level));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (((java.lang.Boolean)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)WATERLOGGED)).booleanValue()) {
+            $$3.scheduleTick($$4, (net.minecraft.world.level.material.Fluid)net.minecraft.world.level.material.Fluids.WATER, net.minecraft.world.level.material.Fluids.WATER.getTickDelay((net.minecraft.world.level.LevelReader)$$3));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.BlockGetter level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.pathfinder.PathComputationType type) {
-        switch (net.minecraft.world.level.block.SlabBlock$1.$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType[type.ordinal()]) {
+    public boolean isPathfindable(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.BlockGetter $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.level.pathfinder.PathComputationType $$3) {
+        switch (net.minecraft.world.level.block.SlabBlock$1.$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType[$$3.ordinal()]) {
             case 1: {
                 return false;
             }
             case 2: {
-                return level.getFluidState(pos).is(net.minecraft.tags.FluidTags.WATER);
+                return $$1.getFluidState($$2).is(net.minecraft.tags.FluidTags.WATER);
             }
             case 3: {
                 return false;