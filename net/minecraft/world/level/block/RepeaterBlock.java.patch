--- net/minecraft/world/level/block/RepeaterBlock.java
+++ net/minecraft/world/level/block/RepeaterBlock.java
@@ -14,36 +14,36 @@
         this.registerDefaultState((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)((net.minecraft.world.level.block.state.BlockState)this.stateDefinition.any()).setValue((net.minecraft.world.level.block.state.properties.Property)FACING, (java.lang.Comparable)net.minecraft.core.Direction.NORTH)).setValue((net.minecraft.world.level.block.state.properties.Property)DELAY, (java.lang.Comparable)java.lang.Integer.valueOf((int)1))).setValue((net.minecraft.world.level.block.state.properties.Property)LOCKED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false))).setValue((net.minecraft.world.level.block.state.properties.Property)POWERED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)false)));
     }
 
-    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState state, net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos, net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand, net.minecraft.world.phys.BlockHitResult hit) {
-        if (!player.getAbilities().mayBuild) {
+    public net.minecraft.world.InteractionResult use(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.world.entity.player.Player $$3, net.minecraft.world.InteractionHand $$4, net.minecraft.world.phys.BlockHitResult $$5) {
+        if (!$$3.getAbilities().mayBuild) {
             return net.minecraft.world.InteractionResult.PASS;
         }
-        level.setBlock(pos, (net.minecraft.world.level.block.state.BlockState)state.cycle((net.minecraft.world.level.block.state.properties.Property)DELAY), 3);
-        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)level.isClientSide);
+        $$1.setBlock($$2, (net.minecraft.world.level.block.state.BlockState)$$0.cycle((net.minecraft.world.level.block.state.properties.Property)DELAY), 3);
+        return net.minecraft.world.InteractionResult.sidedSuccess((boolean)$$1.isClientSide);
     }
 
-    public int getDelay(net.minecraft.world.level.block.state.BlockState state) {
-        return (java.lang.Integer)state.getValue((net.minecraft.world.level.block.state.properties.Property)DELAY) * 2;
+    public int getDelay(net.minecraft.world.level.block.state.BlockState $$0) {
+        return (java.lang.Integer)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)DELAY) * 2;
     }
 
-    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext context) {
-        net.minecraft.world.level.block.state.BlockState blockState = super.getStateForPlacement(context);
-        return (net.minecraft.world.level.block.state.BlockState)blockState.setValue((net.minecraft.world.level.block.state.properties.Property)LOCKED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isLocked((net.minecraft.world.level.LevelReader)context.getLevel(), context.getClickedPos(), blockState)));
+    public net.minecraft.world.level.block.state.BlockState getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = super.getStateForPlacement($$0);
+        return (net.minecraft.world.level.block.state.BlockState)$$1.setValue((net.minecraft.world.level.block.state.properties.Property)LOCKED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isLocked((net.minecraft.world.level.LevelReader)$$0.getLevel(), $$0.getClickedPos(), $$1)));
     }
 
-    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState state, net.minecraft.core.Direction facing, net.minecraft.world.level.block.state.BlockState facingState, net.minecraft.world.level.LevelAccessor level, net.minecraft.core.BlockPos currentPos, net.minecraft.core.BlockPos facingPos) {
-        if (!level.isClientSide() && facing.getAxis() != ((net.minecraft.core.Direction)state.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis()) {
-            return (net.minecraft.world.level.block.state.BlockState)state.setValue((net.minecraft.world.level.block.state.properties.Property)LOCKED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isLocked((net.minecraft.world.level.LevelReader)level, currentPos, state)));
+    public net.minecraft.world.level.block.state.BlockState updateShape(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.core.Direction $$1, net.minecraft.world.level.block.state.BlockState $$2, net.minecraft.world.level.LevelAccessor $$3, net.minecraft.core.BlockPos $$4, net.minecraft.core.BlockPos $$5) {
+        if (!$$3.isClientSide() && $$1.getAxis() != ((net.minecraft.core.Direction)$$0.getValue((net.minecraft.world.level.block.state.properties.Property)FACING)).getAxis()) {
+            return (net.minecraft.world.level.block.state.BlockState)$$0.setValue((net.minecraft.world.level.block.state.properties.Property)LOCKED, (java.lang.Comparable)java.lang.Boolean.valueOf((boolean)this.isLocked((net.minecraft.world.level.LevelReader)$$3, $$4, $$0)));
         }
-        return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
+        return super.updateShape($$0, $$1, $$2, $$3, $$4, $$5);
     }
 
-    public boolean isLocked(net.minecraft.world.level.LevelReader level, net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state) {
-        return this.getAlternateSignal(level, pos, state) > 0;
+    public boolean isLocked(net.minecraft.world.level.LevelReader $$0, net.minecraft.core.BlockPos $$1, net.minecraft.world.level.block.state.BlockState $$2) {
+        return this.getAlternateSignal($$0, $$1, $$2) > 0;
     }
 
-    public boolean isAlternateInput(net.minecraft.world.level.block.state.BlockState state) {
-        return net.minecraft.world.level.block.RepeaterBlock.isDiode((net.minecraft.world.level.block.state.BlockState)state);
+    public boolean isAlternateInput(net.minecraft.world.level.block.state.BlockState $$0) {
+        return net.minecraft.world.level.block.RepeaterBlock.isDiode((net.minecraft.world.level.block.state.BlockState)$$0);
     }
 
     public void animateTick(net.minecraft.world.level.block.state.BlockState $$0, net.minecraft.world.level.Level $$1, net.minecraft.core.BlockPos $$2, net.minecraft.util.RandomSource $$3) {
@@ -63,8 +63,8 @@
         $$1.addParticle((net.minecraft.core.particles.ParticleOptions)net.minecraft.core.particles.DustParticleOptions.REDSTONE, $$5 + $$9, $$6, $$7 + $$10, 0.0, 0.0, 0.0);
     }
 
-    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> builder) {
-        builder.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, DELAY, LOCKED, POWERED});
+    public void createBlockStateDefinition(net.minecraft.world.level.block.state.StateDefinition$Builder<net.minecraft.world.level.block.Block, net.minecraft.world.level.block.state.BlockState> $$0) {
+        $$0.add(new net.minecraft.world.level.block.state.properties.Property[]{FACING, DELAY, LOCKED, POWERED});
     }
 
     static {