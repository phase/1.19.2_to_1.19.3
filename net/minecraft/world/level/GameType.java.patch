--- net/minecraft/world/level/GameType.java
+++ net/minecraft/world/level/GameType.java
@@ -26,12 +26,12 @@
         return (net.minecraft.world.level.GameType)java.lang.Enum.valueOf(net.minecraft.world.level.GameType.class, (java.lang.String)$$0);
     }
 
-    public net.minecraft.world.level.GameType(int id, java.lang.String name) {
+    public net.minecraft.world.level.GameType(int $$0, java.lang.String $$1) {
         super(string, n);
-        this.id = id;
-        this.name = name;
-        this.shortName = net.minecraft.network.chat.Component.translatable((java.lang.String)("selectWorld.gameMode." + name));
-        this.longName = net.minecraft.network.chat.Component.translatable((java.lang.String)("gameMode." + name));
+        this.id = $$0;
+        this.name = $$1;
+        this.shortName = net.minecraft.network.chat.Component.translatable((java.lang.String)("selectWorld.gameMode." + $$1));
+        this.longName = net.minecraft.network.chat.Component.translatable((java.lang.String)("gameMode." + $$1));
     }
 
     public int getId() {
@@ -50,23 +50,23 @@
         return this.shortName;
     }
 
-    public void updatePlayerAbilities(net.minecraft.world.entity.player.Abilities capabilities) {
+    public void updatePlayerAbilities(net.minecraft.world.entity.player.Abilities $$0) {
         if (this == CREATIVE) {
-            capabilities.mayfly = true;
-            capabilities.instabuild = true;
-            capabilities.invulnerable = true;
+            $$0.mayfly = true;
+            $$0.instabuild = true;
+            $$0.invulnerable = true;
         } else if (this == SPECTATOR) {
-            capabilities.mayfly = true;
-            capabilities.instabuild = false;
-            capabilities.invulnerable = true;
-            capabilities.flying = true;
+            $$0.mayfly = true;
+            $$0.instabuild = false;
+            $$0.invulnerable = true;
+            $$0.flying = true;
         } else {
-            capabilities.mayfly = false;
-            capabilities.instabuild = false;
-            capabilities.invulnerable = false;
-            capabilities.flying = false;
+            $$0.mayfly = false;
+            $$0.instabuild = false;
+            $$0.invulnerable = false;
+            $$0.flying = false;
         }
-        capabilities.mayBuild = !this.isBlockPlacingRestricted();
+        $$0.mayBuild = !this.isBlockPlacingRestricted();
     }
 
     public boolean isBlockPlacingRestricted() {
@@ -81,28 +81,30 @@
         return this == SURVIVAL || this == ADVENTURE;
     }
 
-    public static net.minecraft.world.level.GameType byId(int id) {
-        return net.minecraft.world.level.GameType.byId((int)id, (net.minecraft.world.level.GameType)DEFAULT_MODE);
+    public static net.minecraft.world.level.GameType byId(int $$0) {
+        return net.minecraft.world.level.GameType.byId((int)$$0, (net.minecraft.world.level.GameType)DEFAULT_MODE);
     }
 
-    public static net.minecraft.world.level.GameType byId(int targetId, net.minecraft.world.level.GameType fallback) {
-        for (net.minecraft.world.level.GameType gameType : net.minecraft.world.level.GameType.values()) {
-            if (gameType.id != targetId) continue;
-            return gameType;
+    public static net.minecraft.world.level.GameType byId(int $$0, net.minecraft.world.level.GameType $$1) {
+        for (net.minecraft.world.level.GameType $$2 : net.minecraft.world.level.GameType.values()) {
+            if ($$2.id != $$0) continue;
+            return $$2;
         }
-        return fallback;
+        return $$1;
     }
 
-    public static net.minecraft.world.level.GameType byName(java.lang.String gamemodeName) {
-        return net.minecraft.world.level.GameType.byName((java.lang.String)gamemodeName, (net.minecraft.world.level.GameType)SURVIVAL);
+    public static net.minecraft.world.level.GameType byName(java.lang.String $$0) {
+        return net.minecraft.world.level.GameType.byName((java.lang.String)$$0, (net.minecraft.world.level.GameType)SURVIVAL);
     }
 
-    public static net.minecraft.world.level.GameType byName(java.lang.String targetName, net.minecraft.world.level.GameType fallback) {
-        for (net.minecraft.world.level.GameType gameType : net.minecraft.world.level.GameType.values()) {
-            if (!gameType.name.equals((java.lang.Object)targetName)) continue;
-            return gameType;
+    @javax.annotation.Nullable
+    @org.jetbrains.annotations.Contract(value="_,!null->!null;_,null->_")
+    public static net.minecraft.world.level.GameType byName(java.lang.String $$0, @javax.annotation.Nullable net.minecraft.world.level.GameType $$1) {
+        for (net.minecraft.world.level.GameType $$2 : net.minecraft.world.level.GameType.values()) {
+            if (!$$2.name.equals((java.lang.Object)$$0)) continue;
+            return $$2;
         }
-        return fallback;
+        return $$1;
     }
 
     public static int getNullableId(@javax.annotation.Nullable net.minecraft.world.level.GameType $$0) {