--- net/minecraft/world/level/chunk/ImposterProtoChunk.java
+++ net/minecraft/world/level/chunk/ImposterProtoChunk.java
@@ -16,16 +16,16 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.entity.BlockEntity getBlockEntity(net.minecraft.core.BlockPos pos) {
-        return this.wrapped.getBlockEntity(pos);
+    public net.minecraft.world.level.block.entity.BlockEntity getBlockEntity(net.minecraft.core.BlockPos $$0) {
+        return this.wrapped.getBlockEntity($$0);
     }
 
-    public net.minecraft.world.level.block.state.BlockState getBlockState(net.minecraft.core.BlockPos pos) {
-        return this.wrapped.getBlockState(pos);
+    public net.minecraft.world.level.block.state.BlockState getBlockState(net.minecraft.core.BlockPos $$0) {
+        return this.wrapped.getBlockState($$0);
     }
 
-    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.core.BlockPos pos) {
-        return this.wrapped.getFluidState(pos);
+    public net.minecraft.world.level.material.FluidState getFluidState(net.minecraft.core.BlockPos $$0) {
+        return this.wrapped.getFluidState($$0);
     }
 
     public int getMaxLightLevel() {
@@ -40,9 +40,9 @@
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.world.level.block.state.BlockState setBlockState(net.minecraft.core.BlockPos pos, net.minecraft.world.level.block.state.BlockState state, boolean isMoving) {
+    public net.minecraft.world.level.block.state.BlockState setBlockState(net.minecraft.core.BlockPos $$0, net.minecraft.world.level.block.state.BlockState $$1, boolean $$2) {
         if (this.allowWrites) {
-            return this.wrapped.setBlockState(pos, state, isMoving);
+            return this.wrapped.setBlockState($$0, $$1, $$2);
         }
         return null;
     }
@@ -53,15 +53,15 @@
         }
     }
 
-    public void addEntity(net.minecraft.world.entity.Entity entity) {
+    public void addEntity(net.minecraft.world.entity.Entity $$0) {
         if (this.allowWrites) {
-            this.wrapped.addEntity(entity);
+            this.wrapped.addEntity($$0);
         }
     }
 
-    public void setStatus(net.minecraft.world.level.chunk.ChunkStatus status) {
+    public void setStatus(net.minecraft.world.level.chunk.ChunkStatus $$0) {
         if (this.allowWrites) {
-            super.setStatus(status);
+            super.setStatus($$0);
         }
     }
 
@@ -69,25 +69,25 @@
         return this.wrapped.getSections();
     }
 
-    public void setHeightmap(net.minecraft.world.level.levelgen.Heightmap$Types type, long[] data) {
+    public void setHeightmap(net.minecraft.world.level.levelgen.Heightmap$Types $$0, long[] $$1) {
     }
 
-    public net.minecraft.world.level.levelgen.Heightmap$Types fixType(net.minecraft.world.level.levelgen.Heightmap$Types types) {
-        if (types == net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE_WG) {
+    public net.minecraft.world.level.levelgen.Heightmap$Types fixType(net.minecraft.world.level.levelgen.Heightmap$Types $$0) {
+        if ($$0 == net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE_WG) {
             return net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE;
         }
-        if (types == net.minecraft.world.level.levelgen.Heightmap$Types.OCEAN_FLOOR_WG) {
+        if ($$0 == net.minecraft.world.level.levelgen.Heightmap$Types.OCEAN_FLOOR_WG) {
             return net.minecraft.world.level.levelgen.Heightmap$Types.OCEAN_FLOOR;
         }
-        return types;
+        return $$0;
     }
 
     public net.minecraft.world.level.levelgen.Heightmap getOrCreateHeightmapUnprimed(net.minecraft.world.level.levelgen.Heightmap$Types $$0) {
         return this.wrapped.getOrCreateHeightmapUnprimed($$0);
     }
 
-    public int getHeight(net.minecraft.world.level.levelgen.Heightmap$Types heightmapType, int x, int z) {
-        return this.wrapped.getHeight(this.fixType(heightmapType), x, z);
+    public int getHeight(net.minecraft.world.level.levelgen.Heightmap$Types $$0, int $$1, int $$2) {
+        return this.wrapped.getHeight(this.fixType($$0), $$1, $$2);
     }
 
     public net.minecraft.core.Holder<net.minecraft.world.level.biome.Biome> getNoiseBiome(int $$0, int $$1, int $$2) {
@@ -110,7 +110,7 @@
         return this.wrapped.getAllStarts();
     }
 
-    public void setAllStarts(java.util.Map<net.minecraft.world.level.levelgen.structure.Structure, net.minecraft.world.level.levelgen.structure.StructureStart> structureStarts) {
+    public void setAllStarts(java.util.Map<net.minecraft.world.level.levelgen.structure.Structure, net.minecraft.world.level.levelgen.structure.StructureStart> $$0) {
     }
 
     public it.unimi.dsi.fastutil.longs.LongSet getReferencesForStructure(net.minecraft.world.level.levelgen.structure.Structure $$0) {
@@ -124,11 +124,11 @@
         return this.wrapped.getAllReferences();
     }
 
-    public void setAllReferences(java.util.Map<net.minecraft.world.level.levelgen.structure.Structure, it.unimi.dsi.fastutil.longs.LongSet> structureReferences) {
+    public void setAllReferences(java.util.Map<net.minecraft.world.level.levelgen.structure.Structure, it.unimi.dsi.fastutil.longs.LongSet> $$0) {
     }
 
-    public void setUnsaved(boolean modified) {
-        this.wrapped.setUnsaved(modified);
+    public void setUnsaved(boolean $$0) {
+        this.wrapped.setUnsaved($$0);
     }
 
     public boolean isUnsaved() {
@@ -139,23 +139,23 @@
         return this.wrapped.getStatus();
     }
 
-    public void removeBlockEntity(net.minecraft.core.BlockPos pos) {
+    public void removeBlockEntity(net.minecraft.core.BlockPos $$0) {
     }
 
-    public void markPosForPostprocessing(net.minecraft.core.BlockPos pos) {
+    public void markPosForPostprocessing(net.minecraft.core.BlockPos $$0) {
     }
 
-    public void setBlockEntityNbt(net.minecraft.nbt.CompoundTag nbt) {
+    public void setBlockEntityNbt(net.minecraft.nbt.CompoundTag $$0) {
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.nbt.CompoundTag getBlockEntityNbt(net.minecraft.core.BlockPos pos) {
-        return this.wrapped.getBlockEntityNbt(pos);
+    public net.minecraft.nbt.CompoundTag getBlockEntityNbt(net.minecraft.core.BlockPos $$0) {
+        return this.wrapped.getBlockEntityNbt($$0);
     }
 
     @javax.annotation.Nullable
-    public net.minecraft.nbt.CompoundTag getBlockEntityNbtForSaving(net.minecraft.core.BlockPos pos) {
-        return this.wrapped.getBlockEntityNbtForSaving(pos);
+    public net.minecraft.nbt.CompoundTag getBlockEntityNbtForSaving(net.minecraft.core.BlockPos $$0) {
+        return this.wrapped.getBlockEntityNbtForSaving($$0);
     }
 
     public java.util.stream.Stream<net.minecraft.core.BlockPos> getLights() {
@@ -211,8 +211,8 @@
         return this.wrapped.isLightCorrect();
     }
 
-    public void setLightCorrect(boolean lightCorrect) {
-        this.wrapped.setLightCorrect(lightCorrect);
+    public void setLightCorrect(boolean $$0) {
+        this.wrapped.setLightCorrect($$0);
     }
 
     public void fillBiomesFromNoise(net.minecraft.world.level.biome.BiomeResolver $$0, net.minecraft.world.level.biome.Climate$Sampler $$1) {