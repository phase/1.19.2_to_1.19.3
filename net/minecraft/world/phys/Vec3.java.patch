--- net/minecraft/world/phys/Vec3.java
+++ net/minecraft/world/phys/Vec3.java
@@ -12,41 +12,41 @@
     public double y;
     public double z;
 
-    public static net.minecraft.world.phys.Vec3 fromRGB24(int packed) {
-        double d = (double)(packed >> 16 & 0xFF) / 255.0;
-        double d2 = (double)(packed >> 8 & 0xFF) / 255.0;
-        double d3 = (double)(packed & 0xFF) / 255.0;
-        return new net.minecraft.world.phys.Vec3(d, d2, d3);
+    public static net.minecraft.world.phys.Vec3 fromRGB24(int $$0) {
+        double $$1 = (double)($$0 >> 16 & 0xFF) / 255.0;
+        double $$2 = (double)($$0 >> 8 & 0xFF) / 255.0;
+        double $$3 = (double)($$0 & 0xFF) / 255.0;
+        return new net.minecraft.world.phys.Vec3($$1, $$2, $$3);
     }
 
-    public static net.minecraft.world.phys.Vec3 atCenterOf(net.minecraft.core.Vec3i toCopy) {
-        return new net.minecraft.world.phys.Vec3((double)toCopy.getX() + 0.5, (double)toCopy.getY() + 0.5, (double)toCopy.getZ() + 0.5);
+    public static net.minecraft.world.phys.Vec3 atCenterOf(net.minecraft.core.Vec3i $$0) {
+        return new net.minecraft.world.phys.Vec3((double)$$0.getX() + 0.5, (double)$$0.getY() + 0.5, (double)$$0.getZ() + 0.5);
     }
 
-    public static net.minecraft.world.phys.Vec3 atLowerCornerOf(net.minecraft.core.Vec3i toCopy) {
-        return new net.minecraft.world.phys.Vec3((double)toCopy.getX(), (double)toCopy.getY(), (double)toCopy.getZ());
+    public static net.minecraft.world.phys.Vec3 atLowerCornerOf(net.minecraft.core.Vec3i $$0) {
+        return new net.minecraft.world.phys.Vec3((double)$$0.getX(), (double)$$0.getY(), (double)$$0.getZ());
     }
 
-    public static net.minecraft.world.phys.Vec3 atBottomCenterOf(net.minecraft.core.Vec3i toCopy) {
-        return new net.minecraft.world.phys.Vec3((double)toCopy.getX() + 0.5, (double)toCopy.getY(), (double)toCopy.getZ() + 0.5);
+    public static net.minecraft.world.phys.Vec3 atBottomCenterOf(net.minecraft.core.Vec3i $$0) {
+        return new net.minecraft.world.phys.Vec3((double)$$0.getX() + 0.5, (double)$$0.getY(), (double)$$0.getZ() + 0.5);
     }
 
-    public static net.minecraft.world.phys.Vec3 upFromBottomCenterOf(net.minecraft.core.Vec3i toCopy, double verticalOffset) {
-        return new net.minecraft.world.phys.Vec3((double)toCopy.getX() + 0.5, (double)toCopy.getY() + verticalOffset, (double)toCopy.getZ() + 0.5);
+    public static net.minecraft.world.phys.Vec3 upFromBottomCenterOf(net.minecraft.core.Vec3i $$0, double $$1) {
+        return new net.minecraft.world.phys.Vec3((double)$$0.getX() + 0.5, (double)$$0.getY() + $$1, (double)$$0.getZ() + 0.5);
     }
 
-    public net.minecraft.world.phys.Vec3(double x, double y, double z) {
-        this.x = x;
-        this.y = y;
-        this.z = z;
+    public net.minecraft.world.phys.Vec3(double $$0, double $$1, double $$2) {
+        this.x = $$0;
+        this.y = $$1;
+        this.z = $$2;
     }
 
-    public net.minecraft.world.phys.Vec3(com.mojang.math.Vector3f floatVector) {
-        this((double)floatVector.x(), (double)floatVector.y(), (double)floatVector.z());
+    public net.minecraft.world.phys.Vec3(com.mojang.math.Vector3f $$0) {
+        this((double)$$0.x(), (double)$$0.y(), (double)$$0.z());
     }
 
-    public net.minecraft.world.phys.Vec3 vectorTo(net.minecraft.world.phys.Vec3 vec) {
-        return new net.minecraft.world.phys.Vec3(vec.x - this.x, vec.y - this.y, vec.z - this.z);
+    public net.minecraft.world.phys.Vec3 vectorTo(net.minecraft.world.phys.Vec3 $$0) {
+        return new net.minecraft.world.phys.Vec3($$0.x - this.x, $$0.y - this.y, $$0.z - this.z);
     }
 
     public net.minecraft.world.phys.Vec3 normalize() {
@@ -57,69 +57,69 @@
         return new net.minecraft.world.phys.Vec3(this.x / $$0, this.y / $$0, this.z / $$0);
     }
 
-    public double dot(net.minecraft.world.phys.Vec3 vec) {
-        return this.x * vec.x + this.y * vec.y + this.z * vec.z;
+    public double dot(net.minecraft.world.phys.Vec3 $$0) {
+        return this.x * $$0.x + this.y * $$0.y + this.z * $$0.z;
     }
 
-    public net.minecraft.world.phys.Vec3 cross(net.minecraft.world.phys.Vec3 vec) {
-        return new net.minecraft.world.phys.Vec3(this.y * vec.z - this.z * vec.y, this.z * vec.x - this.x * vec.z, this.x * vec.y - this.y * vec.x);
+    public net.minecraft.world.phys.Vec3 cross(net.minecraft.world.phys.Vec3 $$0) {
+        return new net.minecraft.world.phys.Vec3(this.y * $$0.z - this.z * $$0.y, this.z * $$0.x - this.x * $$0.z, this.x * $$0.y - this.y * $$0.x);
     }
 
-    public net.minecraft.world.phys.Vec3 subtract(net.minecraft.world.phys.Vec3 vec) {
-        return this.subtract(vec.x, vec.y, vec.z);
+    public net.minecraft.world.phys.Vec3 subtract(net.minecraft.world.phys.Vec3 $$0) {
+        return this.subtract($$0.x, $$0.y, $$0.z);
     }
 
-    public net.minecraft.world.phys.Vec3 subtract(double x, double y, double z) {
-        return this.add(-x, -y, -z);
+    public net.minecraft.world.phys.Vec3 subtract(double $$0, double $$1, double $$2) {
+        return this.add(-$$0, -$$1, -$$2);
     }
 
-    public net.minecraft.world.phys.Vec3 add(net.minecraft.world.phys.Vec3 vec) {
-        return this.add(vec.x, vec.y, vec.z);
+    public net.minecraft.world.phys.Vec3 add(net.minecraft.world.phys.Vec3 $$0) {
+        return this.add($$0.x, $$0.y, $$0.z);
     }
 
-    public net.minecraft.world.phys.Vec3 add(double x, double y, double z) {
-        return new net.minecraft.world.phys.Vec3(this.x + x, this.y + y, this.z + z);
+    public net.minecraft.world.phys.Vec3 add(double $$0, double $$1, double $$2) {
+        return new net.minecraft.world.phys.Vec3(this.x + $$0, this.y + $$1, this.z + $$2);
     }
 
-    public boolean closerThan(net.minecraft.core.Position pos, double distance) {
-        return this.distanceToSqr(pos.x(), pos.y(), pos.z()) < distance * distance;
+    public boolean closerThan(net.minecraft.core.Position $$0, double $$1) {
+        return this.distanceToSqr($$0.x(), $$0.y(), $$0.z()) < $$1 * $$1;
     }
 
-    public double distanceTo(net.minecraft.world.phys.Vec3 vec) {
-        double d = vec.x - this.x;
-        double d2 = vec.y - this.y;
-        double d3 = vec.z - this.z;
-        return java.lang.Math.sqrt((double)(d * d + d2 * d2 + d3 * d3));
+    public double distanceTo(net.minecraft.world.phys.Vec3 $$0) {
+        double $$1 = $$0.x - this.x;
+        double $$2 = $$0.y - this.y;
+        double $$3 = $$0.z - this.z;
+        return java.lang.Math.sqrt((double)($$1 * $$1 + $$2 * $$2 + $$3 * $$3));
     }
 
-    public double distanceToSqr(net.minecraft.world.phys.Vec3 vec) {
-        double d = vec.x - this.x;
-        double d2 = vec.y - this.y;
-        double d3 = vec.z - this.z;
-        return d * d + d2 * d2 + d3 * d3;
+    public double distanceToSqr(net.minecraft.world.phys.Vec3 $$0) {
+        double $$1 = $$0.x - this.x;
+        double $$2 = $$0.y - this.y;
+        double $$3 = $$0.z - this.z;
+        return $$1 * $$1 + $$2 * $$2 + $$3 * $$3;
     }
 
-    public double distanceToSqr(double x, double y, double z) {
-        double d = x - this.x;
-        double d2 = y - this.y;
-        double d3 = z - this.z;
-        return d * d + d2 * d2 + d3 * d3;
+    public double distanceToSqr(double $$0, double $$1, double $$2) {
+        double $$3 = $$0 - this.x;
+        double $$4 = $$1 - this.y;
+        double $$5 = $$2 - this.z;
+        return $$3 * $$3 + $$4 * $$4 + $$5 * $$5;
     }
 
-    public net.minecraft.world.phys.Vec3 scale(double factor) {
-        return this.multiply(factor, factor, factor);
+    public net.minecraft.world.phys.Vec3 scale(double $$0) {
+        return this.multiply($$0, $$0, $$0);
     }
 
     public net.minecraft.world.phys.Vec3 reverse() {
         return this.scale(-1.0);
     }
 
-    public net.minecraft.world.phys.Vec3 multiply(net.minecraft.world.phys.Vec3 vec) {
-        return this.multiply(vec.x, vec.y, vec.z);
+    public net.minecraft.world.phys.Vec3 multiply(net.minecraft.world.phys.Vec3 $$0) {
+        return this.multiply($$0.x, $$0.y, $$0.z);
     }
 
-    public net.minecraft.world.phys.Vec3 multiply(double factorX, double factorY, double factorZ) {
-        return new net.minecraft.world.phys.Vec3(this.x * factorX, this.y * factorY, this.z * factorZ);
+    public net.minecraft.world.phys.Vec3 multiply(double $$0, double $$1, double $$2) {
+        return new net.minecraft.world.phys.Vec3(this.x * $$0, this.y * $$1, this.z * $$2);
     }
 
     public double length() {
@@ -173,54 +173,54 @@
         return new net.minecraft.world.phys.Vec3(net.minecraft.util.Mth.lerp((double)$$1, (double)this.x, (double)$$0.x), net.minecraft.util.Mth.lerp((double)$$1, (double)this.y, (double)$$0.y), net.minecraft.util.Mth.lerp((double)$$1, (double)this.z, (double)$$0.z));
     }
 
-    public net.minecraft.world.phys.Vec3 xRot(float pitch) {
-        float f = net.minecraft.util.Mth.cos((float)pitch);
-        float f2 = net.minecraft.util.Mth.sin((float)pitch);
-        double d = this.x;
-        double d2 = this.y * (double)f + this.z * (double)f2;
-        double d3 = this.z * (double)f - this.y * (double)f2;
-        return new net.minecraft.world.phys.Vec3(d, d2, d3);
+    public net.minecraft.world.phys.Vec3 xRot(float $$0) {
+        float $$1 = net.minecraft.util.Mth.cos((float)$$0);
+        float $$2 = net.minecraft.util.Mth.sin((float)$$0);
+        double $$3 = this.x;
+        double $$4 = this.y * (double)$$1 + this.z * (double)$$2;
+        double $$5 = this.z * (double)$$1 - this.y * (double)$$2;
+        return new net.minecraft.world.phys.Vec3($$3, $$4, $$5);
     }
 
-    public net.minecraft.world.phys.Vec3 yRot(float yaw) {
-        float f = net.minecraft.util.Mth.cos((float)yaw);
-        float f2 = net.minecraft.util.Mth.sin((float)yaw);
-        double d = this.x * (double)f + this.z * (double)f2;
-        double d2 = this.y;
-        double d3 = this.z * (double)f - this.x * (double)f2;
-        return new net.minecraft.world.phys.Vec3(d, d2, d3);
+    public net.minecraft.world.phys.Vec3 yRot(float $$0) {
+        float $$1 = net.minecraft.util.Mth.cos((float)$$0);
+        float $$2 = net.minecraft.util.Mth.sin((float)$$0);
+        double $$3 = this.x * (double)$$1 + this.z * (double)$$2;
+        double $$4 = this.y;
+        double $$5 = this.z * (double)$$1 - this.x * (double)$$2;
+        return new net.minecraft.world.phys.Vec3($$3, $$4, $$5);
     }
 
-    public net.minecraft.world.phys.Vec3 zRot(float roll) {
-        float f = net.minecraft.util.Mth.cos((float)roll);
-        float f2 = net.minecraft.util.Mth.sin((float)roll);
-        double d = this.x * (double)f + this.y * (double)f2;
-        double d2 = this.y * (double)f - this.x * (double)f2;
-        double d3 = this.z;
-        return new net.minecraft.world.phys.Vec3(d, d2, d3);
+    public net.minecraft.world.phys.Vec3 zRot(float $$0) {
+        float $$1 = net.minecraft.util.Mth.cos((float)$$0);
+        float $$2 = net.minecraft.util.Mth.sin((float)$$0);
+        double $$3 = this.x * (double)$$1 + this.y * (double)$$2;
+        double $$4 = this.y * (double)$$1 - this.x * (double)$$2;
+        double $$5 = this.z;
+        return new net.minecraft.world.phys.Vec3($$3, $$4, $$5);
     }
 
-    public static net.minecraft.world.phys.Vec3 directionFromRotation(net.minecraft.world.phys.Vec2 vec) {
-        return net.minecraft.world.phys.Vec3.directionFromRotation((float)vec.x, (float)vec.y);
+    public static net.minecraft.world.phys.Vec3 directionFromRotation(net.minecraft.world.phys.Vec2 $$0) {
+        return net.minecraft.world.phys.Vec3.directionFromRotation((float)$$0.x, (float)$$0.y);
     }
 
-    public static net.minecraft.world.phys.Vec3 directionFromRotation(float pitch, float yaw) {
-        float f = net.minecraft.util.Mth.cos((float)(-yaw * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
-        float f2 = net.minecraft.util.Mth.sin((float)(-yaw * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
-        float f3 = -net.minecraft.util.Mth.cos((float)(-pitch * ((float)java.lang.Math.PI / 180)));
-        float f4 = net.minecraft.util.Mth.sin((float)(-pitch * ((float)java.lang.Math.PI / 180)));
-        return new net.minecraft.world.phys.Vec3((double)(f2 * f3), (double)f4, (double)(f * f3));
+    public static net.minecraft.world.phys.Vec3 directionFromRotation(float $$0, float $$1) {
+        float $$2 = net.minecraft.util.Mth.cos((float)(-$$1 * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
+        float $$3 = net.minecraft.util.Mth.sin((float)(-$$1 * ((float)java.lang.Math.PI / 180) - (float)java.lang.Math.PI));
+        float $$4 = -net.minecraft.util.Mth.cos((float)(-$$0 * ((float)java.lang.Math.PI / 180)));
+        float $$5 = net.minecraft.util.Mth.sin((float)(-$$0 * ((float)java.lang.Math.PI / 180)));
+        return new net.minecraft.world.phys.Vec3((double)($$3 * $$4), (double)$$5, (double)($$2 * $$4));
     }
 
-    public net.minecraft.world.phys.Vec3 align(java.util.EnumSet<net.minecraft.core.Direction$Axis> axes) {
-        double d = axes.contains((java.lang.Object)net.minecraft.core.Direction$Axis.X) ? (double)net.minecraft.util.Mth.floor((double)this.x) : this.x;
-        double d2 = axes.contains((java.lang.Object)net.minecraft.core.Direction$Axis.Y) ? (double)net.minecraft.util.Mth.floor((double)this.y) : this.y;
-        double d3 = axes.contains((java.lang.Object)net.minecraft.core.Direction$Axis.Z) ? (double)net.minecraft.util.Mth.floor((double)this.z) : this.z;
-        return new net.minecraft.world.phys.Vec3(d, d2, d3);
+    public net.minecraft.world.phys.Vec3 align(java.util.EnumSet<net.minecraft.core.Direction$Axis> $$0) {
+        double $$1 = $$0.contains((java.lang.Object)net.minecraft.core.Direction$Axis.X) ? (double)net.minecraft.util.Mth.floor((double)this.x) : this.x;
+        double $$2 = $$0.contains((java.lang.Object)net.minecraft.core.Direction$Axis.Y) ? (double)net.minecraft.util.Mth.floor((double)this.y) : this.y;
+        double $$3 = $$0.contains((java.lang.Object)net.minecraft.core.Direction$Axis.Z) ? (double)net.minecraft.util.Mth.floor((double)this.z) : this.z;
+        return new net.minecraft.world.phys.Vec3($$1, $$2, $$3);
     }
 
-    public double get(net.minecraft.core.Direction$Axis axis) {
-        return axis.choose(this.x, this.y, this.z);
+    public double get(net.minecraft.core.Direction$Axis $$0) {
+        return $$0.choose(this.x, this.y, this.z);
     }
 
     public net.minecraft.world.phys.Vec3 with(net.minecraft.core.Direction$Axis $$0, double $$1) {