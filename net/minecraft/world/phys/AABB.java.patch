--- net/minecraft/world/phys/AABB.java
+++ net/minecraft/world/phys/AABB.java
@@ -13,33 +13,33 @@
     public double maxY;
     public double maxZ;
 
-    public net.minecraft.world.phys.AABB(double x1, double y1, double z1, double x2, double y2, double z2) {
-        this.minX = java.lang.Math.min((double)x1, (double)x2);
-        this.minY = java.lang.Math.min((double)y1, (double)y2);
-        this.minZ = java.lang.Math.min((double)z1, (double)z2);
-        this.maxX = java.lang.Math.max((double)x1, (double)x2);
-        this.maxY = java.lang.Math.max((double)y1, (double)y2);
-        this.maxZ = java.lang.Math.max((double)z1, (double)z2);
+    public net.minecraft.world.phys.AABB(double $$0, double $$1, double $$2, double $$3, double $$4, double $$5) {
+        this.minX = java.lang.Math.min((double)$$0, (double)$$3);
+        this.minY = java.lang.Math.min((double)$$1, (double)$$4);
+        this.minZ = java.lang.Math.min((double)$$2, (double)$$5);
+        this.maxX = java.lang.Math.max((double)$$0, (double)$$3);
+        this.maxY = java.lang.Math.max((double)$$1, (double)$$4);
+        this.maxZ = java.lang.Math.max((double)$$2, (double)$$5);
     }
 
-    public net.minecraft.world.phys.AABB(net.minecraft.core.BlockPos pos) {
-        this((double)pos.getX(), (double)pos.getY(), (double)pos.getZ(), (double)(pos.getX() + 1), (double)(pos.getY() + 1), (double)(pos.getZ() + 1));
+    public net.minecraft.world.phys.AABB(net.minecraft.core.BlockPos $$0) {
+        this((double)$$0.getX(), (double)$$0.getY(), (double)$$0.getZ(), (double)($$0.getX() + 1), (double)($$0.getY() + 1), (double)($$0.getZ() + 1));
     }
 
-    public net.minecraft.world.phys.AABB(net.minecraft.core.BlockPos start, net.minecraft.core.BlockPos end) {
-        this((double)start.getX(), (double)start.getY(), (double)start.getZ(), (double)end.getX(), (double)end.getY(), (double)end.getZ());
+    public net.minecraft.world.phys.AABB(net.minecraft.core.BlockPos $$0, net.minecraft.core.BlockPos $$1) {
+        this((double)$$0.getX(), (double)$$0.getY(), (double)$$0.getZ(), (double)$$1.getX(), (double)$$1.getY(), (double)$$1.getZ());
     }
 
-    public net.minecraft.world.phys.AABB(net.minecraft.world.phys.Vec3 start, net.minecraft.world.phys.Vec3 end) {
-        this(start.x, start.y, start.z, end.x, end.y, end.z);
+    public net.minecraft.world.phys.AABB(net.minecraft.world.phys.Vec3 $$0, net.minecraft.world.phys.Vec3 $$1) {
+        this($$0.x, $$0.y, $$0.z, $$1.x, $$1.y, $$1.z);
     }
 
-    public static net.minecraft.world.phys.AABB of(net.minecraft.world.level.levelgen.structure.BoundingBox mutableBox) {
-        return new net.minecraft.world.phys.AABB((double)mutableBox.minX(), (double)mutableBox.minY(), (double)mutableBox.minZ(), (double)(mutableBox.maxX() + 1), (double)(mutableBox.maxY() + 1), (double)(mutableBox.maxZ() + 1));
+    public static net.minecraft.world.phys.AABB of(net.minecraft.world.level.levelgen.structure.BoundingBox $$0) {
+        return new net.minecraft.world.phys.AABB((double)$$0.minX(), (double)$$0.minY(), (double)$$0.minZ(), (double)($$0.maxX() + 1), (double)($$0.maxY() + 1), (double)($$0.maxZ() + 1));
     }
 
-    public static net.minecraft.world.phys.AABB unitCubeFromLowerCorner(net.minecraft.world.phys.Vec3 vector) {
-        return new net.minecraft.world.phys.AABB(vector.x, vector.y, vector.z, vector.x + 1.0, vector.y + 1.0, vector.z + 1.0);
+    public static net.minecraft.world.phys.AABB unitCubeFromLowerCorner(net.minecraft.world.phys.Vec3 $$0) {
+        return new net.minecraft.world.phys.AABB($$0.x, $$0.y, $$0.z, $$0.x + 1.0, $$0.y + 1.0, $$0.z + 1.0);
     }
 
     public net.minecraft.world.phys.AABB setMinX(double $$0) {
@@ -66,12 +66,12 @@
         return new net.minecraft.world.phys.AABB(this.minX, this.minY, this.minZ, this.maxX, this.maxY, $$0);
     }
 
-    public double min(net.minecraft.core.Direction$Axis axis) {
-        return axis.choose(this.minX, this.minY, this.minZ);
+    public double min(net.minecraft.core.Direction$Axis $$0) {
+        return $$0.choose(this.minX, this.minY, this.minZ);
     }
 
-    public double max(net.minecraft.core.Direction$Axis axis) {
-        return axis.choose(this.maxX, this.maxY, this.maxZ);
+    public double max(net.minecraft.core.Direction$Axis $$0) {
+        return $$0.choose(this.maxX, this.maxY, this.maxZ);
     }
 
     public boolean equals(java.lang.Object $$0) {
@@ -116,124 +116,124 @@
         return $$1;
     }
 
-    public net.minecraft.world.phys.AABB contract(double x, double y, double z) {
-        double d = this.minX;
-        double d2 = this.minY;
-        double d3 = this.minZ;
-        double d4 = this.maxX;
-        double d5 = this.maxY;
-        double d6 = this.maxZ;
-        if (x < 0.0) {
-            d -= x;
-        } else if (x > 0.0) {
-            d4 -= x;
+    public net.minecraft.world.phys.AABB contract(double $$0, double $$1, double $$2) {
+        double $$3 = this.minX;
+        double $$4 = this.minY;
+        double $$5 = this.minZ;
+        double $$6 = this.maxX;
+        double $$7 = this.maxY;
+        double $$8 = this.maxZ;
+        if ($$0 < 0.0) {
+            $$3 -= $$0;
+        } else if ($$0 > 0.0) {
+            $$6 -= $$0;
         }
-        if (y < 0.0) {
-            d2 -= y;
-        } else if (y > 0.0) {
-            d5 -= y;
+        if ($$1 < 0.0) {
+            $$4 -= $$1;
+        } else if ($$1 > 0.0) {
+            $$7 -= $$1;
         }
-        if (z < 0.0) {
-            d3 -= z;
-        } else if (z > 0.0) {
-            d6 -= z;
+        if ($$2 < 0.0) {
+            $$5 -= $$2;
+        } else if ($$2 > 0.0) {
+            $$8 -= $$2;
         }
-        return new net.minecraft.world.phys.AABB(d, d2, d3, d4, d5, d6);
+        return new net.minecraft.world.phys.AABB($$3, $$4, $$5, $$6, $$7, $$8);
     }
 
-    public net.minecraft.world.phys.AABB expandTowards(net.minecraft.world.phys.Vec3 vector) {
-        return this.expandTowards(vector.x, vector.y, vector.z);
+    public net.minecraft.world.phys.AABB expandTowards(net.minecraft.world.phys.Vec3 $$0) {
+        return this.expandTowards($$0.x, $$0.y, $$0.z);
     }
 
-    public net.minecraft.world.phys.AABB expandTowards(double x, double y, double z) {
-        double d = this.minX;
-        double d2 = this.minY;
-        double d3 = this.minZ;
-        double d4 = this.maxX;
-        double d5 = this.maxY;
-        double d6 = this.maxZ;
-        if (x < 0.0) {
-            d += x;
-        } else if (x > 0.0) {
-            d4 += x;
+    public net.minecraft.world.phys.AABB expandTowards(double $$0, double $$1, double $$2) {
+        double $$3 = this.minX;
+        double $$4 = this.minY;
+        double $$5 = this.minZ;
+        double $$6 = this.maxX;
+        double $$7 = this.maxY;
+        double $$8 = this.maxZ;
+        if ($$0 < 0.0) {
+            $$3 += $$0;
+        } else if ($$0 > 0.0) {
+            $$6 += $$0;
         }
-        if (y < 0.0) {
-            d2 += y;
-        } else if (y > 0.0) {
-            d5 += y;
+        if ($$1 < 0.0) {
+            $$4 += $$1;
+        } else if ($$1 > 0.0) {
+            $$7 += $$1;
         }
-        if (z < 0.0) {
-            d3 += z;
-        } else if (z > 0.0) {
-            d6 += z;
+        if ($$2 < 0.0) {
+            $$5 += $$2;
+        } else if ($$2 > 0.0) {
+            $$8 += $$2;
         }
-        return new net.minecraft.world.phys.AABB(d, d2, d3, d4, d5, d6);
+        return new net.minecraft.world.phys.AABB($$3, $$4, $$5, $$6, $$7, $$8);
     }
 
-    public net.minecraft.world.phys.AABB inflate(double x, double y, double z) {
-        double d = this.minX - x;
-        double d2 = this.minY - y;
-        double d3 = this.minZ - z;
-        double d4 = this.maxX + x;
-        double d5 = this.maxY + y;
-        double d6 = this.maxZ + z;
-        return new net.minecraft.world.phys.AABB(d, d2, d3, d4, d5, d6);
+    public net.minecraft.world.phys.AABB inflate(double $$0, double $$1, double $$2) {
+        double $$3 = this.minX - $$0;
+        double $$4 = this.minY - $$1;
+        double $$5 = this.minZ - $$2;
+        double $$6 = this.maxX + $$0;
+        double $$7 = this.maxY + $$1;
+        double $$8 = this.maxZ + $$2;
+        return new net.minecraft.world.phys.AABB($$3, $$4, $$5, $$6, $$7, $$8);
     }
 
-    public net.minecraft.world.phys.AABB inflate(double value) {
-        return this.inflate(value, value, value);
+    public net.minecraft.world.phys.AABB inflate(double $$0) {
+        return this.inflate($$0, $$0, $$0);
     }
 
-    public net.minecraft.world.phys.AABB intersect(net.minecraft.world.phys.AABB other) {
-        double d = java.lang.Math.max((double)this.minX, (double)other.minX);
-        double d2 = java.lang.Math.max((double)this.minY, (double)other.minY);
-        double d3 = java.lang.Math.max((double)this.minZ, (double)other.minZ);
-        double d4 = java.lang.Math.min((double)this.maxX, (double)other.maxX);
-        double d5 = java.lang.Math.min((double)this.maxY, (double)other.maxY);
-        double d6 = java.lang.Math.min((double)this.maxZ, (double)other.maxZ);
-        return new net.minecraft.world.phys.AABB(d, d2, d3, d4, d5, d6);
+    public net.minecraft.world.phys.AABB intersect(net.minecraft.world.phys.AABB $$0) {
+        double $$1 = java.lang.Math.max((double)this.minX, (double)$$0.minX);
+        double $$2 = java.lang.Math.max((double)this.minY, (double)$$0.minY);
+        double $$3 = java.lang.Math.max((double)this.minZ, (double)$$0.minZ);
+        double $$4 = java.lang.Math.min((double)this.maxX, (double)$$0.maxX);
+        double $$5 = java.lang.Math.min((double)this.maxY, (double)$$0.maxY);
+        double $$6 = java.lang.Math.min((double)this.maxZ, (double)$$0.maxZ);
+        return new net.minecraft.world.phys.AABB($$1, $$2, $$3, $$4, $$5, $$6);
     }
 
-    public net.minecraft.world.phys.AABB minmax(net.minecraft.world.phys.AABB other) {
-        double d = java.lang.Math.min((double)this.minX, (double)other.minX);
-        double d2 = java.lang.Math.min((double)this.minY, (double)other.minY);
-        double d3 = java.lang.Math.min((double)this.minZ, (double)other.minZ);
-        double d4 = java.lang.Math.max((double)this.maxX, (double)other.maxX);
-        double d5 = java.lang.Math.max((double)this.maxY, (double)other.maxY);
-        double d6 = java.lang.Math.max((double)this.maxZ, (double)other.maxZ);
-        return new net.minecraft.world.phys.AABB(d, d2, d3, d4, d5, d6);
+    public net.minecraft.world.phys.AABB minmax(net.minecraft.world.phys.AABB $$0) {
+        double $$1 = java.lang.Math.min((double)this.minX, (double)$$0.minX);
+        double $$2 = java.lang.Math.min((double)this.minY, (double)$$0.minY);
+        double $$3 = java.lang.Math.min((double)this.minZ, (double)$$0.minZ);
+        double $$4 = java.lang.Math.max((double)this.maxX, (double)$$0.maxX);
+        double $$5 = java.lang.Math.max((double)this.maxY, (double)$$0.maxY);
+        double $$6 = java.lang.Math.max((double)this.maxZ, (double)$$0.maxZ);
+        return new net.minecraft.world.phys.AABB($$1, $$2, $$3, $$4, $$5, $$6);
     }
 
-    public net.minecraft.world.phys.AABB move(double x, double y, double z) {
-        return new net.minecraft.world.phys.AABB(this.minX + x, this.minY + y, this.minZ + z, this.maxX + x, this.maxY + y, this.maxZ + z);
+    public net.minecraft.world.phys.AABB move(double $$0, double $$1, double $$2) {
+        return new net.minecraft.world.phys.AABB(this.minX + $$0, this.minY + $$1, this.minZ + $$2, this.maxX + $$0, this.maxY + $$1, this.maxZ + $$2);
     }
 
-    public net.minecraft.world.phys.AABB move(net.minecraft.core.BlockPos pos) {
-        return new net.minecraft.world.phys.AABB(this.minX + (double)pos.getX(), this.minY + (double)pos.getY(), this.minZ + (double)pos.getZ(), this.maxX + (double)pos.getX(), this.maxY + (double)pos.getY(), this.maxZ + (double)pos.getZ());
+    public net.minecraft.world.phys.AABB move(net.minecraft.core.BlockPos $$0) {
+        return new net.minecraft.world.phys.AABB(this.minX + (double)$$0.getX(), this.minY + (double)$$0.getY(), this.minZ + (double)$$0.getZ(), this.maxX + (double)$$0.getX(), this.maxY + (double)$$0.getY(), this.maxZ + (double)$$0.getZ());
     }
 
-    public net.minecraft.world.phys.AABB move(net.minecraft.world.phys.Vec3 vec) {
-        return this.move(vec.x, vec.y, vec.z);
+    public net.minecraft.world.phys.AABB move(net.minecraft.world.phys.Vec3 $$0) {
+        return this.move($$0.x, $$0.y, $$0.z);
     }
 
-    public boolean intersects(net.minecraft.world.phys.AABB other) {
-        return this.intersects(other.minX, other.minY, other.minZ, other.maxX, other.maxY, other.maxZ);
+    public boolean intersects(net.minecraft.world.phys.AABB $$0) {
+        return this.intersects($$0.minX, $$0.minY, $$0.minZ, $$0.maxX, $$0.maxY, $$0.maxZ);
     }
 
-    public boolean intersects(double x1, double y1, double z1, double x2, double y2, double z2) {
-        return this.minX < x2 && this.maxX > x1 && this.minY < y2 && this.maxY > y1 && this.minZ < z2 && this.maxZ > z1;
+    public boolean intersects(double $$0, double $$1, double $$2, double $$3, double $$4, double $$5) {
+        return this.minX < $$3 && this.maxX > $$0 && this.minY < $$4 && this.maxY > $$1 && this.minZ < $$5 && this.maxZ > $$2;
     }
 
-    public boolean intersects(net.minecraft.world.phys.Vec3 min, net.minecraft.world.phys.Vec3 max) {
-        return this.intersects(java.lang.Math.min((double)min.x, (double)max.x), java.lang.Math.min((double)min.y, (double)max.y), java.lang.Math.min((double)min.z, (double)max.z), java.lang.Math.max((double)min.x, (double)max.x), java.lang.Math.max((double)min.y, (double)max.y), java.lang.Math.max((double)min.z, (double)max.z));
+    public boolean intersects(net.minecraft.world.phys.Vec3 $$0, net.minecraft.world.phys.Vec3 $$1) {
+        return this.intersects(java.lang.Math.min((double)$$0.x, (double)$$1.x), java.lang.Math.min((double)$$0.y, (double)$$1.y), java.lang.Math.min((double)$$0.z, (double)$$1.z), java.lang.Math.max((double)$$0.x, (double)$$1.x), java.lang.Math.max((double)$$0.y, (double)$$1.y), java.lang.Math.max((double)$$0.z, (double)$$1.z));
     }
 
-    public boolean contains(net.minecraft.world.phys.Vec3 vec) {
-        return this.contains(vec.x, vec.y, vec.z);
+    public boolean contains(net.minecraft.world.phys.Vec3 $$0) {
+        return this.contains($$0.x, $$0.y, $$0.z);
     }
 
-    public boolean contains(double x, double y, double z) {
-        return x >= this.minX && x < this.maxX && y >= this.minY && y < this.maxY && z >= this.minZ && z < this.maxZ;
+    public boolean contains(double $$0, double $$1, double $$2) {
+        return $$0 >= this.minX && $$0 < this.maxX && $$1 >= this.minY && $$1 < this.maxY && $$2 >= this.minZ && $$2 < this.maxZ;
     }
 
     public double getSize() {
@@ -259,70 +259,70 @@
         return this.inflate(-$$0, -$$1, -$$2);
     }
 
-    public net.minecraft.world.phys.AABB deflate(double value) {
-        return this.inflate(-value);
+    public net.minecraft.world.phys.AABB deflate(double $$0) {
+        return this.inflate(-$$0);
     }
 
-    public java.util.Optional<net.minecraft.world.phys.Vec3> clip(net.minecraft.world.phys.Vec3 from, net.minecraft.world.phys.Vec3 to) {
-        double[] dArray = new double[]{1.0};
-        double d = to.x - from.x;
-        double d2 = to.y - from.y;
-        double d3 = to.z - from.z;
-        net.minecraft.core.Direction direction = net.minecraft.world.phys.AABB.getDirection((net.minecraft.world.phys.AABB)this, (net.minecraft.world.phys.Vec3)from, (double[])dArray, null, (double)d, (double)d2, (double)d3);
-        if (direction == null) {
+    public java.util.Optional<net.minecraft.world.phys.Vec3> clip(net.minecraft.world.phys.Vec3 $$0, net.minecraft.world.phys.Vec3 $$1) {
+        double[] $$2 = new double[]{1.0};
+        double $$3 = $$1.x - $$0.x;
+        double $$4 = $$1.y - $$0.y;
+        double $$5 = $$1.z - $$0.z;
+        net.minecraft.core.Direction $$6 = net.minecraft.world.phys.AABB.getDirection((net.minecraft.world.phys.AABB)this, (net.minecraft.world.phys.Vec3)$$0, (double[])$$2, null, (double)$$3, (double)$$4, (double)$$5);
+        if ($$6 == null) {
             return java.util.Optional.empty();
         }
-        double d4 = dArray[0];
-        return java.util.Optional.of((java.lang.Object)from.add(d4 * d, d4 * d2, d4 * d3));
+        double $$7 = $$2[0];
+        return java.util.Optional.of((java.lang.Object)$$0.add($$7 * $$3, $$7 * $$4, $$7 * $$5));
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.world.phys.BlockHitResult clip(java.lang.Iterable<net.minecraft.world.phys.AABB> boxes, net.minecraft.world.phys.Vec3 start, net.minecraft.world.phys.Vec3 end, net.minecraft.core.BlockPos pos) {
-        double[] dArray = new double[]{1.0};
-        net.minecraft.core.Direction direction = null;
-        double d = end.x - start.x;
-        double d2 = end.y - start.y;
-        double d3 = end.z - start.z;
-        for (net.minecraft.world.phys.AABB aABB : boxes) {
-            direction = net.minecraft.world.phys.AABB.getDirection((net.minecraft.world.phys.AABB)aABB.move(pos), (net.minecraft.world.phys.Vec3)start, (double[])dArray, direction, (double)d, (double)d2, (double)d3);
+    public static net.minecraft.world.phys.BlockHitResult clip(java.lang.Iterable<net.minecraft.world.phys.AABB> $$0, net.minecraft.world.phys.Vec3 $$1, net.minecraft.world.phys.Vec3 $$2, net.minecraft.core.BlockPos $$3) {
+        double[] $$4 = new double[]{1.0};
+        net.minecraft.core.Direction $$5 = null;
+        double $$6 = $$2.x - $$1.x;
+        double $$7 = $$2.y - $$1.y;
+        double $$8 = $$2.z - $$1.z;
+        for (net.minecraft.world.phys.AABB $$9 : $$0) {
+            $$5 = net.minecraft.world.phys.AABB.getDirection((net.minecraft.world.phys.AABB)$$9.move($$3), (net.minecraft.world.phys.Vec3)$$1, (double[])$$4, $$5, (double)$$6, (double)$$7, (double)$$8);
         }
-        if (direction == null) {
+        if ($$5 == null) {
             return null;
         }
-        double d4 = dArray[0];
-        return new net.minecraft.world.phys.BlockHitResult(start.add(d4 * d, d4 * d2, d4 * d3), direction, pos, false);
+        double $$10 = $$4[0];
+        return new net.minecraft.world.phys.BlockHitResult($$1.add($$10 * $$6, $$10 * $$7, $$10 * $$8), $$5, $$3, false);
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.core.Direction getDirection(net.minecraft.world.phys.AABB aabb, net.minecraft.world.phys.Vec3 start, double[] minDistance, @javax.annotation.Nullable net.minecraft.core.Direction facing, double deltaX, double deltaY, double deltaZ) {
-        if (deltaX > 1.0E-7) {
-            facing = net.minecraft.world.phys.AABB.clipPoint((double[])minDistance, (net.minecraft.core.Direction)facing, (double)deltaX, (double)deltaY, (double)deltaZ, (double)aabb.minX, (double)aabb.minY, (double)aabb.maxY, (double)aabb.minZ, (double)aabb.maxZ, (net.minecraft.core.Direction)net.minecraft.core.Direction.WEST, (double)start.x, (double)start.y, (double)start.z);
-        } else if (deltaX < -1.0E-7) {
-            facing = net.minecraft.world.phys.AABB.clipPoint((double[])minDistance, (net.minecraft.core.Direction)facing, (double)deltaX, (double)deltaY, (double)deltaZ, (double)aabb.maxX, (double)aabb.minY, (double)aabb.maxY, (double)aabb.minZ, (double)aabb.maxZ, (net.minecraft.core.Direction)net.minecraft.core.Direction.EAST, (double)start.x, (double)start.y, (double)start.z);
+    public static net.minecraft.core.Direction getDirection(net.minecraft.world.phys.AABB $$0, net.minecraft.world.phys.Vec3 $$1, double[] $$2, @javax.annotation.Nullable net.minecraft.core.Direction $$3, double $$4, double $$5, double $$6) {
+        if ($$4 > 1.0E-7) {
+            $$3 = net.minecraft.world.phys.AABB.clipPoint((double[])$$2, (net.minecraft.core.Direction)$$3, (double)$$4, (double)$$5, (double)$$6, (double)$$0.minX, (double)$$0.minY, (double)$$0.maxY, (double)$$0.minZ, (double)$$0.maxZ, (net.minecraft.core.Direction)net.minecraft.core.Direction.WEST, (double)$$1.x, (double)$$1.y, (double)$$1.z);
+        } else if ($$4 < -1.0E-7) {
+            $$3 = net.minecraft.world.phys.AABB.clipPoint((double[])$$2, (net.minecraft.core.Direction)$$3, (double)$$4, (double)$$5, (double)$$6, (double)$$0.maxX, (double)$$0.minY, (double)$$0.maxY, (double)$$0.minZ, (double)$$0.maxZ, (net.minecraft.core.Direction)net.minecraft.core.Direction.EAST, (double)$$1.x, (double)$$1.y, (double)$$1.z);
         }
-        if (deltaY > 1.0E-7) {
-            facing = net.minecraft.world.phys.AABB.clipPoint((double[])minDistance, (net.minecraft.core.Direction)facing, (double)deltaY, (double)deltaZ, (double)deltaX, (double)aabb.minY, (double)aabb.minZ, (double)aabb.maxZ, (double)aabb.minX, (double)aabb.maxX, (net.minecraft.core.Direction)net.minecraft.core.Direction.DOWN, (double)start.y, (double)start.z, (double)start.x);
-        } else if (deltaY < -1.0E-7) {
-            facing = net.minecraft.world.phys.AABB.clipPoint((double[])minDistance, (net.minecraft.core.Direction)facing, (double)deltaY, (double)deltaZ, (double)deltaX, (double)aabb.maxY, (double)aabb.minZ, (double)aabb.maxZ, (double)aabb.minX, (double)aabb.maxX, (net.minecraft.core.Direction)net.minecraft.core.Direction.UP, (double)start.y, (double)start.z, (double)start.x);
+        if ($$5 > 1.0E-7) {
+            $$3 = net.minecraft.world.phys.AABB.clipPoint((double[])$$2, (net.minecraft.core.Direction)$$3, (double)$$5, (double)$$6, (double)$$4, (double)$$0.minY, (double)$$0.minZ, (double)$$0.maxZ, (double)$$0.minX, (double)$$0.maxX, (net.minecraft.core.Direction)net.minecraft.core.Direction.DOWN, (double)$$1.y, (double)$$1.z, (double)$$1.x);
+        } else if ($$5 < -1.0E-7) {
+            $$3 = net.minecraft.world.phys.AABB.clipPoint((double[])$$2, (net.minecraft.core.Direction)$$3, (double)$$5, (double)$$6, (double)$$4, (double)$$0.maxY, (double)$$0.minZ, (double)$$0.maxZ, (double)$$0.minX, (double)$$0.maxX, (net.minecraft.core.Direction)net.minecraft.core.Direction.UP, (double)$$1.y, (double)$$1.z, (double)$$1.x);
         }
-        if (deltaZ > 1.0E-7) {
-            facing = net.minecraft.world.phys.AABB.clipPoint((double[])minDistance, (net.minecraft.core.Direction)facing, (double)deltaZ, (double)deltaX, (double)deltaY, (double)aabb.minZ, (double)aabb.minX, (double)aabb.maxX, (double)aabb.minY, (double)aabb.maxY, (net.minecraft.core.Direction)net.minecraft.core.Direction.NORTH, (double)start.z, (double)start.x, (double)start.y);
-        } else if (deltaZ < -1.0E-7) {
-            facing = net.minecraft.world.phys.AABB.clipPoint((double[])minDistance, (net.minecraft.core.Direction)facing, (double)deltaZ, (double)deltaX, (double)deltaY, (double)aabb.maxZ, (double)aabb.minX, (double)aabb.maxX, (double)aabb.minY, (double)aabb.maxY, (net.minecraft.core.Direction)net.minecraft.core.Direction.SOUTH, (double)start.z, (double)start.x, (double)start.y);
+        if ($$6 > 1.0E-7) {
+            $$3 = net.minecraft.world.phys.AABB.clipPoint((double[])$$2, (net.minecraft.core.Direction)$$3, (double)$$6, (double)$$4, (double)$$5, (double)$$0.minZ, (double)$$0.minX, (double)$$0.maxX, (double)$$0.minY, (double)$$0.maxY, (net.minecraft.core.Direction)net.minecraft.core.Direction.NORTH, (double)$$1.z, (double)$$1.x, (double)$$1.y);
+        } else if ($$6 < -1.0E-7) {
+            $$3 = net.minecraft.world.phys.AABB.clipPoint((double[])$$2, (net.minecraft.core.Direction)$$3, (double)$$6, (double)$$4, (double)$$5, (double)$$0.maxZ, (double)$$0.minX, (double)$$0.maxX, (double)$$0.minY, (double)$$0.maxY, (net.minecraft.core.Direction)net.minecraft.core.Direction.SOUTH, (double)$$1.z, (double)$$1.x, (double)$$1.y);
         }
-        return facing;
+        return $$3;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.core.Direction clipPoint(double[] minDistance, @javax.annotation.Nullable net.minecraft.core.Direction prevDirection, double distanceSide, double distanceOtherA, double distanceOtherB, double minSide, double minOtherA, double maxOtherA, double minOtherB, double maxOtherB, net.minecraft.core.Direction hitSide, double startSide, double startOtherA, double startOtherB) {
-        double d = (minSide - startSide) / distanceSide;
-        double d2 = startOtherA + d * distanceOtherA;
-        double d3 = startOtherB + d * distanceOtherB;
-        if (0.0 < d && d < minDistance[0] && minOtherA - 1.0E-7 < d2 && d2 < maxOtherA + 1.0E-7 && minOtherB - 1.0E-7 < d3 && d3 < maxOtherB + 1.0E-7) {
-            minDistance[0] = d;
-            return hitSide;
+    public static net.minecraft.core.Direction clipPoint(double[] $$0, @javax.annotation.Nullable net.minecraft.core.Direction $$1, double $$2, double $$3, double $$4, double $$5, double $$6, double $$7, double $$8, double $$9, net.minecraft.core.Direction $$10, double $$11, double $$12, double $$13) {
+        double $$14 = ($$5 - $$11) / $$2;
+        double $$15 = $$12 + $$14 * $$3;
+        double $$16 = $$13 + $$14 * $$4;
+        if (0.0 < $$14 && $$14 < $$0[0] && $$6 - 1.0E-7 < $$15 && $$15 < $$7 + 1.0E-7 && $$8 - 1.0E-7 < $$16 && $$16 < $$9 + 1.0E-7) {
+            $$0[0] = $$14;
+            return $$10;
         }
-        return prevDirection;
+        return $$1;
     }
 
     public java.lang.String toString() {