--- net/minecraft/world/phys/shapes/ArrayVoxelShape.java
+++ net/minecraft/world/phys/shapes/ArrayVoxelShape.java
@@ -10,25 +10,25 @@
     public it.unimi.dsi.fastutil.doubles.DoubleList ys;
     public it.unimi.dsi.fastutil.doubles.DoubleList zs;
 
-    public net.minecraft.world.phys.shapes.ArrayVoxelShape(net.minecraft.world.phys.shapes.DiscreteVoxelShape shape, double[] xs, double[] ys, double[] zs) {
-        this(shape, (it.unimi.dsi.fastutil.doubles.DoubleList)it.unimi.dsi.fastutil.doubles.DoubleArrayList.wrap((double[])java.util.Arrays.copyOf((double[])xs, (int)(shape.getXSize() + 1))), (it.unimi.dsi.fastutil.doubles.DoubleList)it.unimi.dsi.fastutil.doubles.DoubleArrayList.wrap((double[])java.util.Arrays.copyOf((double[])ys, (int)(shape.getYSize() + 1))), (it.unimi.dsi.fastutil.doubles.DoubleList)it.unimi.dsi.fastutil.doubles.DoubleArrayList.wrap((double[])java.util.Arrays.copyOf((double[])zs, (int)(shape.getZSize() + 1))));
+    public net.minecraft.world.phys.shapes.ArrayVoxelShape(net.minecraft.world.phys.shapes.DiscreteVoxelShape $$0, double[] $$1, double[] $$2, double[] $$3) {
+        this($$0, (it.unimi.dsi.fastutil.doubles.DoubleList)it.unimi.dsi.fastutil.doubles.DoubleArrayList.wrap((double[])java.util.Arrays.copyOf((double[])$$1, (int)($$0.getXSize() + 1))), (it.unimi.dsi.fastutil.doubles.DoubleList)it.unimi.dsi.fastutil.doubles.DoubleArrayList.wrap((double[])java.util.Arrays.copyOf((double[])$$2, (int)($$0.getYSize() + 1))), (it.unimi.dsi.fastutil.doubles.DoubleList)it.unimi.dsi.fastutil.doubles.DoubleArrayList.wrap((double[])java.util.Arrays.copyOf((double[])$$3, (int)($$0.getZSize() + 1))));
     }
 
-    public net.minecraft.world.phys.shapes.ArrayVoxelShape(net.minecraft.world.phys.shapes.DiscreteVoxelShape shape, it.unimi.dsi.fastutil.doubles.DoubleList xs, it.unimi.dsi.fastutil.doubles.DoubleList ys, it.unimi.dsi.fastutil.doubles.DoubleList zs) {
-        super(shape);
-        int n = shape.getXSize() + 1;
-        int n2 = shape.getYSize() + 1;
-        int n3 = shape.getZSize() + 1;
-        if (n != xs.size() || n2 != ys.size() || n3 != zs.size()) {
+    public net.minecraft.world.phys.shapes.ArrayVoxelShape(net.minecraft.world.phys.shapes.DiscreteVoxelShape $$0, it.unimi.dsi.fastutil.doubles.DoubleList $$1, it.unimi.dsi.fastutil.doubles.DoubleList $$2, it.unimi.dsi.fastutil.doubles.DoubleList $$3) {
+        super($$0);
+        int $$4 = $$0.getXSize() + 1;
+        int $$5 = $$0.getYSize() + 1;
+        int $$6 = $$0.getZSize() + 1;
+        if ($$4 != $$1.size() || $$5 != $$2.size() || $$6 != $$3.size()) {
             throw (java.lang.IllegalArgumentException)net.minecraft.Util.pauseInIde((java.lang.Throwable)new java.lang.IllegalArgumentException("Lengths of point arrays must be consistent with the size of the VoxelShape."));
         }
-        this.xs = xs;
-        this.ys = ys;
-        this.zs = zs;
+        this.xs = $$1;
+        this.ys = $$2;
+        this.zs = $$3;
     }
 
-    public it.unimi.dsi.fastutil.doubles.DoubleList getCoords(net.minecraft.core.Direction$Axis axis) {
-        switch (net.minecraft.world.phys.shapes.ArrayVoxelShape$1.$SwitchMap$net$minecraft$core$Direction$Axis[axis.ordinal()]) {
+    public it.unimi.dsi.fastutil.doubles.DoubleList getCoords(net.minecraft.core.Direction$Axis $$0) {
+        switch (net.minecraft.world.phys.shapes.ArrayVoxelShape$1.$SwitchMap$net$minecraft$core$Direction$Axis[$$0.ordinal()]) {
             case 1: {
                 return this.xs;
             }