--- net/minecraft/world/phys/shapes/DiscreteCubeMerger.java
+++ net/minecraft/world/phys/shapes/DiscreteCubeMerger.java
@@ -10,17 +10,17 @@
     public int firstDiv;
     public int secondDiv;
 
-    public net.minecraft.world.phys.shapes.DiscreteCubeMerger(int aa, int bb) {
-        this.result = new net.minecraft.world.phys.shapes.CubePointRange((int)net.minecraft.world.phys.shapes.Shapes.lcm((int)aa, (int)bb));
-        int n = com.google.common.math.IntMath.gcd((int)aa, (int)bb);
-        this.firstDiv = aa / n;
-        this.secondDiv = bb / n;
+    public net.minecraft.world.phys.shapes.DiscreteCubeMerger(int $$0, int $$1) {
+        this.result = new net.minecraft.world.phys.shapes.CubePointRange((int)net.minecraft.world.phys.shapes.Shapes.lcm((int)$$0, (int)$$1));
+        int $$2 = com.google.common.math.IntMath.gcd((int)$$0, (int)$$1);
+        this.firstDiv = $$0 / $$2;
+        this.secondDiv = $$1 / $$2;
     }
 
-    public boolean forMergedIndexes(net.minecraft.world.phys.shapes.IndexMerger$IndexConsumer consumer) {
-        int n = this.result.size() - 1;
-        for (int i = 0; i < n; ++i) {
-            if (consumer.merge(i / this.secondDiv, i / this.firstDiv, i)) continue;
+    public boolean forMergedIndexes(net.minecraft.world.phys.shapes.IndexMerger$IndexConsumer $$0) {
+        int $$1 = this.result.size() - 1;
+        for (int $$2 = 0; $$2 < $$1; ++$$2) {
+            if ($$0.merge($$2 / this.secondDiv, $$2 / this.firstDiv, $$2)) continue;
             return false;
         }
         return true;