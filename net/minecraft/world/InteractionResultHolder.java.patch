--- net/minecraft/world/InteractionResultHolder.java
+++ net/minecraft/world/InteractionResultHolder.java
@@ -8,9 +8,9 @@
     public net.minecraft.world.InteractionResult result;
     public T object;
 
-    public net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult result, T object) {
-        this.result = result;
-        this.object = object;
+    public net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult $$0, T $$1) {
+        this.result = $$0;
+        this.object = $$1;
     }
 
     public net.minecraft.world.InteractionResult getResult() {
@@ -21,24 +21,24 @@
         return (T)this.object;
     }
 
-    public static <T> net.minecraft.world.InteractionResultHolder<T> success(T type) {
-        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.SUCCESS, type);
+    public static <T> net.minecraft.world.InteractionResultHolder<T> success(T $$0) {
+        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.SUCCESS, $$0);
     }
 
-    public static <T> net.minecraft.world.InteractionResultHolder<T> consume(T type) {
-        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.CONSUME, type);
+    public static <T> net.minecraft.world.InteractionResultHolder<T> consume(T $$0) {
+        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.CONSUME, $$0);
     }
 
-    public static <T> net.minecraft.world.InteractionResultHolder<T> pass(T type) {
-        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.PASS, type);
+    public static <T> net.minecraft.world.InteractionResultHolder<T> pass(T $$0) {
+        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.PASS, $$0);
     }
 
-    public static <T> net.minecraft.world.InteractionResultHolder<T> fail(T type) {
-        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.FAIL, type);
+    public static <T> net.minecraft.world.InteractionResultHolder<T> fail(T $$0) {
+        return new net.minecraft.world.InteractionResultHolder(net.minecraft.world.InteractionResult.FAIL, $$0);
     }
 
-    public static <T> net.minecraft.world.InteractionResultHolder<T> sidedSuccess(T object, boolean isClientSide) {
-        return isClientSide ? net.minecraft.world.InteractionResultHolder.success(object) : net.minecraft.world.InteractionResultHolder.consume(object);
+    public static <T> net.minecraft.world.InteractionResultHolder<T> sidedSuccess(T $$0, boolean $$1) {
+        return $$1 ? net.minecraft.world.InteractionResultHolder.success($$0) : net.minecraft.world.InteractionResultHolder.consume($$0);
     }
 }
 