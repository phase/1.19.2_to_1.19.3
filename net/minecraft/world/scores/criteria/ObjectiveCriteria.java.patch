--- net/minecraft/world/scores/criteria/ObjectiveCriteria.java
+++ net/minecraft/world/scores/criteria/ObjectiveCriteria.java
@@ -34,35 +34,35 @@
         return net.minecraft.world.scores.criteria.ObjectiveCriteria.registerCustom((java.lang.String)$$0, (boolean)false, (net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType)net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType.INTEGER);
     }
 
-    public net.minecraft.world.scores.criteria.ObjectiveCriteria(java.lang.String name) {
-        this(name, false, net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType.INTEGER);
+    public net.minecraft.world.scores.criteria.ObjectiveCriteria(java.lang.String $$0) {
+        this($$0, false, net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType.INTEGER);
     }
 
-    public net.minecraft.world.scores.criteria.ObjectiveCriteria(java.lang.String name, boolean readOnly, net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType renderType) {
-        this.name = name;
-        this.readOnly = readOnly;
-        this.renderType = renderType;
-        CRITERIA_CACHE.put((java.lang.Object)name, (java.lang.Object)this);
+    public net.minecraft.world.scores.criteria.ObjectiveCriteria(java.lang.String $$0, boolean $$1, net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType $$2) {
+        this.name = $$0;
+        this.readOnly = $$1;
+        this.renderType = $$2;
+        CRITERIA_CACHE.put((java.lang.Object)$$0, (java.lang.Object)this);
     }
 
     public static java.util.Set<java.lang.String> getCustomCriteriaNames() {
         return com.google.common.collect.ImmutableSet.copyOf((java.util.Collection)CUSTOM_CRITERIA.keySet());
     }
 
-    public static java.util.Optional<net.minecraft.world.scores.criteria.ObjectiveCriteria> byName(java.lang.String name) {
-        net.minecraft.world.scores.criteria.ObjectiveCriteria objectiveCriteria = (net.minecraft.world.scores.criteria.ObjectiveCriteria)CRITERIA_CACHE.get((java.lang.Object)name);
-        if (objectiveCriteria != null) {
-            return java.util.Optional.of((java.lang.Object)objectiveCriteria);
+    public static java.util.Optional<net.minecraft.world.scores.criteria.ObjectiveCriteria> byName(java.lang.String $$0) {
+        net.minecraft.world.scores.criteria.ObjectiveCriteria $$1 = (net.minecraft.world.scores.criteria.ObjectiveCriteria)CRITERIA_CACHE.get((java.lang.Object)$$0);
+        if ($$1 != null) {
+            return java.util.Optional.of((java.lang.Object)$$1);
         }
-        int n = name.indexOf(58);
-        if (n < 0) {
+        int $$22 = $$0.indexOf(58);
+        if ($$22 < 0) {
             return java.util.Optional.empty();
         }
-        return net.minecraft.core.Registry.STAT_TYPE.getOptional(net.minecraft.resources.ResourceLocation.of((java.lang.String)name.substring(0, n), (char)'.')).flatMap($$2 -> net.minecraft.world.scores.criteria.ObjectiveCriteria.getStat((net.minecraft.stats.StatType)$$2, (net.minecraft.resources.ResourceLocation)net.minecraft.resources.ResourceLocation.of((java.lang.String)name.substring(n + 1), (char)'.')));
+        return net.minecraft.core.Registry.STAT_TYPE.getOptional(net.minecraft.resources.ResourceLocation.of((java.lang.String)$$0.substring(0, $$22), (char)'.')).flatMap($$2 -> net.minecraft.world.scores.criteria.ObjectiveCriteria.getStat((net.minecraft.stats.StatType)$$2, (net.minecraft.resources.ResourceLocation)net.minecraft.resources.ResourceLocation.of((java.lang.String)$$0.substring($$22 + 1), (char)'.')));
     }
 
-    public static <T> java.util.Optional<net.minecraft.world.scores.criteria.ObjectiveCriteria> getStat(net.minecraft.stats.StatType<T> statType, net.minecraft.resources.ResourceLocation resourceLocation) {
-        return statType.getRegistry().getOptional(resourceLocation).map(arg_0 -> statType.get(arg_0));
+    public static <T> java.util.Optional<net.minecraft.world.scores.criteria.ObjectiveCriteria> getStat(net.minecraft.stats.StatType<T> $$0, net.minecraft.resources.ResourceLocation $$1) {
+        return $$0.getRegistry().getOptional($$1).map(arg_0 -> $$0.get(arg_0));
     }
 
     public java.lang.String getName() {