--- net/minecraft/world/scores/Score.java
+++ net/minecraft/world/scores/Score.java
@@ -14,19 +14,19 @@
     public boolean locked;
     public boolean forceUpdate;
 
-    public net.minecraft.world.scores.Score(net.minecraft.world.scores.Scoreboard scoreboard, net.minecraft.world.scores.Objective objective, java.lang.String owner) {
-        this.scoreboard = scoreboard;
-        this.objective = objective;
-        this.owner = owner;
+    public net.minecraft.world.scores.Score(net.minecraft.world.scores.Scoreboard $$0, net.minecraft.world.scores.Objective $$1, java.lang.String $$2) {
+        this.scoreboard = $$0;
+        this.objective = $$1;
+        this.owner = $$2;
         this.locked = true;
         this.forceUpdate = true;
     }
 
-    public void add(int amount) {
+    public void add(int $$0) {
         if (this.objective.getCriteria().isReadOnly()) {
             throw new java.lang.IllegalStateException("Cannot modify read-only score");
         }
-        this.setScore(this.getScore() + amount);
+        this.setScore(this.getScore() + $$0);
     }
 
     public void increment() {
@@ -41,10 +41,10 @@
         this.setScore(0);
     }
 
-    public void setScore(int points) {
-        int n = this.count;
-        this.count = points;
-        if (n != points || this.forceUpdate) {
+    public void setScore(int $$0) {
+        int $$1 = this.count;
+        this.count = $$0;
+        if ($$1 != $$0 || this.forceUpdate) {
             this.forceUpdate = false;
             this.getScoreboard().onScoreChanged(this);
         }
@@ -67,29 +67,29 @@
         return this.locked;
     }
 
-    public void setLocked(boolean locked) {
-        this.locked = locked;
+    public void setLocked(boolean $$0) {
+        this.locked = $$0;
     }
 
-    public static /* synthetic */ int lambda$static$0(net.minecraft.world.scores.Score score1, net.minecraft.world.scores.Score score2) {
-        if (score1.getScore() > score2.getScore()) {
+    public static /* synthetic */ int lambda$static$0(net.minecraft.world.scores.Score $$0, net.minecraft.world.scores.Score $$1) {
+        if ($$0.getScore() > $$1.getScore()) {
             return 1;
         }
-        if (score1.getScore() < score2.getScore()) {
+        if ($$0.getScore() < $$1.getScore()) {
             return -1;
         }
-        return score2.getOwner().compareToIgnoreCase(score1.getOwner());
+        return $$1.getOwner().compareToIgnoreCase($$0.getOwner());
     }
 
     static {
-        SCORE_COMPARATOR = (score1, score2) -> {
-            if (score1.getScore() > score2.getScore()) {
+        SCORE_COMPARATOR = ($$0, $$1) -> {
+            if ($$0.getScore() > $$1.getScore()) {
                 return 1;
             }
-            if (score1.getScore() < score2.getScore()) {
+            if ($$0.getScore() < $$1.getScore()) {
                 return -1;
             }
-            return score2.getOwner().compareToIgnoreCase(score1.getOwner());
+            return $$1.getOwner().compareToIgnoreCase($$0.getOwner());
         };
     }
 }