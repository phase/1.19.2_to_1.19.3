--- net/minecraft/world/scores/ScoreboardSaveData.java
+++ net/minecraft/world/scores/ScoreboardSaveData.java
@@ -25,77 +25,81 @@
         return this;
     }
 
-    public void loadTeams(net.minecraft.nbt.ListTag tagList) {
-        for (int i = 0; i < tagList.size(); ++i) {
-            net.minecraft.network.chat.MutableComponent mutableComponent;
-            net.minecraft.nbt.CompoundTag compoundTag = tagList.getCompound(i);
-            java.lang.String string = compoundTag.getString("Name");
-            net.minecraft.world.scores.PlayerTeam playerTeam = this.scoreboard.addPlayerTeam(string);
-            net.minecraft.network.chat.MutableComponent mutableComponent2 = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)compoundTag.getString("DisplayName"));
-            if (mutableComponent2 != null) {
-                playerTeam.setDisplayName((net.minecraft.network.chat.Component)mutableComponent2);
+    public void loadTeams(net.minecraft.nbt.ListTag $$0) {
+        for (int $$1 = 0; $$1 < $$0.size(); ++$$1) {
+            net.minecraft.world.scores.Team$CollisionRule $$10;
+            net.minecraft.world.scores.Team$Visibility $$9;
+            net.minecraft.world.scores.Team$Visibility $$8;
+            net.minecraft.network.chat.MutableComponent $$7;
+            net.minecraft.network.chat.MutableComponent $$6;
+            net.minecraft.nbt.CompoundTag $$2 = $$0.getCompound($$1);
+            java.lang.String $$3 = $$2.getString("Name");
+            net.minecraft.world.scores.PlayerTeam $$4 = this.scoreboard.addPlayerTeam($$3);
+            net.minecraft.network.chat.MutableComponent $$5 = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)$$2.getString("DisplayName"));
+            if ($$5 != null) {
+                $$4.setDisplayName((net.minecraft.network.chat.Component)$$5);
             }
-            if (compoundTag.contains("TeamColor", 8)) {
-                playerTeam.setColor(net.minecraft.ChatFormatting.getByName((java.lang.String)compoundTag.getString("TeamColor")));
+            if ($$2.contains("TeamColor", 8)) {
+                $$4.setColor(net.minecraft.ChatFormatting.getByName((java.lang.String)$$2.getString("TeamColor")));
             }
-            if (compoundTag.contains("AllowFriendlyFire", 99)) {
-                playerTeam.setAllowFriendlyFire(compoundTag.getBoolean("AllowFriendlyFire"));
+            if ($$2.contains("AllowFriendlyFire", 99)) {
+                $$4.setAllowFriendlyFire($$2.getBoolean("AllowFriendlyFire"));
             }
-            if (compoundTag.contains("SeeFriendlyInvisibles", 99)) {
-                playerTeam.setSeeFriendlyInvisibles(compoundTag.getBoolean("SeeFriendlyInvisibles"));
+            if ($$2.contains("SeeFriendlyInvisibles", 99)) {
+                $$4.setSeeFriendlyInvisibles($$2.getBoolean("SeeFriendlyInvisibles"));
             }
-            if (compoundTag.contains("MemberNamePrefix", 8) && (mutableComponent = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)compoundTag.getString("MemberNamePrefix"))) != null) {
-                playerTeam.setPlayerPrefix((net.minecraft.network.chat.Component)mutableComponent);
+            if ($$2.contains("MemberNamePrefix", 8) && ($$6 = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)$$2.getString("MemberNamePrefix"))) != null) {
+                $$4.setPlayerPrefix((net.minecraft.network.chat.Component)$$6);
             }
-            if (compoundTag.contains("MemberNameSuffix", 8) && (mutableComponent = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)compoundTag.getString("MemberNameSuffix"))) != null) {
-                playerTeam.setPlayerSuffix((net.minecraft.network.chat.Component)mutableComponent);
+            if ($$2.contains("MemberNameSuffix", 8) && ($$7 = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)$$2.getString("MemberNameSuffix"))) != null) {
+                $$4.setPlayerSuffix((net.minecraft.network.chat.Component)$$7);
             }
-            if (compoundTag.contains("NameTagVisibility", 8) && (mutableComponent = net.minecraft.world.scores.Team$Visibility.byName((java.lang.String)compoundTag.getString("NameTagVisibility"))) != null) {
-                playerTeam.setNameTagVisibility((net.minecraft.world.scores.Team$Visibility)mutableComponent);
+            if ($$2.contains("NameTagVisibility", 8) && ($$8 = net.minecraft.world.scores.Team$Visibility.byName((java.lang.String)$$2.getString("NameTagVisibility"))) != null) {
+                $$4.setNameTagVisibility($$8);
             }
-            if (compoundTag.contains("DeathMessageVisibility", 8) && (mutableComponent = net.minecraft.world.scores.Team$Visibility.byName((java.lang.String)compoundTag.getString("DeathMessageVisibility"))) != null) {
-                playerTeam.setDeathMessageVisibility((net.minecraft.world.scores.Team$Visibility)mutableComponent);
+            if ($$2.contains("DeathMessageVisibility", 8) && ($$9 = net.minecraft.world.scores.Team$Visibility.byName((java.lang.String)$$2.getString("DeathMessageVisibility"))) != null) {
+                $$4.setDeathMessageVisibility($$9);
             }
-            if (compoundTag.contains("CollisionRule", 8) && (mutableComponent = net.minecraft.world.scores.Team$CollisionRule.byName((java.lang.String)compoundTag.getString("CollisionRule"))) != null) {
-                playerTeam.setCollisionRule((net.minecraft.world.scores.Team$CollisionRule)mutableComponent);
+            if ($$2.contains("CollisionRule", 8) && ($$10 = net.minecraft.world.scores.Team$CollisionRule.byName((java.lang.String)$$2.getString("CollisionRule"))) != null) {
+                $$4.setCollisionRule($$10);
             }
-            this.loadTeamPlayers(playerTeam, compoundTag.getList("Players", 8));
+            this.loadTeamPlayers($$4, $$2.getList("Players", 8));
         }
     }
 
-    public void loadTeamPlayers(net.minecraft.world.scores.PlayerTeam playerTeam, net.minecraft.nbt.ListTag tagList) {
-        for (int i = 0; i < tagList.size(); ++i) {
-            this.scoreboard.addPlayerToTeam(tagList.getString(i), playerTeam);
+    public void loadTeamPlayers(net.minecraft.world.scores.PlayerTeam $$0, net.minecraft.nbt.ListTag $$1) {
+        for (int $$2 = 0; $$2 < $$1.size(); ++$$2) {
+            this.scoreboard.addPlayerToTeam($$1.getString($$2), $$0);
         }
     }
 
-    public void loadDisplaySlots(net.minecraft.nbt.CompoundTag compound) {
-        for (int i = 0; i < 19; ++i) {
-            if (!compound.contains("slot_" + i, 8)) continue;
-            java.lang.String string = compound.getString("slot_" + i);
-            net.minecraft.world.scores.Objective objective = this.scoreboard.getObjective(string);
-            this.scoreboard.setDisplayObjective(i, objective);
+    public void loadDisplaySlots(net.minecraft.nbt.CompoundTag $$0) {
+        for (int $$1 = 0; $$1 < 19; ++$$1) {
+            if (!$$0.contains("slot_" + $$1, 8)) continue;
+            java.lang.String $$2 = $$0.getString("slot_" + $$1);
+            net.minecraft.world.scores.Objective $$3 = this.scoreboard.getObjective($$2);
+            this.scoreboard.setDisplayObjective($$1, $$3);
         }
     }
 
-    public void loadObjectives(net.minecraft.nbt.ListTag nbt) {
-        for (int i = 0; i < nbt.size(); ++i) {
-            net.minecraft.nbt.CompoundTag compoundTag = nbt.getCompound(i);
-            net.minecraft.world.scores.criteria.ObjectiveCriteria.byName((java.lang.String)compoundTag.getString("CriteriaName")).ifPresent($$1 -> {
-                java.lang.String $$2 = compoundTag.getString("Name");
-                net.minecraft.network.chat.MutableComponent $$3 = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)compoundTag.getString("DisplayName"));
-                net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType $$4 = net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType.byId((java.lang.String)compoundTag.getString("RenderType"));
+    public void loadObjectives(net.minecraft.nbt.ListTag $$0) {
+        for (int $$12 = 0; $$12 < $$0.size(); ++$$12) {
+            net.minecraft.nbt.CompoundTag $$2 = $$0.getCompound($$12);
+            net.minecraft.world.scores.criteria.ObjectiveCriteria.byName((java.lang.String)$$2.getString("CriteriaName")).ifPresent($$1 -> {
+                java.lang.String $$2 = $$2.getString("Name");
+                net.minecraft.network.chat.MutableComponent $$3 = net.minecraft.network.chat.Component$Serializer.fromJson((java.lang.String)$$2.getString("DisplayName"));
+                net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType $$4 = net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType.byId((java.lang.String)$$2.getString("RenderType"));
                 this.scoreboard.addObjective($$2, $$1, (net.minecraft.network.chat.Component)$$3, $$4);
             });
         }
     }
 
-    public net.minecraft.nbt.CompoundTag save(net.minecraft.nbt.CompoundTag compound) {
-        compound.put("Objectives", (net.minecraft.nbt.Tag)this.saveObjectives());
-        compound.put("PlayerScores", (net.minecraft.nbt.Tag)this.scoreboard.savePlayerScores());
-        compound.put("Teams", (net.minecraft.nbt.Tag)this.saveTeams());
-        this.saveDisplaySlots(compound);
-        return compound;
+    public net.minecraft.nbt.CompoundTag save(net.minecraft.nbt.CompoundTag $$0) {
+        $$0.put("Objectives", (net.minecraft.nbt.Tag)this.saveObjectives());
+        $$0.put("PlayerScores", (net.minecraft.nbt.Tag)this.scoreboard.savePlayerScores());
+        $$0.put("Teams", (net.minecraft.nbt.Tag)this.saveTeams());
+        this.saveDisplaySlots($$0);
+        return $$0;
     }
 
     public net.minecraft.nbt.ListTag saveTeams() {
@@ -125,17 +129,17 @@
         return $$0;
     }
 
-    public void saveDisplaySlots(net.minecraft.nbt.CompoundTag compound) {
-        net.minecraft.nbt.CompoundTag compoundTag = new net.minecraft.nbt.CompoundTag();
-        boolean bl = false;
-        for (int i = 0; i < 19; ++i) {
-            net.minecraft.world.scores.Objective objective = this.scoreboard.getDisplayObjective(i);
-            if (objective == null) continue;
-            compoundTag.putString("slot_" + i, objective.getName());
-            bl = true;
+    public void saveDisplaySlots(net.minecraft.nbt.CompoundTag $$0) {
+        net.minecraft.nbt.CompoundTag $$1 = new net.minecraft.nbt.CompoundTag();
+        boolean $$2 = false;
+        for (int $$3 = 0; $$3 < 19; ++$$3) {
+            net.minecraft.world.scores.Objective $$4 = this.scoreboard.getDisplayObjective($$3);
+            if ($$4 == null) continue;
+            $$1.putString("slot_" + $$3, $$4.getName());
+            $$2 = true;
         }
-        if (bl) {
-            compound.put("DisplaySlots", (net.minecraft.nbt.Tag)compoundTag);
+        if ($$2) {
+            $$0.put("DisplaySlots", (net.minecraft.nbt.Tag)$$1);
         }
     }
 