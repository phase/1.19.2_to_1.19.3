--- net/minecraft/network/chat/ComponentUtils.java
+++ net/minecraft/network/chat/ComponentUtils.java
@@ -12,69 +12,69 @@
     public net.minecraft.network.chat.ComponentUtils() {
     }
 
-    public static net.minecraft.network.chat.MutableComponent mergeStyles(net.minecraft.network.chat.MutableComponent component, net.minecraft.network.chat.Style style) {
-        if (style.isEmpty()) {
-            return component;
+    public static net.minecraft.network.chat.MutableComponent mergeStyles(net.minecraft.network.chat.MutableComponent $$0, net.minecraft.network.chat.Style $$1) {
+        if ($$1.isEmpty()) {
+            return $$0;
         }
-        net.minecraft.network.chat.Style style2 = component.getStyle();
-        if (style2.isEmpty()) {
-            return component.setStyle(style);
+        net.minecraft.network.chat.Style $$2 = $$0.getStyle();
+        if ($$2.isEmpty()) {
+            return $$0.setStyle($$1);
         }
-        if (style2.equals((java.lang.Object)style)) {
-            return component;
+        if ($$2.equals((java.lang.Object)$$1)) {
+            return $$0;
         }
-        return component.setStyle(style2.applyTo(style));
+        return $$0.setStyle($$2.applyTo($$1));
     }
 
     public static java.util.Optional<net.minecraft.network.chat.MutableComponent> updateForEntity(@javax.annotation.Nullable net.minecraft.commands.CommandSourceStack $$0, java.util.Optional<net.minecraft.network.chat.Component> $$1, @javax.annotation.Nullable net.minecraft.world.entity.Entity $$2, int $$3) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         return $$1.isPresent() ? java.util.Optional.of((java.lang.Object)net.minecraft.network.chat.ComponentUtils.updateForEntity((net.minecraft.commands.CommandSourceStack)$$0, (net.minecraft.network.chat.Component)((net.minecraft.network.chat.Component)$$1.get()), (net.minecraft.world.entity.Entity)$$2, (int)$$3)) : java.util.Optional.empty();
     }
 
-    public static net.minecraft.network.chat.MutableComponent updateForEntity(@javax.annotation.Nullable net.minecraft.commands.CommandSourceStack commandSourceStack, net.minecraft.network.chat.Component component, @javax.annotation.Nullable net.minecraft.world.entity.Entity entity, int recursionDepth) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (recursionDepth > 100) {
-            return component.copy();
+    public static net.minecraft.network.chat.MutableComponent updateForEntity(@javax.annotation.Nullable net.minecraft.commands.CommandSourceStack $$0, net.minecraft.network.chat.Component $$1, @javax.annotation.Nullable net.minecraft.world.entity.Entity $$2, int $$3) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$3 > 100) {
+            return $$1.copy();
         }
-        net.minecraft.network.chat.MutableComponent mutableComponent = component.getContents().resolve(commandSourceStack, entity, recursionDepth + 1);
-        for (net.minecraft.network.chat.Component component2 : component.getSiblings()) {
-            mutableComponent.append((net.minecraft.network.chat.Component)net.minecraft.network.chat.ComponentUtils.updateForEntity((net.minecraft.commands.CommandSourceStack)commandSourceStack, (net.minecraft.network.chat.Component)component2, (net.minecraft.world.entity.Entity)entity, (int)(recursionDepth + 1)));
+        net.minecraft.network.chat.MutableComponent $$4 = $$1.getContents().resolve($$0, $$2, $$3 + 1);
+        for (net.minecraft.network.chat.Component $$5 : $$1.getSiblings()) {
+            $$4.append((net.minecraft.network.chat.Component)net.minecraft.network.chat.ComponentUtils.updateForEntity((net.minecraft.commands.CommandSourceStack)$$0, (net.minecraft.network.chat.Component)$$5, (net.minecraft.world.entity.Entity)$$2, (int)($$3 + 1)));
         }
-        return mutableComponent.withStyle(net.minecraft.network.chat.ComponentUtils.resolveStyle((net.minecraft.commands.CommandSourceStack)commandSourceStack, (net.minecraft.network.chat.Style)component.getStyle(), (net.minecraft.world.entity.Entity)entity, (int)recursionDepth));
+        return $$4.withStyle(net.minecraft.network.chat.ComponentUtils.resolveStyle((net.minecraft.commands.CommandSourceStack)$$0, (net.minecraft.network.chat.Style)$$1.getStyle(), (net.minecraft.world.entity.Entity)$$2, (int)$$3));
     }
 
-    public static net.minecraft.network.chat.Style resolveStyle(@javax.annotation.Nullable net.minecraft.commands.CommandSourceStack commandSourceStack, net.minecraft.network.chat.Style style, @javax.annotation.Nullable net.minecraft.world.entity.Entity entity, int recursionDepth) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.network.chat.Component component;
-        net.minecraft.network.chat.HoverEvent hoverEvent = style.getHoverEvent();
-        if (hoverEvent != null && (component = (net.minecraft.network.chat.Component)hoverEvent.getValue(net.minecraft.network.chat.HoverEvent$Action.SHOW_TEXT)) != null) {
-            net.minecraft.network.chat.HoverEvent hoverEvent2 = new net.minecraft.network.chat.HoverEvent(net.minecraft.network.chat.HoverEvent$Action.SHOW_TEXT, (java.lang.Object)net.minecraft.network.chat.ComponentUtils.updateForEntity((net.minecraft.commands.CommandSourceStack)commandSourceStack, (net.minecraft.network.chat.Component)component, (net.minecraft.world.entity.Entity)entity, (int)(recursionDepth + 1)));
-            return style.withHoverEvent(hoverEvent2);
+    public static net.minecraft.network.chat.Style resolveStyle(@javax.annotation.Nullable net.minecraft.commands.CommandSourceStack $$0, net.minecraft.network.chat.Style $$1, @javax.annotation.Nullable net.minecraft.world.entity.Entity $$2, int $$3) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.network.chat.Component $$5;
+        net.minecraft.network.chat.HoverEvent $$4 = $$1.getHoverEvent();
+        if ($$4 != null && ($$5 = (net.minecraft.network.chat.Component)$$4.getValue(net.minecraft.network.chat.HoverEvent$Action.SHOW_TEXT)) != null) {
+            net.minecraft.network.chat.HoverEvent $$6 = new net.minecraft.network.chat.HoverEvent(net.minecraft.network.chat.HoverEvent$Action.SHOW_TEXT, (java.lang.Object)net.minecraft.network.chat.ComponentUtils.updateForEntity((net.minecraft.commands.CommandSourceStack)$$0, (net.minecraft.network.chat.Component)$$5, (net.minecraft.world.entity.Entity)$$2, (int)($$3 + 1)));
+            return $$1.withHoverEvent($$6);
         }
-        return style;
+        return $$1;
     }
 
-    public static net.minecraft.network.chat.Component getDisplayName(com.mojang.authlib.GameProfile profile) {
-        if (profile.getName() != null) {
-            return net.minecraft.network.chat.Component.literal((java.lang.String)profile.getName());
+    public static net.minecraft.network.chat.Component getDisplayName(com.mojang.authlib.GameProfile $$0) {
+        if ($$0.getName() != null) {
+            return net.minecraft.network.chat.Component.literal((java.lang.String)$$0.getName());
         }
-        if (profile.getId() != null) {
-            return net.minecraft.network.chat.Component.literal((java.lang.String)profile.getId().toString());
+        if ($$0.getId() != null) {
+            return net.minecraft.network.chat.Component.literal((java.lang.String)$$0.getId().toString());
         }
         return net.minecraft.network.chat.Component.literal((java.lang.String)"(unknown)");
     }
 
-    public static net.minecraft.network.chat.Component formatList(java.util.Collection<java.lang.String> elements) {
-        return net.minecraft.network.chat.ComponentUtils.formatAndSortList(elements, $$0 -> net.minecraft.network.chat.Component.literal((java.lang.String)$$0).withStyle(net.minecraft.ChatFormatting.GREEN));
+    public static net.minecraft.network.chat.Component formatList(java.util.Collection<java.lang.String> $$02) {
+        return net.minecraft.network.chat.ComponentUtils.formatAndSortList($$02, $$0 -> net.minecraft.network.chat.Component.literal((java.lang.String)$$0).withStyle(net.minecraft.ChatFormatting.GREEN));
     }
 
-    public static <T extends java.lang.Comparable<T>> net.minecraft.network.chat.Component formatAndSortList(java.util.Collection<T> elements, java.util.function.Function<T, net.minecraft.network.chat.Component> componentExtractor) {
-        if (elements.isEmpty()) {
+    public static <T extends java.lang.Comparable<T>> net.minecraft.network.chat.Component formatAndSortList(java.util.Collection<T> $$0, java.util.function.Function<T, net.minecraft.network.chat.Component> $$1) {
+        if ($$0.isEmpty()) {
             return net.minecraft.network.chat.CommonComponents.EMPTY;
         }
-        if (elements.size() == 1) {
-            return (net.minecraft.network.chat.Component)componentExtractor.apply((java.lang.Object)((java.lang.Comparable)elements.iterator().next()));
+        if ($$0.size() == 1) {
+            return (net.minecraft.network.chat.Component)$$1.apply((java.lang.Object)((java.lang.Comparable)$$0.iterator().next()));
         }
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList(elements);
-        arrayList.sort(java.lang.Comparable::compareTo);
-        return net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)arrayList, componentExtractor);
+        java.util.ArrayList $$2 = com.google.common.collect.Lists.newArrayList($$0);
+        $$2.sort(java.lang.Comparable::compareTo);
+        return net.minecraft.network.chat.ComponentUtils.formatList((java.util.Collection)$$2, $$1);
     }
 
     public static <T> net.minecraft.network.chat.Component formatList(java.util.Collection<? extends T> $$0, java.util.function.Function<T, net.minecraft.network.chat.Component> $$1) {
@@ -108,16 +108,16 @@
         return $$3;
     }
 
-    public static net.minecraft.network.chat.MutableComponent wrapInSquareBrackets(net.minecraft.network.chat.Component toWrap) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"chat.square_brackets", (java.lang.Object[])new java.lang.Object[]{toWrap});
+    public static net.minecraft.network.chat.MutableComponent wrapInSquareBrackets(net.minecraft.network.chat.Component $$0) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"chat.square_brackets", (java.lang.Object[])new java.lang.Object[]{$$0});
     }
 
-    public static net.minecraft.network.chat.Component fromMessage(com.mojang.brigadier.Message message) {
-        if (message instanceof net.minecraft.network.chat.Component) {
-            net.minecraft.network.chat.Component component = (net.minecraft.network.chat.Component)message;
-            return component;
+    public static net.minecraft.network.chat.Component fromMessage(com.mojang.brigadier.Message $$0) {
+        if ($$0 instanceof net.minecraft.network.chat.Component) {
+            net.minecraft.network.chat.Component $$1 = (net.minecraft.network.chat.Component)$$0;
+            return $$1;
         }
-        return net.minecraft.network.chat.Component.literal((java.lang.String)message.getString());
+        return net.minecraft.network.chat.Component.literal((java.lang.String)$$0.getString());
     }
 
     public static boolean isTranslationResolvable(@javax.annotation.Nullable net.minecraft.network.chat.Component $$0) {