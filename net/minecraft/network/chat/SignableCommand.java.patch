--- net/minecraft/network/chat/SignableCommand.java
+++ net/minecraft/network/chat/SignableCommand.java
@@ -1,0 +1,60 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.network.chat;
+
+public class net.minecraft.network.chat.SignableCommand<S>
+extends java.lang.Record
+ {
+    public java.util.List<net.minecraft.network.chat.SignableCommand$Argument<S>> arguments;
+
+    public net.minecraft.network.chat.SignableCommand(java.util.List<net.minecraft.network.chat.SignableCommand$Argument<S>> $$0) {
+        this.arguments = $$0;
+    }
+
+    public static <S> net.minecraft.network.chat.SignableCommand<S> of(com.mojang.brigadier.ParseResults<S> $$0) {
+        com.mojang.brigadier.context.CommandContextBuilder $$5;
+        com.mojang.brigadier.context.CommandContextBuilder $$2;
+        java.lang.String $$1 = $$0.getReader().getString();
+        com.mojang.brigadier.context.CommandContextBuilder $$3 = $$2 = $$0.getContext();
+        java.util.List $$4 = net.minecraft.network.chat.SignableCommand.collectArguments((java.lang.String)$$1, (com.mojang.brigadier.context.CommandContextBuilder)$$3);
+        while (($$5 = $$3.getChild()) != null) {
+            boolean $$6;
+            boolean bl = $$6 = $$5.getRootNode() != $$2.getRootNode();
+            if (!$$6) break;
+            $$4.addAll((java.util.Collection)net.minecraft.network.chat.SignableCommand.collectArguments((java.lang.String)$$1, (com.mojang.brigadier.context.CommandContextBuilder)$$5));
+            $$3 = $$5;
+        }
+        return new net.minecraft.network.chat.SignableCommand($$4);
+    }
+
+    public static <S> java.util.List<net.minecraft.network.chat.SignableCommand$Argument<S>> collectArguments(java.lang.String $$0, com.mojang.brigadier.context.CommandContextBuilder<S> $$1) {
+        java.util.ArrayList $$2 = new java.util.ArrayList();
+        for (com.mojang.brigadier.context.ParsedCommandNode $$3 : $$1.getNodes()) {
+            com.mojang.brigadier.context.ParsedArgument $$5;
+            com.mojang.brigadier.tree.ArgumentCommandNode $$4;
+            com.mojang.brigadier.tree.CommandNode commandNode = $$3.getNode();
+            if (!(commandNode instanceof com.mojang.brigadier.tree.ArgumentCommandNode) || !(($$4 = (com.mojang.brigadier.tree.ArgumentCommandNode)commandNode).getType() instanceof net.minecraft.commands.arguments.SignedArgument) || ($$5 = (com.mojang.brigadier.context.ParsedArgument)$$1.getArguments().get((java.lang.Object)$$4.getName())) == null) continue;
+            java.lang.String $$6 = $$5.getRange().get($$0);
+            $$2.add((java.lang.Object)new net.minecraft.network.chat.SignableCommand$Argument($$4, $$6));
+        }
+        return $$2;
+    }
+
+    public java.lang.String toString() {
+        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.network.chat.SignableCommand.class, "arguments", "arguments"}, this);
+    }
+
+    public int hashCode() {
+        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.network.chat.SignableCommand.class, "arguments", "arguments"}, this);
+    }
+
+    public boolean equals(java.lang.Object $$0) {
+        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.network.chat.SignableCommand.class, "arguments", "arguments"}, this, $$0);
+    }
+
+    public java.util.List<net.minecraft.network.chat.SignableCommand$Argument<S>> arguments() {
+        return this.arguments;
+    }
+}
+