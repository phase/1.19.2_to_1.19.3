--- net/minecraft/network/chat/Component$Serializer.java
+++ net/minecraft/network/chat/Component$Serializer.java
@@ -122,12 +122,12 @@
         return java.util.Optional.empty();
     }
 
-    public void serializeStyle(net.minecraft.network.chat.Style style, com.google.gson.JsonObject object, com.google.gson.JsonSerializationContext ctx) {
-        com.google.gson.JsonElement jsonElement = ctx.serialize((java.lang.Object)style);
-        if (jsonElement.isJsonObject()) {
-            com.google.gson.JsonObject jsonObject = (com.google.gson.JsonObject)jsonElement;
-            for (java.util.Map$Entry entry : jsonObject.entrySet()) {
-                object.add((java.lang.String)entry.getKey(), (com.google.gson.JsonElement)entry.getValue());
+    public void serializeStyle(net.minecraft.network.chat.Style $$0, com.google.gson.JsonObject $$1, com.google.gson.JsonSerializationContext $$2) {
+        com.google.gson.JsonElement $$3 = $$2.serialize((java.lang.Object)$$0);
+        if ($$3.isJsonObject()) {
+            com.google.gson.JsonObject $$4 = (com.google.gson.JsonObject)$$3;
+            for (java.util.Map$Entry $$5 : $$4.entrySet()) {
+                $$1.add((java.lang.String)$$5.getKey(), (com.google.gson.JsonElement)$$5.getValue());
             }
         }
     }
@@ -232,26 +232,26 @@
         $$22.ifPresent($$2 -> $$1.add("separator", this.serialize($$2, (java.lang.reflect.Type)$$2.getClass(), $$0)));
     }
 
-    public static java.lang.String toJson(net.minecraft.network.chat.Component component) {
-        return GSON.toJson((java.lang.Object)component);
+    public static java.lang.String toJson(net.minecraft.network.chat.Component $$0) {
+        return GSON.toJson((java.lang.Object)$$0);
     }
 
     public static java.lang.String toStableJson(net.minecraft.network.chat.Component $$0) {
         return net.minecraft.util.GsonHelper.toStableString((com.google.gson.JsonElement)net.minecraft.network.chat.Component$Serializer.toJsonTree((net.minecraft.network.chat.Component)$$0));
     }
 
-    public static com.google.gson.JsonElement toJsonTree(net.minecraft.network.chat.Component component) {
-        return GSON.toJsonTree((java.lang.Object)component);
+    public static com.google.gson.JsonElement toJsonTree(net.minecraft.network.chat.Component $$0) {
+        return GSON.toJsonTree((java.lang.Object)$$0);
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.network.chat.MutableComponent fromJson(java.lang.String json) {
-        return (net.minecraft.network.chat.MutableComponent)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)GSON, (java.lang.String)json, net.minecraft.network.chat.MutableComponent.class, (boolean)false);
+    public static net.minecraft.network.chat.MutableComponent fromJson(java.lang.String $$0) {
+        return (net.minecraft.network.chat.MutableComponent)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)GSON, (java.lang.String)$$0, net.minecraft.network.chat.MutableComponent.class, (boolean)false);
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.network.chat.MutableComponent fromJson(com.google.gson.JsonElement json) {
-        return (net.minecraft.network.chat.MutableComponent)GSON.fromJson(json, net.minecraft.network.chat.MutableComponent.class);
+    public static net.minecraft.network.chat.MutableComponent fromJson(com.google.gson.JsonElement $$0) {
+        return (net.minecraft.network.chat.MutableComponent)GSON.fromJson($$0, net.minecraft.network.chat.MutableComponent.class);
     }
 
     @javax.annotation.Nullable
@@ -259,25 +259,25 @@
         return (net.minecraft.network.chat.MutableComponent)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)GSON, (java.lang.String)$$0, net.minecraft.network.chat.MutableComponent.class, (boolean)true);
     }
 
-    public static net.minecraft.network.chat.MutableComponent fromJson(com.mojang.brigadier.StringReader reader) {
+    public static net.minecraft.network.chat.MutableComponent fromJson(com.mojang.brigadier.StringReader $$0) {
         try {
-            com.google.gson.stream.JsonReader jsonReader = new com.google.gson.stream.JsonReader((java.io.Reader)new java.io.StringReader(reader.getRemaining()));
-            jsonReader.setLenient(false);
-            net.minecraft.network.chat.MutableComponent mutableComponent = (net.minecraft.network.chat.MutableComponent)GSON.getAdapter(net.minecraft.network.chat.MutableComponent.class).read(jsonReader);
-            reader.setCursor(reader.getCursor() + net.minecraft.network.chat.Component$Serializer.getPos((com.google.gson.stream.JsonReader)jsonReader));
-            return mutableComponent;
+            com.google.gson.stream.JsonReader $$1 = new com.google.gson.stream.JsonReader((java.io.Reader)new java.io.StringReader($$0.getRemaining()));
+            $$1.setLenient(false);
+            net.minecraft.network.chat.MutableComponent $$2 = (net.minecraft.network.chat.MutableComponent)GSON.getAdapter(net.minecraft.network.chat.MutableComponent.class).read($$1);
+            $$0.setCursor($$0.getCursor() + net.minecraft.network.chat.Component$Serializer.getPos((com.google.gson.stream.JsonReader)$$1));
+            return $$2;
         }
-        catch (java.io.IOException | java.lang.StackOverflowError throwable) {
-            throw new com.google.gson.JsonParseException(throwable);
+        catch (java.io.IOException | java.lang.StackOverflowError $$3) {
+            throw new com.google.gson.JsonParseException($$3);
         }
     }
 
-    public static int getPos(com.google.gson.stream.JsonReader reader) {
+    public static int getPos(com.google.gson.stream.JsonReader $$0) {
         try {
-            return JSON_READER_POS.getInt((java.lang.Object)reader) - JSON_READER_LINESTART.getInt((java.lang.Object)reader) + 1;
+            return JSON_READER_POS.getInt((java.lang.Object)$$0) - JSON_READER_LINESTART.getInt((java.lang.Object)$$0) + 1;
         }
-        catch (java.lang.IllegalAccessException illegalAccessException) {
-            throw new java.lang.IllegalStateException("Couldn't read position of JsonReader", (java.lang.Throwable)illegalAccessException);
+        catch (java.lang.IllegalAccessException $$1) {
+            throw new java.lang.IllegalStateException("Couldn't read position of JsonReader", (java.lang.Throwable)$$1);
         }
     }
 