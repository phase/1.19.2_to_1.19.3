--- net/minecraft/network/chat/PreviewableCommand.java
+++ net/minecraft/network/chat/PreviewableCommand.java
@@ -1,68 +1,0 @@
-/*
- * Decompiled with CFR 0.151.
- */
-package net.minecraft.network.chat;
-
-public class net.minecraft.network.chat.PreviewableCommand<S>
-extends java.lang.Record
- {
-    public java.util.List<net.minecraft.network.chat.PreviewableCommand$Argument<S>> arguments;
-
-    public net.minecraft.network.chat.PreviewableCommand(java.util.List<net.minecraft.network.chat.PreviewableCommand$Argument<S>> $$0) {
-        this.arguments = $$0;
-    }
-
-    public static <S> net.minecraft.network.chat.PreviewableCommand<S> of(com.mojang.brigadier.ParseResults<S> $$0) {
-        com.mojang.brigadier.context.CommandContextBuilder $$4;
-        com.mojang.brigadier.context.CommandContextBuilder $$1;
-        com.mojang.brigadier.context.CommandContextBuilder $$2 = $$1 = $$0.getContext();
-        java.util.List $$3 = net.minecraft.network.chat.PreviewableCommand.collectArguments((com.mojang.brigadier.context.CommandContextBuilder)$$2);
-        while (($$4 = $$2.getChild()) != null) {
-            boolean $$5;
-            boolean bl = $$5 = $$4.getRootNode() != $$1.getRootNode();
-            if (!$$5) break;
-            $$3.addAll((java.util.Collection)net.minecraft.network.chat.PreviewableCommand.collectArguments((com.mojang.brigadier.context.CommandContextBuilder)$$4));
-            $$2 = $$4;
-        }
-        return new net.minecraft.network.chat.PreviewableCommand($$3);
-    }
-
-    public static <S> java.util.List<net.minecraft.network.chat.PreviewableCommand$Argument<S>> collectArguments(com.mojang.brigadier.context.CommandContextBuilder<S> $$0) {
-        java.util.ArrayList $$1 = new java.util.ArrayList();
-        for (com.mojang.brigadier.context.ParsedCommandNode $$2 : $$0.getNodes()) {
-            com.mojang.brigadier.tree.ArgumentCommandNode $$3;
-            com.mojang.brigadier.tree.CommandNode commandNode = $$2.getNode();
-            if (!(commandNode instanceof com.mojang.brigadier.tree.ArgumentCommandNode) || !((commandNode = ($$3 = (com.mojang.brigadier.tree.ArgumentCommandNode)commandNode).getType()) instanceof net.minecraft.commands.arguments.PreviewedArgument)) continue;
-            net.minecraft.commands.arguments.PreviewedArgument $$4 = (net.minecraft.commands.arguments.PreviewedArgument)commandNode;
-            com.mojang.brigadier.context.ParsedArgument $$5 = (com.mojang.brigadier.context.ParsedArgument)$$0.getArguments().get((java.lang.Object)$$3.getName());
-            if ($$5 == null) continue;
-            $$1.add((java.lang.Object)new net.minecraft.network.chat.PreviewableCommand$Argument($$3, $$5, $$4));
-        }
-        return $$1;
-    }
-
-    public boolean isPreviewed(com.mojang.brigadier.tree.CommandNode<?> $$0) {
-        for (net.minecraft.network.chat.PreviewableCommand$Argument $$1 : this.arguments) {
-            if ($$1.node() != $$0) continue;
-            return true;
-        }
-        return false;
-    }
-
-    public java.lang.String toString() {
-        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.network.chat.PreviewableCommand.class, "arguments", "arguments"}, this);
-    }
-
-    public int hashCode() {
-        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.network.chat.PreviewableCommand.class, "arguments", "arguments"}, this);
-    }
-
-    public boolean equals(java.lang.Object $$0) {
-        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.network.chat.PreviewableCommand.class, "arguments", "arguments"}, this, $$0);
-    }
-
-    public java.util.List<net.minecraft.network.chat.PreviewableCommand$Argument<S>> arguments() {
-        return this.arguments;
-    }
-}
-