--- net/minecraft/network/chat/Style$Serializer.java
+++ net/minecraft/network/chat/Style$Serializer.java
@@ -33,61 +33,61 @@
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.resources.ResourceLocation getFont(com.google.gson.JsonObject json) {
-        if (json.has("font")) {
-            java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)json, (java.lang.String)"font");
+    public static net.minecraft.resources.ResourceLocation getFont(com.google.gson.JsonObject $$0) {
+        if ($$0.has("font")) {
+            java.lang.String $$1 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"font");
             try {
-                return new net.minecraft.resources.ResourceLocation(string);
+                return new net.minecraft.resources.ResourceLocation($$1);
             }
-            catch (net.minecraft.ResourceLocationException resourceLocationException) {
-                throw new com.google.gson.JsonSyntaxException("Invalid font name: " + string);
+            catch (net.minecraft.ResourceLocationException $$2) {
+                throw new com.google.gson.JsonSyntaxException("Invalid font name: " + $$1);
             }
         }
         return null;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.network.chat.HoverEvent getHoverEvent(com.google.gson.JsonObject json) {
-        com.google.gson.JsonObject jsonObject;
-        net.minecraft.network.chat.HoverEvent hoverEvent;
-        if (json.has("hoverEvent") && (hoverEvent = net.minecraft.network.chat.HoverEvent.deserialize((com.google.gson.JsonObject)(jsonObject = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)json, (java.lang.String)"hoverEvent")))) != null && hoverEvent.getAction().isAllowedFromServer()) {
-            return hoverEvent;
+    public static net.minecraft.network.chat.HoverEvent getHoverEvent(com.google.gson.JsonObject $$0) {
+        com.google.gson.JsonObject $$1;
+        net.minecraft.network.chat.HoverEvent $$2;
+        if ($$0.has("hoverEvent") && ($$2 = net.minecraft.network.chat.HoverEvent.deserialize((com.google.gson.JsonObject)($$1 = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$0, (java.lang.String)"hoverEvent")))) != null && $$2.getAction().isAllowedFromServer()) {
+            return $$2;
         }
         return null;
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.network.chat.ClickEvent getClickEvent(com.google.gson.JsonObject json) {
-        if (json.has("clickEvent")) {
-            com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)json, (java.lang.String)"clickEvent");
-            java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObject, (java.lang.String)"action", null);
-            net.minecraft.network.chat.ClickEvent$Action action = string == null ? null : net.minecraft.network.chat.ClickEvent$Action.getByName((java.lang.String)string);
-            java.lang.String string2 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObject, (java.lang.String)"value", null);
-            if (action != null && string2 != null && action.isAllowedFromServer()) {
-                return new net.minecraft.network.chat.ClickEvent(action, string2);
+    public static net.minecraft.network.chat.ClickEvent getClickEvent(com.google.gson.JsonObject $$0) {
+        if ($$0.has("clickEvent")) {
+            com.google.gson.JsonObject $$1 = net.minecraft.util.GsonHelper.getAsJsonObject((com.google.gson.JsonObject)$$0, (java.lang.String)"clickEvent");
+            java.lang.String $$2 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$1, (java.lang.String)"action", null);
+            net.minecraft.network.chat.ClickEvent$Action $$3 = $$2 == null ? null : net.minecraft.network.chat.ClickEvent$Action.getByName((java.lang.String)$$2);
+            java.lang.String $$4 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$1, (java.lang.String)"value", null);
+            if ($$3 != null && $$4 != null && $$3.isAllowedFromServer()) {
+                return new net.minecraft.network.chat.ClickEvent($$3, $$4);
             }
         }
         return null;
     }
 
     @javax.annotation.Nullable
-    public static java.lang.String getInsertion(com.google.gson.JsonObject json) {
-        return net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)json, (java.lang.String)"insertion", null);
+    public static java.lang.String getInsertion(com.google.gson.JsonObject $$0) {
+        return net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"insertion", null);
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.network.chat.TextColor getTextColor(com.google.gson.JsonObject json) {
-        if (json.has("color")) {
-            java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)json, (java.lang.String)"color");
-            return net.minecraft.network.chat.TextColor.parseColor((java.lang.String)string);
+    public static net.minecraft.network.chat.TextColor getTextColor(com.google.gson.JsonObject $$0) {
+        if ($$0.has("color")) {
+            java.lang.String $$1 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$0, (java.lang.String)"color");
+            return net.minecraft.network.chat.TextColor.parseColor((java.lang.String)$$1);
         }
         return null;
     }
 
     @javax.annotation.Nullable
-    public static java.lang.Boolean getOptionalFlag(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return json.get(memberName).getAsBoolean();
+    public static java.lang.Boolean getOptionalFlag(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return $$0.get($$1).getAsBoolean();
         }
         return null;
     }