--- net/minecraft/network/chat/HoverEvent$ItemStackInfo.java
+++ net/minecraft/network/chat/HoverEvent$ItemStackInfo.java
@@ -12,14 +12,14 @@
     @javax.annotation.Nullable
     public net.minecraft.world.item.ItemStack itemStack;
 
-    public net.minecraft.network.chat.HoverEvent$ItemStackInfo(net.minecraft.world.item.Item item, int count, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag tag) {
-        this.item = item;
-        this.count = count;
-        this.tag = tag;
+    public net.minecraft.network.chat.HoverEvent$ItemStackInfo(net.minecraft.world.item.Item $$0, int $$1, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$2) {
+        this.item = $$0;
+        this.count = $$1;
+        this.tag = $$2;
     }
 
-    public net.minecraft.network.chat.HoverEvent$ItemStackInfo(net.minecraft.world.item.ItemStack stack) {
-        this(stack.getItem(), stack.getCount(), stack.getTag() != null ? stack.getTag().copy() : null);
+    public net.minecraft.network.chat.HoverEvent$ItemStackInfo(net.minecraft.world.item.ItemStack $$0) {
+        this($$0.getItem(), $$0.getCount(), $$0.getTag() != null ? $$0.getTag().copy() : null);
     }
 
     public boolean equals(java.lang.Object $$0) {
@@ -50,34 +50,34 @@
         return this.itemStack;
     }
 
-    public static net.minecraft.network.chat.HoverEvent$ItemStackInfo create(com.google.gson.JsonElement element) {
-        if (element.isJsonPrimitive()) {
-            return new net.minecraft.network.chat.HoverEvent$ItemStackInfo((net.minecraft.world.item.Item)net.minecraft.core.Registry.ITEM.get(new net.minecraft.resources.ResourceLocation(element.getAsString())), 1, null);
+    public static net.minecraft.network.chat.HoverEvent$ItemStackInfo create(com.google.gson.JsonElement $$0) {
+        if ($$0.isJsonPrimitive()) {
+            return new net.minecraft.network.chat.HoverEvent$ItemStackInfo((net.minecraft.world.item.Item)net.minecraft.core.Registry.ITEM.get(new net.minecraft.resources.ResourceLocation($$0.getAsString())), 1, null);
         }
-        com.google.gson.JsonObject jsonObject = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)element, (java.lang.String)"item");
-        net.minecraft.world.item.Item item = (net.minecraft.world.item.Item)net.minecraft.core.Registry.ITEM.get(new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObject, (java.lang.String)"id")));
-        int n = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)jsonObject, (java.lang.String)"count", (int)1);
-        if (jsonObject.has("tag")) {
-            java.lang.String string = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)jsonObject, (java.lang.String)"tag");
+        com.google.gson.JsonObject $$1 = net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$0, (java.lang.String)"item");
+        net.minecraft.world.item.Item $$2 = (net.minecraft.world.item.Item)net.minecraft.core.Registry.ITEM.get(new net.minecraft.resources.ResourceLocation(net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$1, (java.lang.String)"id")));
+        int $$3 = net.minecraft.util.GsonHelper.getAsInt((com.google.gson.JsonObject)$$1, (java.lang.String)"count", (int)1);
+        if ($$1.has("tag")) {
+            java.lang.String $$4 = net.minecraft.util.GsonHelper.getAsString((com.google.gson.JsonObject)$$1, (java.lang.String)"tag");
             try {
-                net.minecraft.nbt.CompoundTag compoundTag = net.minecraft.nbt.TagParser.parseTag((java.lang.String)string);
-                return new net.minecraft.network.chat.HoverEvent$ItemStackInfo(item, n, compoundTag);
+                net.minecraft.nbt.CompoundTag $$5 = net.minecraft.nbt.TagParser.parseTag((java.lang.String)$$4);
+                return new net.minecraft.network.chat.HoverEvent$ItemStackInfo($$2, $$3, $$5);
             }
-            catch (com.mojang.brigadier.exceptions.CommandSyntaxException commandSyntaxException) {
-                net.minecraft.network.chat.HoverEvent.LOGGER.warn("Failed to parse tag: {}", (java.lang.Object)string, (java.lang.Object)((java.lang.Object)commandSyntaxException));
+            catch (com.mojang.brigadier.exceptions.CommandSyntaxException $$6) {
+                net.minecraft.network.chat.HoverEvent.LOGGER.warn("Failed to parse tag: {}", (java.lang.Object)$$4, (java.lang.Object)((java.lang.Object)$$6));
             }
         }
-        return new net.minecraft.network.chat.HoverEvent$ItemStackInfo(item, n, null);
+        return new net.minecraft.network.chat.HoverEvent$ItemStackInfo($$2, $$3, null);
     }
 
     @javax.annotation.Nullable
-    public static net.minecraft.network.chat.HoverEvent$ItemStackInfo create(net.minecraft.network.chat.Component component) {
+    public static net.minecraft.network.chat.HoverEvent$ItemStackInfo create(net.minecraft.network.chat.Component $$0) {
         try {
-            net.minecraft.nbt.CompoundTag compoundTag = net.minecraft.nbt.TagParser.parseTag((java.lang.String)component.getString());
-            return new net.minecraft.network.chat.HoverEvent$ItemStackInfo(net.minecraft.world.item.ItemStack.of((net.minecraft.nbt.CompoundTag)compoundTag));
+            net.minecraft.nbt.CompoundTag $$1 = net.minecraft.nbt.TagParser.parseTag((java.lang.String)$$0.getString());
+            return new net.minecraft.network.chat.HoverEvent$ItemStackInfo(net.minecraft.world.item.ItemStack.of((net.minecraft.nbt.CompoundTag)$$1));
         }
-        catch (com.mojang.brigadier.exceptions.CommandSyntaxException commandSyntaxException) {
-            net.minecraft.network.chat.HoverEvent.LOGGER.warn("Failed to parse item tag: {}", (java.lang.Object)component, (java.lang.Object)((java.lang.Object)commandSyntaxException));
+        catch (com.mojang.brigadier.exceptions.CommandSyntaxException $$2) {
+            net.minecraft.network.chat.HoverEvent.LOGGER.warn("Failed to parse item tag: {}", (java.lang.Object)$$0, (java.lang.Object)((java.lang.Object)$$2));
             return null;
         }
     }