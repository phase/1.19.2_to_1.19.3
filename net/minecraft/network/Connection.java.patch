--- net/minecraft/network/Connection.java
+++ net/minecraft/network/Connection.java
@@ -48,8 +48,8 @@
         }
     }
 
-    public void setProtocol(net.minecraft.network.ConnectionProtocol newState) {
-        this.channel.attr(ATTRIBUTE_PROTOCOL).set((java.lang.Object)newState);
+    public void setProtocol(net.minecraft.network.ConnectionProtocol $$0) {
+        this.channel.attr(ATTRIBUTE_PROTOCOL).set((java.lang.Object)$$0);
         this.channel.config().setAutoRead(true);
         LOGGER.debug("Enabled auto read");
     }
@@ -108,13 +108,13 @@
         $$0.handle($$1);
     }
 
-    public void setListener(net.minecraft.network.PacketListener handler) {
-        org.apache.commons.lang3.Validate.notNull((java.lang.Object)handler, (java.lang.String)"packetListener", (java.lang.Object[])new java.lang.Object[0]);
-        this.packetListener = handler;
+    public void setListener(net.minecraft.network.PacketListener $$0) {
+        org.apache.commons.lang3.Validate.notNull((java.lang.Object)$$0, (java.lang.String)"packetListener", (java.lang.Object[])new java.lang.Object[0]);
+        this.packetListener = $$0;
     }
 
-    public void send(net.minecraft.network.protocol.Packet<?> packet) {
-        this.send(packet, null);
+    public void send(net.minecraft.network.protocol.Packet<?> $$0) {
+        this.send($$0, null);
     }
 
     public void send(net.minecraft.network.protocol.Packet<?> $$0, @javax.annotation.Nullable net.minecraft.network.PacketSendListener $$1) {
@@ -211,10 +211,10 @@
         return this.address;
     }
 
-    public void disconnect(net.minecraft.network.chat.Component message) {
+    public void disconnect(net.minecraft.network.chat.Component $$0) {
         if (this.channel.isOpen()) {
             this.channel.close().awaitUninterruptibly();
-            this.disconnectedReason = message;
+            this.disconnectedReason = $$0;
         }
     }
 
@@ -245,16 +245,16 @@
         return $$2;
     }
 
-    public static net.minecraft.network.Connection connectToLocalServer(java.net.SocketAddress address) {
-        net.minecraft.network.Connection connection = new net.minecraft.network.Connection(net.minecraft.network.protocol.PacketFlow.CLIENTBOUND);
-        ((io.netty.bootstrap.Bootstrap)((io.netty.bootstrap.Bootstrap)((io.netty.bootstrap.Bootstrap)new io.netty.bootstrap.Bootstrap().group((io.netty.channel.EventLoopGroup)LOCAL_WORKER_GROUP.get())).handler((io.netty.channel.ChannelHandler)new /* Unavailable Anonymous Inner Class!! */)).channel(io.netty.channel.local.LocalChannel.class)).connect(address).syncUninterruptibly();
-        return connection;
+    public static net.minecraft.network.Connection connectToLocalServer(java.net.SocketAddress $$0) {
+        net.minecraft.network.Connection $$1 = new net.minecraft.network.Connection(net.minecraft.network.protocol.PacketFlow.CLIENTBOUND);
+        ((io.netty.bootstrap.Bootstrap)((io.netty.bootstrap.Bootstrap)((io.netty.bootstrap.Bootstrap)new io.netty.bootstrap.Bootstrap().group((io.netty.channel.EventLoopGroup)LOCAL_WORKER_GROUP.get())).handler((io.netty.channel.ChannelHandler)new /* Unavailable Anonymous Inner Class!! */)).channel(io.netty.channel.local.LocalChannel.class)).connect($$0).syncUninterruptibly();
+        return $$1;
     }
 
-    public void setEncryptionKey(javax.crypto.Cipher decryptingCipher, javax.crypto.Cipher encryptingCipher) {
+    public void setEncryptionKey(javax.crypto.Cipher $$0, javax.crypto.Cipher $$1) {
         this.encrypted = true;
-        this.channel.pipeline().addBefore("splitter", "decrypt", (io.netty.channel.ChannelHandler)new net.minecraft.network.CipherDecoder(decryptingCipher));
-        this.channel.pipeline().addBefore("prepender", "encrypt", (io.netty.channel.ChannelHandler)new net.minecraft.network.CipherEncoder(encryptingCipher));
+        this.channel.pipeline().addBefore("splitter", "decrypt", (io.netty.channel.ChannelHandler)new net.minecraft.network.CipherDecoder($$0));
+        this.channel.pipeline().addBefore("prepender", "encrypt", (io.netty.channel.ChannelHandler)new net.minecraft.network.CipherEncoder($$1));
     }
 
     public boolean isEncrypted() {