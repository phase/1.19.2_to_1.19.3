--- net/minecraft/network/CipherBase.java
+++ net/minecraft/network/CipherBase.java
@@ -15,31 +15,31 @@
         this.cipher = $$0;
     }
 
-    public byte[] bufToByte(io.netty.buffer.ByteBuf buffer) {
-        int n = buffer.readableBytes();
-        if (this.heapIn.length < n) {
-            this.heapIn = new byte[n];
+    public byte[] bufToByte(io.netty.buffer.ByteBuf $$0) {
+        int $$1 = $$0.readableBytes();
+        if (this.heapIn.length < $$1) {
+            this.heapIn = new byte[$$1];
         }
-        buffer.readBytes(this.heapIn, 0, n);
+        $$0.readBytes(this.heapIn, 0, $$1);
         return this.heapIn;
     }
 
-    public io.netty.buffer.ByteBuf decipher(io.netty.channel.ChannelHandlerContext ctx, io.netty.buffer.ByteBuf buffer) throws javax.crypto.ShortBufferException {
-        int n = buffer.readableBytes();
-        byte[] byArray = this.bufToByte(buffer);
-        io.netty.buffer.ByteBuf byteBuf = ctx.alloc().heapBuffer(this.cipher.getOutputSize(n));
-        byteBuf.writerIndex(this.cipher.update(byArray, 0, n, byteBuf.array(), byteBuf.arrayOffset()));
-        return byteBuf;
+    public io.netty.buffer.ByteBuf decipher(io.netty.channel.ChannelHandlerContext $$0, io.netty.buffer.ByteBuf $$1) throws javax.crypto.ShortBufferException {
+        int $$2 = $$1.readableBytes();
+        byte[] $$3 = this.bufToByte($$1);
+        io.netty.buffer.ByteBuf $$4 = $$0.alloc().heapBuffer(this.cipher.getOutputSize($$2));
+        $$4.writerIndex(this.cipher.update($$3, 0, $$2, $$4.array(), $$4.arrayOffset()));
+        return $$4;
     }
 
-    public void encipher(io.netty.buffer.ByteBuf input, io.netty.buffer.ByteBuf out) throws javax.crypto.ShortBufferException {
-        int n = input.readableBytes();
-        byte[] byArray = this.bufToByte(input);
-        int n2 = this.cipher.getOutputSize(n);
-        if (this.heapOut.length < n2) {
-            this.heapOut = new byte[n2];
+    public void encipher(io.netty.buffer.ByteBuf $$0, io.netty.buffer.ByteBuf $$1) throws javax.crypto.ShortBufferException {
+        int $$2 = $$0.readableBytes();
+        byte[] $$3 = this.bufToByte($$0);
+        int $$4 = this.cipher.getOutputSize($$2);
+        if (this.heapOut.length < $$4) {
+            this.heapOut = new byte[$$4];
         }
-        out.writeBytes(this.heapOut, 0, this.cipher.update(byArray, 0, n, this.heapOut));
+        $$1.writeBytes(this.heapOut, 0, this.cipher.update($$3, 0, $$2, this.heapOut));
     }
 }
 