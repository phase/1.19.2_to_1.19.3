--- net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket.java
+++ net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket.java
@@ -11,15 +11,15 @@
     public java.util.Set<net.minecraft.resources.ResourceLocation> removed;
     public java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.advancements.AdvancementProgress> progress;
 
-    public net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket(boolean reset, java.util.Collection<net.minecraft.advancements.Advancement> added, java.util.Set<net.minecraft.resources.ResourceLocation> removed, java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.advancements.AdvancementProgress> progress) {
-        this.reset = reset;
-        com.google.common.collect.ImmutableMap$Builder builder = com.google.common.collect.ImmutableMap.builder();
-        for (net.minecraft.advancements.Advancement advancement : added) {
-            builder.put((java.lang.Object)advancement.getId(), (java.lang.Object)advancement.deconstruct());
+    public net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket(boolean $$0, java.util.Collection<net.minecraft.advancements.Advancement> $$1, java.util.Set<net.minecraft.resources.ResourceLocation> $$2, java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.advancements.AdvancementProgress> $$3) {
+        this.reset = $$0;
+        com.google.common.collect.ImmutableMap$Builder $$4 = com.google.common.collect.ImmutableMap.builder();
+        for (net.minecraft.advancements.Advancement $$5 : $$1) {
+            $$4.put((java.lang.Object)$$5.getId(), (java.lang.Object)$$5.deconstruct());
         }
-        this.added = builder.build();
-        this.removed = com.google.common.collect.ImmutableSet.copyOf(removed);
-        this.progress = com.google.common.collect.ImmutableMap.copyOf(progress);
+        this.added = $$4.build();
+        this.removed = com.google.common.collect.ImmutableSet.copyOf($$2);
+        this.progress = com.google.common.collect.ImmutableMap.copyOf($$3);
     }
 
     public net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket(net.minecraft.network.FriendlyByteBuf $$0) {
@@ -29,15 +29,15 @@
         this.progress = $$0.readMap(net.minecraft.network.FriendlyByteBuf::readResourceLocation, net.minecraft.advancements.AdvancementProgress::fromNetwork);
     }
 
-    public void write(net.minecraft.network.FriendlyByteBuf buffer) {
-        buffer.writeBoolean(this.reset);
-        buffer.writeMap(this.added, net.minecraft.network.FriendlyByteBuf::writeResourceLocation, ($$0, $$1) -> $$1.serializeToNetwork($$0));
-        buffer.writeCollection((java.util.Collection)this.removed, net.minecraft.network.FriendlyByteBuf::writeResourceLocation);
-        buffer.writeMap(this.progress, net.minecraft.network.FriendlyByteBuf::writeResourceLocation, ($$0, $$1) -> $$1.serializeToNetwork($$0));
+    public void write(net.minecraft.network.FriendlyByteBuf $$02) {
+        $$02.writeBoolean(this.reset);
+        $$02.writeMap(this.added, net.minecraft.network.FriendlyByteBuf::writeResourceLocation, ($$0, $$1) -> $$1.serializeToNetwork($$0));
+        $$02.writeCollection((java.util.Collection)this.removed, net.minecraft.network.FriendlyByteBuf::writeResourceLocation);
+        $$02.writeMap(this.progress, net.minecraft.network.FriendlyByteBuf::writeResourceLocation, ($$0, $$1) -> $$1.serializeToNetwork($$0));
     }
 
-    public void handle(net.minecraft.network.protocol.game.ClientGamePacketListener handler) {
-        handler.handleUpdateAdvancementsPacket(this);
+    public void handle(net.minecraft.network.protocol.game.ClientGamePacketListener $$0) {
+        $$0.handleUpdateAdvancementsPacket(this);
     }
 
     public java.util.Map<net.minecraft.resources.ResourceLocation, net.minecraft.advancements.Advancement$Builder> getAdded() {