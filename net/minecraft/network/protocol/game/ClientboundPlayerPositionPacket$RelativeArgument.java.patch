--- net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument.java
+++ net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument.java
@@ -11,6 +11,8 @@
     public static /* enum */ net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument Z;
     public static /* enum */ net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument Y_ROT;
     public static /* enum */ net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument X_ROT;
+    public static java.util.Set<net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument> ALL;
+    public static java.util.Set<net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument> ROTATION;
     public int bit;
     public static /* synthetic */ net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument[] $VALUES;
 
@@ -31,25 +33,25 @@
         return 1 << this.bit;
     }
 
-    public boolean isSet(int flags) {
-        return (flags & this.getMask()) == this.getMask();
+    public boolean isSet(int $$0) {
+        return ($$0 & this.getMask()) == this.getMask();
     }
 
-    public static java.util.Set<net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument> unpack(int flags) {
-        java.util.EnumSet enumSet = java.util.EnumSet.noneOf(net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument.class);
-        for (net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument relativeArgument : net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument.values()) {
-            if (!relativeArgument.isSet(flags)) continue;
-            enumSet.add((java.lang.Object)relativeArgument);
+    public static java.util.Set<net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument> unpack(int $$0) {
+        java.util.EnumSet $$1 = java.util.EnumSet.noneOf(net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument.class);
+        for (net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument $$2 : net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument.values()) {
+            if (!$$2.isSet($$0)) continue;
+            $$1.add((java.lang.Object)$$2);
         }
-        return enumSet;
+        return $$1;
     }
 
-    public static int pack(java.util.Set<net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument> flags) {
-        int n = 0;
-        for (net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument relativeArgument : flags) {
-            n |= relativeArgument.getMask();
+    public static int pack(java.util.Set<net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument> $$0) {
+        int $$1 = 0;
+        for (net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument $$2 : $$0) {
+            $$1 |= $$2.getMask();
         }
-        return n;
+        return $$1;
     }
 
     public static /* synthetic */ net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument[] $values() {
@@ -63,6 +65,8 @@
         Y_ROT = new net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument("Y_ROT", 3, 3);
         X_ROT = new net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument("X_ROT", 4, 4);
         $VALUES = net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument.$values();
+        ALL = java.util.Set.of((java.lang.Object[])net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument.values());
+        ROTATION = java.util.Set.of((java.lang.Object)X_ROT, (java.lang.Object)Y_ROT);
     }
 }
 