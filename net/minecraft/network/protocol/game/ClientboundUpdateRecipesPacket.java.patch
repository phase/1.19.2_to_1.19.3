--- net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket.java
+++ net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket.java
@@ -8,30 +8,30 @@
  {
     public java.util.List<net.minecraft.world.item.crafting.Recipe<?>> recipes;
 
-    public net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket(java.util.Collection<net.minecraft.world.item.crafting.Recipe<?>> recipes) {
-        this.recipes = com.google.common.collect.Lists.newArrayList(recipes);
+    public net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket(java.util.Collection<net.minecraft.world.item.crafting.Recipe<?>> $$0) {
+        this.recipes = com.google.common.collect.Lists.newArrayList($$0);
     }
 
     public net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket(net.minecraft.network.FriendlyByteBuf $$0) {
         this.recipes = $$0.readList(net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket::fromNetwork);
     }
 
-    public void write(net.minecraft.network.FriendlyByteBuf buffer) {
-        buffer.writeCollection((java.util.Collection)this.recipes, net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket::toNetwork);
+    public void write(net.minecraft.network.FriendlyByteBuf $$0) {
+        $$0.writeCollection((java.util.Collection)this.recipes, net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket::toNetwork);
     }
 
-    public void handle(net.minecraft.network.protocol.game.ClientGamePacketListener handler) {
-        handler.handleUpdateRecipes(this);
+    public void handle(net.minecraft.network.protocol.game.ClientGamePacketListener $$0) {
+        $$0.handleUpdateRecipes(this);
     }
 
     public java.util.List<net.minecraft.world.item.crafting.Recipe<?>> getRecipes() {
         return this.recipes;
     }
 
-    public static net.minecraft.world.item.crafting.Recipe<?> fromNetwork(net.minecraft.network.FriendlyByteBuf buffer) {
-        net.minecraft.resources.ResourceLocation resourceLocation = buffer.readResourceLocation();
-        net.minecraft.resources.ResourceLocation resourceLocation2 = buffer.readResourceLocation();
-        return ((net.minecraft.world.item.crafting.RecipeSerializer)net.minecraft.core.Registry.RECIPE_SERIALIZER.getOptional(resourceLocation).orElseThrow(() -> new java.lang.IllegalArgumentException("Unknown recipe serializer " + resourceLocation))).fromNetwork(resourceLocation2, buffer);
+    public static net.minecraft.world.item.crafting.Recipe<?> fromNetwork(net.minecraft.network.FriendlyByteBuf $$0) {
+        net.minecraft.resources.ResourceLocation $$1 = $$0.readResourceLocation();
+        net.minecraft.resources.ResourceLocation $$2 = $$0.readResourceLocation();
+        return ((net.minecraft.world.item.crafting.RecipeSerializer)net.minecraft.core.Registry.RECIPE_SERIALIZER.getOptional($$1).orElseThrow(() -> new java.lang.IllegalArgumentException("Unknown recipe serializer " + $$1))).fromNetwork($$2, $$0);
     }
 
     public static <T extends net.minecraft.world.item.crafting.Recipe<?>> void toNetwork(net.minecraft.network.FriendlyByteBuf $$0, T $$1) {