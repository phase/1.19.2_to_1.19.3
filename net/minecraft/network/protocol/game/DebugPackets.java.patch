--- net/minecraft/network/protocol/game/DebugPackets.java
+++ net/minecraft/network/protocol/game/DebugPackets.java
@@ -10,60 +10,60 @@
     public net.minecraft.network.protocol.game.DebugPackets() {
     }
 
-    public static void sendGameTestAddMarker(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos, java.lang.String text, int color, int lifetimeMillis) {
-        net.minecraft.network.FriendlyByteBuf friendlyByteBuf = new net.minecraft.network.FriendlyByteBuf(io.netty.buffer.Unpooled.buffer());
-        friendlyByteBuf.writeBlockPos(pos);
-        friendlyByteBuf.writeInt(color);
-        friendlyByteBuf.writeUtf(text);
-        friendlyByteBuf.writeInt(lifetimeMillis);
-        net.minecraft.network.protocol.game.DebugPackets.sendPacketToAllPlayers((net.minecraft.server.level.ServerLevel)level, (net.minecraft.network.FriendlyByteBuf)friendlyByteBuf, (net.minecraft.resources.ResourceLocation)net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket.DEBUG_GAME_TEST_ADD_MARKER);
+    public static void sendGameTestAddMarker(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1, java.lang.String $$2, int $$3, int $$4) {
+        net.minecraft.network.FriendlyByteBuf $$5 = new net.minecraft.network.FriendlyByteBuf(io.netty.buffer.Unpooled.buffer());
+        $$5.writeBlockPos($$1);
+        $$5.writeInt($$3);
+        $$5.writeUtf($$2);
+        $$5.writeInt($$4);
+        net.minecraft.network.protocol.game.DebugPackets.sendPacketToAllPlayers((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.network.FriendlyByteBuf)$$5, (net.minecraft.resources.ResourceLocation)net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket.DEBUG_GAME_TEST_ADD_MARKER);
     }
 
-    public static void sendGameTestClearPacket(net.minecraft.server.level.ServerLevel level) {
-        net.minecraft.network.FriendlyByteBuf friendlyByteBuf = new net.minecraft.network.FriendlyByteBuf(io.netty.buffer.Unpooled.buffer());
-        net.minecraft.network.protocol.game.DebugPackets.sendPacketToAllPlayers((net.minecraft.server.level.ServerLevel)level, (net.minecraft.network.FriendlyByteBuf)friendlyByteBuf, (net.minecraft.resources.ResourceLocation)net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket.DEBUG_GAME_TEST_CLEAR);
+    public static void sendGameTestClearPacket(net.minecraft.server.level.ServerLevel $$0) {
+        net.minecraft.network.FriendlyByteBuf $$1 = new net.minecraft.network.FriendlyByteBuf(io.netty.buffer.Unpooled.buffer());
+        net.minecraft.network.protocol.game.DebugPackets.sendPacketToAllPlayers((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.network.FriendlyByteBuf)$$1, (net.minecraft.resources.ResourceLocation)net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket.DEBUG_GAME_TEST_CLEAR);
     }
 
-    public static void sendPoiPacketsForChunk(net.minecraft.server.level.ServerLevel level, net.minecraft.world.level.ChunkPos chunkPos) {
+    public static void sendPoiPacketsForChunk(net.minecraft.server.level.ServerLevel $$0, net.minecraft.world.level.ChunkPos $$1) {
     }
 
-    public static void sendPoiAddedPacket(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.network.protocol.game.DebugPackets.sendVillageSectionsPacket((net.minecraft.server.level.ServerLevel)level, (net.minecraft.core.BlockPos)pos);
+    public static void sendPoiAddedPacket(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1) {
+        net.minecraft.network.protocol.game.DebugPackets.sendVillageSectionsPacket((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.core.BlockPos)$$1);
     }
 
-    public static void sendPoiRemovedPacket(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.network.protocol.game.DebugPackets.sendVillageSectionsPacket((net.minecraft.server.level.ServerLevel)level, (net.minecraft.core.BlockPos)pos);
+    public static void sendPoiRemovedPacket(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1) {
+        net.minecraft.network.protocol.game.DebugPackets.sendVillageSectionsPacket((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.core.BlockPos)$$1);
     }
 
-    public static void sendPoiTicketCountPacket(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos) {
-        net.minecraft.network.protocol.game.DebugPackets.sendVillageSectionsPacket((net.minecraft.server.level.ServerLevel)level, (net.minecraft.core.BlockPos)pos);
+    public static void sendPoiTicketCountPacket(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1) {
+        net.minecraft.network.protocol.game.DebugPackets.sendVillageSectionsPacket((net.minecraft.server.level.ServerLevel)$$0, (net.minecraft.core.BlockPos)$$1);
     }
 
-    public static void sendVillageSectionsPacket(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos) {
+    public static void sendVillageSectionsPacket(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1) {
     }
 
-    public static void sendPathFindingPacket(net.minecraft.world.level.Level level, net.minecraft.world.entity.Mob mob, @javax.annotation.Nullable net.minecraft.world.level.pathfinder.Path path, float maxDistanceToWaypoint) {
+    public static void sendPathFindingPacket(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.Mob $$1, @javax.annotation.Nullable net.minecraft.world.level.pathfinder.Path $$2, float $$3) {
     }
 
-    public static void sendNeighborsUpdatePacket(net.minecraft.world.level.Level level, net.minecraft.core.BlockPos pos) {
+    public static void sendNeighborsUpdatePacket(net.minecraft.world.level.Level $$0, net.minecraft.core.BlockPos $$1) {
     }
 
-    public static void sendStructurePacket(net.minecraft.world.level.WorldGenLevel level, net.minecraft.world.level.levelgen.structure.StructureStart structureStart) {
+    public static void sendStructurePacket(net.minecraft.world.level.WorldGenLevel $$0, net.minecraft.world.level.levelgen.structure.StructureStart $$1) {
     }
 
-    public static void sendGoalSelector(net.minecraft.world.level.Level level, net.minecraft.world.entity.Mob mob, net.minecraft.world.entity.ai.goal.GoalSelector goalSelector) {
-        if (!(level instanceof net.minecraft.server.level.ServerLevel)) {
+    public static void sendGoalSelector(net.minecraft.world.level.Level $$0, net.minecraft.world.entity.Mob $$1, net.minecraft.world.entity.ai.goal.GoalSelector $$2) {
+        if (!($$0 instanceof net.minecraft.server.level.ServerLevel)) {
             return;
         }
     }
 
-    public static void sendRaids(net.minecraft.server.level.ServerLevel level, java.util.Collection<net.minecraft.world.entity.raid.Raid> raids) {
+    public static void sendRaids(net.minecraft.server.level.ServerLevel $$0, java.util.Collection<net.minecraft.world.entity.raid.Raid> $$1) {
     }
 
-    public static void sendEntityBrain(net.minecraft.world.entity.LivingEntity livingEntity) {
+    public static void sendEntityBrain(net.minecraft.world.entity.LivingEntity $$0) {
     }
 
-    public static void sendBeeInfo(net.minecraft.world.entity.animal.Bee bee) {
+    public static void sendBeeInfo(net.minecraft.world.entity.animal.Bee $$0) {
     }
 
     public static void sendGameEventInfo(net.minecraft.world.level.Level $$0, net.minecraft.world.level.gameevent.GameEvent $$1, net.minecraft.world.phys.Vec3 $$2) {