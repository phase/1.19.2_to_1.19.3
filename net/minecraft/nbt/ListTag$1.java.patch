--- net/minecraft/nbt/ListTag$1.java
+++ net/minecraft/nbt/ListTag$1.java
@@ -9,23 +9,23 @@
     public net.minecraft.nbt.ListTag$1() {
     }
 
-    public net.minecraft.nbt.ListTag load(java.io.DataInput input, int depth, net.minecraft.nbt.NbtAccounter accounter) throws java.io.IOException {
-        accounter.accountBits(296L);
-        if (depth > 512) {
+    public net.minecraft.nbt.ListTag load(java.io.DataInput $$0, int $$1, net.minecraft.nbt.NbtAccounter $$2) throws java.io.IOException {
+        $$2.accountBits(296L);
+        if ($$1 > 512) {
             throw new java.lang.RuntimeException("Tried to read NBT tag with too high complexity, depth > 512");
         }
-        byte by = input.readByte();
-        int n = input.readInt();
-        if (by == 0 && n > 0) {
+        byte $$3 = $$0.readByte();
+        int $$4 = $$0.readInt();
+        if ($$3 == 0 && $$4 > 0) {
             throw new java.lang.RuntimeException("Missing type on ListTag");
         }
-        accounter.accountBits(32L * (long)n);
-        net.minecraft.nbt.TagType tagType = net.minecraft.nbt.TagTypes.getType((int)by);
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayListWithCapacity((int)n);
-        for (int i = 0; i < n; ++i) {
-            arrayList.add((java.lang.Object)tagType.load(input, depth + 1, accounter));
+        $$2.accountBits(32L * (long)$$4);
+        net.minecraft.nbt.TagType $$5 = net.minecraft.nbt.TagTypes.getType((int)$$3);
+        java.util.ArrayList $$6 = com.google.common.collect.Lists.newArrayListWithCapacity((int)$$4);
+        for (int $$7 = 0; $$7 < $$4; ++$$7) {
+            $$6.add((java.lang.Object)$$5.load($$0, $$1 + 1, $$2));
         }
-        return new net.minecraft.nbt.ListTag((java.util.List)arrayList, by);
+        return new net.minecraft.nbt.ListTag((java.util.List)$$6, $$3);
     }
 
     /*