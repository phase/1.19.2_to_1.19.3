--- net/minecraft/nbt/IntArrayTag.java
+++ net/minecraft/nbt/IntArrayTag.java
@@ -10,27 +10,27 @@
     public static net.minecraft.nbt.TagType<net.minecraft.nbt.IntArrayTag> TYPE;
     public int[] data;
 
-    public net.minecraft.nbt.IntArrayTag(int[] data) {
-        this.data = data;
+    public net.minecraft.nbt.IntArrayTag(int[] $$0) {
+        this.data = $$0;
     }
 
-    public net.minecraft.nbt.IntArrayTag(java.util.List<java.lang.Integer> dataList) {
-        this(net.minecraft.nbt.IntArrayTag.toArray(dataList));
+    public net.minecraft.nbt.IntArrayTag(java.util.List<java.lang.Integer> $$0) {
+        this(net.minecraft.nbt.IntArrayTag.toArray($$0));
     }
 
-    public static int[] toArray(java.util.List<java.lang.Integer> dataList) {
-        int[] nArray = new int[dataList.size()];
-        for (int i = 0; i < dataList.size(); ++i) {
-            java.lang.Integer n = (java.lang.Integer)dataList.get(i);
-            nArray[i] = n == null ? 0 : n;
+    public static int[] toArray(java.util.List<java.lang.Integer> $$0) {
+        int[] $$1 = new int[$$0.size()];
+        for (int $$2 = 0; $$2 < $$0.size(); ++$$2) {
+            java.lang.Integer $$3 = (java.lang.Integer)$$0.get($$2);
+            $$1[$$2] = $$3 == null ? 0 : $$3;
         }
-        return nArray;
+        return $$1;
     }
 
-    public void write(java.io.DataOutput output) throws java.io.IOException {
-        output.writeInt(this.data.length);
-        for (int n : this.data) {
-            output.writeInt(n);
+    public void write(java.io.DataOutput $$0) throws java.io.IOException {
+        $$0.writeInt(this.data.length);
+        for (int $$1 : this.data) {
+            $$0.writeInt($$1);
         }
     }
 
@@ -52,11 +52,11 @@
         return new net.minecraft.nbt.IntArrayTag($$0);
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        return other instanceof net.minecraft.nbt.IntArrayTag && java.util.Arrays.equals((int[])this.data, (int[])((net.minecraft.nbt.IntArrayTag)other).data);
+        return $$0 instanceof net.minecraft.nbt.IntArrayTag && java.util.Arrays.equals((int[])this.data, (int[])((net.minecraft.nbt.IntArrayTag)$$0).data);
     }
 
     public int hashCode() {
@@ -89,17 +89,17 @@
         this.data = org.apache.commons.lang3.ArrayUtils.add((int[])this.data, (int)$$0, (int)$$1.getAsInt());
     }
 
-    public boolean setTag(int index, net.minecraft.nbt.Tag nbt) {
-        if (nbt instanceof net.minecraft.nbt.NumericTag) {
-            this.data[index] = ((net.minecraft.nbt.NumericTag)nbt).getAsInt();
+    public boolean setTag(int $$0, net.minecraft.nbt.Tag $$1) {
+        if ($$1 instanceof net.minecraft.nbt.NumericTag) {
+            this.data[$$0] = ((net.minecraft.nbt.NumericTag)$$1).getAsInt();
             return true;
         }
         return false;
     }
 
-    public boolean addTag(int index, net.minecraft.nbt.Tag nbt) {
-        if (nbt instanceof net.minecraft.nbt.NumericTag) {
-            this.data = org.apache.commons.lang3.ArrayUtils.add((int[])this.data, (int)index, (int)((net.minecraft.nbt.NumericTag)nbt).getAsInt());
+    public boolean addTag(int $$0, net.minecraft.nbt.Tag $$1) {
+        if ($$1 instanceof net.minecraft.nbt.NumericTag) {
+            this.data = org.apache.commons.lang3.ArrayUtils.add((int[])this.data, (int)$$0, (int)((net.minecraft.nbt.NumericTag)$$1).getAsInt());
             return true;
         }
         return false;