--- net/minecraft/nbt/TagParser.java
+++ net/minecraft/nbt/TagParser.java
@@ -26,8 +26,8 @@
     public static java.util.regex.Pattern INT_PATTERN;
     public com.mojang.brigadier.StringReader reader;
 
-    public static net.minecraft.nbt.CompoundTag parseTag(java.lang.String text) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return new net.minecraft.nbt.TagParser(new com.mojang.brigadier.StringReader(text)).readSingleStruct();
+    public static net.minecraft.nbt.CompoundTag parseTag(java.lang.String $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return new net.minecraft.nbt.TagParser(new com.mojang.brigadier.StringReader($$0)).readSingleStruct();
     }
 
     @com.google.common.annotations.VisibleForTesting
@@ -40,8 +40,8 @@
         return $$0;
     }
 
-    public net.minecraft.nbt.TagParser(com.mojang.brigadier.StringReader reader) {
-        this.reader = reader;
+    public net.minecraft.nbt.TagParser(com.mojang.brigadier.StringReader $$0) {
+        this.reader = $$0;
     }
 
     public java.lang.String readKey() throws com.mojang.brigadier.exceptions.CommandSyntaxException {
@@ -66,40 +66,40 @@
         return this.type($$1);
     }
 
-    public net.minecraft.nbt.Tag type(java.lang.String value) {
+    public net.minecraft.nbt.Tag type(java.lang.String $$0) {
         try {
-            if (FLOAT_PATTERN.matcher((java.lang.CharSequence)value).matches()) {
-                return net.minecraft.nbt.FloatTag.valueOf((float)java.lang.Float.parseFloat((java.lang.String)value.substring(0, value.length() - 1)));
+            if (FLOAT_PATTERN.matcher((java.lang.CharSequence)$$0).matches()) {
+                return net.minecraft.nbt.FloatTag.valueOf((float)java.lang.Float.parseFloat((java.lang.String)$$0.substring(0, $$0.length() - 1)));
             }
-            if (BYTE_PATTERN.matcher((java.lang.CharSequence)value).matches()) {
-                return net.minecraft.nbt.ByteTag.valueOf((byte)java.lang.Byte.parseByte((java.lang.String)value.substring(0, value.length() - 1)));
+            if (BYTE_PATTERN.matcher((java.lang.CharSequence)$$0).matches()) {
+                return net.minecraft.nbt.ByteTag.valueOf((byte)java.lang.Byte.parseByte((java.lang.String)$$0.substring(0, $$0.length() - 1)));
             }
-            if (LONG_PATTERN.matcher((java.lang.CharSequence)value).matches()) {
-                return net.minecraft.nbt.LongTag.valueOf((long)java.lang.Long.parseLong((java.lang.String)value.substring(0, value.length() - 1)));
+            if (LONG_PATTERN.matcher((java.lang.CharSequence)$$0).matches()) {
+                return net.minecraft.nbt.LongTag.valueOf((long)java.lang.Long.parseLong((java.lang.String)$$0.substring(0, $$0.length() - 1)));
             }
-            if (SHORT_PATTERN.matcher((java.lang.CharSequence)value).matches()) {
-                return net.minecraft.nbt.ShortTag.valueOf((short)java.lang.Short.parseShort((java.lang.String)value.substring(0, value.length() - 1)));
+            if (SHORT_PATTERN.matcher((java.lang.CharSequence)$$0).matches()) {
+                return net.minecraft.nbt.ShortTag.valueOf((short)java.lang.Short.parseShort((java.lang.String)$$0.substring(0, $$0.length() - 1)));
             }
-            if (INT_PATTERN.matcher((java.lang.CharSequence)value).matches()) {
-                return net.minecraft.nbt.IntTag.valueOf((int)java.lang.Integer.parseInt((java.lang.String)value));
+            if (INT_PATTERN.matcher((java.lang.CharSequence)$$0).matches()) {
+                return net.minecraft.nbt.IntTag.valueOf((int)java.lang.Integer.parseInt((java.lang.String)$$0));
             }
-            if (DOUBLE_PATTERN.matcher((java.lang.CharSequence)value).matches()) {
-                return net.minecraft.nbt.DoubleTag.valueOf((double)java.lang.Double.parseDouble((java.lang.String)value.substring(0, value.length() - 1)));
+            if (DOUBLE_PATTERN.matcher((java.lang.CharSequence)$$0).matches()) {
+                return net.minecraft.nbt.DoubleTag.valueOf((double)java.lang.Double.parseDouble((java.lang.String)$$0.substring(0, $$0.length() - 1)));
             }
-            if (DOUBLE_PATTERN_NOSUFFIX.matcher((java.lang.CharSequence)value).matches()) {
-                return net.minecraft.nbt.DoubleTag.valueOf((double)java.lang.Double.parseDouble((java.lang.String)value));
+            if (DOUBLE_PATTERN_NOSUFFIX.matcher((java.lang.CharSequence)$$0).matches()) {
+                return net.minecraft.nbt.DoubleTag.valueOf((double)java.lang.Double.parseDouble((java.lang.String)$$0));
             }
-            if ("true".equalsIgnoreCase(value)) {
+            if ("true".equalsIgnoreCase($$0)) {
                 return net.minecraft.nbt.ByteTag.ONE;
             }
-            if ("false".equalsIgnoreCase(value)) {
+            if ("false".equalsIgnoreCase($$0)) {
                 return net.minecraft.nbt.ByteTag.ZERO;
             }
         }
         catch (java.lang.NumberFormatException numberFormatException) {
             // empty catch block
         }
-        return net.minecraft.nbt.StringTag.valueOf((java.lang.String)value);
+        return net.minecraft.nbt.StringTag.valueOf((java.lang.String)$$0);
     }
 
     public net.minecraft.nbt.Tag readValue() throws com.mojang.brigadier.exceptions.CommandSyntaxException {
@@ -194,29 +194,29 @@
         throw ERROR_INVALID_ARRAY.createWithContext((com.mojang.brigadier.ImmutableStringReader)this.reader, (java.lang.Object)java.lang.String.valueOf((char)$$1));
     }
 
-    public <T extends java.lang.Number> java.util.List<T> readArray(net.minecraft.nbt.TagType<?> arrayType, net.minecraft.nbt.TagType<?> elementType) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList();
+    public <T extends java.lang.Number> java.util.List<T> readArray(net.minecraft.nbt.TagType<?> $$0, net.minecraft.nbt.TagType<?> $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        java.util.ArrayList $$2 = com.google.common.collect.Lists.newArrayList();
         while (this.reader.peek() != ']') {
-            int n = this.reader.getCursor();
-            net.minecraft.nbt.Tag tag = this.readValue();
-            net.minecraft.nbt.TagType tagType = tag.getType();
-            if (tagType != elementType) {
-                this.reader.setCursor(n);
-                throw ERROR_INSERT_MIXED_ARRAY.createWithContext((com.mojang.brigadier.ImmutableStringReader)this.reader, (java.lang.Object)tagType.getPrettyName(), (java.lang.Object)arrayType.getPrettyName());
+            int $$3 = this.reader.getCursor();
+            net.minecraft.nbt.Tag $$4 = this.readValue();
+            net.minecraft.nbt.TagType $$5 = $$4.getType();
+            if ($$5 != $$1) {
+                this.reader.setCursor($$3);
+                throw ERROR_INSERT_MIXED_ARRAY.createWithContext((com.mojang.brigadier.ImmutableStringReader)this.reader, (java.lang.Object)$$5.getPrettyName(), (java.lang.Object)$$0.getPrettyName());
             }
-            if (elementType == net.minecraft.nbt.ByteTag.TYPE) {
-                arrayList.add((java.lang.Object)((net.minecraft.nbt.NumericTag)tag).getAsByte());
-            } else if (elementType == net.minecraft.nbt.LongTag.TYPE) {
-                arrayList.add((java.lang.Object)((net.minecraft.nbt.NumericTag)tag).getAsLong());
+            if ($$1 == net.minecraft.nbt.ByteTag.TYPE) {
+                $$2.add((java.lang.Object)((net.minecraft.nbt.NumericTag)$$4).getAsByte());
+            } else if ($$1 == net.minecraft.nbt.LongTag.TYPE) {
+                $$2.add((java.lang.Object)((net.minecraft.nbt.NumericTag)$$4).getAsLong());
             } else {
-                arrayList.add((java.lang.Object)((net.minecraft.nbt.NumericTag)tag).getAsInt());
+                $$2.add((java.lang.Object)((net.minecraft.nbt.NumericTag)$$4).getAsInt());
             }
             if (!this.hasElementSeparator()) break;
             if (this.reader.canRead()) continue;
             throw ERROR_EXPECTED_VALUE.createWithContext((com.mojang.brigadier.ImmutableStringReader)this.reader);
         }
         this.expect(']');
-        return arrayList;
+        return $$2;
     }
 
     public boolean hasElementSeparator() {
@@ -229,30 +229,30 @@
         return false;
     }
 
-    public void expect(char expected) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+    public void expect(char $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         this.reader.skipWhitespace();
-        this.reader.expect(expected);
+        this.reader.expect($$0);
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$2(java.lang.Object arrayType) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.invalid", (java.lang.Object[])new java.lang.Object[]{arrayType});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$2(java.lang.Object $$0) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.invalid", (java.lang.Object[])new java.lang.Object[]{$$0});
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$1(java.lang.Object elementType, java.lang.Object arrayType) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.mixed", (java.lang.Object[])new java.lang.Object[]{elementType, arrayType});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$1(java.lang.Object $$0, java.lang.Object $$1) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.mixed", (java.lang.Object[])new java.lang.Object[]{$$0, $$1});
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object listElementType, java.lang.Object elementType) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.list.mixed", (java.lang.Object[])new java.lang.Object[]{listElementType, elementType});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object $$0, java.lang.Object $$1) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.list.mixed", (java.lang.Object[])new java.lang.Object[]{$$0, $$1});
     }
 
     static {
         ERROR_TRAILING_DATA = new com.mojang.brigadier.exceptions.SimpleCommandExceptionType((com.mojang.brigadier.Message)net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.trailing"));
         ERROR_EXPECTED_KEY = new com.mojang.brigadier.exceptions.SimpleCommandExceptionType((com.mojang.brigadier.Message)net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.expected.key"));
         ERROR_EXPECTED_VALUE = new com.mojang.brigadier.exceptions.SimpleCommandExceptionType((com.mojang.brigadier.Message)net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.expected.value"));
-        ERROR_INSERT_MIXED_LIST = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType((listElementType, elementType) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.list.mixed", (java.lang.Object[])new java.lang.Object[]{listElementType, elementType}));
-        ERROR_INSERT_MIXED_ARRAY = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType((elementType, arrayType) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.mixed", (java.lang.Object[])new java.lang.Object[]{elementType, arrayType}));
-        ERROR_INVALID_ARRAY = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType(arrayType -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.invalid", (java.lang.Object[])new java.lang.Object[]{arrayType}));
+        ERROR_INSERT_MIXED_LIST = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType(($$0, $$1) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.list.mixed", (java.lang.Object[])new java.lang.Object[]{$$0, $$1}));
+        ERROR_INSERT_MIXED_ARRAY = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType(($$0, $$1) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.mixed", (java.lang.Object[])new java.lang.Object[]{$$0, $$1}));
+        ERROR_INVALID_ARRAY = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType($$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.nbt.array.invalid", (java.lang.Object[])new java.lang.Object[]{$$0}));
         DOUBLE_PATTERN_NOSUFFIX = java.util.regex.Pattern.compile((java.lang.String)"[-+]?(?:[0-9]+[.]|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?", (int)2);
         DOUBLE_PATTERN = java.util.regex.Pattern.compile((java.lang.String)"[-+]?(?:[0-9]+[.]?|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?d", (int)2);
         FLOAT_PATTERN = java.util.regex.Pattern.compile((java.lang.String)"[-+]?(?:[0-9]+[.]?|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?f", (int)2);