--- net/minecraft/nbt/LongArrayTag.java
+++ net/minecraft/nbt/LongArrayTag.java
@@ -10,31 +10,31 @@
     public static net.minecraft.nbt.TagType<net.minecraft.nbt.LongArrayTag> TYPE;
     public long[] data;
 
-    public net.minecraft.nbt.LongArrayTag(long[] data) {
-        this.data = data;
+    public net.minecraft.nbt.LongArrayTag(long[] $$0) {
+        this.data = $$0;
     }
 
-    public net.minecraft.nbt.LongArrayTag(it.unimi.dsi.fastutil.longs.LongSet dataSet) {
-        this.data = dataSet.toLongArray();
+    public net.minecraft.nbt.LongArrayTag(it.unimi.dsi.fastutil.longs.LongSet $$0) {
+        this.data = $$0.toLongArray();
     }
 
-    public net.minecraft.nbt.LongArrayTag(java.util.List<java.lang.Long> dataList) {
-        this(net.minecraft.nbt.LongArrayTag.toArray(dataList));
+    public net.minecraft.nbt.LongArrayTag(java.util.List<java.lang.Long> $$0) {
+        this(net.minecraft.nbt.LongArrayTag.toArray($$0));
     }
 
-    public static long[] toArray(java.util.List<java.lang.Long> dataList) {
-        long[] lArray = new long[dataList.size()];
-        for (int i = 0; i < dataList.size(); ++i) {
-            java.lang.Long l = (java.lang.Long)dataList.get(i);
-            lArray[i] = l == null ? 0L : l;
+    public static long[] toArray(java.util.List<java.lang.Long> $$0) {
+        long[] $$1 = new long[$$0.size()];
+        for (int $$2 = 0; $$2 < $$0.size(); ++$$2) {
+            java.lang.Long $$3 = (java.lang.Long)$$0.get($$2);
+            $$1[$$2] = $$3 == null ? 0L : $$3;
         }
-        return lArray;
+        return $$1;
     }
 
-    public void write(java.io.DataOutput output) throws java.io.IOException {
-        output.writeInt(this.data.length);
-        for (long l : this.data) {
-            output.writeLong(l);
+    public void write(java.io.DataOutput $$0) throws java.io.IOException {
+        $$0.writeInt(this.data.length);
+        for (long $$1 : this.data) {
+            $$0.writeLong($$1);
         }
     }
 
@@ -56,11 +56,11 @@
         return new net.minecraft.nbt.LongArrayTag($$0);
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        return other instanceof net.minecraft.nbt.LongArrayTag && java.util.Arrays.equals((long[])this.data, (long[])((net.minecraft.nbt.LongArrayTag)other).data);
+        return $$0 instanceof net.minecraft.nbt.LongArrayTag && java.util.Arrays.equals((long[])this.data, (long[])((net.minecraft.nbt.LongArrayTag)$$0).data);
     }
 
     public int hashCode() {
@@ -93,17 +93,17 @@
         this.data = org.apache.commons.lang3.ArrayUtils.add((long[])this.data, (int)$$0, (long)$$1.getAsLong());
     }
 
-    public boolean setTag(int index, net.minecraft.nbt.Tag nbt) {
-        if (nbt instanceof net.minecraft.nbt.NumericTag) {
-            this.data[index] = ((net.minecraft.nbt.NumericTag)nbt).getAsLong();
+    public boolean setTag(int $$0, net.minecraft.nbt.Tag $$1) {
+        if ($$1 instanceof net.minecraft.nbt.NumericTag) {
+            this.data[$$0] = ((net.minecraft.nbt.NumericTag)$$1).getAsLong();
             return true;
         }
         return false;
     }
 
-    public boolean addTag(int index, net.minecraft.nbt.Tag nbt) {
-        if (nbt instanceof net.minecraft.nbt.NumericTag) {
-            this.data = org.apache.commons.lang3.ArrayUtils.add((long[])this.data, (int)index, (long)((net.minecraft.nbt.NumericTag)nbt).getAsLong());
+    public boolean addTag(int $$0, net.minecraft.nbt.Tag $$1) {
+        if ($$1 instanceof net.minecraft.nbt.NumericTag) {
+            this.data = org.apache.commons.lang3.ArrayUtils.add((long[])this.data, (int)$$0, (long)((net.minecraft.nbt.NumericTag)$$1).getAsLong());
             return true;
         }
         return false;