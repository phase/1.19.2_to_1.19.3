--- net/minecraft/nbt/LongTag.java
+++ net/minecraft/nbt/LongTag.java
@@ -10,19 +10,19 @@
     public static net.minecraft.nbt.TagType<net.minecraft.nbt.LongTag> TYPE;
     public long data;
 
-    public net.minecraft.nbt.LongTag(long data) {
-        this.data = data;
+    public net.minecraft.nbt.LongTag(long $$0) {
+        this.data = $$0;
     }
 
-    public static net.minecraft.nbt.LongTag valueOf(long data) {
-        if (data >= -128L && data <= 1024L) {
-            return net.minecraft.nbt.LongTag$Cache.cache[(int)data - -128];
+    public static net.minecraft.nbt.LongTag valueOf(long $$0) {
+        if ($$0 >= -128L && $$0 <= 1024L) {
+            return net.minecraft.nbt.LongTag$Cache.cache[(int)$$0 - -128];
         }
-        return new net.minecraft.nbt.LongTag(data);
+        return new net.minecraft.nbt.LongTag($$0);
     }
 
-    public void write(java.io.DataOutput output) throws java.io.IOException {
-        output.writeLong(this.data);
+    public void write(java.io.DataOutput $$0) throws java.io.IOException {
+        $$0.writeLong(this.data);
     }
 
     public byte getId() {
@@ -37,11 +37,11 @@
         return this;
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        return other instanceof net.minecraft.nbt.LongTag && this.data == ((net.minecraft.nbt.LongTag)other).data;
+        return $$0 instanceof net.minecraft.nbt.LongTag && this.data == ((net.minecraft.nbt.LongTag)$$0).data;
     }
 
     public int hashCode() {