--- net/minecraft/core/BlockPos$MutableBlockPos.java
+++ net/minecraft/core/BlockPos$MutableBlockPos.java
@@ -30,82 +30,82 @@
         return super.multiply($$0).immutable();
     }
 
-    public net.minecraft.core.BlockPos relative(net.minecraft.core.Direction facing, int n) {
-        return super.relative(facing, n).immutable();
+    public net.minecraft.core.BlockPos relative(net.minecraft.core.Direction $$0, int $$1) {
+        return super.relative($$0, $$1).immutable();
     }
 
     public net.minecraft.core.BlockPos relative(net.minecraft.core.Direction$Axis $$0, int $$1) {
         return super.relative($$0, $$1).immutable();
     }
 
-    public net.minecraft.core.BlockPos rotate(net.minecraft.world.level.block.Rotation rotation) {
-        return super.rotate(rotation).immutable();
+    public net.minecraft.core.BlockPos rotate(net.minecraft.world.level.block.Rotation $$0) {
+        return super.rotate($$0).immutable();
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos set(int x, int y, int z) {
-        this.setX(x);
-        this.setY(y);
-        this.setZ(z);
+    public net.minecraft.core.BlockPos$MutableBlockPos set(int $$0, int $$1, int $$2) {
+        this.setX($$0);
+        this.setY($$1);
+        this.setZ($$2);
         return this;
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos set(double x, double y, double z) {
-        return this.set(net.minecraft.util.Mth.floor((double)x), net.minecraft.util.Mth.floor((double)y), net.minecraft.util.Mth.floor((double)z));
+    public net.minecraft.core.BlockPos$MutableBlockPos set(double $$0, double $$1, double $$2) {
+        return this.set(net.minecraft.util.Mth.floor((double)$$0), net.minecraft.util.Mth.floor((double)$$1), net.minecraft.util.Mth.floor((double)$$2));
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos set(net.minecraft.core.Vec3i vector) {
-        return this.set(vector.getX(), vector.getY(), vector.getZ());
+    public net.minecraft.core.BlockPos$MutableBlockPos set(net.minecraft.core.Vec3i $$0) {
+        return this.set($$0.getX(), $$0.getY(), $$0.getZ());
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos set(long packedPos) {
-        return this.set(net.minecraft.core.BlockPos$MutableBlockPos.getX((long)packedPos), net.minecraft.core.BlockPos$MutableBlockPos.getY((long)packedPos), net.minecraft.core.BlockPos$MutableBlockPos.getZ((long)packedPos));
+    public net.minecraft.core.BlockPos$MutableBlockPos set(long $$0) {
+        return this.set(net.minecraft.core.BlockPos$MutableBlockPos.getX((long)$$0), net.minecraft.core.BlockPos$MutableBlockPos.getY((long)$$0), net.minecraft.core.BlockPos$MutableBlockPos.getZ((long)$$0));
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos set(net.minecraft.core.AxisCycle cycle, int x, int y, int z) {
-        return this.set(cycle.cycle(x, y, z, net.minecraft.core.Direction$Axis.X), cycle.cycle(x, y, z, net.minecraft.core.Direction$Axis.Y), cycle.cycle(x, y, z, net.minecraft.core.Direction$Axis.Z));
+    public net.minecraft.core.BlockPos$MutableBlockPos set(net.minecraft.core.AxisCycle $$0, int $$1, int $$2, int $$3) {
+        return this.set($$0.cycle($$1, $$2, $$3, net.minecraft.core.Direction$Axis.X), $$0.cycle($$1, $$2, $$3, net.minecraft.core.Direction$Axis.Y), $$0.cycle($$1, $$2, $$3, net.minecraft.core.Direction$Axis.Z));
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos setWithOffset(net.minecraft.core.Vec3i pos, net.minecraft.core.Direction direction) {
-        return this.set(pos.getX() + direction.getStepX(), pos.getY() + direction.getStepY(), pos.getZ() + direction.getStepZ());
+    public net.minecraft.core.BlockPos$MutableBlockPos setWithOffset(net.minecraft.core.Vec3i $$0, net.minecraft.core.Direction $$1) {
+        return this.set($$0.getX() + $$1.getStepX(), $$0.getY() + $$1.getStepY(), $$0.getZ() + $$1.getStepZ());
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos setWithOffset(net.minecraft.core.Vec3i vector, int offsetX, int offsetY, int offsetZ) {
-        return this.set(vector.getX() + offsetX, vector.getY() + offsetY, vector.getZ() + offsetZ);
+    public net.minecraft.core.BlockPos$MutableBlockPos setWithOffset(net.minecraft.core.Vec3i $$0, int $$1, int $$2, int $$3) {
+        return this.set($$0.getX() + $$1, $$0.getY() + $$2, $$0.getZ() + $$3);
     }
 
     public net.minecraft.core.BlockPos$MutableBlockPos setWithOffset(net.minecraft.core.Vec3i $$0, net.minecraft.core.Vec3i $$1) {
         return this.set($$0.getX() + $$1.getX(), $$0.getY() + $$1.getY(), $$0.getZ() + $$1.getZ());
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos move(net.minecraft.core.Direction direction) {
-        return this.move(direction, 1);
+    public net.minecraft.core.BlockPos$MutableBlockPos move(net.minecraft.core.Direction $$0) {
+        return this.move($$0, 1);
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos move(net.minecraft.core.Direction direction, int n) {
-        return this.set(this.getX() + direction.getStepX() * n, this.getY() + direction.getStepY() * n, this.getZ() + direction.getStepZ() * n);
+    public net.minecraft.core.BlockPos$MutableBlockPos move(net.minecraft.core.Direction $$0, int $$1) {
+        return this.set(this.getX() + $$0.getStepX() * $$1, this.getY() + $$0.getStepY() * $$1, this.getZ() + $$0.getStepZ() * $$1);
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos move(int x, int y, int z) {
-        return this.set(this.getX() + x, this.getY() + y, this.getZ() + z);
+    public net.minecraft.core.BlockPos$MutableBlockPos move(int $$0, int $$1, int $$2) {
+        return this.set(this.getX() + $$0, this.getY() + $$1, this.getZ() + $$2);
     }
 
     public net.minecraft.core.BlockPos$MutableBlockPos move(net.minecraft.core.Vec3i $$0) {
         return this.set(this.getX() + $$0.getX(), this.getY() + $$0.getY(), this.getZ() + $$0.getZ());
     }
 
-    public net.minecraft.core.BlockPos$MutableBlockPos clamp(net.minecraft.core.Direction$Axis axis, int min, int max) {
-        switch (net.minecraft.core.BlockPos$5.$SwitchMap$net$minecraft$core$Direction$Axis[axis.ordinal()]) {
+    public net.minecraft.core.BlockPos$MutableBlockPos clamp(net.minecraft.core.Direction$Axis $$0, int $$1, int $$2) {
+        switch (net.minecraft.core.BlockPos$5.$SwitchMap$net$minecraft$core$Direction$Axis[$$0.ordinal()]) {
             case 1: {
-                return this.set(net.minecraft.util.Mth.clamp((int)this.getX(), (int)min, (int)max), this.getY(), this.getZ());
+                return this.set(net.minecraft.util.Mth.clamp((int)this.getX(), (int)$$1, (int)$$2), this.getY(), this.getZ());
             }
             case 2: {
-                return this.set(this.getX(), net.minecraft.util.Mth.clamp((int)this.getY(), (int)min, (int)max), this.getZ());
+                return this.set(this.getX(), net.minecraft.util.Mth.clamp((int)this.getY(), (int)$$1, (int)$$2), this.getZ());
             }
             case 3: {
-                return this.set(this.getX(), this.getY(), net.minecraft.util.Mth.clamp((int)this.getZ(), (int)min, (int)max));
+                return this.set(this.getX(), this.getY(), net.minecraft.util.Mth.clamp((int)this.getZ(), (int)$$1, (int)$$2));
             }
         }
-        throw new java.lang.IllegalStateException("Unable to clamp axis " + axis);
+        throw new java.lang.IllegalStateException("Unable to clamp axis " + $$0);
     }
 
     public net.minecraft.core.BlockPos$MutableBlockPos setX(int $$0) {