--- net/minecraft/core/DefaultedRegistry.java
+++ net/minecraft/core/DefaultedRegistry.java
@@ -9,7 +9,7 @@
     public net.minecraft.resources.ResourceLocation defaultKey;
     public net.minecraft.core.Holder<T> defaultValue;
 
-    public net.minecraft.core.DefaultedRegistry(java.lang.String $$0, net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<T>> $$1, com.mojang.serialization.Lifecycle $$2, @javax.annotation.Nullable java.util.function.Function<T, net.minecraft.core.Holder$Reference<T>> $$3) {
+    public net.minecraft.core.DefaultedRegistry(java.lang.String $$0, net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<T>> $$1, com.mojang.serialization.Lifecycle $$2, boolean $$3) {
         super($$1, $$2, $$3);
         this.defaultKey = new net.minecraft.resources.ResourceLocation($$0);
     }
@@ -22,31 +22,31 @@
         return $$4;
     }
 
-    public int getId(@javax.annotation.Nullable T value) {
-        int n = super.getId(value);
-        return n == -1 ? super.getId(this.defaultValue.value()) : n;
+    public int getId(@javax.annotation.Nullable T $$0) {
+        int $$1 = super.getId($$0);
+        return $$1 == -1 ? super.getId(this.defaultValue.value()) : $$1;
     }
 
     @javax.annotation.Nonnull
-    public net.minecraft.resources.ResourceLocation getKey(T value) {
-        net.minecraft.resources.ResourceLocation resourceLocation = super.getKey(value);
-        return resourceLocation == null ? this.defaultKey : resourceLocation;
+    public net.minecraft.resources.ResourceLocation getKey(T $$0) {
+        net.minecraft.resources.ResourceLocation $$1 = super.getKey($$0);
+        return $$1 == null ? this.defaultKey : $$1;
     }
 
     @javax.annotation.Nonnull
-    public T get(@javax.annotation.Nullable net.minecraft.resources.ResourceLocation name) {
-        java.lang.Object object = super.get(name);
-        return (T)(object == null ? this.defaultValue.value() : object);
+    public T get(@javax.annotation.Nullable net.minecraft.resources.ResourceLocation $$0) {
+        java.lang.Object $$1 = super.get($$0);
+        return (T)($$1 == null ? this.defaultValue.value() : $$1);
     }
 
-    public java.util.Optional<T> getOptional(@javax.annotation.Nullable net.minecraft.resources.ResourceLocation id) {
-        return java.util.Optional.ofNullable((java.lang.Object)super.get(id));
+    public java.util.Optional<T> getOptional(@javax.annotation.Nullable net.minecraft.resources.ResourceLocation $$0) {
+        return java.util.Optional.ofNullable((java.lang.Object)super.get($$0));
     }
 
     @javax.annotation.Nonnull
-    public T byId(int value) {
-        java.lang.Object object = super.byId(value);
-        return (T)(object == null ? this.defaultValue.value() : object);
+    public T byId(int $$0) {
+        java.lang.Object $$1 = super.byId($$0);
+        return (T)($$1 == null ? this.defaultValue.value() : $$1);
     }
 
     public java.util.Optional<net.minecraft.core.Holder<T>> getRandom(net.minecraft.util.RandomSource $$0) {