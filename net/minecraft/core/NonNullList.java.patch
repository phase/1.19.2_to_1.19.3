--- net/minecraft/core/NonNullList.java
+++ net/minecraft/core/NonNullList.java
@@ -18,40 +18,40 @@
         return new net.minecraft.core.NonNullList((java.util.List)com.google.common.collect.Lists.newArrayListWithCapacity((int)$$0), null);
     }
 
-    public static <E> net.minecraft.core.NonNullList<E> withSize(int size, E defaultValue) {
-        org.apache.commons.lang3.Validate.notNull(defaultValue);
-        java.lang.Object[] objectArray = new java.lang.Object[size];
-        java.util.Arrays.fill((java.lang.Object[])objectArray, defaultValue);
-        return new net.minecraft.core.NonNullList(java.util.Arrays.asList((java.lang.Object[])objectArray), defaultValue);
+    public static <E> net.minecraft.core.NonNullList<E> withSize(int $$0, E $$1) {
+        org.apache.commons.lang3.Validate.notNull($$1);
+        java.lang.Object[] $$2 = new java.lang.Object[$$0];
+        java.util.Arrays.fill((java.lang.Object[])$$2, $$1);
+        return new net.minecraft.core.NonNullList(java.util.Arrays.asList((java.lang.Object[])$$2), $$1);
     }
 
     @java.lang.SafeVarargs
-    public static <E> net.minecraft.core.NonNullList<E> of(E defaultValue, E ... elements) {
-        return new net.minecraft.core.NonNullList(java.util.Arrays.asList((java.lang.Object[])elements), defaultValue);
+    public static <E> net.minecraft.core.NonNullList<E> of(E $$0, E ... $$1) {
+        return new net.minecraft.core.NonNullList(java.util.Arrays.asList((java.lang.Object[])$$1), $$0);
     }
 
-    public net.minecraft.core.NonNullList(java.util.List<E> list, @javax.annotation.Nullable E defaultValue) {
-        this.list = list;
-        this.defaultValue = defaultValue;
+    public net.minecraft.core.NonNullList(java.util.List<E> $$0, @javax.annotation.Nullable E $$1) {
+        this.list = $$0;
+        this.defaultValue = $$1;
     }
 
     @javax.annotation.Nonnull
-    public E get(int index) {
-        return (E)this.list.get(index);
+    public E get(int $$0) {
+        return (E)this.list.get($$0);
     }
 
-    public E set(int index, E value) {
-        org.apache.commons.lang3.Validate.notNull(value);
-        return (E)this.list.set(index, value);
+    public E set(int $$0, E $$1) {
+        org.apache.commons.lang3.Validate.notNull($$1);
+        return (E)this.list.set($$0, $$1);
     }
 
-    public void add(int index, E value) {
-        org.apache.commons.lang3.Validate.notNull(value);
-        this.list.add(index, value);
+    public void add(int $$0, E $$1) {
+        org.apache.commons.lang3.Validate.notNull($$1);
+        this.list.add($$0, $$1);
     }
 
-    public E remove(int index) {
-        return (E)this.list.remove(index);
+    public E remove(int $$0) {
+        return (E)this.list.remove($$0);
     }
 
     public int size() {