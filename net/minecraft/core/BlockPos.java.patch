--- net/minecraft/core/BlockPos.java
+++ net/minecraft/core/BlockPos.java
@@ -20,63 +20,63 @@
     public static int Z_OFFSET;
     public static int X_OFFSET;
 
-    public net.minecraft.core.BlockPos(int x, int y, int z) {
-        super(x, y, z);
+    public net.minecraft.core.BlockPos(int $$0, int $$1, int $$2) {
+        super($$0, $$1, $$2);
     }
 
     public net.minecraft.core.BlockPos(double $$0, double $$1, double $$2) {
         super($$0, $$1, $$2);
     }
 
-    public net.minecraft.core.BlockPos(net.minecraft.world.phys.Vec3 vector) {
-        this(vector.x, vector.y, vector.z);
+    public net.minecraft.core.BlockPos(net.minecraft.world.phys.Vec3 $$0) {
+        this($$0.x, $$0.y, $$0.z);
     }
 
-    public net.minecraft.core.BlockPos(net.minecraft.core.Position pos) {
-        this(pos.x(), pos.y(), pos.z());
+    public net.minecraft.core.BlockPos(net.minecraft.core.Position $$0) {
+        this($$0.x(), $$0.y(), $$0.z());
     }
 
-    public net.minecraft.core.BlockPos(net.minecraft.core.Vec3i vector) {
-        this(vector.getX(), vector.getY(), vector.getZ());
+    public net.minecraft.core.BlockPos(net.minecraft.core.Vec3i $$0) {
+        this($$0.getX(), $$0.getY(), $$0.getZ());
     }
 
-    public static long offset(long pos, net.minecraft.core.Direction direction) {
-        return net.minecraft.core.BlockPos.offset((long)pos, (int)direction.getStepX(), (int)direction.getStepY(), (int)direction.getStepZ());
+    public static long offset(long $$0, net.minecraft.core.Direction $$1) {
+        return net.minecraft.core.BlockPos.offset((long)$$0, (int)$$1.getStepX(), (int)$$1.getStepY(), (int)$$1.getStepZ());
     }
 
-    public static long offset(long pos, int dx, int dy, int dz) {
-        return net.minecraft.core.BlockPos.asLong((int)(net.minecraft.core.BlockPos.getX((long)pos) + dx), (int)(net.minecraft.core.BlockPos.getY((long)pos) + dy), (int)(net.minecraft.core.BlockPos.getZ((long)pos) + dz));
+    public static long offset(long $$0, int $$1, int $$2, int $$3) {
+        return net.minecraft.core.BlockPos.asLong((int)(net.minecraft.core.BlockPos.getX((long)$$0) + $$1), (int)(net.minecraft.core.BlockPos.getY((long)$$0) + $$2), (int)(net.minecraft.core.BlockPos.getZ((long)$$0) + $$3));
     }
 
-    public static int getX(long packedPos) {
-        return (int)(packedPos << 64 - X_OFFSET - PACKED_X_LENGTH >> 64 - PACKED_X_LENGTH);
+    public static int getX(long $$0) {
+        return (int)($$0 << 64 - X_OFFSET - PACKED_X_LENGTH >> 64 - PACKED_X_LENGTH);
     }
 
-    public static int getY(long packedPos) {
-        return (int)(packedPos << 64 - PACKED_Y_LENGTH >> 64 - PACKED_Y_LENGTH);
+    public static int getY(long $$0) {
+        return (int)($$0 << 64 - PACKED_Y_LENGTH >> 64 - PACKED_Y_LENGTH);
     }
 
-    public static int getZ(long packedPos) {
-        return (int)(packedPos << 64 - Z_OFFSET - PACKED_Z_LENGTH >> 64 - PACKED_Z_LENGTH);
+    public static int getZ(long $$0) {
+        return (int)($$0 << 64 - Z_OFFSET - PACKED_Z_LENGTH >> 64 - PACKED_Z_LENGTH);
     }
 
-    public static net.minecraft.core.BlockPos of(long packedPos) {
-        return new net.minecraft.core.BlockPos(net.minecraft.core.BlockPos.getX((long)packedPos), net.minecraft.core.BlockPos.getY((long)packedPos), net.minecraft.core.BlockPos.getZ((long)packedPos));
+    public static net.minecraft.core.BlockPos of(long $$0) {
+        return new net.minecraft.core.BlockPos(net.minecraft.core.BlockPos.getX((long)$$0), net.minecraft.core.BlockPos.getY((long)$$0), net.minecraft.core.BlockPos.getZ((long)$$0));
     }
 
     public long asLong() {
         return net.minecraft.core.BlockPos.asLong((int)this.getX(), (int)this.getY(), (int)this.getZ());
     }
 
-    public static long asLong(int x, int y, int z) {
-        long l = 0L;
-        l |= ((long)x & PACKED_X_MASK) << X_OFFSET;
-        l |= ((long)y & PACKED_Y_MASK) << 0;
-        return l |= ((long)z & PACKED_Z_MASK) << Z_OFFSET;
+    public static long asLong(int $$0, int $$1, int $$2) {
+        long $$3 = 0L;
+        $$3 |= ((long)$$0 & PACKED_X_MASK) << X_OFFSET;
+        $$3 |= ((long)$$1 & PACKED_Y_MASK) << 0;
+        return $$3 |= ((long)$$2 & PACKED_Z_MASK) << Z_OFFSET;
     }
 
-    public static long getFlatIndex(long packedPos) {
-        return packedPos & 0xFFFFFFFFFFFFFFF0L;
+    public static long getFlatIndex(long $$0) {
+        return $$0 & 0xFFFFFFFFFFFFFFF0L;
     }
 
     public net.minecraft.core.BlockPos offset(double $$0, double $$1, double $$2) {
@@ -115,16 +115,16 @@
         return this.relative(net.minecraft.core.Direction.UP);
     }
 
-    public net.minecraft.core.BlockPos above(int n) {
-        return this.relative(net.minecraft.core.Direction.UP, n);
+    public net.minecraft.core.BlockPos above(int $$0) {
+        return this.relative(net.minecraft.core.Direction.UP, $$0);
     }
 
     public net.minecraft.core.BlockPos below() {
         return this.relative(net.minecraft.core.Direction.DOWN);
     }
 
-    public net.minecraft.core.BlockPos below(int n) {
-        return this.relative(net.minecraft.core.Direction.DOWN, n);
+    public net.minecraft.core.BlockPos below(int $$0) {
+        return this.relative(net.minecraft.core.Direction.DOWN, $$0);
     }
 
     public net.minecraft.core.BlockPos north() {
@@ -163,11 +163,11 @@
         return new net.minecraft.core.BlockPos(this.getX() + $$0.getStepX(), this.getY() + $$0.getStepY(), this.getZ() + $$0.getStepZ());
     }
 
-    public net.minecraft.core.BlockPos relative(net.minecraft.core.Direction facing, int n) {
-        if (n == 0) {
+    public net.minecraft.core.BlockPos relative(net.minecraft.core.Direction $$0, int $$1) {
+        if ($$1 == 0) {
             return this;
         }
-        return new net.minecraft.core.BlockPos(this.getX() + facing.getStepX() * n, this.getY() + facing.getStepY() * n, this.getZ() + facing.getStepZ() * n);
+        return new net.minecraft.core.BlockPos(this.getX() + $$0.getStepX() * $$1, this.getY() + $$0.getStepY() * $$1, this.getZ() + $$0.getStepZ() * $$1);
     }
 
     public net.minecraft.core.BlockPos relative(net.minecraft.core.Direction$Axis $$0, int $$1) {
@@ -180,8 +180,8 @@
         return new net.minecraft.core.BlockPos(this.getX() + $$2, this.getY() + $$3, this.getZ() + $$4);
     }
 
-    public net.minecraft.core.BlockPos rotate(net.minecraft.world.level.block.Rotation rotation) {
-        switch (net.minecraft.core.BlockPos$5.$SwitchMap$net$minecraft$world$level$block$Rotation[rotation.ordinal()]) {
+    public net.minecraft.core.BlockPos rotate(net.minecraft.world.level.block.Rotation $$0) {
+        switch (net.minecraft.core.BlockPos$5.$SwitchMap$net$minecraft$world$level$block$Rotation[$$0.ordinal()]) {
             default: {
                 return this;
             }
@@ -196,8 +196,8 @@
         return new net.minecraft.core.BlockPos(this.getZ(), this.getY(), -this.getX());
     }
 
-    public net.minecraft.core.BlockPos cross(net.minecraft.core.Vec3i vector) {
-        return new net.minecraft.core.BlockPos(this.getY() * vector.getZ() - this.getZ() * vector.getY(), this.getZ() * vector.getX() - this.getX() * vector.getZ(), this.getX() * vector.getY() - this.getY() * vector.getX());
+    public net.minecraft.core.BlockPos cross(net.minecraft.core.Vec3i $$0) {
+        return new net.minecraft.core.BlockPos(this.getY() * $$0.getZ() - this.getZ() * $$0.getY(), this.getZ() * $$0.getX() - this.getX() * $$0.getZ(), this.getX() * $$0.getY() - this.getY() * $$0.getX());
     }
 
     public net.minecraft.core.BlockPos atY(int $$0) {
@@ -223,51 +223,51 @@
         return () -> new /* Unavailable Anonymous Inner Class!! */;
     }
 
-    public static java.lang.Iterable<net.minecraft.core.BlockPos> withinManhattan(net.minecraft.core.BlockPos pos, int xSize, int ySize, int zSize) {
-        int n = xSize + ySize + zSize;
-        int n2 = pos.getX();
-        int n3 = pos.getY();
-        int n4 = pos.getZ();
+    public static java.lang.Iterable<net.minecraft.core.BlockPos> withinManhattan(net.minecraft.core.BlockPos $$0, int $$1, int $$2, int $$3) {
+        int $$4 = $$1 + $$2 + $$3;
+        int $$5 = $$0.getX();
+        int $$6 = $$0.getY();
+        int $$7 = $$0.getZ();
         return () -> new /* Unavailable Anonymous Inner Class!! */;
     }
 
-    public static java.util.Optional<net.minecraft.core.BlockPos> findClosestMatch(net.minecraft.core.BlockPos pos, int width, int height, java.util.function.Predicate<net.minecraft.core.BlockPos> posFilter) {
-        for (net.minecraft.core.BlockPos blockPos : net.minecraft.core.BlockPos.withinManhattan((net.minecraft.core.BlockPos)pos, (int)width, (int)height, (int)width)) {
-            if (!posFilter.test((java.lang.Object)blockPos)) continue;
-            return java.util.Optional.of((java.lang.Object)blockPos);
+    public static java.util.Optional<net.minecraft.core.BlockPos> findClosestMatch(net.minecraft.core.BlockPos $$0, int $$1, int $$2, java.util.function.Predicate<net.minecraft.core.BlockPos> $$3) {
+        for (net.minecraft.core.BlockPos $$4 : net.minecraft.core.BlockPos.withinManhattan((net.minecraft.core.BlockPos)$$0, (int)$$1, (int)$$2, (int)$$1)) {
+            if (!$$3.test((java.lang.Object)$$4)) continue;
+            return java.util.Optional.of((java.lang.Object)$$4);
         }
         return java.util.Optional.empty();
     }
 
-    public static java.util.stream.Stream<net.minecraft.core.BlockPos> withinManhattanStream(net.minecraft.core.BlockPos pos, int xSize, int ySize, int zSize) {
-        return java.util.stream.StreamSupport.stream((java.util.Spliterator)net.minecraft.core.BlockPos.withinManhattan((net.minecraft.core.BlockPos)pos, (int)xSize, (int)ySize, (int)zSize).spliterator(), (boolean)false);
+    public static java.util.stream.Stream<net.minecraft.core.BlockPos> withinManhattanStream(net.minecraft.core.BlockPos $$0, int $$1, int $$2, int $$3) {
+        return java.util.stream.StreamSupport.stream((java.util.Spliterator)net.minecraft.core.BlockPos.withinManhattan((net.minecraft.core.BlockPos)$$0, (int)$$1, (int)$$2, (int)$$3).spliterator(), (boolean)false);
     }
 
-    public static java.lang.Iterable<net.minecraft.core.BlockPos> betweenClosed(net.minecraft.core.BlockPos firstPos, net.minecraft.core.BlockPos secondPos) {
-        return net.minecraft.core.BlockPos.betweenClosed((int)java.lang.Math.min((int)firstPos.getX(), (int)secondPos.getX()), (int)java.lang.Math.min((int)firstPos.getY(), (int)secondPos.getY()), (int)java.lang.Math.min((int)firstPos.getZ(), (int)secondPos.getZ()), (int)java.lang.Math.max((int)firstPos.getX(), (int)secondPos.getX()), (int)java.lang.Math.max((int)firstPos.getY(), (int)secondPos.getY()), (int)java.lang.Math.max((int)firstPos.getZ(), (int)secondPos.getZ()));
+    public static java.lang.Iterable<net.minecraft.core.BlockPos> betweenClosed(net.minecraft.core.BlockPos $$0, net.minecraft.core.BlockPos $$1) {
+        return net.minecraft.core.BlockPos.betweenClosed((int)java.lang.Math.min((int)$$0.getX(), (int)$$1.getX()), (int)java.lang.Math.min((int)$$0.getY(), (int)$$1.getY()), (int)java.lang.Math.min((int)$$0.getZ(), (int)$$1.getZ()), (int)java.lang.Math.max((int)$$0.getX(), (int)$$1.getX()), (int)java.lang.Math.max((int)$$0.getY(), (int)$$1.getY()), (int)java.lang.Math.max((int)$$0.getZ(), (int)$$1.getZ()));
     }
 
-    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(net.minecraft.core.BlockPos firstPos, net.minecraft.core.BlockPos secondPos) {
-        return java.util.stream.StreamSupport.stream((java.util.Spliterator)net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)firstPos, (net.minecraft.core.BlockPos)secondPos).spliterator(), (boolean)false);
+    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(net.minecraft.core.BlockPos $$0, net.minecraft.core.BlockPos $$1) {
+        return java.util.stream.StreamSupport.stream((java.util.Spliterator)net.minecraft.core.BlockPos.betweenClosed((net.minecraft.core.BlockPos)$$0, (net.minecraft.core.BlockPos)$$1).spliterator(), (boolean)false);
     }
 
-    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(net.minecraft.world.level.levelgen.structure.BoundingBox box) {
-        return net.minecraft.core.BlockPos.betweenClosedStream((int)java.lang.Math.min((int)box.minX(), (int)box.maxX()), (int)java.lang.Math.min((int)box.minY(), (int)box.maxY()), (int)java.lang.Math.min((int)box.minZ(), (int)box.maxZ()), (int)java.lang.Math.max((int)box.minX(), (int)box.maxX()), (int)java.lang.Math.max((int)box.minY(), (int)box.maxY()), (int)java.lang.Math.max((int)box.minZ(), (int)box.maxZ()));
+    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(net.minecraft.world.level.levelgen.structure.BoundingBox $$0) {
+        return net.minecraft.core.BlockPos.betweenClosedStream((int)java.lang.Math.min((int)$$0.minX(), (int)$$0.maxX()), (int)java.lang.Math.min((int)$$0.minY(), (int)$$0.maxY()), (int)java.lang.Math.min((int)$$0.minZ(), (int)$$0.maxZ()), (int)java.lang.Math.max((int)$$0.minX(), (int)$$0.maxX()), (int)java.lang.Math.max((int)$$0.minY(), (int)$$0.maxY()), (int)java.lang.Math.max((int)$$0.minZ(), (int)$$0.maxZ()));
     }
 
-    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(net.minecraft.world.phys.AABB aabb) {
-        return net.minecraft.core.BlockPos.betweenClosedStream((int)net.minecraft.util.Mth.floor((double)aabb.minX), (int)net.minecraft.util.Mth.floor((double)aabb.minY), (int)net.minecraft.util.Mth.floor((double)aabb.minZ), (int)net.minecraft.util.Mth.floor((double)aabb.maxX), (int)net.minecraft.util.Mth.floor((double)aabb.maxY), (int)net.minecraft.util.Mth.floor((double)aabb.maxZ));
+    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(net.minecraft.world.phys.AABB $$0) {
+        return net.minecraft.core.BlockPos.betweenClosedStream((int)net.minecraft.util.Mth.floor((double)$$0.minX), (int)net.minecraft.util.Mth.floor((double)$$0.minY), (int)net.minecraft.util.Mth.floor((double)$$0.minZ), (int)net.minecraft.util.Mth.floor((double)$$0.maxX), (int)net.minecraft.util.Mth.floor((double)$$0.maxY), (int)net.minecraft.util.Mth.floor((double)$$0.maxZ));
     }
 
-    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(int minX, int minY, int minZ, int maxX, int maxY, int maxZ) {
-        return java.util.stream.StreamSupport.stream((java.util.Spliterator)net.minecraft.core.BlockPos.betweenClosed((int)minX, (int)minY, (int)minZ, (int)maxX, (int)maxY, (int)maxZ).spliterator(), (boolean)false);
+    public static java.util.stream.Stream<net.minecraft.core.BlockPos> betweenClosedStream(int $$0, int $$1, int $$2, int $$3, int $$4, int $$5) {
+        return java.util.stream.StreamSupport.stream((java.util.Spliterator)net.minecraft.core.BlockPos.betweenClosed((int)$$0, (int)$$1, (int)$$2, (int)$$3, (int)$$4, (int)$$5).spliterator(), (boolean)false);
     }
 
-    public static java.lang.Iterable<net.minecraft.core.BlockPos> betweenClosed(int x1, int y1, int z1, int x2, int y2, int z2) {
-        int n = x2 - x1 + 1;
-        int n2 = y2 - y1 + 1;
-        int n3 = z2 - z1 + 1;
-        int n4 = n * n2 * n3;
+    public static java.lang.Iterable<net.minecraft.core.BlockPos> betweenClosed(int $$0, int $$1, int $$2, int $$3, int $$4, int $$5) {
+        int $$6 = $$3 - $$0 + 1;
+        int $$7 = $$4 - $$1 + 1;
+        int $$8 = $$5 - $$2 + 1;
+        int $$9 = $$6 * $$7 * $$8;
         return () -> new /* Unavailable Anonymous Inner Class!! */;
     }
 