--- net/minecraft/core/SectionPos.java
+++ net/minecraft/core/SectionPos.java
@@ -28,16 +28,16 @@
         super($$0, $$1, $$2);
     }
 
-    public static net.minecraft.core.SectionPos of(int chunkX, int chunkY, int chunkZ) {
-        return new net.minecraft.core.SectionPos(chunkX, chunkY, chunkZ);
+    public static net.minecraft.core.SectionPos of(int $$0, int $$1, int $$2) {
+        return new net.minecraft.core.SectionPos($$0, $$1, $$2);
     }
 
-    public static net.minecraft.core.SectionPos of(net.minecraft.core.BlockPos pos) {
-        return new net.minecraft.core.SectionPos(net.minecraft.core.SectionPos.blockToSectionCoord((int)pos.getX()), net.minecraft.core.SectionPos.blockToSectionCoord((int)pos.getY()), net.minecraft.core.SectionPos.blockToSectionCoord((int)pos.getZ()));
+    public static net.minecraft.core.SectionPos of(net.minecraft.core.BlockPos $$0) {
+        return new net.minecraft.core.SectionPos(net.minecraft.core.SectionPos.blockToSectionCoord((int)$$0.getX()), net.minecraft.core.SectionPos.blockToSectionCoord((int)$$0.getY()), net.minecraft.core.SectionPos.blockToSectionCoord((int)$$0.getZ()));
     }
 
-    public static net.minecraft.core.SectionPos of(net.minecraft.world.level.ChunkPos chunkPos, int y) {
-        return new net.minecraft.core.SectionPos(chunkPos.x, y, chunkPos.z);
+    public static net.minecraft.core.SectionPos of(net.minecraft.world.level.ChunkPos $$0, int $$1) {
+        return new net.minecraft.core.SectionPos($$0.x, $$1, $$0.z);
     }
 
     public static net.minecraft.core.SectionPos of(net.minecraft.world.level.entity.EntityAccess $$0) {
@@ -60,16 +60,16 @@
         return net.minecraft.core.SectionPos.offset((long)$$0, (int)$$1.getStepX(), (int)$$1.getStepY(), (int)$$1.getStepZ());
     }
 
-    public static long offset(long l, int dx, int dy, int dz) {
-        return net.minecraft.core.SectionPos.asLong((int)(net.minecraft.core.SectionPos.x((long)l) + dx), (int)(net.minecraft.core.SectionPos.y((long)l) + dy), (int)(net.minecraft.core.SectionPos.z((long)l) + dz));
+    public static long offset(long $$0, int $$1, int $$2, int $$3) {
+        return net.minecraft.core.SectionPos.asLong((int)(net.minecraft.core.SectionPos.x((long)$$0) + $$1), (int)(net.minecraft.core.SectionPos.y((long)$$0) + $$2), (int)(net.minecraft.core.SectionPos.z((long)$$0) + $$3));
     }
 
     public static int posToSectionCoord(double $$0) {
         return net.minecraft.core.SectionPos.blockToSectionCoord((int)net.minecraft.util.Mth.floor((double)$$0));
     }
 
-    public static int blockToSectionCoord(int blockCoord) {
-        return blockCoord >> 4;
+    public static int blockToSectionCoord(int $$0) {
+        return $$0 >> 4;
     }
 
     public static int blockToSectionCoord(double $$0) {
@@ -115,24 +115,24 @@
         return new net.minecraft.core.BlockPos(this.relativeToBlockX($$0), this.relativeToBlockY($$0), this.relativeToBlockZ($$0));
     }
 
-    public static int sectionToBlockCoord(int sectionCoord) {
-        return sectionCoord << 4;
+    public static int sectionToBlockCoord(int $$0) {
+        return $$0 << 4;
     }
 
     public static int sectionToBlockCoord(int $$0, int $$1) {
         return net.minecraft.core.SectionPos.sectionToBlockCoord((int)$$0) + $$1;
     }
 
-    public static int x(long packed) {
-        return (int)(packed << 0 >> 42);
+    public static int x(long $$0) {
+        return (int)($$0 << 0 >> 42);
     }
 
-    public static int y(long packed) {
-        return (int)(packed << 44 >> 44);
+    public static int y(long $$0) {
+        return (int)($$0 << 44 >> 44);
     }
 
-    public static int z(long packed) {
-        return (int)(packed << 22 >> 42);
+    public static int z(long $$0) {
+        return (int)($$0 << 22 >> 42);
     }
 
     public int x() {
@@ -171,8 +171,8 @@
         return net.minecraft.core.SectionPos.sectionToBlockCoord((int)this.z(), (int)15);
     }
 
-    public static long blockToSection(long levelPos) {
-        return net.minecraft.core.SectionPos.asLong((int)net.minecraft.core.SectionPos.blockToSectionCoord((int)net.minecraft.core.BlockPos.getX((long)levelPos)), (int)net.minecraft.core.SectionPos.blockToSectionCoord((int)net.minecraft.core.BlockPos.getY((long)levelPos)), (int)net.minecraft.core.SectionPos.blockToSectionCoord((int)net.minecraft.core.BlockPos.getZ((long)levelPos)));
+    public static long blockToSection(long $$0) {
+        return net.minecraft.core.SectionPos.asLong((int)net.minecraft.core.SectionPos.blockToSectionCoord((int)net.minecraft.core.BlockPos.getX((long)$$0)), (int)net.minecraft.core.SectionPos.blockToSectionCoord((int)net.minecraft.core.BlockPos.getY((long)$$0)), (int)net.minecraft.core.SectionPos.blockToSectionCoord((int)net.minecraft.core.BlockPos.getZ((long)$$0)));
     }
 
     public static long getZeroNode(long $$0) {
@@ -218,11 +218,11 @@
         return net.minecraft.core.BlockPos.betweenClosedStream((int)this.minBlockX(), (int)this.minBlockY(), (int)this.minBlockZ(), (int)this.maxBlockX(), (int)this.maxBlockY(), (int)this.maxBlockZ());
     }
 
-    public static java.util.stream.Stream<net.minecraft.core.SectionPos> cube(net.minecraft.core.SectionPos center, int radius) {
-        int n = center.x();
-        int n2 = center.y();
-        int n3 = center.z();
-        return net.minecraft.core.SectionPos.betweenClosedStream((int)(n - radius), (int)(n2 - radius), (int)(n3 - radius), (int)(n + radius), (int)(n2 + radius), (int)(n3 + radius));
+    public static java.util.stream.Stream<net.minecraft.core.SectionPos> cube(net.minecraft.core.SectionPos $$0, int $$1) {
+        int $$2 = $$0.x();
+        int $$3 = $$0.y();
+        int $$4 = $$0.z();
+        return net.minecraft.core.SectionPos.betweenClosedStream((int)($$2 - $$1), (int)($$3 - $$1), (int)($$4 - $$1), (int)($$2 + $$1), (int)($$3 + $$1), (int)($$4 + $$1));
     }
 
     public static java.util.stream.Stream<net.minecraft.core.SectionPos> aroundChunk(net.minecraft.world.level.ChunkPos $$0, int $$1, int $$2, int $$3) {