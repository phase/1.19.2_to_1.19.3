--- net/minecraft/core/HolderLookup$RegistryLookup.java
+++ net/minecraft/core/HolderLookup$RegistryLookup.java
@@ -12,7 +12,7 @@
         this.registry = $$0;
     }
 
-    public java.util.Optional<net.minecraft.core.Holder<T>> get(net.minecraft.resources.ResourceKey<T> $$0) {
+    public java.util.Optional<net.minecraft.core.Holder$Reference<T>> get(net.minecraft.resources.ResourceKey<T> $$0) {
         return this.registry.getHolder($$0);
     }
 
@@ -20,12 +20,23 @@
         return this.registry.entrySet().stream().map(java.util.Map$Entry::getKey);
     }
 
-    public java.util.Optional<? extends net.minecraft.core.HolderSet<T>> get(net.minecraft.tags.TagKey<T> $$0) {
+    public java.util.Optional<net.minecraft.core.HolderSet$Named<T>> get(net.minecraft.tags.TagKey<T> $$0) {
         return this.registry.getTag($$0);
     }
 
     public java.util.stream.Stream<net.minecraft.tags.TagKey<T>> listTags() {
         return this.registry.getTagNames();
     }
+
+    public net.minecraft.core.HolderLookup<T> filterElements(java.util.function.Predicate<T> $$0) {
+        return new /* Unavailable Anonymous Inner Class!! */;
+    }
+
+    public net.minecraft.core.HolderLookup<T> filterFeatures(net.minecraft.world.flag.FeatureFlagSet $$0) {
+        if (net.minecraft.world.flag.FeatureElement.FILTERED_REGISTRIES.contains((java.lang.Object)this.registry.key())) {
+            return this.filterElements($$1 -> ((net.minecraft.world.flag.FeatureElement)$$1).isEnabled($$0));
+        }
+        return this;
+    }
 }
 