--- net/minecraft/core/Vec3i.java
+++ net/minecraft/core/Vec3i.java
@@ -26,31 +26,31 @@
         return CODEC.flatXmap(net.minecraft.core.Vec3i.checkOffsetAxes((int)$$0), net.minecraft.core.Vec3i.checkOffsetAxes((int)$$0));
     }
 
-    public net.minecraft.core.Vec3i(int x, int y, int z) {
-        this.x = x;
-        this.y = y;
-        this.z = z;
+    public net.minecraft.core.Vec3i(int $$0, int $$1, int $$2) {
+        this.x = $$0;
+        this.y = $$1;
+        this.z = $$2;
     }
 
-    public net.minecraft.core.Vec3i(double x, double y, double z) {
-        this(net.minecraft.util.Mth.floor((double)x), net.minecraft.util.Mth.floor((double)y), net.minecraft.util.Mth.floor((double)z));
+    public net.minecraft.core.Vec3i(double $$0, double $$1, double $$2) {
+        this(net.minecraft.util.Mth.floor((double)$$0), net.minecraft.util.Mth.floor((double)$$1), net.minecraft.util.Mth.floor((double)$$2));
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        if (!(other instanceof net.minecraft.core.Vec3i)) {
+        if (!($$0 instanceof net.minecraft.core.Vec3i)) {
             return false;
         }
-        net.minecraft.core.Vec3i vec3i = (net.minecraft.core.Vec3i)other;
-        if (this.getX() != vec3i.getX()) {
+        net.minecraft.core.Vec3i $$1 = (net.minecraft.core.Vec3i)$$0;
+        if (this.getX() != $$1.getX()) {
             return false;
         }
-        if (this.getY() != vec3i.getY()) {
+        if (this.getY() != $$1.getY()) {
             return false;
         }
-        return this.getZ() == vec3i.getZ();
+        return this.getZ() == $$1.getZ();
     }
 
     public int hashCode() {
@@ -130,16 +130,16 @@
         return this.above(1);
     }
 
-    public net.minecraft.core.Vec3i above(int distance) {
-        return this.relative(net.minecraft.core.Direction.UP, distance);
+    public net.minecraft.core.Vec3i above(int $$0) {
+        return this.relative(net.minecraft.core.Direction.UP, $$0);
     }
 
     public net.minecraft.core.Vec3i below() {
         return this.below(1);
     }
 
-    public net.minecraft.core.Vec3i below(int distance) {
-        return this.relative(net.minecraft.core.Direction.DOWN, distance);
+    public net.minecraft.core.Vec3i below(int $$0) {
+        return this.relative(net.minecraft.core.Direction.DOWN, $$0);
     }
 
     public net.minecraft.core.Vec3i north() {
@@ -178,11 +178,11 @@
         return this.relative($$0, 1);
     }
 
-    public net.minecraft.core.Vec3i relative(net.minecraft.core.Direction direction, int distance) {
-        if (distance == 0) {
+    public net.minecraft.core.Vec3i relative(net.minecraft.core.Direction $$0, int $$1) {
+        if ($$1 == 0) {
             return this;
         }
-        return new net.minecraft.core.Vec3i(this.getX() + direction.getStepX() * distance, this.getY() + direction.getStepY() * distance, this.getZ() + direction.getStepZ() * distance);
+        return new net.minecraft.core.Vec3i(this.getX() + $$0.getStepX() * $$1, this.getY() + $$0.getStepY() * $$1, this.getZ() + $$0.getStepZ() * $$1);
     }
 
     public net.minecraft.core.Vec3i relative(net.minecraft.core.Direction$Axis $$0, int $$1) {
@@ -195,20 +195,20 @@
         return new net.minecraft.core.Vec3i(this.getX() + $$2, this.getY() + $$3, this.getZ() + $$4);
     }
 
-    public net.minecraft.core.Vec3i cross(net.minecraft.core.Vec3i vector) {
-        return new net.minecraft.core.Vec3i(this.getY() * vector.getZ() - this.getZ() * vector.getY(), this.getZ() * vector.getX() - this.getX() * vector.getZ(), this.getX() * vector.getY() - this.getY() * vector.getX());
+    public net.minecraft.core.Vec3i cross(net.minecraft.core.Vec3i $$0) {
+        return new net.minecraft.core.Vec3i(this.getY() * $$0.getZ() - this.getZ() * $$0.getY(), this.getZ() * $$0.getX() - this.getX() * $$0.getZ(), this.getX() * $$0.getY() - this.getY() * $$0.getX());
     }
 
-    public boolean closerThan(net.minecraft.core.Vec3i vector, double distance) {
-        return this.distSqr(vector) < net.minecraft.util.Mth.square((double)distance);
+    public boolean closerThan(net.minecraft.core.Vec3i $$0, double $$1) {
+        return this.distSqr($$0) < net.minecraft.util.Mth.square((double)$$1);
     }
 
     public boolean closerToCenterThan(net.minecraft.core.Position $$0, double $$1) {
         return this.distToCenterSqr($$0) < net.minecraft.util.Mth.square((double)$$1);
     }
 
-    public double distSqr(net.minecraft.core.Vec3i vector) {
-        return this.distToLowCornerSqr((double)vector.getX(), (double)vector.getY(), (double)vector.getZ());
+    public double distSqr(net.minecraft.core.Vec3i $$0) {
+        return this.distToLowCornerSqr((double)$$0.getX(), (double)$$0.getY(), (double)$$0.getZ());
     }
 
     public double distToCenterSqr(net.minecraft.core.Position $$0) {
@@ -229,15 +229,15 @@
         return $$3 * $$3 + $$4 * $$4 + $$5 * $$5;
     }
 
-    public int distManhattan(net.minecraft.core.Vec3i vector) {
-        float f = java.lang.Math.abs((int)(vector.getX() - this.getX()));
-        float f2 = java.lang.Math.abs((int)(vector.getY() - this.getY()));
-        float f3 = java.lang.Math.abs((int)(vector.getZ() - this.getZ()));
-        return (int)(f + f2 + f3);
+    public int distManhattan(net.minecraft.core.Vec3i $$0) {
+        float $$1 = java.lang.Math.abs((int)($$0.getX() - this.getX()));
+        float $$2 = java.lang.Math.abs((int)($$0.getY() - this.getY()));
+        float $$3 = java.lang.Math.abs((int)($$0.getZ() - this.getZ()));
+        return (int)($$1 + $$2 + $$3);
     }
 
-    public int get(net.minecraft.core.Direction$Axis axis) {
-        return axis.choose(this.x, this.y, this.z);
+    public int get(net.minecraft.core.Direction$Axis $$0) {
+        return $$0.choose(this.x, this.y, this.z);
     }
 
     public java.lang.String toString() {