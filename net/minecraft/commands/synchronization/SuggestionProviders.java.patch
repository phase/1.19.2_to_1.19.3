--- net/minecraft/commands/synchronization/SuggestionProviders.java
+++ net/minecraft/commands/synchronization/SuggestionProviders.java
@@ -15,55 +15,55 @@
     public net.minecraft.commands.synchronization.SuggestionProviders() {
     }
 
-    public static <S extends net.minecraft.commands.SharedSuggestionProvider> com.mojang.brigadier.suggestion.SuggestionProvider<S> register(net.minecraft.resources.ResourceLocation name, com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> provider) {
-        if (PROVIDERS_BY_NAME.containsKey((java.lang.Object)name)) {
-            throw new java.lang.IllegalArgumentException("A command suggestion provider is already registered with the name " + name);
+    public static <S extends net.minecraft.commands.SharedSuggestionProvider> com.mojang.brigadier.suggestion.SuggestionProvider<S> register(net.minecraft.resources.ResourceLocation $$0, com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> $$1) {
+        if (PROVIDERS_BY_NAME.containsKey((java.lang.Object)$$0)) {
+            throw new java.lang.IllegalArgumentException("A command suggestion provider is already registered with the name " + $$0);
         }
-        PROVIDERS_BY_NAME.put((java.lang.Object)name, provider);
-        return new net.minecraft.commands.synchronization.SuggestionProviders$Wrapper(name, provider);
+        PROVIDERS_BY_NAME.put((java.lang.Object)$$0, $$1);
+        return new net.minecraft.commands.synchronization.SuggestionProviders$Wrapper($$0, $$1);
     }
 
-    public static com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> getProvider(net.minecraft.resources.ResourceLocation name) {
-        return (com.mojang.brigadier.suggestion.SuggestionProvider)PROVIDERS_BY_NAME.getOrDefault((java.lang.Object)name, (java.lang.Object)ASK_SERVER);
+    public static com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> getProvider(net.minecraft.resources.ResourceLocation $$0) {
+        return (com.mojang.brigadier.suggestion.SuggestionProvider)PROVIDERS_BY_NAME.getOrDefault((java.lang.Object)$$0, (java.lang.Object)ASK_SERVER);
     }
 
-    public static net.minecraft.resources.ResourceLocation getName(com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> provider) {
-        if (provider instanceof net.minecraft.commands.synchronization.SuggestionProviders$Wrapper) {
-            return ((net.minecraft.commands.synchronization.SuggestionProviders$Wrapper)provider).name;
+    public static net.minecraft.resources.ResourceLocation getName(com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> $$0) {
+        if ($$0 instanceof net.minecraft.commands.synchronization.SuggestionProviders$Wrapper) {
+            return ((net.minecraft.commands.synchronization.SuggestionProviders$Wrapper)$$0).name;
         }
         return DEFAULT_NAME;
     }
 
-    public static com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> safelySwap(com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> provider) {
-        if (provider instanceof net.minecraft.commands.synchronization.SuggestionProviders$Wrapper) {
-            return provider;
+    public static com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> safelySwap(com.mojang.brigadier.suggestion.SuggestionProvider<net.minecraft.commands.SharedSuggestionProvider> $$0) {
+        if ($$0 instanceof net.minecraft.commands.synchronization.SuggestionProviders$Wrapper) {
+            return $$0;
         }
         return ASK_SERVER;
     }
 
-    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$4(com.mojang.brigadier.context.CommandContext $$02, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)net.minecraft.core.Registry.ENTITY_TYPE.stream().filter(net.minecraft.world.entity.EntityType::canSummon), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1, net.minecraft.world.entity.EntityType::getKey, $$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)net.minecraft.Util.makeDescriptionId((java.lang.String)"entity", (net.minecraft.resources.ResourceLocation)net.minecraft.world.entity.EntityType.getKey((net.minecraft.world.entity.EntityType)$$0))));
+    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$5(com.mojang.brigadier.context.CommandContext $$02, com.mojang.brigadier.suggestion.SuggestionsBuilder $$12) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)net.minecraft.core.Registry.ENTITY_TYPE.stream().filter($$1 -> $$1.isEnabled(((net.minecraft.commands.SharedSuggestionProvider)$$02.getSource()).enabledFeatures()) && $$1.canSummon()), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$12, net.minecraft.world.entity.EntityType::getKey, $$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)net.minecraft.Util.makeDescriptionId((java.lang.String)"entity", (net.minecraft.resources.ResourceLocation)net.minecraft.world.entity.EntityType.getKey((net.minecraft.world.entity.EntityType)$$0))));
     }
 
-    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$2(com.mojang.brigadier.context.CommandContext context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.lang.Iterable)((net.minecraft.commands.SharedSuggestionProvider)context.getSource()).getAvailableSoundEvents(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder);
+    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$2(com.mojang.brigadier.context.CommandContext $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.lang.Iterable)((net.minecraft.commands.SharedSuggestionProvider)$$0.getSource()).getAvailableSoundEvents(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
     }
 
-    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$1(com.mojang.brigadier.context.CommandContext context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)((net.minecraft.commands.SharedSuggestionProvider)context.getSource()).getRecipeNames(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder);
+    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$1(com.mojang.brigadier.context.CommandContext $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)((net.minecraft.commands.SharedSuggestionProvider)$$0.getSource()).getRecipeNames(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
     }
 
-    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$0(com.mojang.brigadier.context.CommandContext context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return ((net.minecraft.commands.SharedSuggestionProvider)context.getSource()).customSuggestion(context);
+    public static /* synthetic */ java.util.concurrent.CompletableFuture lambda$static$0(com.mojang.brigadier.context.CommandContext $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return ((net.minecraft.commands.SharedSuggestionProvider)$$0.getSource()).customSuggestion($$0);
     }
 
     static {
         PROVIDERS_BY_NAME = com.google.common.collect.Maps.newHashMap();
         DEFAULT_NAME = new net.minecraft.resources.ResourceLocation("ask_server");
-        ASK_SERVER = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)DEFAULT_NAME, (context, builder) -> ((net.minecraft.commands.SharedSuggestionProvider)context.getSource()).customSuggestion(context));
-        ALL_RECIPES = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)new net.minecraft.resources.ResourceLocation("all_recipes"), (context, builder) -> net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)((net.minecraft.commands.SharedSuggestionProvider)context.getSource()).getRecipeNames(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder));
-        AVAILABLE_SOUNDS = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)new net.minecraft.resources.ResourceLocation("available_sounds"), (context, builder) -> net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.lang.Iterable)((net.minecraft.commands.SharedSuggestionProvider)context.getSource()).getAvailableSoundEvents(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder));
-        SUMMONABLE_ENTITIES = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)new net.minecraft.resources.ResourceLocation("summonable_entities"), ($$02, $$1) -> net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)net.minecraft.core.Registry.ENTITY_TYPE.stream().filter(net.minecraft.world.entity.EntityType::canSummon), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1, net.minecraft.world.entity.EntityType::getKey, $$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)net.minecraft.Util.makeDescriptionId((java.lang.String)"entity", (net.minecraft.resources.ResourceLocation)net.minecraft.world.entity.EntityType.getKey((net.minecraft.world.entity.EntityType)$$0)))));
+        ASK_SERVER = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)DEFAULT_NAME, ($$0, $$1) -> ((net.minecraft.commands.SharedSuggestionProvider)$$0.getSource()).customSuggestion($$0));
+        ALL_RECIPES = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)new net.minecraft.resources.ResourceLocation("all_recipes"), ($$0, $$1) -> net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)((net.minecraft.commands.SharedSuggestionProvider)$$0.getSource()).getRecipeNames(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1));
+        AVAILABLE_SOUNDS = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)new net.minecraft.resources.ResourceLocation("available_sounds"), ($$0, $$1) -> net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.lang.Iterable)((net.minecraft.commands.SharedSuggestionProvider)$$0.getSource()).getAvailableSoundEvents(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1));
+        SUMMONABLE_ENTITIES = net.minecraft.commands.synchronization.SuggestionProviders.register((net.minecraft.resources.ResourceLocation)new net.minecraft.resources.ResourceLocation("summonable_entities"), ($$02, $$12) -> net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)net.minecraft.core.Registry.ENTITY_TYPE.stream().filter($$1 -> $$1.isEnabled(((net.minecraft.commands.SharedSuggestionProvider)$$02.getSource()).enabledFeatures()) && $$1.canSummon()), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$12, net.minecraft.world.entity.EntityType::getKey, $$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)net.minecraft.Util.makeDescriptionId((java.lang.String)"entity", (net.minecraft.resources.ResourceLocation)net.minecraft.world.entity.EntityType.getKey((net.minecraft.world.entity.EntityType)$$0)))));
     }
 }
 