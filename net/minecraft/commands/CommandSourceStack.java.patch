--- net/minecraft/commands/CommandSourceStack.java
+++ net/minecraft/commands/CommandSourceStack.java
@@ -25,9 +25,9 @@
     public net.minecraft.commands.CommandSigningContext signingContext;
     public net.minecraft.util.TaskChainer chatMessageChainer;
 
-    public net.minecraft.commands.CommandSourceStack(net.minecraft.commands.CommandSource source, net.minecraft.world.phys.Vec3 worldPosition, net.minecraft.world.phys.Vec2 rotation, net.minecraft.server.level.ServerLevel level, int permissionLevel, java.lang.String textName, net.minecraft.network.chat.Component displayName, net.minecraft.server.MinecraftServer server, @javax.annotation.Nullable net.minecraft.world.entity.Entity entity) {
-        this(source, worldPosition, rotation, level, permissionLevel, textName, displayName, server, entity, false, (context, success, result) -> {}
-, net.minecraft.commands.arguments.EntityAnchorArgument$Anchor.FEET, net.minecraft.commands.CommandSigningContext.ANONYMOUS, net.minecraft.util.TaskChainer.IMMEDIATE);
+    public net.minecraft.commands.CommandSourceStack(net.minecraft.commands.CommandSource $$02, net.minecraft.world.phys.Vec3 $$12, net.minecraft.world.phys.Vec2 $$22, net.minecraft.server.level.ServerLevel $$3, int $$4, java.lang.String $$5, net.minecraft.network.chat.Component $$6, net.minecraft.server.MinecraftServer $$7, @javax.annotation.Nullable net.minecraft.world.entity.Entity $$8) {
+        this($$02, $$12, $$22, $$3, $$4, $$5, $$6, $$7, $$8, false, ($$0, $$1, $$2) -> {}
+, net.minecraft.commands.arguments.EntityAnchorArgument$Anchor.FEET, net.minecraft.commands.CommandSigningContext.ANONYMOUS, net.minecraft.util.TaskChainer.immediate((java.util.concurrent.Executor)$$7));
     }
 
     public net.minecraft.commands.CommandSourceStack(net.minecraft.commands.CommandSource $$0, net.minecraft.world.phys.Vec3 $$1, net.minecraft.world.phys.Vec2 $$2, net.minecraft.server.level.ServerLevel $$3, int $$4, java.lang.String $$5, net.minecraft.network.chat.Component $$6, net.minecraft.server.MinecraftServer $$7, @javax.annotation.Nullable net.minecraft.world.entity.Entity $$8, boolean $$9, @javax.annotation.Nullable com.mojang.brigadier.ResultConsumer<net.minecraft.commands.CommandSourceStack> $$10, net.minecraft.commands.arguments.EntityAnchorArgument$Anchor $$11, net.minecraft.commands.CommandSigningContext $$12, net.minecraft.util.TaskChainer $$13) {
@@ -54,37 +54,37 @@
         return new net.minecraft.commands.CommandSourceStack($$0, this.worldPosition, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withEntity(net.minecraft.world.entity.Entity entity) {
-        if (this.entity == entity) {
+    public net.minecraft.commands.CommandSourceStack withEntity(net.minecraft.world.entity.Entity $$0) {
+        if (this.entity == $$0) {
             return this;
         }
-        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, this.permissionLevel, entity.getName().getString(), entity.getDisplayName(), this.server, entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
+        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, this.permissionLevel, $$0.getName().getString(), $$0.getDisplayName(), this.server, $$0, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withPosition(net.minecraft.world.phys.Vec3 pos) {
-        if (this.worldPosition.equals((java.lang.Object)pos)) {
+    public net.minecraft.commands.CommandSourceStack withPosition(net.minecraft.world.phys.Vec3 $$0) {
+        if (this.worldPosition.equals((java.lang.Object)$$0)) {
             return this;
         }
-        return new net.minecraft.commands.CommandSourceStack(this.source, pos, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
+        return new net.minecraft.commands.CommandSourceStack(this.source, $$0, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withRotation(net.minecraft.world.phys.Vec2 rotation) {
-        if (this.rotation.equals(rotation)) {
+    public net.minecraft.commands.CommandSourceStack withRotation(net.minecraft.world.phys.Vec2 $$0) {
+        if (this.rotation.equals($$0)) {
             return this;
         }
-        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
+        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, $$0, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withCallback(com.mojang.brigadier.ResultConsumer<net.minecraft.commands.CommandSourceStack> consumer) {
-        if (java.util.Objects.equals((java.lang.Object)this.consumer, consumer)) {
+    public net.minecraft.commands.CommandSourceStack withCallback(com.mojang.brigadier.ResultConsumer<net.minecraft.commands.CommandSourceStack> $$0) {
+        if (java.util.Objects.equals((java.lang.Object)this.consumer, $$0)) {
             return this;
         }
-        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, consumer, this.anchor, this.signingContext, this.chatMessageChainer);
+        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, $$0, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withCallback(com.mojang.brigadier.ResultConsumer<net.minecraft.commands.CommandSourceStack> resultConsumer, java.util.function.BinaryOperator<com.mojang.brigadier.ResultConsumer<net.minecraft.commands.CommandSourceStack>> resultConsumerSelector) {
-        com.mojang.brigadier.ResultConsumer resultConsumer2 = (com.mojang.brigadier.ResultConsumer)resultConsumerSelector.apply((java.lang.Object)this.consumer, resultConsumer);
-        return this.withCallback(resultConsumer2);
+    public net.minecraft.commands.CommandSourceStack withCallback(com.mojang.brigadier.ResultConsumer<net.minecraft.commands.CommandSourceStack> $$0, java.util.function.BinaryOperator<com.mojang.brigadier.ResultConsumer<net.minecraft.commands.CommandSourceStack>> $$1) {
+        com.mojang.brigadier.ResultConsumer $$2 = (com.mojang.brigadier.ResultConsumer)$$1.apply((java.lang.Object)this.consumer, $$0);
+        return this.withCallback($$2);
     }
 
     public net.minecraft.commands.CommandSourceStack withSuppressedOutput() {
@@ -94,49 +94,49 @@
         return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, true, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withPermission(int permissionLevel) {
-        if (permissionLevel == this.permissionLevel) {
+    public net.minecraft.commands.CommandSourceStack withPermission(int $$0) {
+        if ($$0 == this.permissionLevel) {
             return this;
         }
-        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
+        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, $$0, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withMaximumPermission(int permissionLevel) {
-        if (permissionLevel <= this.permissionLevel) {
+    public net.minecraft.commands.CommandSourceStack withMaximumPermission(int $$0) {
+        if ($$0 <= this.permissionLevel) {
             return this;
         }
-        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
+        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, $$0, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withAnchor(net.minecraft.commands.arguments.EntityAnchorArgument$Anchor anchor) {
-        if (anchor == this.anchor) {
+    public net.minecraft.commands.CommandSourceStack withAnchor(net.minecraft.commands.arguments.EntityAnchorArgument$Anchor $$0) {
+        if ($$0 == this.anchor) {
             return this;
         }
-        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, anchor, this.signingContext, this.chatMessageChainer);
+        return new net.minecraft.commands.CommandSourceStack(this.source, this.worldPosition, this.rotation, this.level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, $$0, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack withLevel(net.minecraft.server.level.ServerLevel level) {
-        if (level == this.level) {
+    public net.minecraft.commands.CommandSourceStack withLevel(net.minecraft.server.level.ServerLevel $$0) {
+        if ($$0 == this.level) {
             return this;
         }
-        double d = net.minecraft.world.level.dimension.DimensionType.getTeleportationScale((net.minecraft.world.level.dimension.DimensionType)this.level.dimensionType(), (net.minecraft.world.level.dimension.DimensionType)level.dimensionType());
-        net.minecraft.world.phys.Vec3 vec3 = new net.minecraft.world.phys.Vec3(this.worldPosition.x * d, this.worldPosition.y, this.worldPosition.z * d);
-        return new net.minecraft.commands.CommandSourceStack(this.source, vec3, this.rotation, level, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
+        double $$1 = net.minecraft.world.level.dimension.DimensionType.getTeleportationScale((net.minecraft.world.level.dimension.DimensionType)this.level.dimensionType(), (net.minecraft.world.level.dimension.DimensionType)$$0.dimensionType());
+        net.minecraft.world.phys.Vec3 $$2 = new net.minecraft.world.phys.Vec3(this.worldPosition.x * $$1, this.worldPosition.y, this.worldPosition.z * $$1);
+        return new net.minecraft.commands.CommandSourceStack(this.source, $$2, this.rotation, $$0, this.permissionLevel, this.textName, this.displayName, this.server, this.entity, this.silent, this.consumer, this.anchor, this.signingContext, this.chatMessageChainer);
     }
 
-    public net.minecraft.commands.CommandSourceStack facing(net.minecraft.world.entity.Entity entity, net.minecraft.commands.arguments.EntityAnchorArgument$Anchor anchor) {
-        return this.facing(anchor.apply(entity));
+    public net.minecraft.commands.CommandSourceStack facing(net.minecraft.world.entity.Entity $$0, net.minecraft.commands.arguments.EntityAnchorArgument$Anchor $$1) {
+        return this.facing($$1.apply($$0));
     }
 
-    public net.minecraft.commands.CommandSourceStack facing(net.minecraft.world.phys.Vec3 lookPos) {
-        net.minecraft.world.phys.Vec3 vec3 = this.anchor.apply(this);
-        double d = lookPos.x - vec3.x;
-        double d2 = lookPos.y - vec3.y;
-        double d3 = lookPos.z - vec3.z;
-        double d4 = java.lang.Math.sqrt((double)(d * d + d3 * d3));
-        float f = net.minecraft.util.Mth.wrapDegrees((float)((float)(-(net.minecraft.util.Mth.atan2((double)d2, (double)d4) * 57.2957763671875))));
-        float f2 = net.minecraft.util.Mth.wrapDegrees((float)((float)(net.minecraft.util.Mth.atan2((double)d3, (double)d) * 57.2957763671875) - 90.0f));
-        return this.withRotation(new net.minecraft.world.phys.Vec2(f, f2));
+    public net.minecraft.commands.CommandSourceStack facing(net.minecraft.world.phys.Vec3 $$0) {
+        net.minecraft.world.phys.Vec3 $$1 = this.anchor.apply(this);
+        double $$2 = $$0.x - $$1.x;
+        double $$3 = $$0.y - $$1.y;
+        double $$4 = $$0.z - $$1.z;
+        double $$5 = java.lang.Math.sqrt((double)($$2 * $$2 + $$4 * $$4));
+        float $$6 = net.minecraft.util.Mth.wrapDegrees((float)((float)(-(net.minecraft.util.Mth.atan2((double)$$3, (double)$$5) * 57.2957763671875))));
+        float $$7 = net.minecraft.util.Mth.wrapDegrees((float)((float)(net.minecraft.util.Mth.atan2((double)$$4, (double)$$2) * 57.2957763671875) - 90.0f));
+        return this.withRotation(new net.minecraft.world.phys.Vec2($$6, $$7));
     }
 
     public net.minecraft.commands.CommandSourceStack withSigningContext(net.minecraft.commands.CommandSigningContext $$0) {
@@ -161,17 +161,10 @@
         return this.textName;
     }
 
-    public net.minecraft.network.chat.ChatSender asChatSender() {
-        if (this.entity != null) {
-            return this.entity.asChatSender();
-        }
-        return net.minecraft.network.chat.ChatSender.SYSTEM;
+    public boolean hasPermission(int $$0) {
+        return this.permissionLevel >= $$0;
     }
 
-    public boolean hasPermission(int level) {
-        return this.permissionLevel >= level;
-    }
-
     public net.minecraft.world.phys.Vec3 getPosition() {
         return this.worldPosition;
     }
@@ -240,7 +233,7 @@
         return $$1 != null && $$1.isTextFilteringEnabled() || $$0.isTextFilteringEnabled();
     }
 
-    public void sendChatMessage(net.minecraft.network.chat.OutgoingPlayerChatMessage $$0, boolean $$1, net.minecraft.network.chat.ChatType$Bound $$2) {
+    public void sendChatMessage(net.minecraft.network.chat.OutgoingChatMessage $$0, boolean $$1, net.minecraft.network.chat.ChatType$Bound $$2) {
         if (this.silent) {
             return;
         }
@@ -248,7 +241,7 @@
         if ($$3 != null) {
             $$3.sendChatMessage($$0, $$1, $$2);
         } else {
-            this.source.sendSystemMessage($$2.decorate($$0.serverContent()));
+            this.source.sendSystemMessage($$2.decorate($$0.content()));
         }
     }
 
@@ -264,37 +257,37 @@
         }
     }
 
-    public void sendSuccess(net.minecraft.network.chat.Component message, boolean allowLogging) {
+    public void sendSuccess(net.minecraft.network.chat.Component $$0, boolean $$1) {
         if (this.source.acceptsSuccess() && !this.silent) {
-            this.source.sendSystemMessage(message);
+            this.source.sendSystemMessage($$0);
         }
-        if (allowLogging && this.source.shouldInformAdmins() && !this.silent) {
-            this.broadcastToAdmins(message);
+        if ($$1 && this.source.shouldInformAdmins() && !this.silent) {
+            this.broadcastToAdmins($$0);
         }
     }
 
-    public void broadcastToAdmins(net.minecraft.network.chat.Component message) {
-        net.minecraft.network.chat.MutableComponent mutableComponent = net.minecraft.network.chat.Component.translatable((java.lang.String)"chat.type.admin", (java.lang.Object[])new java.lang.Object[]{this.getDisplayName(), message}).withStyle(new net.minecraft.ChatFormatting[]{net.minecraft.ChatFormatting.GRAY, net.minecraft.ChatFormatting.ITALIC});
+    public void broadcastToAdmins(net.minecraft.network.chat.Component $$0) {
+        net.minecraft.network.chat.MutableComponent $$1 = net.minecraft.network.chat.Component.translatable((java.lang.String)"chat.type.admin", (java.lang.Object[])new java.lang.Object[]{this.getDisplayName(), $$0}).withStyle(new net.minecraft.ChatFormatting[]{net.minecraft.ChatFormatting.GRAY, net.minecraft.ChatFormatting.ITALIC});
         if (this.server.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_SENDCOMMANDFEEDBACK)) {
-            for (net.minecraft.server.level.ServerPlayer serverPlayer : this.server.getPlayerList().getPlayers()) {
-                if (serverPlayer == this.source || !this.server.getPlayerList().isOp(serverPlayer.getGameProfile())) continue;
-                serverPlayer.sendSystemMessage((net.minecraft.network.chat.Component)mutableComponent);
+            for (net.minecraft.server.level.ServerPlayer $$2 : this.server.getPlayerList().getPlayers()) {
+                if ($$2 == this.source || !this.server.getPlayerList().isOp($$2.getGameProfile())) continue;
+                $$2.sendSystemMessage((net.minecraft.network.chat.Component)$$1);
             }
         }
         if (this.source != this.server && this.server.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_LOGADMINCOMMANDS)) {
-            this.server.sendSystemMessage((net.minecraft.network.chat.Component)mutableComponent);
+            this.server.sendSystemMessage((net.minecraft.network.chat.Component)$$1);
         }
     }
 
-    public void sendFailure(net.minecraft.network.chat.Component message) {
+    public void sendFailure(net.minecraft.network.chat.Component $$0) {
         if (this.source.acceptsFailure() && !this.silent) {
-            this.source.sendSystemMessage((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.empty().append(message).withStyle(net.minecraft.ChatFormatting.RED));
+            this.source.sendSystemMessage((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.empty().append($$0).withStyle(net.minecraft.ChatFormatting.RED));
         }
     }
 
-    public void onCommandComplete(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, boolean success, int result) {
+    public void onCommandComplete(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, boolean $$1, int $$2) {
         if (this.consumer != null) {
-            this.consumer.onCommandComplete(context, success, result);
+            this.consumer.onCommandComplete($$0, $$1, $$2);
         }
     }
 
@@ -333,6 +326,10 @@
         return this.server.registryAccess();
     }
 
+    public net.minecraft.world.flag.FeatureFlagSet enabledFeatures() {
+        return this.level.enabledFeatures();
+    }
+
     static {
         ERROR_NOT_PLAYER = new com.mojang.brigadier.exceptions.SimpleCommandExceptionType((com.mojang.brigadier.Message)net.minecraft.network.chat.Component.translatable((java.lang.String)"permissions.requires.player"));
         ERROR_NOT_ENTITY = new com.mojang.brigadier.exceptions.SimpleCommandExceptionType((com.mojang.brigadier.Message)net.minecraft.network.chat.Component.translatable((java.lang.String)"permissions.requires.entity"));