--- net/minecraft/commands/arguments/blocks/BlockStateParser.java
+++ net/minecraft/commands/arguments/blocks/BlockStateParser.java
@@ -48,14 +48,10 @@
         this.allowNbt = $$3;
     }
 
-    public static net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult parseForBlock(net.minecraft.core.Registry<net.minecraft.world.level.block.Block> $$0, java.lang.String $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+    public static net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult parseForBlock(net.minecraft.core.HolderLookup<net.minecraft.world.level.block.Block> $$0, java.lang.String $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         return net.minecraft.commands.arguments.blocks.BlockStateParser.parseForBlock($$0, (com.mojang.brigadier.StringReader)new com.mojang.brigadier.StringReader($$1), (boolean)$$2);
     }
 
-    public static net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult parseForBlock(net.minecraft.core.Registry<net.minecraft.world.level.block.Block> $$0, com.mojang.brigadier.StringReader $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return net.minecraft.commands.arguments.blocks.BlockStateParser.parseForBlock((net.minecraft.core.HolderLookup)net.minecraft.core.HolderLookup.forRegistry($$0), (com.mojang.brigadier.StringReader)$$1, (boolean)$$2);
-    }
-
     public static net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult parseForBlock(net.minecraft.core.HolderLookup<net.minecraft.world.level.block.Block> $$0, com.mojang.brigadier.StringReader $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         int $$3 = $$1.getCursor();
         try {
@@ -69,14 +65,10 @@
         }
     }
 
-    public static com.mojang.datafixers.util.Either<net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult, net.minecraft.commands.arguments.blocks.BlockStateParser$TagResult> parseForTesting(net.minecraft.core.Registry<net.minecraft.world.level.block.Block> $$0, java.lang.String $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+    public static com.mojang.datafixers.util.Either<net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult, net.minecraft.commands.arguments.blocks.BlockStateParser$TagResult> parseForTesting(net.minecraft.core.HolderLookup<net.minecraft.world.level.block.Block> $$0, java.lang.String $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         return net.minecraft.commands.arguments.blocks.BlockStateParser.parseForTesting($$0, (com.mojang.brigadier.StringReader)new com.mojang.brigadier.StringReader($$1), (boolean)$$2);
     }
 
-    public static com.mojang.datafixers.util.Either<net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult, net.minecraft.commands.arguments.blocks.BlockStateParser$TagResult> parseForTesting(net.minecraft.core.Registry<net.minecraft.world.level.block.Block> $$0, com.mojang.brigadier.StringReader $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return net.minecraft.commands.arguments.blocks.BlockStateParser.parseForTesting((net.minecraft.core.HolderLookup)net.minecraft.core.HolderLookup.forRegistry($$0), (com.mojang.brigadier.StringReader)new com.mojang.brigadier.StringReader($$1), (boolean)$$2);
-    }
-
     public static com.mojang.datafixers.util.Either<net.minecraft.commands.arguments.blocks.BlockStateParser$BlockResult, net.minecraft.commands.arguments.blocks.BlockStateParser$TagResult> parseForTesting(net.minecraft.core.HolderLookup<net.minecraft.world.level.block.Block> $$0, com.mojang.brigadier.StringReader $$1, boolean $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         int $$3 = $$1.getCursor();
         try {
@@ -202,16 +194,16 @@
         return $$0.buildFuture();
     }
 
-    public static <T extends java.lang.Comparable<T>> com.mojang.brigadier.suggestion.SuggestionsBuilder addSuggestions(com.mojang.brigadier.suggestion.SuggestionsBuilder builder, net.minecraft.world.level.block.state.properties.Property<T> property) {
-        for (java.lang.Comparable comparable : property.getPossibleValues()) {
-            if (comparable instanceof java.lang.Integer) {
-                java.lang.Integer n = (java.lang.Integer)comparable;
-                builder.suggest(n.intValue());
+    public static <T extends java.lang.Comparable<T>> com.mojang.brigadier.suggestion.SuggestionsBuilder addSuggestions(com.mojang.brigadier.suggestion.SuggestionsBuilder $$0, net.minecraft.world.level.block.state.properties.Property<T> $$1) {
+        for (java.lang.Comparable $$2 : $$1.getPossibleValues()) {
+            if ($$2 instanceof java.lang.Integer) {
+                java.lang.Integer $$3 = (java.lang.Integer)$$2;
+                $$0.suggest($$3.intValue());
                 continue;
             }
-            builder.suggest(property.getName(comparable));
+            $$0.suggest($$1.getName($$2));
         }
-        return builder;
+        return $$0;
     }
 
     public java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> suggestVaguePropertyValue(com.mojang.brigadier.suggestion.SuggestionsBuilder $$0, java.lang.String $$1) {
@@ -286,7 +278,7 @@
     public void readBlock() throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         int $$0 = this.reader.getCursor();
         this.id = net.minecraft.resources.ResourceLocation.read((com.mojang.brigadier.StringReader)this.reader);
-        net.minecraft.world.level.block.Block $$1 = (net.minecraft.world.level.block.Block)((net.minecraft.core.Holder)this.blocks.get(net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceKey)net.minecraft.core.Registry.BLOCK_REGISTRY, (net.minecraft.resources.ResourceLocation)this.id)).orElseThrow(() -> {
+        net.minecraft.world.level.block.Block $$1 = (net.minecraft.world.level.block.Block)((net.minecraft.core.Holder$Reference)this.blocks.get(net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceKey)net.minecraft.core.Registry.BLOCK_REGISTRY, (net.minecraft.resources.ResourceLocation)this.id)).orElseThrow(() -> {
             this.reader.setCursor($$0);
             return ERROR_UNKNOWN_BLOCK.createWithContext((com.mojang.brigadier.ImmutableStringReader)this.reader, (java.lang.Object)this.id.toString());
         })).value();
@@ -400,70 +392,70 @@
         this.nbt = new net.minecraft.nbt.TagParser(this.reader).readStruct();
     }
 
-    public <T extends java.lang.Comparable<T>> void setValue(net.minecraft.world.level.block.state.properties.Property<T> property, java.lang.String value, int valuePosition) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        java.util.Optional optional = property.getValue(value);
-        if (!optional.isPresent()) {
-            this.reader.setCursor(valuePosition);
-            throw ERROR_INVALID_VALUE.createWithContext((com.mojang.brigadier.ImmutableStringReader)this.reader, (java.lang.Object)this.id.toString(), (java.lang.Object)property.getName(), (java.lang.Object)value);
+    public <T extends java.lang.Comparable<T>> void setValue(net.minecraft.world.level.block.state.properties.Property<T> $$0, java.lang.String $$1, int $$2) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        java.util.Optional $$3 = $$0.getValue($$1);
+        if (!$$3.isPresent()) {
+            this.reader.setCursor($$2);
+            throw ERROR_INVALID_VALUE.createWithContext((com.mojang.brigadier.ImmutableStringReader)this.reader, (java.lang.Object)this.id.toString(), (java.lang.Object)$$0.getName(), (java.lang.Object)$$1);
         }
-        this.state = (net.minecraft.world.level.block.state.BlockState)this.state.setValue(property, (java.lang.Comparable)optional.get());
-        this.properties.put(property, (java.lang.Object)((java.lang.Comparable)optional.get()));
+        this.state = (net.minecraft.world.level.block.state.BlockState)this.state.setValue($$0, (java.lang.Comparable)$$3.get());
+        this.properties.put($$0, (java.lang.Object)((java.lang.Comparable)$$3.get()));
     }
 
-    public static java.lang.String serialize(net.minecraft.world.level.block.state.BlockState state) {
-        java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder((java.lang.String)state.getBlockHolder().unwrapKey().map($$0 -> $$0.location().toString()).orElse((java.lang.Object)"air"));
-        if (!state.getProperties().isEmpty()) {
-            stringBuilder.append('[');
-            boolean bl = false;
-            for (java.util.Map$Entry entry : state.getValues().entrySet()) {
-                if (bl) {
-                    stringBuilder.append(',');
+    public static java.lang.String serialize(net.minecraft.world.level.block.state.BlockState $$02) {
+        java.lang.StringBuilder $$1 = new java.lang.StringBuilder((java.lang.String)$$02.getBlockHolder().unwrapKey().map($$0 -> $$0.location().toString()).orElse((java.lang.Object)"air"));
+        if (!$$02.getProperties().isEmpty()) {
+            $$1.append('[');
+            boolean $$2 = false;
+            for (java.util.Map$Entry $$3 : $$02.getValues().entrySet()) {
+                if ($$2) {
+                    $$1.append(',');
                 }
-                net.minecraft.commands.arguments.blocks.BlockStateParser.appendProperty((java.lang.StringBuilder)stringBuilder, (net.minecraft.world.level.block.state.properties.Property)((net.minecraft.world.level.block.state.properties.Property)entry.getKey()), (java.lang.Comparable)((java.lang.Comparable)entry.getValue()));
-                bl = true;
+                net.minecraft.commands.arguments.blocks.BlockStateParser.appendProperty((java.lang.StringBuilder)$$1, (net.minecraft.world.level.block.state.properties.Property)((net.minecraft.world.level.block.state.properties.Property)$$3.getKey()), (java.lang.Comparable)((java.lang.Comparable)$$3.getValue()));
+                $$2 = true;
             }
-            stringBuilder.append(']');
+            $$1.append(']');
         }
-        return stringBuilder.toString();
+        return $$1.toString();
     }
 
-    public static <T extends java.lang.Comparable<T>> void appendProperty(java.lang.StringBuilder builder, net.minecraft.world.level.block.state.properties.Property<T> property, java.lang.Comparable<?> value) {
-        builder.append(property.getName());
-        builder.append('=');
-        builder.append(property.getName(value));
+    public static <T extends java.lang.Comparable<T>> void appendProperty(java.lang.StringBuilder $$0, net.minecraft.world.level.block.state.properties.Property<T> $$1, java.lang.Comparable<?> $$2) {
+        $$0.append($$1.getName());
+        $$0.append('=');
+        $$0.append($$1.getName($$2));
     }
 
     public static /* synthetic */ com.mojang.brigadier.Message lambda$static$5(java.lang.Object $$0) {
         return net.minecraft.network.chat.Component.translatable((java.lang.String)"arguments.block.tag.unknown", (java.lang.Object[])new java.lang.Object[]{$$0});
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$4(java.lang.Object property, java.lang.Object block) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.novalue", (java.lang.Object[])new java.lang.Object[]{property, block});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$4(java.lang.Object $$0, java.lang.Object $$1) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.novalue", (java.lang.Object[])new java.lang.Object[]{$$0, $$1});
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$3(java.lang.Object block, java.lang.Object value, java.lang.Object property) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.invalid", (java.lang.Object[])new java.lang.Object[]{block, property, value});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$3(java.lang.Object $$0, java.lang.Object $$1, java.lang.Object $$2) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.invalid", (java.lang.Object[])new java.lang.Object[]{$$0, $$2, $$1});
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$2(java.lang.Object property, java.lang.Object block) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.duplicate", (java.lang.Object[])new java.lang.Object[]{block, property});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$2(java.lang.Object $$0, java.lang.Object $$1) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.duplicate", (java.lang.Object[])new java.lang.Object[]{$$1, $$0});
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$1(java.lang.Object block, java.lang.Object property) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.unknown", (java.lang.Object[])new java.lang.Object[]{block, property});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$1(java.lang.Object $$0, java.lang.Object $$1) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.unknown", (java.lang.Object[])new java.lang.Object[]{$$0, $$1});
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object block) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.id.invalid", (java.lang.Object[])new java.lang.Object[]{block});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object $$0) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.id.invalid", (java.lang.Object[])new java.lang.Object[]{$$0});
     }
 
     static {
         ERROR_NO_TAGS_ALLOWED = new com.mojang.brigadier.exceptions.SimpleCommandExceptionType((com.mojang.brigadier.Message)net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.tag.disallowed"));
-        ERROR_UNKNOWN_BLOCK = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType(block -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.id.invalid", (java.lang.Object[])new java.lang.Object[]{block}));
-        ERROR_UNKNOWN_PROPERTY = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType((block, property) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.unknown", (java.lang.Object[])new java.lang.Object[]{block, property}));
-        ERROR_DUPLICATE_PROPERTY = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType((property, block) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.duplicate", (java.lang.Object[])new java.lang.Object[]{block, property}));
-        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.Dynamic3CommandExceptionType((block, value, property) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.invalid", (java.lang.Object[])new java.lang.Object[]{block, property, value}));
-        ERROR_EXPECTED_VALUE = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType((property, block) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.novalue", (java.lang.Object[])new java.lang.Object[]{property, block}));
+        ERROR_UNKNOWN_BLOCK = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType($$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.id.invalid", (java.lang.Object[])new java.lang.Object[]{$$0}));
+        ERROR_UNKNOWN_PROPERTY = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType(($$0, $$1) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.unknown", (java.lang.Object[])new java.lang.Object[]{$$0, $$1}));
+        ERROR_DUPLICATE_PROPERTY = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType(($$0, $$1) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.duplicate", (java.lang.Object[])new java.lang.Object[]{$$1, $$0}));
+        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.Dynamic3CommandExceptionType(($$0, $$1, $$2) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.invalid", (java.lang.Object[])new java.lang.Object[]{$$0, $$2, $$1}));
+        ERROR_EXPECTED_VALUE = new com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType(($$0, $$1) -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.novalue", (java.lang.Object[])new java.lang.Object[]{$$0, $$1}));
         ERROR_EXPECTED_END_OF_PROPERTIES = new com.mojang.brigadier.exceptions.SimpleCommandExceptionType((com.mojang.brigadier.Message)net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.block.property.unclosed"));
         ERROR_UNKNOWN_TAG = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType($$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)"arguments.block.tag.unknown", (java.lang.Object[])new java.lang.Object[]{$$0}));
         SUGGEST_NOTHING = com.mojang.brigadier.suggestion.SuggestionsBuilder::buildFuture;