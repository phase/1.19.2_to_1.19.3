--- net/minecraft/commands/arguments/blocks/BlockInput.java
+++ net/minecraft/commands/arguments/blocks/BlockInput.java
@@ -11,10 +11,10 @@
     @javax.annotation.Nullable
     public net.minecraft.nbt.CompoundTag tag;
 
-    public net.minecraft.commands.arguments.blocks.BlockInput(net.minecraft.world.level.block.state.BlockState state, java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> properties, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag tag) {
-        this.state = state;
-        this.properties = properties;
-        this.tag = tag;
+    public net.minecraft.commands.arguments.blocks.BlockInput(net.minecraft.world.level.block.state.BlockState $$0, java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> $$1, @javax.annotation.Nullable net.minecraft.nbt.CompoundTag $$2) {
+        this.state = $$0;
+        this.properties = $$1;
+        this.tag = $$2;
     }
 
     public net.minecraft.world.level.block.state.BlockState getState() {
@@ -25,18 +25,18 @@
         return this.properties;
     }
 
-    public boolean test(net.minecraft.world.level.block.state.pattern.BlockInWorld block) {
-        net.minecraft.world.level.block.state.BlockState blockState = block.getState();
-        if (!blockState.is(this.state.getBlock())) {
+    public boolean test(net.minecraft.world.level.block.state.pattern.BlockInWorld $$0) {
+        net.minecraft.world.level.block.state.BlockState $$1 = $$0.getState();
+        if (!$$1.is(this.state.getBlock())) {
             return false;
         }
-        for (net.minecraft.world.level.block.state.properties.Property property : this.properties) {
-            if (blockState.getValue(property) == this.state.getValue(property)) continue;
+        for (net.minecraft.world.level.block.state.properties.Property $$2 : this.properties) {
+            if ($$1.getValue($$2) == this.state.getValue($$2)) continue;
             return false;
         }
         if (this.tag != null) {
-            java.util.Iterator iterator = block.getEntity();
-            return iterator != null && net.minecraft.nbt.NbtUtils.compareNbt((net.minecraft.nbt.Tag)this.tag, (net.minecraft.nbt.Tag)iterator.saveWithFullMetadata(), (boolean)true);
+            net.minecraft.world.level.block.entity.BlockEntity $$3 = $$0.getEntity();
+            return $$3 != null && net.minecraft.nbt.NbtUtils.compareNbt((net.minecraft.nbt.Tag)this.tag, (net.minecraft.nbt.Tag)$$3.saveWithFullMetadata(), (boolean)true);
         }
         return true;
     }
@@ -45,17 +45,17 @@
         return this.test(new net.minecraft.world.level.block.state.pattern.BlockInWorld((net.minecraft.world.level.LevelReader)$$0, $$1, false));
     }
 
-    public boolean place(net.minecraft.server.level.ServerLevel level, net.minecraft.core.BlockPos pos, int flags) {
-        net.minecraft.world.level.block.entity.BlockEntity blockEntity;
-        net.minecraft.world.level.block.state.BlockState blockState = net.minecraft.world.level.block.Block.updateFromNeighbourShapes((net.minecraft.world.level.block.state.BlockState)this.state, (net.minecraft.world.level.LevelAccessor)level, (net.minecraft.core.BlockPos)pos);
-        if (blockState.isAir()) {
-            blockState = this.state;
+    public boolean place(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1, int $$2) {
+        net.minecraft.world.level.block.entity.BlockEntity $$4;
+        net.minecraft.world.level.block.state.BlockState $$3 = net.minecraft.world.level.block.Block.updateFromNeighbourShapes((net.minecraft.world.level.block.state.BlockState)this.state, (net.minecraft.world.level.LevelAccessor)$$0, (net.minecraft.core.BlockPos)$$1);
+        if ($$3.isAir()) {
+            $$3 = this.state;
         }
-        if (!level.setBlock(pos, blockState, flags)) {
+        if (!$$0.setBlock($$1, $$3, $$2)) {
             return false;
         }
-        if (this.tag != null && (blockEntity = level.getBlockEntity(pos)) != null) {
-            blockEntity.load(this.tag);
+        if (this.tag != null && ($$4 = $$0.getBlockEntity($$1)) != null) {
+            $$4.load(this.tag);
         }
         return true;
     }