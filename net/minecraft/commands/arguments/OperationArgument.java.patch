--- net/minecraft/commands/arguments/OperationArgument.java
+++ net/minecraft/commands/arguments/OperationArgument.java
@@ -17,44 +17,44 @@
         return new net.minecraft.commands.arguments.OperationArgument();
     }
 
-    public static net.minecraft.commands.arguments.OperationArgument$Operation getOperation(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) {
-        return (net.minecraft.commands.arguments.OperationArgument$Operation)context.getArgument(name, net.minecraft.commands.arguments.OperationArgument$Operation.class);
+    public static net.minecraft.commands.arguments.OperationArgument$Operation getOperation(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) {
+        return (net.minecraft.commands.arguments.OperationArgument$Operation)$$0.getArgument($$1, net.minecraft.commands.arguments.OperationArgument$Operation.class);
     }
 
-    public net.minecraft.commands.arguments.OperationArgument$Operation parse(com.mojang.brigadier.StringReader reader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (reader.canRead()) {
-            int n = reader.getCursor();
-            while (reader.canRead() && reader.peek() != ' ') {
-                reader.skip();
+    public net.minecraft.commands.arguments.OperationArgument$Operation parse(com.mojang.brigadier.StringReader $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$0.canRead()) {
+            int $$1 = $$0.getCursor();
+            while ($$0.canRead() && $$0.peek() != ' ') {
+                $$0.skip();
             }
-            return net.minecraft.commands.arguments.OperationArgument.getOperation((java.lang.String)reader.getString().substring(n, reader.getCursor()));
+            return net.minecraft.commands.arguments.OperationArgument.getOperation((java.lang.String)$$0.getString().substring($$1, $$0.getCursor()));
         }
         throw ERROR_INVALID_OPERATION.create();
     }
 
-    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) {
-        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.String[])new java.lang.String[]{"=", "+=", "-=", "*=", "/=", "%=", "<", ">", "><"}, (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder);
+    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) {
+        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.String[])new java.lang.String[]{"=", "+=", "-=", "*=", "/=", "%=", "<", ">", "><"}, (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
     }
 
     public java.util.Collection<java.lang.String> getExamples() {
         return EXAMPLES;
     }
 
-    public static net.minecraft.commands.arguments.OperationArgument$Operation getOperation(java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (name.equals((java.lang.Object)"><")) {
-            return (targetScore, sourceScore) -> {
-                int n = targetScore.getScore();
-                targetScore.setScore(sourceScore.getScore());
-                sourceScore.setScore(n);
+    public static net.minecraft.commands.arguments.OperationArgument$Operation getOperation(java.lang.String $$02) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$02.equals((java.lang.Object)"><")) {
+            return ($$0, $$1) -> {
+                int $$2 = $$0.getScore();
+                $$0.setScore($$1.getScore());
+                $$1.setScore($$2);
             };
         }
-        return net.minecraft.commands.arguments.OperationArgument.getSimpleOperation((java.lang.String)name);
+        return net.minecraft.commands.arguments.OperationArgument.getSimpleOperation((java.lang.String)$$02);
     }
 
     /*
      * Exception decompiling
      */
-    public static net.minecraft.commands.arguments.OperationArgument$SimpleOperation getSimpleOperation(java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+    public static net.minecraft.commands.arguments.OperationArgument$SimpleOperation getSimpleOperation(java.lang.String $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         /*
          * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
 
@@ -90,10 +90,138 @@
          *     at java.base/java.util.stream.AbstractTask.compute(AbstractTask.java:327)
          *     at java.base/java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:754)
          *     at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
-         *     at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
-         *     at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
-         *     at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
-         *     at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
+         *     at java.base/java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1950)
+         *     at java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:433)
+         *     at java.base/java.util.concurrent.ForkJoinTask.invoke(ForkJoinTask.java:687)
+         *     at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateParallel(ReduceOps.java:927)
+         *     at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:233)
+         *     at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
+         *     at com.moonsworth.lunar.gradle.kotlin.SourceDiffKt.decompileJar(sourceDiff.kt:80)
+         *     at com.moonsworth.lunar.gradle.kotlin.SourceDiffKt.decompileJar$default(sourceDiff.kt:64)
+         *     at com.moonsworth.lunar.gradle.kotlin.SourceDiffKt.diff(sourceDiff.kt:37)
+         *     at com.moonsworth.lunar.gradle.kotlin.SourceDiffKt.diff(sourceDiff.kt:19)
+         *     at com.moonsworth.lunar.gradle.kotlin.DiffMinecraft.run(tasks.kt:39)
+         *     at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+         *     at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
+         *     at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+         *     at java.base/java.lang.reflect.Method.invoke(Method.java:568)
+         *     at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:125)
+         *     at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)
+         *     at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)
+         *     at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)
+         *     at org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:236)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)
+         *     at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)
+         *     at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:221)
+         *     at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:204)
+         *     at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:187)
+         *     at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:165)
+         *     at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)
+         *     at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)
+         *     at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)
+         *     at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)
+         *     at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)
+         *     at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)
+         *     at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)
+         *     at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)
+         *     at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)
+         *     at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)
+         *     at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)
+         *     at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)
+         *     at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)
+         *     at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)
+         *     at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.executeDelegateBroadcastingChanges(CaptureStateAfterExecutionStep.java:124)
+         *     at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:80)
+         *     at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:58)
+         *     at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)
+         *     at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)
+         *     at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:181)
+         *     at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:71)
+         *     at org.gradle.internal.Either$Right.fold(Either.java:175)
+         *     at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)
+         *     at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:69)
+         *     at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:47)
+         *     at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)
+         *     at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)
+         *     at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)
+         *     at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)
+         *     at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)
+         *     at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)
+         *     at java.base/java.util.Optional.orElseGet(Optional.java:364)
+         *     at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)
+         *     at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)
+         *     at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)
+         *     at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)
+         *     at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)
+         *     at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)
+         *     at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)
+         *     at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)
+         *     at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)
+         *     at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)
+         *     at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)
+         *     at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)
+         *     at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:254)
+         *     at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:91)
+         *     at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:56)
+         *     at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)
+         *     at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)
+         *     at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)
+         *     at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)
+         *     at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)
+         *     at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)
+         *     at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:281)
+         *     at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)
+         *     at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)
+         *     at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)
+         *     at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)
+         *     at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)
+         *     at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)
+         *     at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)
+         *     at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:139)
+         *     at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)
+         *     at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)
+         *     at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)
+         *     at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)
+         *     at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)
+         *     at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)
+         *     at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)
+         *     at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)
+         *     at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)
+         *     at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
+         *     at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)
+         *     at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)
+         *     at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)
+         *     at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)
+         *     at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:327)
+         *     at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:314)
+         *     at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:307)
+         *     at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:293)
+         *     at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:417)
+         *     at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:339)
+         *     at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
+         *     at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
+         *     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
+         *     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
+         *     at java.base/java.lang.Thread.run(Thread.java:833)
          */
         throw new IllegalStateException("Decompilation failed");
     }
@@ -102,34 +230,34 @@
         return this.parse(stringReader);
     }
 
-    public static /* synthetic */ int lambda$getSimpleOperation$6(int targetScore, int sourceScore) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (sourceScore == 0) {
+    public static /* synthetic */ int lambda$getSimpleOperation$6(int $$0, int $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1 == 0) {
             throw ERROR_DIVIDE_BY_ZERO.create();
         }
-        return net.minecraft.util.Mth.positiveModulo((int)targetScore, (int)sourceScore);
+        return net.minecraft.util.Mth.positiveModulo((int)$$0, (int)$$1);
     }
 
-    public static /* synthetic */ int lambda$getSimpleOperation$5(int targetScore, int sourceScore) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (sourceScore == 0) {
+    public static /* synthetic */ int lambda$getSimpleOperation$5(int $$0, int $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if ($$1 == 0) {
             throw ERROR_DIVIDE_BY_ZERO.create();
         }
-        return net.minecraft.util.Mth.intFloorDiv((int)targetScore, (int)sourceScore);
+        return net.minecraft.util.Mth.intFloorDiv((int)$$0, (int)$$1);
     }
 
-    public static /* synthetic */ int lambda$getSimpleOperation$4(int targetScore, int sourceScore) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return targetScore * sourceScore;
+    public static /* synthetic */ int lambda$getSimpleOperation$4(int $$0, int $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return $$0 * $$1;
     }
 
-    public static /* synthetic */ int lambda$getSimpleOperation$3(int targetScore, int sourceScore) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return targetScore - sourceScore;
+    public static /* synthetic */ int lambda$getSimpleOperation$3(int $$0, int $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return $$0 - $$1;
     }
 
-    public static /* synthetic */ int lambda$getSimpleOperation$2(int targetScore, int sourceScore) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return targetScore + sourceScore;
+    public static /* synthetic */ int lambda$getSimpleOperation$2(int $$0, int $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return $$0 + $$1;
     }
 
-    public static /* synthetic */ int lambda$getSimpleOperation$1(int targetScore, int sourceScore) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return sourceScore;
+    public static /* synthetic */ int lambda$getSimpleOperation$1(int $$0, int $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return $$1;
     }
 
     static {