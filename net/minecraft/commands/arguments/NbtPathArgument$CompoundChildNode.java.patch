--- net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode.java
+++ net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode.java
@@ -8,28 +8,28 @@
  {
     public java.lang.String name;
 
-    public net.minecraft.commands.arguments.NbtPathArgument$CompoundChildNode(java.lang.String name) {
-        this.name = name;
+    public net.minecraft.commands.arguments.NbtPathArgument$CompoundChildNode(java.lang.String $$0) {
+        this.name = $$0;
     }
 
-    public void getTag(net.minecraft.nbt.Tag tag, java.util.List<net.minecraft.nbt.Tag> tags) {
-        net.minecraft.nbt.Tag tag2;
-        if (tag instanceof net.minecraft.nbt.CompoundTag && (tag2 = ((net.minecraft.nbt.CompoundTag)tag).get(this.name)) != null) {
-            tags.add((java.lang.Object)tag2);
+    public void getTag(net.minecraft.nbt.Tag $$0, java.util.List<net.minecraft.nbt.Tag> $$1) {
+        net.minecraft.nbt.Tag $$2;
+        if ($$0 instanceof net.minecraft.nbt.CompoundTag && ($$2 = ((net.minecraft.nbt.CompoundTag)$$0).get(this.name)) != null) {
+            $$1.add((java.lang.Object)$$2);
         }
     }
 
-    public void getOrCreateTag(net.minecraft.nbt.Tag tag, java.util.function.Supplier<net.minecraft.nbt.Tag> supplier, java.util.List<net.minecraft.nbt.Tag> tags) {
-        if (tag instanceof net.minecraft.nbt.CompoundTag) {
-            net.minecraft.nbt.Tag tag2;
-            net.minecraft.nbt.CompoundTag compoundTag = (net.minecraft.nbt.CompoundTag)tag;
-            if (compoundTag.contains(this.name)) {
-                tag2 = compoundTag.get(this.name);
+    public void getOrCreateTag(net.minecraft.nbt.Tag $$0, java.util.function.Supplier<net.minecraft.nbt.Tag> $$1, java.util.List<net.minecraft.nbt.Tag> $$2) {
+        if ($$0 instanceof net.minecraft.nbt.CompoundTag) {
+            net.minecraft.nbt.Tag $$5;
+            net.minecraft.nbt.CompoundTag $$3 = (net.minecraft.nbt.CompoundTag)$$0;
+            if ($$3.contains(this.name)) {
+                net.minecraft.nbt.Tag $$4 = $$3.get(this.name);
             } else {
-                tag2 = (net.minecraft.nbt.Tag)supplier.get();
-                compoundTag.put(this.name, tag2);
+                $$5 = (net.minecraft.nbt.Tag)$$1.get();
+                $$3.put(this.name, $$5);
             }
-            tags.add((java.lang.Object)tag2);
+            $$2.add((java.lang.Object)$$5);
         }
     }
 
@@ -37,22 +37,22 @@
         return new net.minecraft.nbt.CompoundTag();
     }
 
-    public int setTag(net.minecraft.nbt.Tag tag, java.util.function.Supplier<net.minecraft.nbt.Tag> supplier) {
-        if (tag instanceof net.minecraft.nbt.CompoundTag) {
-            net.minecraft.nbt.Tag tag2;
-            net.minecraft.nbt.CompoundTag compoundTag = (net.minecraft.nbt.CompoundTag)tag;
-            net.minecraft.nbt.Tag tag3 = (net.minecraft.nbt.Tag)supplier.get();
-            if (!tag3.equals((java.lang.Object)(tag2 = compoundTag.put(this.name, tag3)))) {
+    public int setTag(net.minecraft.nbt.Tag $$0, java.util.function.Supplier<net.minecraft.nbt.Tag> $$1) {
+        if ($$0 instanceof net.minecraft.nbt.CompoundTag) {
+            net.minecraft.nbt.Tag $$4;
+            net.minecraft.nbt.CompoundTag $$2 = (net.minecraft.nbt.CompoundTag)$$0;
+            net.minecraft.nbt.Tag $$3 = (net.minecraft.nbt.Tag)$$1.get();
+            if (!$$3.equals((java.lang.Object)($$4 = $$2.put(this.name, $$3)))) {
                 return 1;
             }
         }
         return 0;
     }
 
-    public int removeTag(net.minecraft.nbt.Tag tag) {
-        net.minecraft.nbt.CompoundTag compoundTag;
-        if (tag instanceof net.minecraft.nbt.CompoundTag && (compoundTag = (net.minecraft.nbt.CompoundTag)tag).contains(this.name)) {
-            compoundTag.remove(this.name);
+    public int removeTag(net.minecraft.nbt.Tag $$0) {
+        net.minecraft.nbt.CompoundTag $$1;
+        if ($$0 instanceof net.minecraft.nbt.CompoundTag && ($$1 = (net.minecraft.nbt.CompoundTag)$$0).contains(this.name)) {
+            $$1.remove(this.name);
             return 1;
         }
         return 0;