--- net/minecraft/commands/arguments/ScoreboardSlotArgument.java
+++ net/minecraft/commands/arguments/ScoreboardSlotArgument.java
@@ -16,21 +16,21 @@
         return new net.minecraft.commands.arguments.ScoreboardSlotArgument();
     }
 
-    public static int getDisplaySlot(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) {
-        return (java.lang.Integer)context.getArgument(name, java.lang.Integer.class);
+    public static int getDisplaySlot(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) {
+        return (java.lang.Integer)$$0.getArgument($$1, java.lang.Integer.class);
     }
 
-    public java.lang.Integer parse(com.mojang.brigadier.StringReader reader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        java.lang.String string = reader.readUnquotedString();
-        int n = net.minecraft.world.scores.Scoreboard.getDisplaySlotByName((java.lang.String)string);
-        if (n == -1) {
-            throw ERROR_INVALID_VALUE.create((java.lang.Object)string);
+    public java.lang.Integer parse(com.mojang.brigadier.StringReader $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        java.lang.String $$1 = $$0.readUnquotedString();
+        int $$2 = net.minecraft.world.scores.Scoreboard.getDisplaySlotByName((java.lang.String)$$1);
+        if ($$2 == -1) {
+            throw ERROR_INVALID_VALUE.create((java.lang.Object)$$1);
         }
-        return n;
+        return $$2;
     }
 
-    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) {
-        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.String[])net.minecraft.world.scores.Scoreboard.getDisplaySlotNames(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder);
+    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) {
+        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.String[])net.minecraft.world.scores.Scoreboard.getDisplaySlotNames(), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
     }
 
     public java.util.Collection<java.lang.String> getExamples() {
@@ -41,13 +41,13 @@
         return this.parse(stringReader);
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object displaySlot) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.scoreboardDisplaySlot.invalid", (java.lang.Object[])new java.lang.Object[]{displaySlot});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object $$0) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.scoreboardDisplaySlot.invalid", (java.lang.Object[])new java.lang.Object[]{$$0});
     }
 
     static {
         EXAMPLES = java.util.Arrays.asList((java.lang.Object[])new java.lang.String[]{"sidebar", "foo.bar"});
-        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType(displaySlot -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.scoreboardDisplaySlot.invalid", (java.lang.Object[])new java.lang.Object[]{displaySlot}));
+        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType($$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.scoreboardDisplaySlot.invalid", (java.lang.Object[])new java.lang.Object[]{$$0}));
     }
 }
 