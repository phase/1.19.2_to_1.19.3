--- net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info.java
+++ net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info.java
@@ -1,0 +1,33 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.commands.arguments;
+
+public class net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info<T>
+implements net.minecraft.commands.synchronization.ArgumentTypeInfo<net.minecraft.commands.arguments.ResourceOrTagKeyArgument<T>, net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template>
+ {
+    public net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info() {
+    }
+
+    public void serializeToNetwork(net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template $$0, net.minecraft.network.FriendlyByteBuf $$1) {
+        $$1.writeResourceLocation($$0.registryKey.location());
+    }
+
+    public net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template deserializeFromNetwork(net.minecraft.network.FriendlyByteBuf $$0) {
+        net.minecraft.resources.ResourceLocation $$1 = $$0.readResourceLocation();
+        return new net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template(this, net.minecraft.resources.ResourceKey.createRegistryKey((net.minecraft.resources.ResourceLocation)$$1));
+    }
+
+    public void serializeToJson(net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template $$0, com.google.gson.JsonObject $$1) {
+        $$1.addProperty("registry", $$0.registryKey.location().toString());
+    }
+
+    public net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template unpack(net.minecraft.commands.arguments.ResourceOrTagKeyArgument<T> $$0) {
+        return new net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template(this, $$0.registryKey);
+    }
+
+    public /* synthetic */ net.minecraft.commands.synchronization.ArgumentTypeInfo$Template deserializeFromNetwork(net.minecraft.network.FriendlyByteBuf friendlyByteBuf) {
+        return this.deserializeFromNetwork(friendlyByteBuf);
+    }
+}
+