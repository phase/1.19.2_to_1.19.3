--- net/minecraft/commands/arguments/item/ItemPredicateArgument.java
+++ net/minecraft/commands/arguments/item/ItemPredicateArgument.java
@@ -17,17 +17,17 @@
         return new net.minecraft.commands.arguments.item.ItemPredicateArgument($$0);
     }
 
-    public net.minecraft.commands.arguments.item.ItemPredicateArgument$Result parse(com.mojang.brigadier.StringReader reader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        com.mojang.datafixers.util.Either either = net.minecraft.commands.arguments.item.ItemParser.parseForTesting((net.minecraft.core.HolderLookup)this.items, (com.mojang.brigadier.StringReader)reader);
-        return (net.minecraft.commands.arguments.item.ItemPredicateArgument$Result)either.map($$0 -> net.minecraft.commands.arguments.item.ItemPredicateArgument.createResult($$1 -> $$1 == $$0.item(), (net.minecraft.nbt.CompoundTag)$$0.nbt()), $$0 -> net.minecraft.commands.arguments.item.ItemPredicateArgument.createResult(arg_0 -> ((net.minecraft.core.HolderSet)$$0.tag()).contains(arg_0), (net.minecraft.nbt.CompoundTag)$$0.nbt()));
+    public net.minecraft.commands.arguments.item.ItemPredicateArgument$Result parse(com.mojang.brigadier.StringReader $$02) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        com.mojang.datafixers.util.Either $$1 = net.minecraft.commands.arguments.item.ItemParser.parseForTesting((net.minecraft.core.HolderLookup)this.items, (com.mojang.brigadier.StringReader)$$02);
+        return (net.minecraft.commands.arguments.item.ItemPredicateArgument$Result)$$1.map($$0 -> net.minecraft.commands.arguments.item.ItemPredicateArgument.createResult($$1 -> $$1 == $$0.item(), (net.minecraft.nbt.CompoundTag)$$0.nbt()), $$0 -> net.minecraft.commands.arguments.item.ItemPredicateArgument.createResult(arg_0 -> ((net.minecraft.core.HolderSet)$$0.tag()).contains(arg_0), (net.minecraft.nbt.CompoundTag)$$0.nbt()));
     }
 
-    public static java.util.function.Predicate<net.minecraft.world.item.ItemStack> getItemPredicate(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) {
-        return (java.util.function.Predicate)context.getArgument(name, net.minecraft.commands.arguments.item.ItemPredicateArgument$Result.class);
+    public static java.util.function.Predicate<net.minecraft.world.item.ItemStack> getItemPredicate(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) {
+        return (java.util.function.Predicate)$$0.getArgument($$1, net.minecraft.commands.arguments.item.ItemPredicateArgument$Result.class);
     }
 
-    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) {
-        return net.minecraft.commands.arguments.item.ItemParser.fillSuggestions((net.minecraft.core.HolderLookup)this.items, (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder, (boolean)true);
+    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) {
+        return net.minecraft.commands.arguments.item.ItemParser.fillSuggestions((net.minecraft.core.HolderLookup)this.items, (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1, (boolean)true);
     }
 
     public java.util.Collection<java.lang.String> getExamples() {