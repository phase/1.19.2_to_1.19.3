--- net/minecraft/commands/arguments/EntityArgument.java
+++ net/minecraft/commands/arguments/EntityArgument.java
@@ -16,95 +16,95 @@
     public boolean single;
     public boolean playersOnly;
 
-    public net.minecraft.commands.arguments.EntityArgument(boolean single, boolean playersOnly) {
-        this.single = single;
-        this.playersOnly = playersOnly;
+    public net.minecraft.commands.arguments.EntityArgument(boolean $$0, boolean $$1) {
+        this.single = $$0;
+        this.playersOnly = $$1;
     }
 
     public static net.minecraft.commands.arguments.EntityArgument entity() {
         return new net.minecraft.commands.arguments.EntityArgument(true, false);
     }
 
-    public static net.minecraft.world.entity.Entity getEntity(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return ((net.minecraft.commands.arguments.selector.EntitySelector)context.getArgument(name, net.minecraft.commands.arguments.selector.EntitySelector.class)).findSingleEntity((net.minecraft.commands.CommandSourceStack)context.getSource());
+    public static net.minecraft.world.entity.Entity getEntity(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return ((net.minecraft.commands.arguments.selector.EntitySelector)$$0.getArgument($$1, net.minecraft.commands.arguments.selector.EntitySelector.class)).findSingleEntity((net.minecraft.commands.CommandSourceStack)$$0.getSource());
     }
 
     public static net.minecraft.commands.arguments.EntityArgument entities() {
         return new net.minecraft.commands.arguments.EntityArgument(false, false);
     }
 
-    public static java.util.Collection<? extends net.minecraft.world.entity.Entity> getEntities(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        java.util.Collection collection = net.minecraft.commands.arguments.EntityArgument.getOptionalEntities(context, (java.lang.String)name);
-        if (collection.isEmpty()) {
+    public static java.util.Collection<? extends net.minecraft.world.entity.Entity> getEntities(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        java.util.Collection $$2 = net.minecraft.commands.arguments.EntityArgument.getOptionalEntities($$0, (java.lang.String)$$1);
+        if ($$2.isEmpty()) {
             throw NO_ENTITIES_FOUND.create();
         }
-        return collection;
+        return $$2;
     }
 
-    public static java.util.Collection<? extends net.minecraft.world.entity.Entity> getOptionalEntities(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return ((net.minecraft.commands.arguments.selector.EntitySelector)context.getArgument(name, net.minecraft.commands.arguments.selector.EntitySelector.class)).findEntities((net.minecraft.commands.CommandSourceStack)context.getSource());
+    public static java.util.Collection<? extends net.minecraft.world.entity.Entity> getOptionalEntities(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return ((net.minecraft.commands.arguments.selector.EntitySelector)$$0.getArgument($$1, net.minecraft.commands.arguments.selector.EntitySelector.class)).findEntities((net.minecraft.commands.CommandSourceStack)$$0.getSource());
     }
 
-    public static java.util.Collection<net.minecraft.server.level.ServerPlayer> getOptionalPlayers(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return ((net.minecraft.commands.arguments.selector.EntitySelector)context.getArgument(name, net.minecraft.commands.arguments.selector.EntitySelector.class)).findPlayers((net.minecraft.commands.CommandSourceStack)context.getSource());
+    public static java.util.Collection<net.minecraft.server.level.ServerPlayer> getOptionalPlayers(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return ((net.minecraft.commands.arguments.selector.EntitySelector)$$0.getArgument($$1, net.minecraft.commands.arguments.selector.EntitySelector.class)).findPlayers((net.minecraft.commands.CommandSourceStack)$$0.getSource());
     }
 
     public static net.minecraft.commands.arguments.EntityArgument player() {
         return new net.minecraft.commands.arguments.EntityArgument(true, true);
     }
 
-    public static net.minecraft.server.level.ServerPlayer getPlayer(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        return ((net.minecraft.commands.arguments.selector.EntitySelector)context.getArgument(name, net.minecraft.commands.arguments.selector.EntitySelector.class)).findSinglePlayer((net.minecraft.commands.CommandSourceStack)context.getSource());
+    public static net.minecraft.server.level.ServerPlayer getPlayer(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        return ((net.minecraft.commands.arguments.selector.EntitySelector)$$0.getArgument($$1, net.minecraft.commands.arguments.selector.EntitySelector.class)).findSinglePlayer((net.minecraft.commands.CommandSourceStack)$$0.getSource());
     }
 
     public static net.minecraft.commands.arguments.EntityArgument players() {
         return new net.minecraft.commands.arguments.EntityArgument(false, true);
     }
 
-    public static java.util.Collection<net.minecraft.server.level.ServerPlayer> getPlayers(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        java.util.List list = ((net.minecraft.commands.arguments.selector.EntitySelector)context.getArgument(name, net.minecraft.commands.arguments.selector.EntitySelector.class)).findPlayers((net.minecraft.commands.CommandSourceStack)context.getSource());
-        if (list.isEmpty()) {
+    public static java.util.Collection<net.minecraft.server.level.ServerPlayer> getPlayers(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        java.util.List $$2 = ((net.minecraft.commands.arguments.selector.EntitySelector)$$0.getArgument($$1, net.minecraft.commands.arguments.selector.EntitySelector.class)).findPlayers((net.minecraft.commands.CommandSourceStack)$$0.getSource());
+        if ($$2.isEmpty()) {
             throw NO_PLAYERS_FOUND.create();
         }
-        return list;
+        return $$2;
     }
 
-    public net.minecraft.commands.arguments.selector.EntitySelector parse(com.mojang.brigadier.StringReader reader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        boolean bl = false;
-        net.minecraft.commands.arguments.selector.EntitySelectorParser entitySelectorParser = new net.minecraft.commands.arguments.selector.EntitySelectorParser(reader);
-        net.minecraft.commands.arguments.selector.EntitySelector entitySelector = entitySelectorParser.parse();
-        if (entitySelector.getMaxResults() > 1 && this.single) {
+    public net.minecraft.commands.arguments.selector.EntitySelector parse(com.mojang.brigadier.StringReader $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        boolean $$1 = false;
+        net.minecraft.commands.arguments.selector.EntitySelectorParser $$2 = new net.minecraft.commands.arguments.selector.EntitySelectorParser($$0);
+        net.minecraft.commands.arguments.selector.EntitySelector $$3 = $$2.parse();
+        if ($$3.getMaxResults() > 1 && this.single) {
             if (this.playersOnly) {
-                reader.setCursor(0);
-                throw ERROR_NOT_SINGLE_PLAYER.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+                $$0.setCursor(0);
+                throw ERROR_NOT_SINGLE_PLAYER.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
             }
-            reader.setCursor(0);
-            throw ERROR_NOT_SINGLE_ENTITY.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+            $$0.setCursor(0);
+            throw ERROR_NOT_SINGLE_ENTITY.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
         }
-        if (entitySelector.includesEntities() && this.playersOnly && !entitySelector.isSelfSelector()) {
-            reader.setCursor(0);
-            throw ERROR_ONLY_PLAYERS_ALLOWED.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+        if ($$3.includesEntities() && this.playersOnly && !$$3.isSelfSelector()) {
+            $$0.setCursor(0);
+            throw ERROR_ONLY_PLAYERS_ALLOWED.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
         }
-        return entitySelector;
+        return $$3;
     }
 
-    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) {
-        java.lang.Object object = context.getSource();
+    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$12) {
+        java.lang.Object object = $$0.getSource();
         if (object instanceof net.minecraft.commands.SharedSuggestionProvider) {
-            net.minecraft.commands.SharedSuggestionProvider sharedSuggestionProvider = (net.minecraft.commands.SharedSuggestionProvider)object;
-            object = new com.mojang.brigadier.StringReader(builder.getInput());
-            object.setCursor(builder.getStart());
-            net.minecraft.commands.arguments.selector.EntitySelectorParser entitySelectorParser = new net.minecraft.commands.arguments.selector.EntitySelectorParser((com.mojang.brigadier.StringReader)object, sharedSuggestionProvider.hasPermission(2));
+            net.minecraft.commands.SharedSuggestionProvider $$2 = (net.minecraft.commands.SharedSuggestionProvider)object;
+            com.mojang.brigadier.StringReader $$3 = new com.mojang.brigadier.StringReader($$12.getInput());
+            $$3.setCursor($$12.getStart());
+            net.minecraft.commands.arguments.selector.EntitySelectorParser $$4 = new net.minecraft.commands.arguments.selector.EntitySelectorParser($$3, $$2.hasPermission(2));
             try {
-                entitySelectorParser.parse();
+                $$4.parse();
             }
             catch (com.mojang.brigadier.exceptions.CommandSyntaxException commandSyntaxException) {
                 // empty catch block
             }
-            return entitySelectorParser.fillSuggestions(builder, offsetBuilder -> {
-                java.util.Collection collection = sharedSuggestionProvider.getOnlinePlayerNames();
-                java.util.Collection collection2 = this.playersOnly ? collection : com.google.common.collect.Iterables.concat((java.lang.Iterable)collection, (java.lang.Iterable)sharedSuggestionProvider.getSelectedEntities());
-                net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)collection2, (com.mojang.brigadier.suggestion.SuggestionsBuilder)offsetBuilder);
+            return $$4.fillSuggestions($$12, $$1 -> {
+                java.util.Collection $$2 = $$2.getOnlinePlayerNames();
+                java.util.Collection $$3 = this.playersOnly ? $$2 : com.google.common.collect.Iterables.concat((java.lang.Iterable)$$2, (java.lang.Iterable)$$2.getSelectedEntities());
+                net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)$$3, (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
             });
         }
         return com.mojang.brigadier.suggestion.Suggestions.empty();