--- net/minecraft/commands/arguments/DimensionArgument.java
+++ net/minecraft/commands/arguments/DimensionArgument.java
@@ -16,9 +16,9 @@
         return net.minecraft.resources.ResourceLocation.read((com.mojang.brigadier.StringReader)$$0);
     }
 
-    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) {
-        if (context.getSource() instanceof net.minecraft.commands.SharedSuggestionProvider) {
-            return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)((net.minecraft.commands.SharedSuggestionProvider)context.getSource()).levels().stream().map(net.minecraft.resources.ResourceKey::location), (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder);
+    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) {
+        if ($$0.getSource() instanceof net.minecraft.commands.SharedSuggestionProvider) {
+            return net.minecraft.commands.SharedSuggestionProvider.suggestResource((java.util.stream.Stream)((net.minecraft.commands.SharedSuggestionProvider)$$0.getSource()).levels().stream().map(net.minecraft.resources.ResourceKey::location), (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
         }
         return com.mojang.brigadier.suggestion.Suggestions.empty();
     }
@@ -31,31 +31,31 @@
         return new net.minecraft.commands.arguments.DimensionArgument();
     }
 
-    public static net.minecraft.server.level.ServerLevel getDimension(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.resources.ResourceLocation resourceLocation = (net.minecraft.resources.ResourceLocation)context.getArgument(name, net.minecraft.resources.ResourceLocation.class);
-        net.minecraft.resources.ResourceKey resourceKey = net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceKey)net.minecraft.core.Registry.DIMENSION_REGISTRY, (net.minecraft.resources.ResourceLocation)resourceLocation);
-        net.minecraft.server.level.ServerLevel serverLevel = ((net.minecraft.commands.CommandSourceStack)context.getSource()).getServer().getLevel(resourceKey);
-        if (serverLevel == null) {
-            throw ERROR_INVALID_VALUE.create((java.lang.Object)resourceLocation);
+    public static net.minecraft.server.level.ServerLevel getDimension(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.resources.ResourceLocation $$2 = (net.minecraft.resources.ResourceLocation)$$0.getArgument($$1, net.minecraft.resources.ResourceLocation.class);
+        net.minecraft.resources.ResourceKey $$3 = net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceKey)net.minecraft.core.Registry.DIMENSION_REGISTRY, (net.minecraft.resources.ResourceLocation)$$2);
+        net.minecraft.server.level.ServerLevel $$4 = ((net.minecraft.commands.CommandSourceStack)$$0.getSource()).getServer().getLevel($$3);
+        if ($$4 == null) {
+            throw ERROR_INVALID_VALUE.create((java.lang.Object)$$2);
         }
-        return serverLevel;
+        return $$4;
     }
 
     public /* synthetic */ java.lang.Object parse(com.mojang.brigadier.StringReader stringReader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
         return this.parse(stringReader);
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$1(java.lang.Object dimension) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.dimension.invalid", (java.lang.Object[])new java.lang.Object[]{dimension});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$1(java.lang.Object $$0) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.dimension.invalid", (java.lang.Object[])new java.lang.Object[]{$$0});
     }
 
-    public static /* synthetic */ java.lang.String lambda$static$0(net.minecraft.resources.ResourceKey key) {
-        return key.location().toString();
+    public static /* synthetic */ java.lang.String lambda$static$0(net.minecraft.resources.ResourceKey $$0) {
+        return $$0.location().toString();
     }
 
     static {
-        EXAMPLES = (java.util.Collection)java.util.stream.Stream.of((java.lang.Object[])new net.minecraft.resources.ResourceKey[]{net.minecraft.world.level.Level.OVERWORLD, net.minecraft.world.level.Level.NETHER}).map(key -> key.location().toString()).collect(java.util.stream.Collectors.toList());
-        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType(dimension -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.dimension.invalid", (java.lang.Object[])new java.lang.Object[]{dimension}));
+        EXAMPLES = (java.util.Collection)java.util.stream.Stream.of((java.lang.Object[])new net.minecraft.resources.ResourceKey[]{net.minecraft.world.level.Level.OVERWORLD, net.minecraft.world.level.Level.NETHER}).map($$0 -> $$0.location().toString()).collect(java.util.stream.Collectors.toList());
+        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType($$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.dimension.invalid", (java.lang.Object[])new java.lang.Object[]{$$0}));
     }
 }
 