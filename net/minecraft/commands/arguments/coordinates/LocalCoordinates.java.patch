--- net/minecraft/commands/arguments/coordinates/LocalCoordinates.java
+++ net/minecraft/commands/arguments/coordinates/LocalCoordinates.java
@@ -11,31 +11,31 @@
     public double up;
     public double forwards;
 
-    public net.minecraft.commands.arguments.coordinates.LocalCoordinates(double left, double up, double forwards) {
-        this.left = left;
-        this.up = up;
-        this.forwards = forwards;
+    public net.minecraft.commands.arguments.coordinates.LocalCoordinates(double $$0, double $$1, double $$2) {
+        this.left = $$0;
+        this.up = $$1;
+        this.forwards = $$2;
     }
 
-    public net.minecraft.world.phys.Vec3 getPosition(net.minecraft.commands.CommandSourceStack source) {
-        net.minecraft.world.phys.Vec2 vec2 = source.getRotation();
-        net.minecraft.world.phys.Vec3 vec3 = source.getAnchor().apply(source);
-        float f = net.minecraft.util.Mth.cos((float)((vec2.y + 90.0f) * ((float)java.lang.Math.PI / 180)));
-        float f2 = net.minecraft.util.Mth.sin((float)((vec2.y + 90.0f) * ((float)java.lang.Math.PI / 180)));
-        float f3 = net.minecraft.util.Mth.cos((float)(-vec2.x * ((float)java.lang.Math.PI / 180)));
-        float f4 = net.minecraft.util.Mth.sin((float)(-vec2.x * ((float)java.lang.Math.PI / 180)));
-        float f5 = net.minecraft.util.Mth.cos((float)((-vec2.x + 90.0f) * ((float)java.lang.Math.PI / 180)));
-        float f6 = net.minecraft.util.Mth.sin((float)((-vec2.x + 90.0f) * ((float)java.lang.Math.PI / 180)));
-        net.minecraft.world.phys.Vec3 vec32 = new net.minecraft.world.phys.Vec3((double)(f * f3), (double)f4, (double)(f2 * f3));
-        net.minecraft.world.phys.Vec3 vec33 = new net.minecraft.world.phys.Vec3((double)(f * f5), (double)f6, (double)(f2 * f5));
-        net.minecraft.world.phys.Vec3 vec34 = vec32.cross(vec33).scale(-1.0);
-        double d = vec32.x * this.forwards + vec33.x * this.up + vec34.x * this.left;
-        double d2 = vec32.y * this.forwards + vec33.y * this.up + vec34.y * this.left;
-        double d3 = vec32.z * this.forwards + vec33.z * this.up + vec34.z * this.left;
-        return new net.minecraft.world.phys.Vec3(vec3.x + d, vec3.y + d2, vec3.z + d3);
+    public net.minecraft.world.phys.Vec3 getPosition(net.minecraft.commands.CommandSourceStack $$0) {
+        net.minecraft.world.phys.Vec2 $$1 = $$0.getRotation();
+        net.minecraft.world.phys.Vec3 $$2 = $$0.getAnchor().apply($$0);
+        float $$3 = net.minecraft.util.Mth.cos((float)(($$1.y + 90.0f) * ((float)java.lang.Math.PI / 180)));
+        float $$4 = net.minecraft.util.Mth.sin((float)(($$1.y + 90.0f) * ((float)java.lang.Math.PI / 180)));
+        float $$5 = net.minecraft.util.Mth.cos((float)(-$$1.x * ((float)java.lang.Math.PI / 180)));
+        float $$6 = net.minecraft.util.Mth.sin((float)(-$$1.x * ((float)java.lang.Math.PI / 180)));
+        float $$7 = net.minecraft.util.Mth.cos((float)((-$$1.x + 90.0f) * ((float)java.lang.Math.PI / 180)));
+        float $$8 = net.minecraft.util.Mth.sin((float)((-$$1.x + 90.0f) * ((float)java.lang.Math.PI / 180)));
+        net.minecraft.world.phys.Vec3 $$9 = new net.minecraft.world.phys.Vec3((double)($$3 * $$5), (double)$$6, (double)($$4 * $$5));
+        net.minecraft.world.phys.Vec3 $$10 = new net.minecraft.world.phys.Vec3((double)($$3 * $$7), (double)$$8, (double)($$4 * $$7));
+        net.minecraft.world.phys.Vec3 $$11 = $$9.cross($$10).scale(-1.0);
+        double $$12 = $$9.x * this.forwards + $$10.x * this.up + $$11.x * this.left;
+        double $$13 = $$9.y * this.forwards + $$10.y * this.up + $$11.y * this.left;
+        double $$14 = $$9.z * this.forwards + $$10.z * this.up + $$11.z * this.left;
+        return new net.minecraft.world.phys.Vec3($$2.x + $$12, $$2.y + $$13, $$2.z + $$14);
     }
 
-    public net.minecraft.world.phys.Vec2 getRotation(net.minecraft.commands.CommandSourceStack source) {
+    public net.minecraft.world.phys.Vec2 getRotation(net.minecraft.commands.CommandSourceStack $$0) {
         return net.minecraft.world.phys.Vec2.ZERO;
     }
 
@@ -51,45 +51,45 @@
         return true;
     }
 
-    public static net.minecraft.commands.arguments.coordinates.LocalCoordinates parse(com.mojang.brigadier.StringReader reader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n = reader.getCursor();
-        double d = net.minecraft.commands.arguments.coordinates.LocalCoordinates.readDouble((com.mojang.brigadier.StringReader)reader, (int)n);
-        if (!reader.canRead() || reader.peek() != ' ') {
-            reader.setCursor(n);
-            throw net.minecraft.commands.arguments.coordinates.Vec3Argument.ERROR_NOT_COMPLETE.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+    public static net.minecraft.commands.arguments.coordinates.LocalCoordinates parse(com.mojang.brigadier.StringReader $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        int $$1 = $$0.getCursor();
+        double $$2 = net.minecraft.commands.arguments.coordinates.LocalCoordinates.readDouble((com.mojang.brigadier.StringReader)$$0, (int)$$1);
+        if (!$$0.canRead() || $$0.peek() != ' ') {
+            $$0.setCursor($$1);
+            throw net.minecraft.commands.arguments.coordinates.Vec3Argument.ERROR_NOT_COMPLETE.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
         }
-        reader.skip();
-        double d2 = net.minecraft.commands.arguments.coordinates.LocalCoordinates.readDouble((com.mojang.brigadier.StringReader)reader, (int)n);
-        if (!reader.canRead() || reader.peek() != ' ') {
-            reader.setCursor(n);
-            throw net.minecraft.commands.arguments.coordinates.Vec3Argument.ERROR_NOT_COMPLETE.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+        $$0.skip();
+        double $$3 = net.minecraft.commands.arguments.coordinates.LocalCoordinates.readDouble((com.mojang.brigadier.StringReader)$$0, (int)$$1);
+        if (!$$0.canRead() || $$0.peek() != ' ') {
+            $$0.setCursor($$1);
+            throw net.minecraft.commands.arguments.coordinates.Vec3Argument.ERROR_NOT_COMPLETE.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
         }
-        reader.skip();
-        double d3 = net.minecraft.commands.arguments.coordinates.LocalCoordinates.readDouble((com.mojang.brigadier.StringReader)reader, (int)n);
-        return new net.minecraft.commands.arguments.coordinates.LocalCoordinates(d, d2, d3);
+        $$0.skip();
+        double $$4 = net.minecraft.commands.arguments.coordinates.LocalCoordinates.readDouble((com.mojang.brigadier.StringReader)$$0, (int)$$1);
+        return new net.minecraft.commands.arguments.coordinates.LocalCoordinates($$2, $$3, $$4);
     }
 
-    public static double readDouble(com.mojang.brigadier.StringReader reader, int start) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        if (!reader.canRead()) {
-            throw net.minecraft.commands.arguments.coordinates.WorldCoordinate.ERROR_EXPECTED_DOUBLE.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+    public static double readDouble(com.mojang.brigadier.StringReader $$0, int $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        if (!$$0.canRead()) {
+            throw net.minecraft.commands.arguments.coordinates.WorldCoordinate.ERROR_EXPECTED_DOUBLE.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
         }
-        if (reader.peek() != '^') {
-            reader.setCursor(start);
-            throw net.minecraft.commands.arguments.coordinates.Vec3Argument.ERROR_MIXED_TYPE.createWithContext((com.mojang.brigadier.ImmutableStringReader)reader);
+        if ($$0.peek() != '^') {
+            $$0.setCursor($$1);
+            throw net.minecraft.commands.arguments.coordinates.Vec3Argument.ERROR_MIXED_TYPE.createWithContext((com.mojang.brigadier.ImmutableStringReader)$$0);
         }
-        reader.skip();
-        return reader.canRead() && reader.peek() != ' ' ? reader.readDouble() : 0.0;
+        $$0.skip();
+        return $$0.canRead() && $$0.peek() != ' ' ? $$0.readDouble() : 0.0;
     }
 
-    public boolean equals(java.lang.Object other) {
-        if (this == other) {
+    public boolean equals(java.lang.Object $$0) {
+        if (this == $$0) {
             return true;
         }
-        if (!(other instanceof net.minecraft.commands.arguments.coordinates.LocalCoordinates)) {
+        if (!($$0 instanceof net.minecraft.commands.arguments.coordinates.LocalCoordinates)) {
             return false;
         }
-        net.minecraft.commands.arguments.coordinates.LocalCoordinates localCoordinates = (net.minecraft.commands.arguments.coordinates.LocalCoordinates)other;
-        return this.left == localCoordinates.left && this.up == localCoordinates.up && this.forwards == localCoordinates.forwards;
+        net.minecraft.commands.arguments.coordinates.LocalCoordinates $$1 = (net.minecraft.commands.arguments.coordinates.LocalCoordinates)$$0;
+        return this.left == $$1.left && this.up == $$1.up && this.forwards == $$1.forwards;
     }
 
     public int hashCode() {