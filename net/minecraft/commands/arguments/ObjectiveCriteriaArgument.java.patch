--- net/minecraft/commands/arguments/ObjectiveCriteriaArgument.java
+++ net/minecraft/commands/arguments/ObjectiveCriteriaArgument.java
@@ -16,35 +16,35 @@
         return new net.minecraft.commands.arguments.ObjectiveCriteriaArgument();
     }
 
-    public static net.minecraft.world.scores.criteria.ObjectiveCriteria getCriteria(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> context, java.lang.String name) {
-        return (net.minecraft.world.scores.criteria.ObjectiveCriteria)context.getArgument(name, net.minecraft.world.scores.criteria.ObjectiveCriteria.class);
+    public static net.minecraft.world.scores.criteria.ObjectiveCriteria getCriteria(com.mojang.brigadier.context.CommandContext<net.minecraft.commands.CommandSourceStack> $$0, java.lang.String $$1) {
+        return (net.minecraft.world.scores.criteria.ObjectiveCriteria)$$0.getArgument($$1, net.minecraft.world.scores.criteria.ObjectiveCriteria.class);
     }
 
-    public net.minecraft.world.scores.criteria.ObjectiveCriteria parse(com.mojang.brigadier.StringReader reader) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        int n = reader.getCursor();
-        while (reader.canRead() && reader.peek() != ' ') {
-            reader.skip();
+    public net.minecraft.world.scores.criteria.ObjectiveCriteria parse(com.mojang.brigadier.StringReader $$0) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        int $$1 = $$0.getCursor();
+        while ($$0.canRead() && $$0.peek() != ' ') {
+            $$0.skip();
         }
-        java.lang.String string = reader.getString().substring(n, reader.getCursor());
-        return (net.minecraft.world.scores.criteria.ObjectiveCriteria)net.minecraft.world.scores.criteria.ObjectiveCriteria.byName((java.lang.String)string).orElseThrow(() -> {
-            reader.setCursor(n);
-            return ERROR_INVALID_VALUE.create((java.lang.Object)string);
+        java.lang.String $$2 = $$0.getString().substring($$1, $$0.getCursor());
+        return (net.minecraft.world.scores.criteria.ObjectiveCriteria)net.minecraft.world.scores.criteria.ObjectiveCriteria.byName((java.lang.String)$$2).orElseThrow(() -> {
+            $$0.setCursor($$1);
+            return ERROR_INVALID_VALUE.create((java.lang.Object)$$2);
         });
     }
 
-    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> context, com.mojang.brigadier.suggestion.SuggestionsBuilder builder) {
-        java.util.ArrayList arrayList = com.google.common.collect.Lists.newArrayList((java.lang.Iterable)net.minecraft.world.scores.criteria.ObjectiveCriteria.getCustomCriteriaNames());
-        for (net.minecraft.stats.StatType statType : net.minecraft.core.Registry.STAT_TYPE) {
-            for (java.lang.Object object : statType.getRegistry()) {
-                java.lang.String string = this.getName(statType, object);
-                arrayList.add((java.lang.Object)string);
+    public <S> java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions> listSuggestions(com.mojang.brigadier.context.CommandContext<S> $$0, com.mojang.brigadier.suggestion.SuggestionsBuilder $$1) {
+        java.util.ArrayList $$2 = com.google.common.collect.Lists.newArrayList((java.lang.Iterable)net.minecraft.world.scores.criteria.ObjectiveCriteria.getCustomCriteriaNames());
+        for (net.minecraft.stats.StatType $$3 : net.minecraft.core.Registry.STAT_TYPE) {
+            for (java.lang.Object $$4 : $$3.getRegistry()) {
+                java.lang.String $$5 = this.getName($$3, $$4);
+                $$2.add((java.lang.Object)$$5);
             }
         }
-        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)arrayList, (com.mojang.brigadier.suggestion.SuggestionsBuilder)builder);
+        return net.minecraft.commands.SharedSuggestionProvider.suggest((java.lang.Iterable)$$2, (com.mojang.brigadier.suggestion.SuggestionsBuilder)$$1);
     }
 
-    public <T> java.lang.String getName(net.minecraft.stats.StatType<T> type, java.lang.Object value) {
-        return net.minecraft.stats.Stat.buildName(type, (java.lang.Object)value);
+    public <T> java.lang.String getName(net.minecraft.stats.StatType<T> $$0, java.lang.Object $$1) {
+        return net.minecraft.stats.Stat.buildName($$0, (java.lang.Object)$$1);
     }
 
     public java.util.Collection<java.lang.String> getExamples() {
@@ -55,13 +55,13 @@
         return this.parse(stringReader);
     }
 
-    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object criterion) {
-        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.criteria.invalid", (java.lang.Object[])new java.lang.Object[]{criterion});
+    public static /* synthetic */ com.mojang.brigadier.Message lambda$static$0(java.lang.Object $$0) {
+        return net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.criteria.invalid", (java.lang.Object[])new java.lang.Object[]{$$0});
     }
 
     static {
         EXAMPLES = java.util.Arrays.asList((java.lang.Object[])new java.lang.String[]{"foo", "foo.bar.baz", "minecraft:foo"});
-        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType(criterion -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.criteria.invalid", (java.lang.Object[])new java.lang.Object[]{criterion}));
+        ERROR_INVALID_VALUE = new com.mojang.brigadier.exceptions.DynamicCommandExceptionType($$0 -> net.minecraft.network.chat.Component.translatable((java.lang.String)"argument.criteria.invalid", (java.lang.Object[])new java.lang.Object[]{$$0}));
     }
 }
 