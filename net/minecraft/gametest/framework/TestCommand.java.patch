--- net/minecraft/gametest/framework/TestCommand.java
+++ net/minecraft/gametest/framework/TestCommand.java
@@ -18,240 +18,245 @@
     public net.minecraft.gametest.framework.TestCommand() {
     }
 
-    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> dispatcher) {
-        dispatcher.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"test").then(net.minecraft.commands.Commands.literal((java.lang.String)"runthis").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runNearbyTest((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"runthese").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllNearbyTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"runfailed").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)false, (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"onlyRequiredTests", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.BoolArgumentType.bool()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"onlyRequiredTests"), (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"onlyRequiredTests"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)8))).then(net.minecraft.commands.Commands.argument((java.lang.String)"testsPerRow", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"onlyRequiredTests"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testsPerRow")))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"run").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.gametest.framework.TestFunctionArgument.testFunctionArgument()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.gametest.framework.TestFunction)net.minecraft.gametest.framework.TestFunctionArgument.getTestFunction((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)0))).then(net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.gametest.framework.TestFunction)net.minecraft.gametest.framework.TestFunctionArgument.getTestFunction((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"))))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"runall").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"testClassName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.gametest.framework.TestClassNameArgument.testClassName()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTestsInClass((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)net.minecraft.gametest.framework.TestClassNameArgument.getTestClassName((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testClassName"), (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTestsInClass((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)net.minecraft.gametest.framework.TestClassNameArgument.getTestClassName((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testClassName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)8))).then(net.minecraft.commands.Commands.argument((java.lang.String)"testsPerRow", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTestsInClass((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)net.minecraft.gametest.framework.TestClassNameArgument.getTestClassName((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testClassName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testsPerRow"))))))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)8))).then(net.minecraft.commands.Commands.argument((java.lang.String)"testsPerRow", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testsPerRow"))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"export").then(net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.exportTestStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"exportthis").executes($$0 -> net.minecraft.gametest.framework.TestCommand.exportNearestTestStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"import").then(net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.importTestStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName")))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"pos").executes($$0 -> net.minecraft.gametest.framework.TestCommand.showPos((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)"pos"))).then(net.minecraft.commands.Commands.argument((java.lang.String)"var", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.showPos((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"var")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"create").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.createNewStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)5, (int)5, (int)5))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"width", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.createNewStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width")))).then(net.minecraft.commands.Commands.argument((java.lang.String)"height", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).then(net.minecraft.commands.Commands.argument((java.lang.String)"depth", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.createNewStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"height"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"depth"))))))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"clearall").executes($$0 -> net.minecraft.gametest.framework.TestCommand.clearAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)200))).then(net.minecraft.commands.Commands.argument((java.lang.String)"radius", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.clearAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"radius"))))));
+    public static void register(com.mojang.brigadier.CommandDispatcher<net.minecraft.commands.CommandSourceStack> $$02) {
+        $$02.register((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"test").then(net.minecraft.commands.Commands.literal((java.lang.String)"runthis").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runNearbyTest((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"runthese").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllNearbyTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"runfailed").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)false, (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"onlyRequiredTests", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.BoolArgumentType.bool()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"onlyRequiredTests"), (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"onlyRequiredTests"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)8))).then(net.minecraft.commands.Commands.argument((java.lang.String)"testsPerRow", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runLastFailedTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (boolean)com.mojang.brigadier.arguments.BoolArgumentType.getBool((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"onlyRequiredTests"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testsPerRow")))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"run").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.gametest.framework.TestFunctionArgument.testFunctionArgument()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.gametest.framework.TestFunction)net.minecraft.gametest.framework.TestFunctionArgument.getTestFunction((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)0))).then(net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (net.minecraft.gametest.framework.TestFunction)net.minecraft.gametest.framework.TestFunctionArgument.getTestFunction((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"))))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"runall").executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"testClassName", (com.mojang.brigadier.arguments.ArgumentType)net.minecraft.gametest.framework.TestClassNameArgument.testClassName()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTestsInClass((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)net.minecraft.gametest.framework.TestClassNameArgument.getTestClassName((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testClassName"), (int)0, (int)8))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTestsInClass((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)net.minecraft.gametest.framework.TestClassNameArgument.getTestClassName((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testClassName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)8))).then(net.minecraft.commands.Commands.argument((java.lang.String)"testsPerRow", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTestsInClass((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)net.minecraft.gametest.framework.TestClassNameArgument.getTestClassName((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testClassName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testsPerRow"))))))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"rotationSteps", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)8))).then(net.minecraft.commands.Commands.argument((java.lang.String)"testsPerRow", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.runAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"rotationSteps"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testsPerRow"))))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"export").then(net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.exportTestStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"exportthis").executes($$0 -> net.minecraft.gametest.framework.TestCommand.exportNearestTestStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"import").then(net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.importTestStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName")))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"pos").executes($$0 -> net.minecraft.gametest.framework.TestCommand.showPos((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)"pos"))).then(net.minecraft.commands.Commands.argument((java.lang.String)"var", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.showPos((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"var")))))).then(net.minecraft.commands.Commands.literal((java.lang.String)"create").then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"testName", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.StringArgumentType.word()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.createNewStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)5, (int)5, (int)5))).then(((com.mojang.brigadier.builder.RequiredArgumentBuilder)net.minecraft.commands.Commands.argument((java.lang.String)"width", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.createNewStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width")))).then(net.minecraft.commands.Commands.argument((java.lang.String)"height", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).then(net.minecraft.commands.Commands.argument((java.lang.String)"depth", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.createNewStructure((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (java.lang.String)com.mojang.brigadier.arguments.StringArgumentType.getString((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"testName"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"width"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"height"), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"depth"))))))))).then(((com.mojang.brigadier.builder.LiteralArgumentBuilder)net.minecraft.commands.Commands.literal((java.lang.String)"clearall").executes($$0 -> net.minecraft.gametest.framework.TestCommand.clearAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)200))).then(net.minecraft.commands.Commands.argument((java.lang.String)"radius", (com.mojang.brigadier.arguments.ArgumentType)com.mojang.brigadier.arguments.IntegerArgumentType.integer()).executes($$0 -> net.minecraft.gametest.framework.TestCommand.clearAllTests((net.minecraft.commands.CommandSourceStack)((net.minecraft.commands.CommandSourceStack)$$0.getSource()), (int)com.mojang.brigadier.arguments.IntegerArgumentType.getInteger((com.mojang.brigadier.context.CommandContext)$$0, (java.lang.String)"radius"))))));
     }
 
-    public static int createNewStructure(net.minecraft.commands.CommandSourceStack source, java.lang.String structureName, int x, int y, int z) {
-        if (x > 48 || y > 48 || z > 48) {
+    public static int createNewStructure(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1, int $$2, int $$3, int $$4) {
+        if ($$2 > 48 || $$3 > 48 || $$4 > 48) {
             throw new java.lang.IllegalArgumentException("The structure must be less than 48 blocks big in each axis");
         }
-        net.minecraft.server.level.ServerLevel serverLevel = source.getLevel();
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(source.getPosition());
-        net.minecraft.core.BlockPos blockPos2 = new net.minecraft.core.BlockPos(blockPos.getX(), source.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, blockPos).getY(), blockPos.getZ() + 3);
-        net.minecraft.gametest.framework.StructureUtils.createNewEmptyStructureBlock((java.lang.String)structureName.toLowerCase(), (net.minecraft.core.BlockPos)blockPos2, (net.minecraft.core.Vec3i)new net.minecraft.core.Vec3i(x, y, z), (net.minecraft.world.level.block.Rotation)net.minecraft.world.level.block.Rotation.NONE, (net.minecraft.server.level.ServerLevel)serverLevel);
-        for (int i = 0; i < x; ++i) {
-            for (int j = 0; j < z; ++j) {
-                net.minecraft.core.BlockPos blockPos3 = new net.minecraft.core.BlockPos(blockPos2.getX() + i, blockPos2.getY() + 1, blockPos2.getZ() + j);
-                net.minecraft.world.level.block.Block block = net.minecraft.world.level.block.Blocks.POLISHED_ANDESITE;
-                net.minecraft.commands.arguments.blocks.BlockInput blockInput = new net.minecraft.commands.arguments.blocks.BlockInput(block.defaultBlockState(), java.util.Collections.emptySet(), null);
-                blockInput.place(serverLevel, blockPos3, 2);
+        net.minecraft.server.level.ServerLevel $$5 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$6 = new net.minecraft.core.BlockPos($$0.getPosition());
+        net.minecraft.core.BlockPos $$7 = new net.minecraft.core.BlockPos($$6.getX(), $$0.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, $$6).getY(), $$6.getZ() + 3);
+        net.minecraft.gametest.framework.StructureUtils.createNewEmptyStructureBlock((java.lang.String)$$1.toLowerCase(), (net.minecraft.core.BlockPos)$$7, (net.minecraft.core.Vec3i)new net.minecraft.core.Vec3i($$2, $$3, $$4), (net.minecraft.world.level.block.Rotation)net.minecraft.world.level.block.Rotation.NONE, (net.minecraft.server.level.ServerLevel)$$5);
+        for (int $$8 = 0; $$8 < $$2; ++$$8) {
+            for (int $$9 = 0; $$9 < $$4; ++$$9) {
+                net.minecraft.core.BlockPos $$10 = new net.minecraft.core.BlockPos($$7.getX() + $$8, $$7.getY() + 1, $$7.getZ() + $$9);
+                net.minecraft.world.level.block.Block $$11 = net.minecraft.world.level.block.Blocks.POLISHED_ANDESITE;
+                net.minecraft.commands.arguments.blocks.BlockInput $$12 = new net.minecraft.commands.arguments.blocks.BlockInput($$11.defaultBlockState(), java.util.Collections.emptySet(), null);
+                $$12.place($$5, $$10, 2);
             }
         }
-        net.minecraft.gametest.framework.StructureUtils.addCommandBlockAndButtonToStartTest((net.minecraft.core.BlockPos)blockPos2, (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos(1, 0, -1), (net.minecraft.world.level.block.Rotation)net.minecraft.world.level.block.Rotation.NONE, (net.minecraft.server.level.ServerLevel)serverLevel);
+        net.minecraft.gametest.framework.StructureUtils.addCommandBlockAndButtonToStartTest((net.minecraft.core.BlockPos)$$7, (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos(1, 0, -1), (net.minecraft.world.level.block.Rotation)net.minecraft.world.level.block.Rotation.NONE, (net.minecraft.server.level.ServerLevel)$$5);
         return 0;
     }
 
-    public static int showPos(net.minecraft.commands.CommandSourceStack source, java.lang.String string) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
-        net.minecraft.server.level.ServerLevel serverLevel;
-        net.minecraft.world.phys.BlockHitResult blockHitResult = (net.minecraft.world.phys.BlockHitResult)source.getPlayerOrException().pick(10.0, 1.0f, false);
-        net.minecraft.core.BlockPos blockPos = blockHitResult.getBlockPos();
-        java.util.Optional optional = net.minecraft.gametest.framework.StructureUtils.findStructureBlockContainingPos((net.minecraft.core.BlockPos)blockPos, (int)15, (net.minecraft.server.level.ServerLevel)(serverLevel = source.getLevel()));
-        if (!optional.isPresent()) {
-            optional = net.minecraft.gametest.framework.StructureUtils.findStructureBlockContainingPos((net.minecraft.core.BlockPos)blockPos, (int)200, (net.minecraft.server.level.ServerLevel)serverLevel);
+    public static int showPos(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1) throws com.mojang.brigadier.exceptions.CommandSyntaxException {
+        net.minecraft.server.level.ServerLevel $$4;
+        net.minecraft.world.phys.BlockHitResult $$2 = (net.minecraft.world.phys.BlockHitResult)$$0.getPlayerOrException().pick(10.0, 1.0f, false);
+        net.minecraft.core.BlockPos $$3 = $$2.getBlockPos();
+        java.util.Optional $$5 = net.minecraft.gametest.framework.StructureUtils.findStructureBlockContainingPos((net.minecraft.core.BlockPos)$$3, (int)15, (net.minecraft.server.level.ServerLevel)($$4 = $$0.getLevel()));
+        if (!$$5.isPresent()) {
+            $$5 = net.minecraft.gametest.framework.StructureUtils.findStructureBlockContainingPos((net.minecraft.core.BlockPos)$$3, (int)200, (net.minecraft.server.level.ServerLevel)$$4);
         }
-        if (!optional.isPresent()) {
-            source.sendFailure((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)("Can't find a structure block that contains the targeted pos " + blockPos)));
+        if (!$$5.isPresent()) {
+            $$0.sendFailure((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)("Can't find a structure block that contains the targeted pos " + $$3)));
             return 0;
         }
-        net.minecraft.world.level.block.entity.StructureBlockEntity structureBlockEntity = (net.minecraft.world.level.block.entity.StructureBlockEntity)serverLevel.getBlockEntity((net.minecraft.core.BlockPos)optional.get());
-        net.minecraft.core.BlockPos blockPos2 = blockPos.subtract((net.minecraft.core.Vec3i)optional.get());
-        java.lang.String string2 = blockPos2.getX() + ", " + blockPos2.getY() + ", " + blockPos2.getZ();
-        java.lang.String string3 = structureBlockEntity.getStructurePath();
-        net.minecraft.network.chat.MutableComponent mutableComponent = net.minecraft.network.chat.Component.literal((java.lang.String)string2).setStyle(net.minecraft.network.chat.Style.EMPTY.withBold(java.lang.Boolean.valueOf((boolean)true)).withColor(net.minecraft.ChatFormatting.GREEN).withHoverEvent(new net.minecraft.network.chat.HoverEvent(net.minecraft.network.chat.HoverEvent$Action.SHOW_TEXT, (java.lang.Object)net.minecraft.network.chat.Component.literal((java.lang.String)"Click to copy to clipboard"))).withClickEvent(new net.minecraft.network.chat.ClickEvent(net.minecraft.network.chat.ClickEvent$Action.COPY_TO_CLIPBOARD, "final BlockPos " + string + " = new BlockPos(" + string2 + ");")));
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)("Position relative to " + string3 + ": ")).append((net.minecraft.network.chat.Component)mutableComponent), false);
-        net.minecraft.network.protocol.game.DebugPackets.sendGameTestAddMarker((net.minecraft.server.level.ServerLevel)serverLevel, (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos((net.minecraft.core.Vec3i)blockPos), (java.lang.String)string2, (int)-2147418368, (int)10000);
+        net.minecraft.world.level.block.entity.StructureBlockEntity $$6 = (net.minecraft.world.level.block.entity.StructureBlockEntity)$$4.getBlockEntity((net.minecraft.core.BlockPos)$$5.get());
+        net.minecraft.core.BlockPos $$7 = $$3.subtract((net.minecraft.core.Vec3i)$$5.get());
+        java.lang.String $$8 = $$7.getX() + ", " + $$7.getY() + ", " + $$7.getZ();
+        java.lang.String $$9 = $$6.getStructurePath();
+        net.minecraft.network.chat.MutableComponent $$10 = net.minecraft.network.chat.Component.literal((java.lang.String)$$8).setStyle(net.minecraft.network.chat.Style.EMPTY.withBold(java.lang.Boolean.valueOf((boolean)true)).withColor(net.minecraft.ChatFormatting.GREEN).withHoverEvent(new net.minecraft.network.chat.HoverEvent(net.minecraft.network.chat.HoverEvent$Action.SHOW_TEXT, (java.lang.Object)net.minecraft.network.chat.Component.literal((java.lang.String)"Click to copy to clipboard"))).withClickEvent(new net.minecraft.network.chat.ClickEvent(net.minecraft.network.chat.ClickEvent$Action.COPY_TO_CLIPBOARD, "final BlockPos " + $$1 + " = new BlockPos(" + $$8 + ");")));
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)("Position relative to " + $$9 + ": ")).append((net.minecraft.network.chat.Component)$$10), false);
+        net.minecraft.network.protocol.game.DebugPackets.sendGameTestAddMarker((net.minecraft.server.level.ServerLevel)$$4, (net.minecraft.core.BlockPos)new net.minecraft.core.BlockPos((net.minecraft.core.Vec3i)$$3), (java.lang.String)$$8, (int)-2147418368, (int)10000);
         return 1;
     }
 
-    public static int runNearbyTest(net.minecraft.commands.CommandSourceStack source) {
-        net.minecraft.server.level.ServerLevel serverLevel;
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(source.getPosition());
-        net.minecraft.core.BlockPos blockPos2 = net.minecraft.gametest.framework.StructureUtils.findNearestStructureBlock((net.minecraft.core.BlockPos)blockPos, (int)15, (net.minecraft.server.level.ServerLevel)(serverLevel = source.getLevel()));
-        if (blockPos2 == null) {
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)serverLevel, (java.lang.String)"Couldn't find any structure block within 15 radius", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
+    public static int runNearbyTest(net.minecraft.commands.CommandSourceStack $$0) {
+        net.minecraft.server.level.ServerLevel $$2;
+        net.minecraft.core.BlockPos $$1 = new net.minecraft.core.BlockPos($$0.getPosition());
+        net.minecraft.core.BlockPos $$3 = net.minecraft.gametest.framework.StructureUtils.findNearestStructureBlock((net.minecraft.core.BlockPos)$$1, (int)15, (net.minecraft.server.level.ServerLevel)($$2 = $$0.getLevel()));
+        if ($$3 == null) {
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)$$2, (java.lang.String)"Couldn't find any structure block within 15 radius", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
             return 0;
         }
-        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)serverLevel);
-        net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.server.level.ServerLevel)serverLevel, (net.minecraft.core.BlockPos)blockPos2, null);
+        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)$$2);
+        net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.server.level.ServerLevel)$$2, (net.minecraft.core.BlockPos)$$3, null);
         return 1;
     }
 
-    public static int runAllNearbyTests(net.minecraft.commands.CommandSourceStack source) {
-        net.minecraft.server.level.ServerLevel serverLevel;
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(source.getPosition());
-        java.util.Collection collection = net.minecraft.gametest.framework.StructureUtils.findStructureBlocks((net.minecraft.core.BlockPos)blockPos, (int)200, (net.minecraft.server.level.ServerLevel)(serverLevel = source.getLevel()));
-        if (collection.isEmpty()) {
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)serverLevel, (java.lang.String)"Couldn't find any structure blocks within 200 block radius", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
+    public static int runAllNearbyTests(net.minecraft.commands.CommandSourceStack $$0) {
+        net.minecraft.server.level.ServerLevel $$22;
+        net.minecraft.core.BlockPos $$1 = new net.minecraft.core.BlockPos($$0.getPosition());
+        java.util.Collection $$3 = net.minecraft.gametest.framework.StructureUtils.findStructureBlocks((net.minecraft.core.BlockPos)$$1, (int)200, (net.minecraft.server.level.ServerLevel)($$22 = $$0.getLevel()));
+        if ($$3.isEmpty()) {
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)$$22, (java.lang.String)"Couldn't find any structure blocks within 200 block radius", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
             return 1;
         }
-        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)serverLevel);
-        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Running " + collection.size() + " tests..."));
-        net.minecraft.gametest.framework.MultipleTestTracker multipleTestTracker = new net.minecraft.gametest.framework.MultipleTestTracker();
-        collection.forEach(pos -> net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.server.level.ServerLevel)serverLevel, (net.minecraft.core.BlockPos)pos, (net.minecraft.gametest.framework.MultipleTestTracker)multipleTestTracker));
+        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)$$22);
+        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Running " + $$3.size() + " tests..."));
+        net.minecraft.gametest.framework.MultipleTestTracker $$4 = new net.minecraft.gametest.framework.MultipleTestTracker();
+        $$3.forEach($$2 -> net.minecraft.gametest.framework.TestCommand.runTest((net.minecraft.server.level.ServerLevel)$$22, (net.minecraft.core.BlockPos)$$2, (net.minecraft.gametest.framework.MultipleTestTracker)$$4));
         return 1;
     }
 
-    public static void runTest(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.core.BlockPos pos, @javax.annotation.Nullable net.minecraft.gametest.framework.MultipleTestTracker tracker) {
-        net.minecraft.world.level.block.entity.StructureBlockEntity structureBlockEntity = (net.minecraft.world.level.block.entity.StructureBlockEntity)serverLevel.getBlockEntity(pos);
-        java.lang.String string = structureBlockEntity.getStructurePath();
-        net.minecraft.gametest.framework.TestFunction testFunction = net.minecraft.gametest.framework.GameTestRegistry.getTestFunction((java.lang.String)string);
-        net.minecraft.gametest.framework.GameTestInfo gameTestInfo = new net.minecraft.gametest.framework.GameTestInfo(testFunction, structureBlockEntity.getRotation(), serverLevel);
-        if (tracker != null) {
-            tracker.addTestToTrack(gameTestInfo);
-            gameTestInfo.addListener((net.minecraft.gametest.framework.GameTestListener)new net.minecraft.gametest.framework.TestCommand$TestSummaryDisplayer(serverLevel, tracker));
+    public static void runTest(net.minecraft.server.level.ServerLevel $$0, net.minecraft.core.BlockPos $$1, @javax.annotation.Nullable net.minecraft.gametest.framework.MultipleTestTracker $$2) {
+        net.minecraft.world.level.block.entity.StructureBlockEntity $$3 = (net.minecraft.world.level.block.entity.StructureBlockEntity)$$0.getBlockEntity($$1);
+        java.lang.String $$4 = $$3.getStructurePath();
+        net.minecraft.gametest.framework.TestFunction $$5 = net.minecraft.gametest.framework.GameTestRegistry.getTestFunction((java.lang.String)$$4);
+        net.minecraft.gametest.framework.GameTestInfo $$6 = new net.minecraft.gametest.framework.GameTestInfo($$5, $$3.getRotation(), $$0);
+        if ($$2 != null) {
+            $$2.addTestToTrack($$6);
+            $$6.addListener((net.minecraft.gametest.framework.GameTestListener)new net.minecraft.gametest.framework.TestCommand$TestSummaryDisplayer($$0, $$2));
         }
-        net.minecraft.gametest.framework.TestCommand.runTestPreparation((net.minecraft.gametest.framework.TestFunction)testFunction, (net.minecraft.server.level.ServerLevel)serverLevel);
-        net.minecraft.world.phys.AABB aABB = net.minecraft.gametest.framework.StructureUtils.getStructureBounds((net.minecraft.world.level.block.entity.StructureBlockEntity)structureBlockEntity);
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(aABB.minX, aABB.minY, aABB.minZ);
-        net.minecraft.gametest.framework.GameTestRunner.runTest((net.minecraft.gametest.framework.GameTestInfo)gameTestInfo, (net.minecraft.core.BlockPos)blockPos, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON);
+        net.minecraft.gametest.framework.TestCommand.runTestPreparation((net.minecraft.gametest.framework.TestFunction)$$5, (net.minecraft.server.level.ServerLevel)$$0);
+        net.minecraft.world.phys.AABB $$7 = net.minecraft.gametest.framework.StructureUtils.getStructureBounds((net.minecraft.world.level.block.entity.StructureBlockEntity)$$3);
+        net.minecraft.core.BlockPos $$8 = new net.minecraft.core.BlockPos($$7.minX, $$7.minY, $$7.minZ);
+        net.minecraft.gametest.framework.GameTestRunner.runTest((net.minecraft.gametest.framework.GameTestInfo)$$6, (net.minecraft.core.BlockPos)$$8, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON);
     }
 
-    public static void showTestSummaryIfAllDone(net.minecraft.server.level.ServerLevel serverLevel, net.minecraft.gametest.framework.MultipleTestTracker tracker) {
-        if (tracker.isDone()) {
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)serverLevel, (java.lang.String)("GameTest done! " + tracker.getTotalCount() + " tests were run"), (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.WHITE);
-            if (tracker.hasFailedRequired()) {
-                net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)serverLevel, (java.lang.String)(tracker.getFailedRequiredCount() + " required tests failed :("), (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
+    public static void showTestSummaryIfAllDone(net.minecraft.server.level.ServerLevel $$0, net.minecraft.gametest.framework.MultipleTestTracker $$1) {
+        if ($$1.isDone()) {
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)$$0, (java.lang.String)("GameTest done! " + $$1.getTotalCount() + " tests were run"), (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.WHITE);
+            if ($$1.hasFailedRequired()) {
+                net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)$$0, (java.lang.String)($$1.getFailedRequiredCount() + " required tests failed :("), (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
             } else {
-                net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)serverLevel, (java.lang.String)"All required tests passed :)", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.GREEN);
+                net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)$$0, (java.lang.String)"All required tests passed :)", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.GREEN);
             }
-            if (tracker.hasFailedOptional()) {
-                net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)serverLevel, (java.lang.String)(tracker.getFailedOptionalCount() + " optional tests failed"), (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.GRAY);
+            if ($$1.hasFailedOptional()) {
+                net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)$$0, (java.lang.String)($$1.getFailedOptionalCount() + " optional tests failed"), (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.GRAY);
             }
         }
     }
 
-    public static int clearAllTests(net.minecraft.commands.CommandSourceStack source, int radius) {
-        net.minecraft.server.level.ServerLevel serverLevel = source.getLevel();
-        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)serverLevel);
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(source.getPosition().x, (double)source.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, new net.minecraft.core.BlockPos(source.getPosition())).getY(), source.getPosition().z);
-        net.minecraft.gametest.framework.GameTestRunner.clearAllTests((net.minecraft.server.level.ServerLevel)serverLevel, (net.minecraft.core.BlockPos)blockPos, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON, (int)net.minecraft.util.Mth.clamp((int)radius, (int)0, (int)1024));
+    public static int clearAllTests(net.minecraft.commands.CommandSourceStack $$0, int $$1) {
+        net.minecraft.server.level.ServerLevel $$2 = $$0.getLevel();
+        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)$$2);
+        net.minecraft.core.BlockPos $$3 = new net.minecraft.core.BlockPos($$0.getPosition().x, (double)$$0.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, new net.minecraft.core.BlockPos($$0.getPosition())).getY(), $$0.getPosition().z);
+        net.minecraft.gametest.framework.GameTestRunner.clearAllTests((net.minecraft.server.level.ServerLevel)$$2, (net.minecraft.core.BlockPos)$$3, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON, (int)net.minecraft.util.Mth.clamp((int)$$1, (int)0, (int)1024));
         return 1;
     }
 
-    public static int runTest(net.minecraft.commands.CommandSourceStack source, net.minecraft.gametest.framework.TestFunction function, int rotationSteps) {
-        net.minecraft.server.level.ServerLevel serverLevel = source.getLevel();
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(source.getPosition());
-        int n = source.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, blockPos).getY();
-        net.minecraft.core.BlockPos blockPos2 = new net.minecraft.core.BlockPos(blockPos.getX(), n, blockPos.getZ() + 3);
-        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)serverLevel);
-        net.minecraft.gametest.framework.TestCommand.runTestPreparation((net.minecraft.gametest.framework.TestFunction)function, (net.minecraft.server.level.ServerLevel)serverLevel);
-        net.minecraft.world.level.block.Rotation rotation = net.minecraft.gametest.framework.StructureUtils.getRotationForRotationSteps((int)rotationSteps);
-        net.minecraft.gametest.framework.GameTestInfo gameTestInfo = new net.minecraft.gametest.framework.GameTestInfo(function, rotation, serverLevel);
-        net.minecraft.gametest.framework.GameTestRunner.runTest((net.minecraft.gametest.framework.GameTestInfo)gameTestInfo, (net.minecraft.core.BlockPos)blockPos2, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON);
+    public static int runTest(net.minecraft.commands.CommandSourceStack $$0, net.minecraft.gametest.framework.TestFunction $$1, int $$2) {
+        net.minecraft.server.level.ServerLevel $$3 = $$0.getLevel();
+        net.minecraft.core.BlockPos $$4 = new net.minecraft.core.BlockPos($$0.getPosition());
+        int $$5 = $$0.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, $$4).getY();
+        net.minecraft.core.BlockPos $$6 = new net.minecraft.core.BlockPos($$4.getX(), $$5, $$4.getZ() + 3);
+        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)$$3);
+        net.minecraft.gametest.framework.TestCommand.runTestPreparation((net.minecraft.gametest.framework.TestFunction)$$1, (net.minecraft.server.level.ServerLevel)$$3);
+        net.minecraft.world.level.block.Rotation $$7 = net.minecraft.gametest.framework.StructureUtils.getRotationForRotationSteps((int)$$2);
+        net.minecraft.gametest.framework.GameTestInfo $$8 = new net.minecraft.gametest.framework.GameTestInfo($$1, $$7, $$3);
+        net.minecraft.gametest.framework.GameTestRunner.runTest((net.minecraft.gametest.framework.GameTestInfo)$$8, (net.minecraft.core.BlockPos)$$6, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON);
         return 1;
     }
 
-    public static void runTestPreparation(net.minecraft.gametest.framework.TestFunction function, net.minecraft.server.level.ServerLevel serverLevel) {
-        java.util.function.Consumer consumer = net.minecraft.gametest.framework.GameTestRegistry.getBeforeBatchFunction((java.lang.String)function.getBatchName());
-        if (consumer != null) {
-            consumer.accept((java.lang.Object)serverLevel);
+    public static void runTestPreparation(net.minecraft.gametest.framework.TestFunction $$0, net.minecraft.server.level.ServerLevel $$1) {
+        java.util.function.Consumer $$2 = net.minecraft.gametest.framework.GameTestRegistry.getBeforeBatchFunction((java.lang.String)$$0.getBatchName());
+        if ($$2 != null) {
+            $$2.accept((java.lang.Object)$$1);
         }
     }
 
-    public static int runAllTests(net.minecraft.commands.CommandSourceStack source, int rotationSteps, int testsPerRow) {
-        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)source.getLevel());
-        java.util.Collection collection = net.minecraft.gametest.framework.GameTestRegistry.getAllTestFunctions();
-        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Running all " + collection.size() + " tests..."));
+    public static int runAllTests(net.minecraft.commands.CommandSourceStack $$0, int $$1, int $$2) {
+        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)$$0.getLevel());
+        java.util.Collection $$3 = net.minecraft.gametest.framework.GameTestRegistry.getAllTestFunctions();
+        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Running all " + $$3.size() + " tests..."));
         net.minecraft.gametest.framework.GameTestRegistry.forgetFailedTests();
-        net.minecraft.gametest.framework.TestCommand.runTests((net.minecraft.commands.CommandSourceStack)source, (java.util.Collection)collection, (int)rotationSteps, (int)testsPerRow);
+        net.minecraft.gametest.framework.TestCommand.runTests((net.minecraft.commands.CommandSourceStack)$$0, (java.util.Collection)$$3, (int)$$1, (int)$$2);
         return 1;
     }
 
-    public static int runAllTestsInClass(net.minecraft.commands.CommandSourceStack source, java.lang.String testClassName, int rotationSteps, int testsPerRow) {
-        java.util.Collection collection = net.minecraft.gametest.framework.GameTestRegistry.getTestFunctionsForClassName((java.lang.String)testClassName);
-        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)source.getLevel());
-        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Running " + collection.size() + " tests from " + testClassName + "..."));
+    public static int runAllTestsInClass(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1, int $$2, int $$3) {
+        java.util.Collection $$4 = net.minecraft.gametest.framework.GameTestRegistry.getTestFunctionsForClassName((java.lang.String)$$1);
+        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)$$0.getLevel());
+        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Running " + $$4.size() + " tests from " + $$1 + "..."));
         net.minecraft.gametest.framework.GameTestRegistry.forgetFailedTests();
-        net.minecraft.gametest.framework.TestCommand.runTests((net.minecraft.commands.CommandSourceStack)source, (java.util.Collection)collection, (int)rotationSteps, (int)testsPerRow);
+        net.minecraft.gametest.framework.TestCommand.runTests((net.minecraft.commands.CommandSourceStack)$$0, (java.util.Collection)$$4, (int)$$2, (int)$$3);
         return 1;
     }
 
-    public static int runLastFailedTests(net.minecraft.commands.CommandSourceStack source, boolean runOnlyRequired, int rotationSteps, int testsPerRow) {
-        java.util.Collection collection = runOnlyRequired ? (java.util.Collection)net.minecraft.gametest.framework.GameTestRegistry.getLastFailedTests().stream().filter(net.minecraft.gametest.framework.TestFunction::isRequired).collect(java.util.stream.Collectors.toList()) : net.minecraft.gametest.framework.GameTestRegistry.getLastFailedTests();
-        if (collection.isEmpty()) {
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)"No failed tests to rerun");
+    public static int runLastFailedTests(net.minecraft.commands.CommandSourceStack $$0, boolean $$1, int $$2, int $$3) {
+        java.util.Collection $$5;
+        if ($$1) {
+            java.util.Collection $$4 = (java.util.Collection)net.minecraft.gametest.framework.GameTestRegistry.getLastFailedTests().stream().filter(net.minecraft.gametest.framework.TestFunction::isRequired).collect(java.util.stream.Collectors.toList());
+        } else {
+            $$5 = net.minecraft.gametest.framework.GameTestRegistry.getLastFailedTests();
+        }
+        if ($$5.isEmpty()) {
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)"No failed tests to rerun");
             return 0;
         }
-        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)source.getLevel());
-        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Rerunning " + collection.size() + " failed tests (" + (runOnlyRequired ? "only required tests" : "including optional tests") + ")"));
-        net.minecraft.gametest.framework.TestCommand.runTests((net.minecraft.commands.CommandSourceStack)source, (java.util.Collection)collection, (int)rotationSteps, (int)testsPerRow);
+        net.minecraft.gametest.framework.GameTestRunner.clearMarkers((net.minecraft.server.level.ServerLevel)$$0.getLevel());
+        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Rerunning " + $$5.size() + " failed tests (" + ($$1 ? "only required tests" : "including optional tests") + ")"));
+        net.minecraft.gametest.framework.TestCommand.runTests((net.minecraft.commands.CommandSourceStack)$$0, (java.util.Collection)$$5, (int)$$2, (int)$$3);
         return 1;
     }
 
-    public static void runTests(net.minecraft.commands.CommandSourceStack source, java.util.Collection<net.minecraft.gametest.framework.TestFunction> collection, int rotationSteps, int testsPerRow) {
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(source.getPosition());
-        net.minecraft.core.BlockPos blockPos2 = new net.minecraft.core.BlockPos(blockPos.getX(), source.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, blockPos).getY(), blockPos.getZ() + 3);
-        net.minecraft.server.level.ServerLevel serverLevel = source.getLevel();
-        net.minecraft.world.level.block.Rotation rotation = net.minecraft.gametest.framework.StructureUtils.getRotationForRotationSteps((int)rotationSteps);
-        java.util.Collection collection2 = net.minecraft.gametest.framework.GameTestRunner.runTests(collection, (net.minecraft.core.BlockPos)blockPos2, (net.minecraft.world.level.block.Rotation)rotation, (net.minecraft.server.level.ServerLevel)serverLevel, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON, (int)testsPerRow);
-        net.minecraft.gametest.framework.MultipleTestTracker multipleTestTracker = new net.minecraft.gametest.framework.MultipleTestTracker(collection2);
-        multipleTestTracker.addListener((net.minecraft.gametest.framework.GameTestListener)new net.minecraft.gametest.framework.TestCommand$TestSummaryDisplayer(serverLevel, multipleTestTracker));
-        multipleTestTracker.addFailureListener(testInfo -> net.minecraft.gametest.framework.GameTestRegistry.rememberFailedTest((net.minecraft.gametest.framework.TestFunction)testInfo.getTestFunction()));
+    public static void runTests(net.minecraft.commands.CommandSourceStack $$02, java.util.Collection<net.minecraft.gametest.framework.TestFunction> $$1, int $$2, int $$3) {
+        net.minecraft.core.BlockPos $$4 = new net.minecraft.core.BlockPos($$02.getPosition());
+        net.minecraft.core.BlockPos $$5 = new net.minecraft.core.BlockPos($$4.getX(), $$02.getLevel().getHeightmapPos(net.minecraft.world.level.levelgen.Heightmap$Types.WORLD_SURFACE, $$4).getY(), $$4.getZ() + 3);
+        net.minecraft.server.level.ServerLevel $$6 = $$02.getLevel();
+        net.minecraft.world.level.block.Rotation $$7 = net.minecraft.gametest.framework.StructureUtils.getRotationForRotationSteps((int)$$2);
+        java.util.Collection $$8 = net.minecraft.gametest.framework.GameTestRunner.runTests($$1, (net.minecraft.core.BlockPos)$$5, (net.minecraft.world.level.block.Rotation)$$7, (net.minecraft.server.level.ServerLevel)$$6, (net.minecraft.gametest.framework.GameTestTicker)net.minecraft.gametest.framework.GameTestTicker.SINGLETON, (int)$$3);
+        net.minecraft.gametest.framework.MultipleTestTracker $$9 = new net.minecraft.gametest.framework.MultipleTestTracker($$8);
+        $$9.addListener((net.minecraft.gametest.framework.GameTestListener)new net.minecraft.gametest.framework.TestCommand$TestSummaryDisplayer($$6, $$9));
+        $$9.addFailureListener($$0 -> net.minecraft.gametest.framework.GameTestRegistry.rememberFailedTest((net.minecraft.gametest.framework.TestFunction)$$0.getTestFunction()));
     }
 
-    public static void say(net.minecraft.commands.CommandSourceStack source, java.lang.String message) {
-        source.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)message), false);
+    public static void say(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1) {
+        $$0.sendSuccess((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)$$1), false);
     }
 
-    public static int exportNearestTestStructure(net.minecraft.commands.CommandSourceStack source) {
-        net.minecraft.server.level.ServerLevel serverLevel;
-        net.minecraft.core.BlockPos blockPos = new net.minecraft.core.BlockPos(source.getPosition());
-        net.minecraft.core.BlockPos blockPos2 = net.minecraft.gametest.framework.StructureUtils.findNearestStructureBlock((net.minecraft.core.BlockPos)blockPos, (int)15, (net.minecraft.server.level.ServerLevel)(serverLevel = source.getLevel()));
-        if (blockPos2 == null) {
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)serverLevel, (java.lang.String)"Couldn't find any structure block within 15 radius", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
+    public static int exportNearestTestStructure(net.minecraft.commands.CommandSourceStack $$0) {
+        net.minecraft.server.level.ServerLevel $$2;
+        net.minecraft.core.BlockPos $$1 = new net.minecraft.core.BlockPos($$0.getPosition());
+        net.minecraft.core.BlockPos $$3 = net.minecraft.gametest.framework.StructureUtils.findNearestStructureBlock((net.minecraft.core.BlockPos)$$1, (int)15, (net.minecraft.server.level.ServerLevel)($$2 = $$0.getLevel()));
+        if ($$3 == null) {
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.server.level.ServerLevel)$$2, (java.lang.String)"Couldn't find any structure block within 15 radius", (net.minecraft.ChatFormatting)net.minecraft.ChatFormatting.RED);
             return 0;
         }
-        net.minecraft.world.level.block.entity.StructureBlockEntity structureBlockEntity = (net.minecraft.world.level.block.entity.StructureBlockEntity)serverLevel.getBlockEntity(blockPos2);
-        java.lang.String string = structureBlockEntity.getStructurePath();
-        return net.minecraft.gametest.framework.TestCommand.exportTestStructure((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)string);
+        net.minecraft.world.level.block.entity.StructureBlockEntity $$4 = (net.minecraft.world.level.block.entity.StructureBlockEntity)$$2.getBlockEntity($$3);
+        java.lang.String $$5 = $$4.getStructurePath();
+        return net.minecraft.gametest.framework.TestCommand.exportTestStructure((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)$$5);
     }
 
-    public static int exportTestStructure(net.minecraft.commands.CommandSourceStack source, java.lang.String structurePath) {
-        java.nio.file.Path path = java.nio.file.Paths.get((java.lang.String)net.minecraft.gametest.framework.StructureUtils.testStructuresDir, (java.lang.String[])new java.lang.String[0]);
-        net.minecraft.resources.ResourceLocation resourceLocation = new net.minecraft.resources.ResourceLocation("minecraft", structurePath);
-        java.nio.file.Path path2 = source.getLevel().getStructureManager().getPathToGeneratedStructure(resourceLocation, ".nbt");
-        java.nio.file.Path path3 = net.minecraft.data.structures.NbtToSnbt.convertStructure((net.minecraft.data.CachedOutput)net.minecraft.data.CachedOutput.NO_CACHE, (java.nio.file.Path)path2, (java.lang.String)structurePath, (java.nio.file.Path)path);
-        if (path3 == null) {
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Failed to export " + path2));
+    public static int exportTestStructure(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1) {
+        java.nio.file.Path $$2 = java.nio.file.Paths.get((java.lang.String)net.minecraft.gametest.framework.StructureUtils.testStructuresDir, (java.lang.String[])new java.lang.String[0]);
+        net.minecraft.resources.ResourceLocation $$3 = new net.minecraft.resources.ResourceLocation("minecraft", $$1);
+        java.nio.file.Path $$4 = $$0.getLevel().getStructureManager().getPathToGeneratedStructure($$3, ".nbt");
+        java.nio.file.Path $$5 = net.minecraft.data.structures.NbtToSnbt.convertStructure((net.minecraft.data.CachedOutput)net.minecraft.data.CachedOutput.NO_CACHE, (java.nio.file.Path)$$4, (java.lang.String)$$1, (java.nio.file.Path)$$2);
+        if ($$5 == null) {
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Failed to export " + $$4));
             return 1;
         }
         try {
-            java.nio.file.Files.createDirectories((java.nio.file.Path)path3.getParent(), (java.nio.file.attribute.FileAttribute[])new java.nio.file.attribute.FileAttribute[0]);
+            java.nio.file.Files.createDirectories((java.nio.file.Path)$$5.getParent(), (java.nio.file.attribute.FileAttribute[])new java.nio.file.attribute.FileAttribute[0]);
         }
-        catch (java.io.IOException iOException) {
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Could not create folder " + path3.getParent()));
-            iOException.printStackTrace();
+        catch (java.io.IOException $$6) {
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Could not create folder " + $$5.getParent()));
+            $$6.printStackTrace();
             return 1;
         }
-        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Exported " + structurePath + " to " + path3.toAbsolutePath()));
+        net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Exported " + $$1 + " to " + $$5.toAbsolutePath()));
         return 0;
     }
 
-    public static int importTestStructure(net.minecraft.commands.CommandSourceStack source, java.lang.String structurePath) {
-        java.nio.file.Path path = java.nio.file.Paths.get((java.lang.String)net.minecraft.gametest.framework.StructureUtils.testStructuresDir, (java.lang.String[])new java.lang.String[]{structurePath + ".snbt"});
-        net.minecraft.resources.ResourceLocation resourceLocation = new net.minecraft.resources.ResourceLocation("minecraft", structurePath);
-        java.nio.file.Path path2 = source.getLevel().getStructureManager().getPathToGeneratedStructure(resourceLocation, ".nbt");
+    public static int importTestStructure(net.minecraft.commands.CommandSourceStack $$0, java.lang.String $$1) {
+        java.nio.file.Path $$2 = java.nio.file.Paths.get((java.lang.String)net.minecraft.gametest.framework.StructureUtils.testStructuresDir, (java.lang.String[])new java.lang.String[]{$$1 + ".snbt"});
+        net.minecraft.resources.ResourceLocation $$3 = new net.minecraft.resources.ResourceLocation("minecraft", $$1);
+        java.nio.file.Path $$4 = $$0.getLevel().getStructureManager().getPathToGeneratedStructure($$3, ".nbt");
         try {
-            java.io.BufferedReader bufferedReader = java.nio.file.Files.newBufferedReader((java.nio.file.Path)path);
-            java.lang.String string = org.apache.commons.io.IOUtils.toString((java.io.Reader)bufferedReader);
-            java.nio.file.Files.createDirectories((java.nio.file.Path)path2.getParent(), (java.nio.file.attribute.FileAttribute[])new java.nio.file.attribute.FileAttribute[0]);
-            try (java.io.OutputStream outputStream = java.nio.file.Files.newOutputStream((java.nio.file.Path)path2, (java.nio.file.OpenOption[])new java.nio.file.OpenOption[0]);
+            java.io.BufferedReader $$5 = java.nio.file.Files.newBufferedReader((java.nio.file.Path)$$2);
+            java.lang.String $$6 = org.apache.commons.io.IOUtils.toString((java.io.Reader)$$5);
+            java.nio.file.Files.createDirectories((java.nio.file.Path)$$4.getParent(), (java.nio.file.attribute.FileAttribute[])new java.nio.file.attribute.FileAttribute[0]);
+            try (java.io.OutputStream $$7 = java.nio.file.Files.newOutputStream((java.nio.file.Path)$$4, (java.nio.file.OpenOption[])new java.nio.file.OpenOption[0]);
 ){
-                net.minecraft.nbt.NbtIo.writeCompressed((net.minecraft.nbt.CompoundTag)net.minecraft.nbt.NbtUtils.snbtToStructure((java.lang.String)string), (java.io.OutputStream)outputStream);
+                net.minecraft.nbt.NbtIo.writeCompressed((net.minecraft.nbt.CompoundTag)net.minecraft.nbt.NbtUtils.snbtToStructure((java.lang.String)$$6), (java.io.OutputStream)$$7);
             }
-            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)source, (java.lang.String)("Imported to " + path2.toAbsolutePath()));
+            net.minecraft.gametest.framework.TestCommand.say((net.minecraft.commands.CommandSourceStack)$$0, (java.lang.String)("Imported to " + $$4.toAbsolutePath()));
             return 0;
         }
-        catch (com.mojang.brigadier.exceptions.CommandSyntaxException | java.io.IOException throwable) {
-            java.lang.System.err.println("Failed to load structure " + structurePath);
-            throwable.printStackTrace();
+        catch (com.mojang.brigadier.exceptions.CommandSyntaxException | java.io.IOException $$8) {
+            java.lang.System.err.println("Failed to load structure " + $$1);
+            $$8.printStackTrace();
             return 1;
         }
     }
 
-    public static void say(net.minecraft.server.level.ServerLevel serverLevel, java.lang.String message, net.minecraft.ChatFormatting formatting) {
-        serverLevel.getPlayers(player -> true).forEach(player -> player.sendSystemMessage((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)(formatting + message))));
+    public static void say(net.minecraft.server.level.ServerLevel $$02, java.lang.String $$1, net.minecraft.ChatFormatting $$22) {
+        $$02.getPlayers($$0 -> true).forEach($$2 -> $$2.sendSystemMessage((net.minecraft.network.chat.Component)net.minecraft.network.chat.Component.literal((java.lang.String)($$22 + $$1))));
     }
 }
 