--- net/minecraft/data/info/WorldgenRegistryDumpReport.java
+++ net/minecraft/data/info/WorldgenRegistryDumpReport.java
@@ -1,55 +1,0 @@
-/*
- * Decompiled with CFR 0.151.
- */
-package net.minecraft.data.info;
-
-public class net.minecraft.data.info.WorldgenRegistryDumpReport
-implements net.minecraft.data.DataProvider
- {
-    public static org.slf4j.Logger LOGGER;
-    public net.minecraft.data.DataGenerator generator;
-
-    public net.minecraft.data.info.WorldgenRegistryDumpReport(net.minecraft.data.DataGenerator $$0) {
-        this.generator = $$0;
-    }
-
-    public void run(net.minecraft.data.CachedOutput $$0) {
-        net.minecraft.core.RegistryAccess $$1 = (net.minecraft.core.RegistryAccess)net.minecraft.core.RegistryAccess.BUILTIN.get();
-        net.minecraft.resources.RegistryOps $$2 = net.minecraft.resources.RegistryOps.create((com.mojang.serialization.DynamicOps)com.mojang.serialization.JsonOps.INSTANCE, (net.minecraft.core.RegistryAccess)$$1);
-        net.minecraft.core.RegistryAccess.knownRegistries().forEach(arg_0 -> this.lambda$run$0($$0, $$1, (com.mojang.serialization.DynamicOps)$$2, arg_0));
-    }
-
-    public <T> void dumpRegistryCap(net.minecraft.data.CachedOutput $$0, net.minecraft.core.RegistryAccess $$1, com.mojang.serialization.DynamicOps<com.google.gson.JsonElement> $$2, net.minecraft.core.RegistryAccess$RegistryData<T> $$3) {
-        net.minecraft.resources.ResourceKey $$4 = $$3.key();
-        net.minecraft.core.Registry $$5 = $$1.ownedRegistryOrThrow($$4);
-        net.minecraft.data.DataGenerator$PathProvider $$6 = this.generator.createPathProvider(net.minecraft.data.DataGenerator$Target.REPORTS, $$4.location().getPath());
-        for (java.util.Map$Entry $$7 : $$5.entrySet()) {
-            net.minecraft.data.info.WorldgenRegistryDumpReport.dumpValue((java.nio.file.Path)$$6.json(((net.minecraft.resources.ResourceKey)$$7.getKey()).location()), (net.minecraft.data.CachedOutput)$$0, $$2, (com.mojang.serialization.Encoder)$$3.codec(), (java.lang.Object)$$7.getValue());
-        }
-    }
-
-    public static <E> void dumpValue(java.nio.file.Path $$0, net.minecraft.data.CachedOutput $$12, com.mojang.serialization.DynamicOps<com.google.gson.JsonElement> $$2, com.mojang.serialization.Encoder<E> $$3, E $$4) {
-        try {
-            java.util.Optional $$5 = $$3.encodeStart($$2, $$4).resultOrPartial($$1 -> LOGGER.error("Couldn't serialize element {}: {}", (java.lang.Object)$$0, $$1));
-            if ($$5.isPresent()) {
-                net.minecraft.data.DataProvider.saveStable((net.minecraft.data.CachedOutput)$$12, (com.google.gson.JsonElement)((com.google.gson.JsonElement)$$5.get()), (java.nio.file.Path)$$0);
-            }
-        }
-        catch (java.io.IOException $$6) {
-            LOGGER.error("Couldn't save element {}", (java.lang.Object)$$0, (java.lang.Object)((java.lang.Object)$$6));
-        }
-    }
-
-    public java.lang.String getName() {
-        return "Worldgen";
-    }
-
-    public /* synthetic */ void lambda$run$0(net.minecraft.data.CachedOutput $$0, net.minecraft.core.RegistryAccess $$1, com.mojang.serialization.DynamicOps $$2, net.minecraft.core.RegistryAccess$RegistryData $$3) {
-        this.dumpRegistryCap($$0, $$1, $$2, $$3);
-    }
-
-    static {
-        LOGGER = com.mojang.logging.LogUtils.getLogger();
-    }
-}
-