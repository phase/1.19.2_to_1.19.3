--- net/minecraft/data/models/blockstates/PropertyDispatch$C2.java
+++ net/minecraft/data/models/blockstates/PropertyDispatch$C2.java
@@ -9,32 +9,32 @@
     public net.minecraft.world.level.block.state.properties.Property<T1> property1;
     public net.minecraft.world.level.block.state.properties.Property<T2> property2;
 
-    public net.minecraft.data.models.blockstates.PropertyDispatch$C2(net.minecraft.world.level.block.state.properties.Property<T1> property1, net.minecraft.world.level.block.state.properties.Property<T2> property2) {
-        this.property1 = property1;
-        this.property2 = property2;
+    public net.minecraft.data.models.blockstates.PropertyDispatch$C2(net.minecraft.world.level.block.state.properties.Property<T1> $$0, net.minecraft.world.level.block.state.properties.Property<T2> $$1) {
+        this.property1 = $$0;
+        this.property2 = $$1;
     }
 
     public java.util.List<net.minecraft.world.level.block.state.properties.Property<?>> getDefinedProperties() {
         return com.google.common.collect.ImmutableList.of((java.lang.Object)this.property1, (java.lang.Object)this.property2);
     }
 
-    public net.minecraft.data.models.blockstates.PropertyDispatch$C2<T1, T2> select(T1 property1Value, T2 property2Value, java.util.List<net.minecraft.data.models.blockstates.Variant> variants) {
-        net.minecraft.data.models.blockstates.Selector selector = net.minecraft.data.models.blockstates.Selector.of((net.minecraft.world.level.block.state.properties.Property$Value[])new net.minecraft.world.level.block.state.properties.Property$Value[]{this.property1.value(property1Value), this.property2.value(property2Value)});
-        this.putValue(selector, variants);
+    public net.minecraft.data.models.blockstates.PropertyDispatch$C2<T1, T2> select(T1 $$0, T2 $$1, java.util.List<net.minecraft.data.models.blockstates.Variant> $$2) {
+        net.minecraft.data.models.blockstates.Selector $$3 = net.minecraft.data.models.blockstates.Selector.of((net.minecraft.world.level.block.state.properties.Property$Value[])new net.minecraft.world.level.block.state.properties.Property$Value[]{this.property1.value($$0), this.property2.value($$1)});
+        this.putValue($$3, $$2);
         return this;
     }
 
-    public net.minecraft.data.models.blockstates.PropertyDispatch$C2<T1, T2> select(T1 property1Value, T2 property2Value, net.minecraft.data.models.blockstates.Variant variant) {
-        return this.select(property1Value, property2Value, java.util.Collections.singletonList((java.lang.Object)variant));
+    public net.minecraft.data.models.blockstates.PropertyDispatch$C2<T1, T2> select(T1 $$0, T2 $$1, net.minecraft.data.models.blockstates.Variant $$2) {
+        return this.select($$0, $$1, java.util.Collections.singletonList((java.lang.Object)$$2));
     }
 
-    public net.minecraft.data.models.blockstates.PropertyDispatch generate(java.util.function.BiFunction<T1, T2, net.minecraft.data.models.blockstates.Variant> propertyValuesToVariantMapper) {
-        this.property1.getPossibleValues().forEach($$1 -> this.property2.getPossibleValues().forEach($$2 -> this.select($$1, $$2, (net.minecraft.data.models.blockstates.Variant)propertyValuesToVariantMapper.apply($$1, $$2))));
+    public net.minecraft.data.models.blockstates.PropertyDispatch generate(java.util.function.BiFunction<T1, T2, net.minecraft.data.models.blockstates.Variant> $$0) {
+        this.property1.getPossibleValues().forEach($$1 -> this.property2.getPossibleValues().forEach($$2 -> this.select($$1, $$2, (net.minecraft.data.models.blockstates.Variant)$$0.apply($$1, $$2))));
         return this;
     }
 
-    public net.minecraft.data.models.blockstates.PropertyDispatch generateList(java.util.function.BiFunction<T1, T2, java.util.List<net.minecraft.data.models.blockstates.Variant>> propertyValuesToVariantsMapper) {
-        this.property1.getPossibleValues().forEach($$1 -> this.property2.getPossibleValues().forEach($$2 -> this.select($$1, $$2, (java.util.List)propertyValuesToVariantsMapper.apply($$1, $$2))));
+    public net.minecraft.data.models.blockstates.PropertyDispatch generateList(java.util.function.BiFunction<T1, T2, java.util.List<net.minecraft.data.models.blockstates.Variant>> $$0) {
+        this.property1.getPossibleValues().forEach($$1 -> this.property2.getPossibleValues().forEach($$2 -> this.select($$1, $$2, (java.util.List)$$0.apply($$1, $$2))));
         return this;
     }
 }