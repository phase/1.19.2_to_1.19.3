--- net/minecraft/data/models/blockstates/Variant.java
+++ net/minecraft/data/models/blockstates/Variant.java
@@ -12,10 +12,10 @@
         this.values = com.google.common.collect.Maps.newLinkedHashMap();
     }
 
-    public <T> net.minecraft.data.models.blockstates.Variant with(net.minecraft.data.models.blockstates.VariantProperty<T> property, T value) {
-        net.minecraft.data.models.blockstates.VariantProperty$Value value2 = (net.minecraft.data.models.blockstates.VariantProperty$Value)this.values.put(property, (java.lang.Object)property.withValue(value));
-        if (value2 != null) {
-            throw new java.lang.IllegalStateException("Replacing value of " + value2 + " with " + value);
+    public <T> net.minecraft.data.models.blockstates.Variant with(net.minecraft.data.models.blockstates.VariantProperty<T> $$0, T $$1) {
+        net.minecraft.data.models.blockstates.VariantProperty$Value $$2 = (net.minecraft.data.models.blockstates.VariantProperty$Value)this.values.put($$0, (java.lang.Object)$$0.withValue($$1));
+        if ($$2 != null) {
+            throw new java.lang.IllegalStateException("Replacing value of " + $$2 + " with " + $$1);
         }
         return this;
     }
@@ -24,11 +24,11 @@
         return new net.minecraft.data.models.blockstates.Variant();
     }
 
-    public static net.minecraft.data.models.blockstates.Variant merge(net.minecraft.data.models.blockstates.Variant definition1, net.minecraft.data.models.blockstates.Variant definition2) {
-        net.minecraft.data.models.blockstates.Variant variant = new net.minecraft.data.models.blockstates.Variant();
-        variant.values.putAll(definition1.values);
-        variant.values.putAll(definition2.values);
-        return variant;
+    public static net.minecraft.data.models.blockstates.Variant merge(net.minecraft.data.models.blockstates.Variant $$0, net.minecraft.data.models.blockstates.Variant $$1) {
+        net.minecraft.data.models.blockstates.Variant $$2 = new net.minecraft.data.models.blockstates.Variant();
+        $$2.values.putAll($$0.values);
+        $$2.values.putAll($$1.values);
+        return $$2;
     }
 
     public com.google.gson.JsonElement get() {
@@ -37,13 +37,13 @@
         return $$0;
     }
 
-    public static com.google.gson.JsonElement convertList(java.util.List<net.minecraft.data.models.blockstates.Variant> definitions) {
-        if (definitions.size() == 1) {
-            return ((net.minecraft.data.models.blockstates.Variant)definitions.get(0)).get();
+    public static com.google.gson.JsonElement convertList(java.util.List<net.minecraft.data.models.blockstates.Variant> $$0) {
+        if ($$0.size() == 1) {
+            return ((net.minecraft.data.models.blockstates.Variant)$$0.get(0)).get();
         }
-        com.google.gson.JsonArray jsonArray = new com.google.gson.JsonArray();
-        definitions.forEach($$1 -> jsonArray.add($$1.get()));
-        return jsonArray;
+        com.google.gson.JsonArray $$12 = new com.google.gson.JsonArray();
+        $$0.forEach($$1 -> $$12.add($$1.get()));
+        return $$12;
     }
 
     public /* synthetic */ java.lang.Object get() {