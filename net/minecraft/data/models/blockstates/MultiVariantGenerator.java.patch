--- net/minecraft/data/models/blockstates/MultiVariantGenerator.java
+++ net/minecraft/data/models/blockstates/MultiVariantGenerator.java
@@ -11,15 +11,15 @@
     public java.util.Set<net.minecraft.world.level.block.state.properties.Property<?>> seenProperties;
     public java.util.List<net.minecraft.data.models.blockstates.PropertyDispatch> declaredPropertySets;
 
-    public net.minecraft.data.models.blockstates.MultiVariantGenerator(net.minecraft.world.level.block.Block block, java.util.List<net.minecraft.data.models.blockstates.Variant> baseVariants) {
+    public net.minecraft.data.models.blockstates.MultiVariantGenerator(net.minecraft.world.level.block.Block $$0, java.util.List<net.minecraft.data.models.blockstates.Variant> $$1) {
         this.seenProperties = com.google.common.collect.Sets.newHashSet();
         this.declaredPropertySets = com.google.common.collect.Lists.newArrayList();
-        this.block = block;
-        this.baseVariants = baseVariants;
+        this.block = $$0;
+        this.baseVariants = $$1;
     }
 
-    public net.minecraft.data.models.blockstates.MultiVariantGenerator with(net.minecraft.data.models.blockstates.PropertyDispatch propertyDispatch) {
-        propertyDispatch.getDefinedProperties().forEach($$0 -> {
+    public net.minecraft.data.models.blockstates.MultiVariantGenerator with(net.minecraft.data.models.blockstates.PropertyDispatch $$02) {
+        $$02.getDefinedProperties().forEach($$0 -> {
             if (this.block.getStateDefinition().getProperty($$0.getName()) != $$0) {
                 throw new java.lang.IllegalStateException("Property " + $$0 + " is not defined for block " + this.block);
             }
@@ -27,7 +27,7 @@
                 throw new java.lang.IllegalStateException("Values of property " + $$0 + " already defined for block " + this.block);
             }
         });
-        this.declaredPropertySets.add((java.lang.Object)propertyDispatch);
+        this.declaredPropertySets.add((java.lang.Object)$$02);
         return this;
     }
 
@@ -48,26 +48,26 @@
         return $$4;
     }
 
-    public static java.util.List<net.minecraft.data.models.blockstates.Variant> mergeVariants(java.util.List<net.minecraft.data.models.blockstates.Variant> variants1, java.util.List<net.minecraft.data.models.blockstates.Variant> variants2) {
-        com.google.common.collect.ImmutableList$Builder builder = com.google.common.collect.ImmutableList.builder();
-        variants1.forEach($$22 -> variants2.forEach($$2 -> builder.add((java.lang.Object)net.minecraft.data.models.blockstates.Variant.merge((net.minecraft.data.models.blockstates.Variant)$$22, (net.minecraft.data.models.blockstates.Variant)$$2))));
-        return builder.build();
+    public static java.util.List<net.minecraft.data.models.blockstates.Variant> mergeVariants(java.util.List<net.minecraft.data.models.blockstates.Variant> $$0, java.util.List<net.minecraft.data.models.blockstates.Variant> $$1) {
+        com.google.common.collect.ImmutableList$Builder $$2 = com.google.common.collect.ImmutableList.builder();
+        $$0.forEach($$22 -> $$1.forEach($$2 -> $$2.add((java.lang.Object)net.minecraft.data.models.blockstates.Variant.merge((net.minecraft.data.models.blockstates.Variant)$$22, (net.minecraft.data.models.blockstates.Variant)$$2))));
+        return $$2.build();
     }
 
     public net.minecraft.world.level.block.Block getBlock() {
         return this.block;
     }
 
-    public static net.minecraft.data.models.blockstates.MultiVariantGenerator multiVariant(net.minecraft.world.level.block.Block block) {
-        return new net.minecraft.data.models.blockstates.MultiVariantGenerator(block, (java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.data.models.blockstates.Variant.variant()));
+    public static net.minecraft.data.models.blockstates.MultiVariantGenerator multiVariant(net.minecraft.world.level.block.Block $$0) {
+        return new net.minecraft.data.models.blockstates.MultiVariantGenerator($$0, (java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)net.minecraft.data.models.blockstates.Variant.variant()));
     }
 
-    public static net.minecraft.data.models.blockstates.MultiVariantGenerator multiVariant(net.minecraft.world.level.block.Block block, net.minecraft.data.models.blockstates.Variant variant) {
-        return new net.minecraft.data.models.blockstates.MultiVariantGenerator(block, (java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)variant));
+    public static net.minecraft.data.models.blockstates.MultiVariantGenerator multiVariant(net.minecraft.world.level.block.Block $$0, net.minecraft.data.models.blockstates.Variant $$1) {
+        return new net.minecraft.data.models.blockstates.MultiVariantGenerator($$0, (java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)$$1));
     }
 
-    public static net.minecraft.data.models.blockstates.MultiVariantGenerator multiVariant(net.minecraft.world.level.block.Block block, net.minecraft.data.models.blockstates.Variant ... variants) {
-        return new net.minecraft.data.models.blockstates.MultiVariantGenerator(block, (java.util.List)com.google.common.collect.ImmutableList.copyOf((java.lang.Object[])variants));
+    public static net.minecraft.data.models.blockstates.MultiVariantGenerator multiVariant(net.minecraft.world.level.block.Block $$0, net.minecraft.data.models.blockstates.Variant ... $$1) {
+        return new net.minecraft.data.models.blockstates.MultiVariantGenerator($$0, (java.util.List)com.google.common.collect.ImmutableList.copyOf((java.lang.Object[])$$1));
     }
 
     public /* synthetic */ java.lang.Object get() {