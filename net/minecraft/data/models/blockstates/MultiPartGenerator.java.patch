--- net/minecraft/data/models/blockstates/MultiPartGenerator.java
+++ net/minecraft/data/models/blockstates/MultiPartGenerator.java
@@ -9,39 +9,39 @@
     public net.minecraft.world.level.block.Block block;
     public java.util.List<net.minecraft.data.models.blockstates.MultiPartGenerator$Entry> parts;
 
-    public net.minecraft.data.models.blockstates.MultiPartGenerator(net.minecraft.world.level.block.Block block) {
+    public net.minecraft.data.models.blockstates.MultiPartGenerator(net.minecraft.world.level.block.Block $$0) {
         this.parts = com.google.common.collect.Lists.newArrayList();
-        this.block = block;
+        this.block = $$0;
     }
 
     public net.minecraft.world.level.block.Block getBlock() {
         return this.block;
     }
 
-    public static net.minecraft.data.models.blockstates.MultiPartGenerator multiPart(net.minecraft.world.level.block.Block block) {
-        return new net.minecraft.data.models.blockstates.MultiPartGenerator(block);
+    public static net.minecraft.data.models.blockstates.MultiPartGenerator multiPart(net.minecraft.world.level.block.Block $$0) {
+        return new net.minecraft.data.models.blockstates.MultiPartGenerator($$0);
     }
 
-    public net.minecraft.data.models.blockstates.MultiPartGenerator with(java.util.List<net.minecraft.data.models.blockstates.Variant> variants) {
-        this.parts.add((java.lang.Object)new net.minecraft.data.models.blockstates.MultiPartGenerator$Entry(variants));
+    public net.minecraft.data.models.blockstates.MultiPartGenerator with(java.util.List<net.minecraft.data.models.blockstates.Variant> $$0) {
+        this.parts.add((java.lang.Object)new net.minecraft.data.models.blockstates.MultiPartGenerator$Entry($$0));
         return this;
     }
 
-    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Variant variant) {
-        return this.with((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)variant));
+    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Variant $$0) {
+        return this.with((java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)$$0));
     }
 
-    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Condition condition, java.util.List<net.minecraft.data.models.blockstates.Variant> variants) {
-        this.parts.add((java.lang.Object)new net.minecraft.data.models.blockstates.MultiPartGenerator$ConditionalEntry(condition, variants));
+    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Condition $$0, java.util.List<net.minecraft.data.models.blockstates.Variant> $$1) {
+        this.parts.add((java.lang.Object)new net.minecraft.data.models.blockstates.MultiPartGenerator$ConditionalEntry($$0, $$1));
         return this;
     }
 
-    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Condition condition, net.minecraft.data.models.blockstates.Variant ... variants) {
-        return this.with(condition, (java.util.List)com.google.common.collect.ImmutableList.copyOf((java.lang.Object[])variants));
+    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Condition $$0, net.minecraft.data.models.blockstates.Variant ... $$1) {
+        return this.with($$0, (java.util.List)com.google.common.collect.ImmutableList.copyOf((java.lang.Object[])$$1));
     }
 
-    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Condition condition, net.minecraft.data.models.blockstates.Variant variant) {
-        return this.with(condition, (java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)variant));
+    public net.minecraft.data.models.blockstates.MultiPartGenerator with(net.minecraft.data.models.blockstates.Condition $$0, net.minecraft.data.models.blockstates.Variant $$1) {
+        return this.with($$0, (java.util.List)com.google.common.collect.ImmutableList.of((java.lang.Object)$$1));
     }
 
     public com.google.gson.JsonElement get() {