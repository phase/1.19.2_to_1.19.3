--- net/minecraft/util/datafix/fixes/BlockStateData.java
+++ net/minecraft/util/datafix/fixes/BlockStateData.java
@@ -15,18 +15,18 @@
     public net.minecraft.util.datafix.fixes.BlockStateData() {
     }
 
-    public static void register(int id, java.lang.String fixedNBT, java.lang.String ... sourceNBTs) {
-        com.mojang.serialization.Dynamic dynamic;
-        net.minecraft.util.datafix.fixes.BlockStateData.MAP[id] = dynamic = net.minecraft.util.datafix.fixes.BlockStateData.parse((java.lang.String)fixedNBT);
-        int n = id >> 4;
-        if (BLOCK_DEFAULTS[n] == null) {
-            net.minecraft.util.datafix.fixes.BlockStateData.BLOCK_DEFAULTS[n] = dynamic;
+    public static void register(int $$0, java.lang.String $$1, java.lang.String ... $$2) {
+        com.mojang.serialization.Dynamic $$3;
+        net.minecraft.util.datafix.fixes.BlockStateData.MAP[$$0] = $$3 = net.minecraft.util.datafix.fixes.BlockStateData.parse((java.lang.String)$$1);
+        int $$4 = $$0 >> 4;
+        if (BLOCK_DEFAULTS[$$4] == null) {
+            net.minecraft.util.datafix.fixes.BlockStateData.BLOCK_DEFAULTS[$$4] = $$3;
         }
-        for (java.lang.String string : sourceNBTs) {
-            com.mojang.serialization.Dynamic dynamic2 = net.minecraft.util.datafix.fixes.BlockStateData.parse((java.lang.String)string);
-            java.lang.String string2 = dynamic2.get("Name").asString("");
-            ID_BY_OLD_NAME.putIfAbsent((java.lang.Object)string2, id);
-            ID_BY_OLD.put((java.lang.Object)dynamic2, id);
+        for (java.lang.String $$5 : $$2) {
+            com.mojang.serialization.Dynamic $$6 = net.minecraft.util.datafix.fixes.BlockStateData.parse((java.lang.String)$$5);
+            java.lang.String $$7 = $$6.get("Name").asString("");
+            ID_BY_OLD_NAME.putIfAbsent((java.lang.Object)$$7, $$0);
+            ID_BY_OLD.put((java.lang.Object)$$6, $$0);
         }
     }
 
@@ -37,48 +37,48 @@
         }
     }
 
-    public static com.mojang.serialization.Dynamic<?> upgradeBlockStateTag(com.mojang.serialization.Dynamic<?> nbt) {
-        int n = ID_BY_OLD.getInt(nbt);
-        if (n < 0 || n >= MAP.length) {
-            return nbt;
+    public static com.mojang.serialization.Dynamic<?> upgradeBlockStateTag(com.mojang.serialization.Dynamic<?> $$0) {
+        int $$1 = ID_BY_OLD.getInt($$0);
+        if ($$1 < 0 || $$1 >= MAP.length) {
+            return $$0;
         }
-        com.mojang.serialization.Dynamic dynamic = MAP[n];
-        return dynamic == null ? nbt : dynamic;
+        com.mojang.serialization.Dynamic $$2 = MAP[$$1];
+        return $$2 == null ? $$0 : $$2;
     }
 
-    public static java.lang.String upgradeBlock(java.lang.String name) {
-        int n = ID_BY_OLD_NAME.getInt((java.lang.Object)name);
-        if (n < 0 || n >= MAP.length) {
-            return name;
+    public static java.lang.String upgradeBlock(java.lang.String $$0) {
+        int $$1 = ID_BY_OLD_NAME.getInt((java.lang.Object)$$0);
+        if ($$1 < 0 || $$1 >= MAP.length) {
+            return $$0;
         }
-        com.mojang.serialization.Dynamic dynamic = MAP[n];
-        return dynamic == null ? name : dynamic.get("Name").asString("");
+        com.mojang.serialization.Dynamic $$2 = MAP[$$1];
+        return $$2 == null ? $$0 : $$2.get("Name").asString("");
     }
 
-    public static java.lang.String upgradeBlock(int id) {
-        if (id < 0 || id >= MAP.length) {
+    public static java.lang.String upgradeBlock(int $$0) {
+        if ($$0 < 0 || $$0 >= MAP.length) {
             return "minecraft:air";
         }
-        com.mojang.serialization.Dynamic dynamic = MAP[id];
-        return dynamic == null ? "minecraft:air" : dynamic.get("Name").asString("");
+        com.mojang.serialization.Dynamic $$1 = MAP[$$0];
+        return $$1 == null ? "minecraft:air" : $$1.get("Name").asString("");
     }
 
-    public static com.mojang.serialization.Dynamic<?> parse(java.lang.String nbt) {
+    public static com.mojang.serialization.Dynamic<?> parse(java.lang.String $$0) {
         try {
-            return new com.mojang.serialization.Dynamic((com.mojang.serialization.DynamicOps)net.minecraft.nbt.NbtOps.INSTANCE, (java.lang.Object)net.minecraft.nbt.TagParser.parseTag((java.lang.String)nbt.replace('\'', '\"')));
+            return new com.mojang.serialization.Dynamic((com.mojang.serialization.DynamicOps)net.minecraft.nbt.NbtOps.INSTANCE, (java.lang.Object)net.minecraft.nbt.TagParser.parseTag((java.lang.String)$$0.replace('\'', '\"')));
         }
-        catch (java.lang.Exception exception) {
-            LOGGER.error("Parsing {}", (java.lang.Object)nbt, (java.lang.Object)((java.lang.Object)exception));
-            throw new java.lang.RuntimeException((java.lang.Throwable)exception);
+        catch (java.lang.Exception $$1) {
+            LOGGER.error("Parsing {}", (java.lang.Object)$$0, (java.lang.Object)((java.lang.Object)$$1));
+            throw new java.lang.RuntimeException((java.lang.Throwable)$$1);
         }
     }
 
-    public static com.mojang.serialization.Dynamic<?> getTag(int id) {
-        com.mojang.serialization.Dynamic dynamic = null;
-        if (id >= 0 && id < MAP.length) {
-            dynamic = MAP[id];
+    public static com.mojang.serialization.Dynamic<?> getTag(int $$0) {
+        com.mojang.serialization.Dynamic $$1 = null;
+        if ($$0 >= 0 && $$0 < MAP.length) {
+            $$1 = MAP[$$0];
         }
-        return dynamic == null ? MAP[0] : dynamic;
+        return $$1 == null ? MAP[0] : $$1;
     }
 
     public static void bootstrap0() {