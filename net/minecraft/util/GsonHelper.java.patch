--- net/minecraft/util/GsonHelper.java
+++ net/minecraft/util/GsonHelper.java
@@ -10,18 +10,18 @@
     public net.minecraft.util.GsonHelper() {
     }
 
-    public static boolean isStringValue(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (!net.minecraft.util.GsonHelper.isValidPrimitive((com.google.gson.JsonObject)json, (java.lang.String)memberName)) {
+    public static boolean isStringValue(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if (!net.minecraft.util.GsonHelper.isValidPrimitive((com.google.gson.JsonObject)$$0, (java.lang.String)$$1)) {
             return false;
         }
-        return json.getAsJsonPrimitive(memberName).isString();
+        return $$0.getAsJsonPrimitive($$1).isString();
     }
 
-    public static boolean isStringValue(com.google.gson.JsonElement json) {
-        if (!json.isJsonPrimitive()) {
+    public static boolean isStringValue(com.google.gson.JsonElement $$0) {
+        if (!$$0.isJsonPrimitive()) {
             return false;
         }
-        return json.getAsJsonPrimitive().isString();
+        return $$0.getAsJsonPrimitive().isString();
     }
 
     public static boolean isNumberValue(com.google.gson.JsonObject $$0, java.lang.String $$1) {
@@ -31,18 +31,18 @@
         return $$0.getAsJsonPrimitive($$1).isNumber();
     }
 
-    public static boolean isNumberValue(com.google.gson.JsonElement json) {
-        if (!json.isJsonPrimitive()) {
+    public static boolean isNumberValue(com.google.gson.JsonElement $$0) {
+        if (!$$0.isJsonPrimitive()) {
             return false;
         }
-        return json.getAsJsonPrimitive().isNumber();
+        return $$0.getAsJsonPrimitive().isNumber();
     }
 
-    public static boolean isBooleanValue(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (!net.minecraft.util.GsonHelper.isValidPrimitive((com.google.gson.JsonObject)json, (java.lang.String)memberName)) {
+    public static boolean isBooleanValue(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if (!net.minecraft.util.GsonHelper.isValidPrimitive((com.google.gson.JsonObject)$$0, (java.lang.String)$$1)) {
             return false;
         }
-        return json.getAsJsonPrimitive(memberName).isBoolean();
+        return $$0.getAsJsonPrimitive($$1).isBoolean();
     }
 
     public static boolean isBooleanValue(com.google.gson.JsonElement $$0) {
@@ -52,11 +52,11 @@
         return $$0.getAsJsonPrimitive().isBoolean();
     }
 
-    public static boolean isArrayNode(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (!net.minecraft.util.GsonHelper.isValidNode((com.google.gson.JsonObject)json, (java.lang.String)memberName)) {
+    public static boolean isArrayNode(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if (!net.minecraft.util.GsonHelper.isValidNode((com.google.gson.JsonObject)$$0, (java.lang.String)$$1)) {
             return false;
         }
-        return json.get(memberName).isJsonArray();
+        return $$0.get($$1).isJsonArray();
     }
 
     public static boolean isObjectNode(com.google.gson.JsonObject $$0, java.lang.String $$1) {
@@ -66,56 +66,56 @@
         return $$0.get($$1).isJsonObject();
     }
 
-    public static boolean isValidPrimitive(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (!net.minecraft.util.GsonHelper.isValidNode((com.google.gson.JsonObject)json, (java.lang.String)memberName)) {
+    public static boolean isValidPrimitive(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if (!net.minecraft.util.GsonHelper.isValidNode((com.google.gson.JsonObject)$$0, (java.lang.String)$$1)) {
             return false;
         }
-        return json.get(memberName).isJsonPrimitive();
+        return $$0.get($$1).isJsonPrimitive();
     }
 
-    public static boolean isValidNode(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json == null) {
+    public static boolean isValidNode(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0 == null) {
             return false;
         }
-        return json.get(memberName) != null;
+        return $$0.get($$1) != null;
     }
 
-    public static java.lang.String convertToString(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonPrimitive()) {
-            return json.getAsString();
+    public static java.lang.String convertToString(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonPrimitive()) {
+            return $$0.getAsString();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a string, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a string, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static java.lang.String getAsString(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static java.lang.String getAsString(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find a string");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a string");
     }
 
     @javax.annotation.Nullable
     @org.jetbrains.annotations.Contract(value="_,_,!null->!null;_,_,null->_")
-    public static java.lang.String getAsString(com.google.gson.JsonObject json, java.lang.String memberName, @javax.annotation.Nullable java.lang.String fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static java.lang.String getAsString(com.google.gson.JsonObject $$0, java.lang.String $$1, @javax.annotation.Nullable java.lang.String $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToString((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
-    public static net.minecraft.world.item.Item convertToItem(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonPrimitive()) {
-            java.lang.String string = json.getAsString();
-            return (net.minecraft.world.item.Item)net.minecraft.core.Registry.ITEM.getOptional(new net.minecraft.resources.ResourceLocation(string)).orElseThrow(() -> new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be an item, was unknown string '" + string + "'"));
+    public static net.minecraft.world.item.Item convertToItem(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonPrimitive()) {
+            java.lang.String $$2 = $$0.getAsString();
+            return (net.minecraft.world.item.Item)net.minecraft.core.Registry.ITEM.getOptional(new net.minecraft.resources.ResourceLocation($$2)).orElseThrow(() -> new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be an item, was unknown string '" + $$2 + "'"));
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be an item, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be an item, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static net.minecraft.world.item.Item getAsItem(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToItem((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static net.minecraft.world.item.Item getAsItem(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToItem((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find an item");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find an item");
     }
 
     @javax.annotation.Nullable
@@ -127,25 +127,25 @@
         return $$2;
     }
 
-    public static boolean convertToBoolean(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonPrimitive()) {
-            return json.getAsBoolean();
+    public static boolean convertToBoolean(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonPrimitive()) {
+            return $$0.getAsBoolean();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a Boolean, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a Boolean, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static boolean getAsBoolean(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToBoolean((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static boolean getAsBoolean(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToBoolean((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find a Boolean");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a Boolean");
     }
 
-    public static boolean getAsBoolean(com.google.gson.JsonObject json, java.lang.String memberName, boolean fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToBoolean((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static boolean getAsBoolean(com.google.gson.JsonObject $$0, java.lang.String $$1, boolean $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToBoolean((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
     public static double convertToDouble(com.google.gson.JsonElement $$0, java.lang.String $$1) {
@@ -169,74 +169,74 @@
         return $$2;
     }
 
-    public static float convertToFloat(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonPrimitive() && json.getAsJsonPrimitive().isNumber()) {
-            return json.getAsFloat();
+    public static float convertToFloat(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonPrimitive() && $$0.getAsJsonPrimitive().isNumber()) {
+            return $$0.getAsFloat();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a Float, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a Float, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static float getAsFloat(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToFloat((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static float getAsFloat(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToFloat((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find a Float");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a Float");
     }
 
-    public static float getAsFloat(com.google.gson.JsonObject json, java.lang.String memberName, float fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToFloat((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static float getAsFloat(com.google.gson.JsonObject $$0, java.lang.String $$1, float $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToFloat((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
-    public static long convertToLong(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonPrimitive() && json.getAsJsonPrimitive().isNumber()) {
-            return json.getAsLong();
+    public static long convertToLong(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonPrimitive() && $$0.getAsJsonPrimitive().isNumber()) {
+            return $$0.getAsLong();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a Long, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a Long, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static long getAsLong(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToLong((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static long getAsLong(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToLong((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find a Long");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a Long");
     }
 
-    public static long getAsLong(com.google.gson.JsonObject json, java.lang.String memberName, long fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToLong((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static long getAsLong(com.google.gson.JsonObject $$0, java.lang.String $$1, long $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToLong((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
-    public static int convertToInt(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonPrimitive() && json.getAsJsonPrimitive().isNumber()) {
-            return json.getAsInt();
+    public static int convertToInt(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonPrimitive() && $$0.getAsJsonPrimitive().isNumber()) {
+            return $$0.getAsInt();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a Int, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a Int, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static int getAsInt(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToInt((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static int getAsInt(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToInt((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find a Int");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a Int");
     }
 
-    public static int getAsInt(com.google.gson.JsonObject json, java.lang.String memberName, int fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToInt((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static int getAsInt(com.google.gson.JsonObject $$0, java.lang.String $$1, int $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToInt((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
-    public static byte convertToByte(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonPrimitive() && json.getAsJsonPrimitive().isNumber()) {
-            return json.getAsByte();
+    public static byte convertToByte(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonPrimitive() && $$0.getAsJsonPrimitive().isNumber()) {
+            return $$0.getAsByte();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a Byte, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a Byte, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
     public static byte getAsByte(com.google.gson.JsonObject $$0, java.lang.String $$1) {
@@ -246,11 +246,11 @@
         throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a Byte");
     }
 
-    public static byte getAsByte(com.google.gson.JsonObject json, java.lang.String memberName, byte fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToByte((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static byte getAsByte(com.google.gson.JsonObject $$0, java.lang.String $$1, byte $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToByte((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
     public static char convertToCharacter(com.google.gson.JsonElement $$0, java.lang.String $$1) {
@@ -337,169 +337,169 @@
         return $$2;
     }
 
-    public static com.google.gson.JsonObject convertToJsonObject(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonObject()) {
-            return json.getAsJsonObject();
+    public static com.google.gson.JsonObject convertToJsonObject(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonObject()) {
+            return $$0.getAsJsonObject();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a JsonObject, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a JsonObject, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static com.google.gson.JsonObject getAsJsonObject(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static com.google.gson.JsonObject getAsJsonObject(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find a JsonObject");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a JsonObject");
     }
 
     @javax.annotation.Nullable
     @org.jetbrains.annotations.Contract(value="_,_,!null->!null;_,_,null->_")
-    public static com.google.gson.JsonObject getAsJsonObject(com.google.gson.JsonObject json, java.lang.String memberName, @javax.annotation.Nullable com.google.gson.JsonObject fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static com.google.gson.JsonObject getAsJsonObject(com.google.gson.JsonObject $$0, java.lang.String $$1, @javax.annotation.Nullable com.google.gson.JsonObject $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToJsonObject((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
-    public static com.google.gson.JsonArray convertToJsonArray(com.google.gson.JsonElement json, java.lang.String memberName) {
-        if (json.isJsonArray()) {
-            return json.getAsJsonArray();
+    public static com.google.gson.JsonArray convertToJsonArray(com.google.gson.JsonElement $$0, java.lang.String $$1) {
+        if ($$0.isJsonArray()) {
+            return $$0.getAsJsonArray();
         }
-        throw new com.google.gson.JsonSyntaxException("Expected " + memberName + " to be a JsonArray, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)json));
+        throw new com.google.gson.JsonSyntaxException("Expected " + $$1 + " to be a JsonArray, was " + net.minecraft.util.GsonHelper.getType((com.google.gson.JsonElement)$$0));
     }
 
-    public static com.google.gson.JsonArray getAsJsonArray(com.google.gson.JsonObject json, java.lang.String memberName) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToJsonArray((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static com.google.gson.JsonArray getAsJsonArray(com.google.gson.JsonObject $$0, java.lang.String $$1) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToJsonArray((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName + ", expected to find a JsonArray");
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1 + ", expected to find a JsonArray");
     }
 
     @javax.annotation.Nullable
     @org.jetbrains.annotations.Contract(value="_,_,!null->!null;_,_,null->_")
-    public static com.google.gson.JsonArray getAsJsonArray(com.google.gson.JsonObject json, java.lang.String memberName, @javax.annotation.Nullable com.google.gson.JsonArray fallback) {
-        if (json.has(memberName)) {
-            return net.minecraft.util.GsonHelper.convertToJsonArray((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName);
+    public static com.google.gson.JsonArray getAsJsonArray(com.google.gson.JsonObject $$0, java.lang.String $$1, @javax.annotation.Nullable com.google.gson.JsonArray $$2) {
+        if ($$0.has($$1)) {
+            return net.minecraft.util.GsonHelper.convertToJsonArray((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1);
         }
-        return fallback;
+        return $$2;
     }
 
-    public static <T> T convertToObject(@javax.annotation.Nullable com.google.gson.JsonElement json, java.lang.String memberName, com.google.gson.JsonDeserializationContext context, java.lang.Class<? extends T> adapter) {
-        if (json != null) {
-            return (T)context.deserialize(json, adapter);
+    public static <T> T convertToObject(@javax.annotation.Nullable com.google.gson.JsonElement $$0, java.lang.String $$1, com.google.gson.JsonDeserializationContext $$2, java.lang.Class<? extends T> $$3) {
+        if ($$0 != null) {
+            return (T)$$2.deserialize($$0, $$3);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName);
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1);
     }
 
-    public static <T> T getAsObject(com.google.gson.JsonObject json, java.lang.String memberName, com.google.gson.JsonDeserializationContext context, java.lang.Class<? extends T> adapter) {
-        if (json.has(memberName)) {
-            return (T)net.minecraft.util.GsonHelper.convertToObject((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName, (com.google.gson.JsonDeserializationContext)context, adapter);
+    public static <T> T getAsObject(com.google.gson.JsonObject $$0, java.lang.String $$1, com.google.gson.JsonDeserializationContext $$2, java.lang.Class<? extends T> $$3) {
+        if ($$0.has($$1)) {
+            return (T)net.minecraft.util.GsonHelper.convertToObject((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1, (com.google.gson.JsonDeserializationContext)$$2, $$3);
         }
-        throw new com.google.gson.JsonSyntaxException("Missing " + memberName);
+        throw new com.google.gson.JsonSyntaxException("Missing " + $$1);
     }
 
     @javax.annotation.Nullable
     @org.jetbrains.annotations.Contract(value="_,_,!null,_,_->!null;_,_,null,_,_->_")
-    public static <T> T getAsObject(com.google.gson.JsonObject json, java.lang.String memberName, @javax.annotation.Nullable T fallback, com.google.gson.JsonDeserializationContext context, java.lang.Class<? extends T> adapter) {
-        if (json.has(memberName)) {
-            return (T)net.minecraft.util.GsonHelper.convertToObject((com.google.gson.JsonElement)json.get(memberName), (java.lang.String)memberName, (com.google.gson.JsonDeserializationContext)context, adapter);
+    public static <T> T getAsObject(com.google.gson.JsonObject $$0, java.lang.String $$1, @javax.annotation.Nullable T $$2, com.google.gson.JsonDeserializationContext $$3, java.lang.Class<? extends T> $$4) {
+        if ($$0.has($$1)) {
+            return (T)net.minecraft.util.GsonHelper.convertToObject((com.google.gson.JsonElement)$$0.get($$1), (java.lang.String)$$1, (com.google.gson.JsonDeserializationContext)$$3, $$4);
         }
-        return fallback;
+        return $$2;
     }
 
-    public static java.lang.String getType(@javax.annotation.Nullable com.google.gson.JsonElement json) {
-        java.lang.String string = org.apache.commons.lang3.StringUtils.abbreviateMiddle((java.lang.String)java.lang.String.valueOf((java.lang.Object)json), (java.lang.String)"...", (int)10);
-        if (json == null) {
+    public static java.lang.String getType(@javax.annotation.Nullable com.google.gson.JsonElement $$0) {
+        java.lang.String $$1 = org.apache.commons.lang3.StringUtils.abbreviateMiddle((java.lang.String)java.lang.String.valueOf((java.lang.Object)$$0), (java.lang.String)"...", (int)10);
+        if ($$0 == null) {
             return "null (missing)";
         }
-        if (json.isJsonNull()) {
+        if ($$0.isJsonNull()) {
             return "null (json)";
         }
-        if (json.isJsonArray()) {
-            return "an array (" + string + ")";
+        if ($$0.isJsonArray()) {
+            return "an array (" + $$1 + ")";
         }
-        if (json.isJsonObject()) {
-            return "an object (" + string + ")";
+        if ($$0.isJsonObject()) {
+            return "an object (" + $$1 + ")";
         }
-        if (json.isJsonPrimitive()) {
-            com.google.gson.JsonPrimitive jsonPrimitive = json.getAsJsonPrimitive();
-            if (jsonPrimitive.isNumber()) {
-                return "a number (" + string + ")";
+        if ($$0.isJsonPrimitive()) {
+            com.google.gson.JsonPrimitive $$2 = $$0.getAsJsonPrimitive();
+            if ($$2.isNumber()) {
+                return "a number (" + $$1 + ")";
             }
-            if (jsonPrimitive.isBoolean()) {
-                return "a boolean (" + string + ")";
+            if ($$2.isBoolean()) {
+                return "a boolean (" + $$1 + ")";
             }
         }
-        return string;
+        return $$1;
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.io.Reader reader, java.lang.Class<T> adapter, boolean lenient) {
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.io.Reader $$1, java.lang.Class<T> $$2, boolean $$3) {
         try {
-            com.google.gson.stream.JsonReader jsonReader = new com.google.gson.stream.JsonReader(reader);
-            jsonReader.setLenient(lenient);
-            return (T)gson.getAdapter(adapter).read(jsonReader);
+            com.google.gson.stream.JsonReader $$4 = new com.google.gson.stream.JsonReader($$1);
+            $$4.setLenient($$3);
+            return (T)$$0.getAdapter($$2).read($$4);
         }
-        catch (java.io.IOException iOException) {
-            throw new com.google.gson.JsonParseException((java.lang.Throwable)iOException);
+        catch (java.io.IOException $$5) {
+            throw new com.google.gson.JsonParseException((java.lang.Throwable)$$5);
         }
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.io.Reader reader, com.google.gson.reflect.TypeToken<T> type, boolean lenient) {
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.io.Reader $$1, com.google.gson.reflect.TypeToken<T> $$2, boolean $$3) {
         try {
-            com.google.gson.stream.JsonReader jsonReader = new com.google.gson.stream.JsonReader(reader);
-            jsonReader.setLenient(lenient);
-            return (T)gson.getAdapter(type).read(jsonReader);
+            com.google.gson.stream.JsonReader $$4 = new com.google.gson.stream.JsonReader($$1);
+            $$4.setLenient($$3);
+            return (T)$$0.getAdapter($$2).read($$4);
         }
-        catch (java.io.IOException iOException) {
-            throw new com.google.gson.JsonParseException((java.lang.Throwable)iOException);
+        catch (java.io.IOException $$5) {
+            throw new com.google.gson.JsonParseException((java.lang.Throwable)$$5);
         }
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.lang.String string, com.google.gson.reflect.TypeToken<T> type, boolean lenient) {
-        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)gson, (java.io.Reader)new java.io.StringReader(string), type, (boolean)lenient);
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.lang.String $$1, com.google.gson.reflect.TypeToken<T> $$2, boolean $$3) {
+        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)$$0, (java.io.Reader)new java.io.StringReader($$1), $$2, (boolean)$$3);
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.lang.String json, java.lang.Class<T> adapter, boolean lenient) {
-        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)gson, (java.io.Reader)new java.io.StringReader(json), adapter, (boolean)lenient);
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.lang.String $$1, java.lang.Class<T> $$2, boolean $$3) {
+        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)$$0, (java.io.Reader)new java.io.StringReader($$1), $$2, (boolean)$$3);
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.io.Reader reader, com.google.gson.reflect.TypeToken<T> type) {
-        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)gson, (java.io.Reader)reader, type, (boolean)false);
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.io.Reader $$1, com.google.gson.reflect.TypeToken<T> $$2) {
+        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)$$0, (java.io.Reader)$$1, $$2, (boolean)false);
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.lang.String string, com.google.gson.reflect.TypeToken<T> type) {
-        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)gson, (java.lang.String)string, type, (boolean)false);
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.lang.String $$1, com.google.gson.reflect.TypeToken<T> $$2) {
+        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)$$0, (java.lang.String)$$1, $$2, (boolean)false);
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.io.Reader reader, java.lang.Class<T> jsonClass) {
-        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)gson, (java.io.Reader)reader, jsonClass, (boolean)false);
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.io.Reader $$1, java.lang.Class<T> $$2) {
+        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)$$0, (java.io.Reader)$$1, $$2, (boolean)false);
     }
 
     @javax.annotation.Nullable
-    public static <T> T fromJson(com.google.gson.Gson gson, java.lang.String json, java.lang.Class<T> adapter) {
-        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)gson, (java.lang.String)json, adapter, (boolean)false);
+    public static <T> T fromJson(com.google.gson.Gson $$0, java.lang.String $$1, java.lang.Class<T> $$2) {
+        return (T)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)$$0, (java.lang.String)$$1, $$2, (boolean)false);
     }
 
-    public static com.google.gson.JsonObject parse(java.lang.String json, boolean lenient) {
-        return net.minecraft.util.GsonHelper.parse((java.io.Reader)new java.io.StringReader(json), (boolean)lenient);
+    public static com.google.gson.JsonObject parse(java.lang.String $$0, boolean $$1) {
+        return net.minecraft.util.GsonHelper.parse((java.io.Reader)new java.io.StringReader($$0), (boolean)$$1);
     }
 
-    public static com.google.gson.JsonObject parse(java.io.Reader reader, boolean lenient) {
-        return (com.google.gson.JsonObject)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)GSON, (java.io.Reader)reader, com.google.gson.JsonObject.class, (boolean)lenient);
+    public static com.google.gson.JsonObject parse(java.io.Reader $$0, boolean $$1) {
+        return (com.google.gson.JsonObject)net.minecraft.util.GsonHelper.fromJson((com.google.gson.Gson)GSON, (java.io.Reader)$$0, com.google.gson.JsonObject.class, (boolean)$$1);
     }
 
-    public static com.google.gson.JsonObject parse(java.lang.String json) {
-        return net.minecraft.util.GsonHelper.parse((java.lang.String)json, (boolean)false);
+    public static com.google.gson.JsonObject parse(java.lang.String $$0) {
+        return net.minecraft.util.GsonHelper.parse((java.lang.String)$$0, (boolean)false);
     }
 
-    public static com.google.gson.JsonObject parse(java.io.Reader reader) {
-        return net.minecraft.util.GsonHelper.parse((java.io.Reader)reader, (boolean)false);
+    public static com.google.gson.JsonObject parse(java.io.Reader $$0) {
+        return net.minecraft.util.GsonHelper.parse((java.io.Reader)$$0, (boolean)false);
     }
 
     public static com.google.gson.JsonArray parseArray(java.lang.String $$0) {