--- net/minecraft/resources/RegistryDataLoader$RegistryData.java
+++ net/minecraft/resources/RegistryDataLoader$RegistryData.java
@@ -1,0 +1,47 @@
+/*
+ * Decompiled with CFR 0.151.
+ */
+package net.minecraft.resources;
+
+public class net.minecraft.resources.RegistryDataLoader$RegistryData<T>
+extends java.lang.Record
+ {
+    public net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<T>> key;
+    public com.mojang.serialization.Codec<T> elementCodec;
+
+    public net.minecraft.resources.RegistryDataLoader$RegistryData(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<T>> $$0, com.mojang.serialization.Codec<T> $$1) {
+        this.key = $$0;
+        this.elementCodec = $$1;
+    }
+
+    public com.mojang.datafixers.util.Pair<net.minecraft.core.Registry<?>, net.minecraft.resources.RegistryDataLoader$Loader> create(com.mojang.serialization.Lifecycle $$0, java.util.Map<net.minecraft.resources.ResourceKey<?>, java.lang.Exception> $$1) {
+        net.minecraft.core.MappedRegistry $$2 = new net.minecraft.core.MappedRegistry(this.key, $$0);
+        net.minecraft.resources.RegistryDataLoader$Loader $$3 = (arg_0, arg_1) -> this.lambda$create$0((net.minecraft.core.WritableRegistry)$$2, $$1, arg_0, arg_1);
+        return com.mojang.datafixers.util.Pair.of((java.lang.Object)$$2, (java.lang.Object)$$3);
+    }
+
+    public java.lang.String toString() {
+        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.resources.RegistryDataLoader$RegistryData.class, "key;elementCodec", "key", "elementCodec"}, this);
+    }
+
+    public int hashCode() {
+        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.resources.RegistryDataLoader$RegistryData.class, "key;elementCodec", "key", "elementCodec"}, this);
+    }
+
+    public boolean equals(java.lang.Object $$0) {
+        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.resources.RegistryDataLoader$RegistryData.class, "key;elementCodec", "key", "elementCodec"}, this, $$0);
+    }
+
+    public net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<T>> key() {
+        return this.key;
+    }
+
+    public com.mojang.serialization.Codec<T> elementCodec() {
+        return this.elementCodec;
+    }
+
+    public /* synthetic */ void lambda$create$0(net.minecraft.core.WritableRegistry $$0, java.util.Map $$1, net.minecraft.server.packs.resources.ResourceManager $$2, net.minecraft.core.RegistryAccess $$3) {
+        net.minecraft.resources.RegistryDataLoader.loadRegistryContents((net.minecraft.core.RegistryAccess)$$3, (net.minecraft.server.packs.resources.ResourceManager)$$2, (net.minecraft.resources.ResourceKey)this.key, (net.minecraft.core.WritableRegistry)$$0, (com.mojang.serialization.Decoder)this.elementCodec, (java.util.Map)$$1);
+    }
+}
+