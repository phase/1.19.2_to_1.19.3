--- net/minecraft/resources/RegistryResourceAccess$ParsedEntry.java
+++ net/minecraft/resources/RegistryResourceAccess$ParsedEntry.java
@@ -1,45 +1,0 @@
-/*
- * Decompiled with CFR 0.151.
- */
-package net.minecraft.resources;
-
-public class net.minecraft.resources.RegistryResourceAccess$ParsedEntry<E>
-extends java.lang.Record
- {
-    public E value;
-    public java.util.OptionalInt fixedId;
-
-    public net.minecraft.resources.RegistryResourceAccess$ParsedEntry(E $$0, java.util.OptionalInt $$1) {
-        this.value = $$0;
-        this.fixedId = $$1;
-    }
-
-    public static <E> net.minecraft.resources.RegistryResourceAccess$ParsedEntry<E> createWithoutId(E $$0) {
-        return new net.minecraft.resources.RegistryResourceAccess$ParsedEntry($$0, java.util.OptionalInt.empty());
-    }
-
-    public static <E> net.minecraft.resources.RegistryResourceAccess$ParsedEntry<E> createWithId(E $$0, int $$1) {
-        return new net.minecraft.resources.RegistryResourceAccess$ParsedEntry($$0, java.util.OptionalInt.of((int)$$1));
-    }
-
-    public java.lang.String toString() {
-        return java.lang.runtime.ObjectMethods.bootstrap("toString", new java.lang.invoke.MethodHandle[]{net.minecraft.resources.RegistryResourceAccess$ParsedEntry.class, "value;fixedId", "value", "fixedId"}, this);
-    }
-
-    public int hashCode() {
-        return (int)java.lang.runtime.ObjectMethods.bootstrap("hashCode", new java.lang.invoke.MethodHandle[]{net.minecraft.resources.RegistryResourceAccess$ParsedEntry.class, "value;fixedId", "value", "fixedId"}, this);
-    }
-
-    public boolean equals(java.lang.Object $$0) {
-        return (boolean)java.lang.runtime.ObjectMethods.bootstrap("equals", new java.lang.invoke.MethodHandle[]{net.minecraft.resources.RegistryResourceAccess$ParsedEntry.class, "value;fixedId", "value", "fixedId"}, this, $$0);
-    }
-
-    public E value() {
-        return (E)this.value;
-    }
-
-    public java.util.OptionalInt fixedId() {
-        return this.fixedId;
-    }
-}
-