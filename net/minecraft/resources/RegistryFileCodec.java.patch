--- net/minecraft/resources/RegistryFileCodec.java
+++ net/minecraft/resources/RegistryFileCodec.java
@@ -10,12 +10,12 @@
     public com.mojang.serialization.Codec<E> elementCodec;
     public boolean allowInline;
 
-    public static <E> net.minecraft.resources.RegistryFileCodec<E> create(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<E>> registryKey, com.mojang.serialization.Codec<E> codec) {
-        return net.minecraft.resources.RegistryFileCodec.create(registryKey, codec, (boolean)true);
+    public static <E> net.minecraft.resources.RegistryFileCodec<E> create(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<E>> $$0, com.mojang.serialization.Codec<E> $$1) {
+        return net.minecraft.resources.RegistryFileCodec.create($$0, $$1, (boolean)true);
     }
 
-    public static <E> net.minecraft.resources.RegistryFileCodec<E> create(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<E>> registryKey, com.mojang.serialization.Codec<E> registryKeyCodec, boolean allowInlineDefinitions) {
-        return new net.minecraft.resources.RegistryFileCodec(registryKey, registryKeyCodec, allowInlineDefinitions);
+    public static <E> net.minecraft.resources.RegistryFileCodec<E> create(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<E>> $$0, com.mojang.serialization.Codec<E> $$1, boolean $$2) {
+        return new net.minecraft.resources.RegistryFileCodec($$0, $$1, $$2);
     }
 
     public net.minecraft.resources.RegistryFileCodec(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<E>> $$0, com.mojang.serialization.Codec<E> $$1, boolean $$2) {
@@ -53,12 +53,8 @@
             }
             com.mojang.datafixers.util.Pair $$6 = (com.mojang.datafixers.util.Pair)$$5.result().get();
             net.minecraft.resources.ResourceKey $$7 = net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceKey)this.registryKey, (net.minecraft.resources.ResourceLocation)((net.minecraft.resources.ResourceLocation)$$6.getFirst()));
-            java.util.Optional $$8 = $$2.registryLoader();
-            if ($$8.isPresent()) {
-                return ((net.minecraft.resources.RegistryLoader$Bound)$$8.get()).overrideElementFromResources(this.registryKey, this.elementCodec, $$7, $$2.getAsJson()).map($$1 -> com.mojang.datafixers.util.Pair.of((java.lang.Object)$$1, (java.lang.Object)$$6.getSecond()));
-            }
-            com.mojang.serialization.DataResult $$9 = $$4.getOrCreateHolder($$7);
-            return $$9.map($$1 -> com.mojang.datafixers.util.Pair.of((java.lang.Object)$$1, (java.lang.Object)$$6.getSecond())).setLifecycle(com.mojang.serialization.Lifecycle.stable());
+            com.mojang.serialization.DataResult $$8 = $$4.getOrCreateHolder($$7);
+            return $$8.map($$1 -> com.mojang.datafixers.util.Pair.of((java.lang.Object)$$1, (java.lang.Object)$$6.getSecond())).setLifecycle(com.mojang.serialization.Lifecycle.stable());
         }
         return this.elementCodec.decode($$02, $$12).map($$0 -> $$0.mapFirst(net.minecraft.core.Holder::direct));
     }