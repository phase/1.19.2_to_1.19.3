--- net/minecraft/resources/ResourceKey.java
+++ net/minecraft/resources/ResourceKey.java
@@ -13,17 +13,17 @@
         return net.minecraft.resources.ResourceLocation.CODEC.xmap($$1 -> net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceKey)$$0, (net.minecraft.resources.ResourceLocation)$$1), net.minecraft.resources.ResourceKey::location);
     }
 
-    public static <T> net.minecraft.resources.ResourceKey<T> create(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<T>> parent, net.minecraft.resources.ResourceLocation location) {
-        return net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceLocation)parent.location, (net.minecraft.resources.ResourceLocation)location);
+    public static <T> net.minecraft.resources.ResourceKey<T> create(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<T>> $$0, net.minecraft.resources.ResourceLocation $$1) {
+        return net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceLocation)$$0.location, (net.minecraft.resources.ResourceLocation)$$1);
     }
 
-    public static <T> net.minecraft.resources.ResourceKey<net.minecraft.core.Registry<T>> createRegistryKey(net.minecraft.resources.ResourceLocation location) {
-        return net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceLocation)net.minecraft.core.Registry.ROOT_REGISTRY_NAME, (net.minecraft.resources.ResourceLocation)location);
+    public static <T> net.minecraft.resources.ResourceKey<net.minecraft.core.Registry<T>> createRegistryKey(net.minecraft.resources.ResourceLocation $$0) {
+        return net.minecraft.resources.ResourceKey.create((net.minecraft.resources.ResourceLocation)net.minecraft.core.Registry.ROOT_REGISTRY_NAME, (net.minecraft.resources.ResourceLocation)$$0);
     }
 
-    public static <T> net.minecraft.resources.ResourceKey<T> create(net.minecraft.resources.ResourceLocation parent, net.minecraft.resources.ResourceLocation location) {
-        java.lang.String string = (parent + ":" + location).intern();
-        return (net.minecraft.resources.ResourceKey)VALUES.computeIfAbsent((java.lang.Object)string, $$2 -> new net.minecraft.resources.ResourceKey(parent, location));
+    public static <T> net.minecraft.resources.ResourceKey<T> create(net.minecraft.resources.ResourceLocation $$0, net.minecraft.resources.ResourceLocation $$1) {
+        java.lang.String $$22 = ($$0 + ":" + $$1).intern();
+        return (net.minecraft.resources.ResourceKey)VALUES.computeIfAbsent((java.lang.Object)$$22, $$2 -> new net.minecraft.resources.ResourceKey($$0, $$1));
     }
 
     public net.minecraft.resources.ResourceKey(net.minecraft.resources.ResourceLocation $$0, net.minecraft.resources.ResourceLocation $$1) {
@@ -35,8 +35,8 @@
         return "ResourceKey[" + this.registryName + " / " + this.location + "]";
     }
 
-    public boolean isFor(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<?>> key) {
-        return this.registryName.equals((java.lang.Object)key.location());
+    public boolean isFor(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<?>> $$0) {
+        return this.registryName.equals((java.lang.Object)$$0.location());
     }
 
     public <E> java.util.Optional<net.minecraft.resources.ResourceKey<E>> cast(net.minecraft.resources.ResourceKey<? extends net.minecraft.core.Registry<E>> $$0) {